syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-08-03 16:01:26
// ProtoYang-version 1
// module huawei-ioam
// revision 2020-03-27
// namespace urn:huawei:yang:huawei-ioam

package huawei_ioam;

message Ioam {
   message Global {
      bool enable = 1 [json_name = "enable"];
      uint32 namespace_id = 2 [json_name = "namespace-id"];
      uint32 collect_id = 3 [json_name = "collect-id"];
      uint32 device_id = 4 [json_name = "device-id"];
      enum Action {
         INVALID_ENUM_VALUE_Action = 0;
         Action_ENCAPSULATE = 1;
         Action_DECAPSULATE = 2;
         Action_TRANSIT = 3;
      };
      Action action = 5 [json_name = "action"];
   }
   Global global = 1 [json_name = "global"];
   message Profiles {
      message Profile {
         string profile_name = 1 [json_name = "profile-name"];
         message ProfileNodes {
            message ProfileNode {
               uint32 policy_id = 1 [json_name = "policy-id"];
               string description = 2 [json_name = "description"];
               message Service {
                  enum ServiceType {
                     INVALID_ENUM_VALUE_ServiceType = 0;
                     ServiceType_INCREMENTALX_TRACING = 1;
                     ServiceType_E2E = 3;
                     ServiceType_DIRECTX_EXPORT = 4;
                  };
                  ServiceType service_type = 1 [json_name = "service-type"];
                  enum NodeAction {
                     INVALID_ENUM_VALUE_NodeAction = 0;
                     NodeAction_ENCAPSULATE = 1;
                     NodeAction_DECAPSULATE = 2;
                     NodeAction_TRANSIT = 3;
                  };
                  NodeAction node_action = 2 [json_name = "node-action"];
               }
               Service service = 3 [json_name = "service"];
               message AclFilter {
                  message Ipv4Acls {
                     message Ipv4Acl {
                        string acl_name = 1 [json_name = "acl-name"];
                     }
                     repeated Ipv4Acl ipv4_acl = 1 [json_name = "ipv4-acl"];
                  }
                  Ipv4Acls ipv4_acls = 1 [json_name = "ipv4-acls"];
                  message Ipv6Acls {
                     message Ipv6Acl {
                        string acl_name = 1 [json_name = "acl-name"];
                     }
                     repeated Ipv6Acl ipv6_acl = 1 [json_name = "ipv6-acl"];
                  }
                  Ipv6Acls ipv6_acls = 2 [json_name = "ipv6-acls"];
               }
               AclFilter acl_filter = 4 [json_name = "acl-filter"];
            }
            repeated ProfileNode profile_node = 1 [json_name = "profile-node"];
         }
         ProfileNodes profile_nodes = 2 [json_name = "profile-nodes"];
      }
      repeated Profile profile = 1 [json_name = "profile"];
   }
   Profiles profiles = 2 [json_name = "profiles"];
}

