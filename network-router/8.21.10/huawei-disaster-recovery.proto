syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-09-29 08:55:35
// ProtoYang-version 1
// module huawei-disaster-recovery
// revision 2020-06-02
// revision 2019-06-27
// namespace urn:huawei:yang:huawei-disaster-recovery

package huawei_disaster_recovery;

message DisasterRecovery {
   message Groups {
      message Group {
         string name = 1 [json_name = "name"];
         message Attribute {
            enum SwitchMode {
               SwitchMode_MANUAL = 0;
               SwitchMode_AUTO = 1;
            };
            SwitchMode switch_mode = 1 [json_name = "switch-mode"];
            uint32 priority = 2 [json_name = "priority"];
            uint32 failure_ratio = 3 [json_name = "failure-ratio"];
            uint32 reduce_priority = 4 [json_name = "reduce-priority"];
            bool preempt_mode = 5 [json_name = "preempt-mode"];
            uint32 delay_time = 6 [json_name = "delay-time"];
            uint32 advertise_interval = 7 [json_name = "advertise-interval"];
            uint32 timeout_count = 8 [json_name = "timeout-count"];
            enum PreferredRole {
               INVALID_ENUM_VALUE_PreferredRole = 0;
               PreferredRole_MASTER = 1;
               PreferredRole_SLAVE = 2;
            };
            PreferredRole preferred_role = 9 [json_name = "preferred-role"];
         }
         Attribute attribute = 2 [json_name = "attribute"];
         message BatchBackupDailyTime {
            string time = 1 [json_name = "time"];
         }
         BatchBackupDailyTime batch_backup_daily_time = 3 [json_name = "batch-backup-daily-time"];
         message LogicSysname {
            string name = 1 [json_name = "name"];
         }
         LogicSysname logic_sysname = 4 [json_name = "logic-sysname"];
         message LogicIp {
            string logic_ip_address = 1 [json_name = "logic-ip-address"];
         }
         LogicIp logic_ip = 5 [json_name = "logic-ip"];
         message RadiusAuthorizationSameLogic {
            bool same_as_logic_ip = 1 [json_name = "same-as-logic-ip"];
         }
         RadiusAuthorizationSameLogic radius_authorization_same_logic = 6 [json_name = "radius-authorization-same-logic"];
         message Ups {
            string id = 1 [json_name = "id"];
         }
         Ups ups = 7 [json_name = "ups"];
         message IpPools {
            message IpPool {
               string name = 1 [json_name = "name"];
            }
            repeated IpPool ip_pool = 1 [json_name = "ip-pool"];
         }
         IpPools ip_pools = 8 [json_name = "ip-pools"];
         message Ipv6Pools {
            message Ipv6Pool {
               string name = 1 [json_name = "name"];
            }
            repeated Ipv6Pool ipv6_pool = 1 [json_name = "ipv6-pool"];
         }
         Ipv6Pools ipv6_pools = 9 [json_name = "ipv6-pools"];
         message WebServerSources {
            message WebServerSource {
               string interface_name = 1 [json_name = "interface-name"];
            }
            repeated WebServerSource web_server_source = 1 [json_name = "web-server-source"];
         }
         WebServerSources web_server_sources = 10 [json_name = "web-server-sources"];
         message RadiusServerSources {
            message RadiusServerSource {
               string interface_name = 1 [json_name = "interface-name"];
            }
            repeated RadiusServerSource radius_server_source = 1 [json_name = "radius-server-source"];
         }
         RadiusServerSources radius_server_sources = 11 [json_name = "radius-server-sources"];
         message DapIpPools {
            message DapIpPool {
               string name = 1 [json_name = "name"];
            }
            repeated DapIpPool dap_ip_pool = 1 [json_name = "dap-ip-pool"];
         }
         DapIpPools dap_ip_pools = 12 [json_name = "dap-ip-pools"];
         message DapIpv6Pools {
            message DapIpv6Pool {
               string name = 1 [json_name = "name"];
            }
            repeated DapIpv6Pool dap_ipv6_pool = 1 [json_name = "dap-ipv6-pool"];
         }
         DapIpv6Pools dap_ipv6_pools = 13 [json_name = "dap-ipv6-pools"];
         message GroupState {
            message LocalConfiguration {
               uint32 priority = 1 [json_name = "priority"];
               uint32 run_priority = 2 [json_name = "run-priority"];
               uint32 failure_up_num = 3 [json_name = "failure-up-num"];
               uint32 valid_up_num = 4 [json_name = "valid-up-num"];
            }
            LocalConfiguration local_configuration = 1 [json_name = "local-configuration"];
            message PeerConfiguration {
               string group_name = 1 [json_name = "group-name"];
               string source_ip = 2 [json_name = "source-ip"];
               string peer_ip = 3 [json_name = "peer-ip"];
               enum Role {
                  INVALID_ENUM_VALUE_Role = 0;
                  Role_MASTER = 1;
                  Role_SLAVE = 2;
               };
               Role role = 4 [json_name = "role"];
               uint32 priority = 5 [json_name = "priority"];
               enum SwitchMode {
                  SwitchMode_MANUAL = 0;
                  SwitchMode_AUTO = 1;
               };
               SwitchMode switch_mode = 6 [json_name = "switch-mode"];
               uint32 configuration_priority = 7 [json_name = "configuration-priority"];
               uint32 failure_ratio = 8 [json_name = "failure-ratio"];
               uint32 reduced_priority = 9 [json_name = "reduced-priority"];
            }
            PeerConfiguration peer_configuration = 2 [json_name = "peer-configuration"];
            message NegotiateResult {
               string master_ip_address = 1 [json_name = "master-ip-address"];
               string slave_ip_address = 2 [json_name = "slave-ip-address"];
            }
            NegotiateResult negotiate_result = 3 [json_name = "negotiate-result"];
         }
         GroupState group_state = 14 [json_name = "group-state"];
      }
      repeated Group group = 1 [json_name = "group"];
   }
   Groups groups = 1 [json_name = "groups"];
   message Mode {
      enum ModeType {
         INVALID_ENUM_VALUE_ModeType = 0;
         ModeType_HOT = 1;
         ModeType_COLD = 2;
      };
      ModeType mode_type = 1 [json_name = "mode-type"];
      string source_ip_address = 2 [json_name = "source-ip-address"];
      string peer_ip_address = 3 [json_name = "peer-ip-address"];
      string vpn = 4 [json_name = "vpn"];
   }
   Mode mode = 2 [json_name = "mode"];
   message TcpPort {
      uint32 id = 1 [json_name = "id"];
   }
   TcpPort tcp_port = 3 [json_name = "tcp-port"];
   message SslPolicy {
      string name = 1 [json_name = "name"];
   }
   SslPolicy ssl_policy = 4 [json_name = "ssl-policy"];
   message WaitToRestore {
      uint32 heartbeat_connect_time = 1 [json_name = "heartbeat-connect-time"];
      uint32 user_backup_time = 2 [json_name = "user-backup-time"];
   }
   WaitToRestore wait_to_restore = 5 [json_name = "wait-to-restore"];
   message SlowReconciliation {
      bool enable = 1 [json_name = "enable"];
   }
   SlowReconciliation slow_reconciliation = 6 [json_name = "slow-reconciliation"];
   message PeerBackupBatchAccess {
      bool enable = 1 [json_name = "enable"];
   }
   PeerBackupBatchAccess peer_backup_batch_access = 7 [json_name = "peer-backup-batch-access"];
   message WhitelistSessionCar {
      bool enable = 1 [json_name = "enable"];
      uint32 cir = 2 [json_name = "cir"];
      uint32 cbs = 3 [json_name = "cbs"];
      uint32 pir = 4 [json_name = "pir"];
      uint32 pbs = 5 [json_name = "pbs"];
   }
   WhitelistSessionCar whitelist_session_car = 8 [json_name = "whitelist-session-car"];
   message TrafficBackup {
      uint32 interval = 1 [json_name = "interval"];
      uint32 threshold = 2 [json_name = "threshold"];
   }
   TrafficBackup traffic_backup = 9 [json_name = "traffic-backup"];
   message TcpSession {
      message HeartbeatState {
         string source_ip_address = 1 [json_name = "source-ip-address"];
         string peer_ip_address = 2 [json_name = "peer-ip-address"];
         uint32 tcp_port = 3 [json_name = "tcp-port"];
         enum TcpState {
            TcpState_INIT = 0;
            TcpState_LISTENING = 1;
            TcpState_CONNECTING = 2;
            TcpState_CONNECTED = 3;
            TcpState_UNKNOWN = 4;
         };
         TcpState tcp_state = 4 [json_name = "tcp-state"];
         enum HeartType {
            INVALID_ENUM_VALUE_HeartType = 0;
            HeartType_SERVER = 1;
            HeartType_CLIENT = 2;
         };
         HeartType heart_type = 5 [json_name = "heart-type"];
         enum HeartState {
            INVALID_ENUM_VALUE_HeartState = 0;
            HeartState_CONNECTED = 1;
            HeartState_DISCONNECTED = 2;
            HeartState_INITIALIZING = 3;
         };
         HeartState heart_state = 6 [json_name = "heart-state"];
         string lastest_down_time = 7 [json_name = "lastest-down-time"];
         string lastest_up_time = 8 [json_name = "lastest-up-time"];
         string vpn = 9 [json_name = "vpn"];
      }
      HeartbeatState heartbeat_state = 1 [json_name = "heartbeat-state"];
      message GroupInfos {
         message GroupInfo {
            string group_name = 1 [json_name = "group-name"];
            uint32 up_id = 2 [json_name = "up-id"];
            string ssl_policy_name = 3 [json_name = "ssl-policy-name"];
            enum SslState {
               SslState_INIT = 0;
               SslState_CONNECTING = 1;
               SslState_ACCEPTING = 2;
               SslState_CONNECTED = 3;
               SslState_UNKNOWN = 4;
            };
            SslState ssl_state = 4 [json_name = "ssl-state"];
            enum TcpState {
               TcpState_INIT = 0;
               TcpState_LISTENING = 1;
               TcpState_CONNECTING = 2;
               TcpState_CONNECTED = 3;
               TcpState_UNKNOWN = 4;
            };
            TcpState tcp_state = 5 [json_name = "tcp-state"];
            string peer_ip_address = 6 [json_name = "peer-ip-address"];
            string source_ip_address = 7 [json_name = "source-ip-address"];
            uint32 tcp_port = 8 [json_name = "tcp-port"];
         }
         repeated GroupInfo group_info = 1 [json_name = "group-info"];
      }
      GroupInfos group_infos = 2 [json_name = "group-infos"];
      message UpInfos {
         message UpInfo {
            uint32 up_id = 1 [json_name = "up-id"];
            string group_name = 2 [json_name = "group-name"];
            string ssl_policy_name = 3 [json_name = "ssl-policy-name"];
            enum SslState {
               SslState_INIT = 0;
               SslState_CONNECTING = 1;
               SslState_ACCEPTING = 2;
               SslState_CONNECTED = 3;
               SslState_UNKNOWN = 4;
            };
            SslState ssl_state = 4 [json_name = "ssl-state"];
            enum TcpState {
               TcpState_INIT = 0;
               TcpState_LISTENING = 1;
               TcpState_CONNECTING = 2;
               TcpState_CONNECTED = 3;
               TcpState_UNKNOWN = 4;
            };
            TcpState tcp_state = 5 [json_name = "tcp-state"];
            string peer_ip_address = 6 [json_name = "peer-ip-address"];
            string source_ip_address = 7 [json_name = "source-ip-address"];
            uint32 tcp_port = 8 [json_name = "tcp-port"];
            message UpInfoVerbose {
               uint64 last_second_input_rate_byte = 1 [json_name = "last-second-input-rate-byte"];
               uint64 last_second_input_rate_packet = 2 [json_name = "last-second-input-rate-packet"];
               uint64 last_second_output_rate_byte = 3 [json_name = "last-second-output-rate-byte"];
               uint64 last_second_output_rate_packet = 4 [json_name = "last-second-output-rate-packet"];
               uint64 peak_input_rate_byte = 5 [json_name = "peak-input-rate-byte"];
               uint64 peak_input_rate_packet = 6 [json_name = "peak-input-rate-packet"];
               uint64 peak_output_rate_byte = 7 [json_name = "peak-output-rate-byte"];
               uint64 peak_output_rate_packet = 8 [json_name = "peak-output-rate-packet"];
               uint64 total_input_byte = 9 [json_name = "total-input-byte"];
               uint64 total_input_packet = 10 [json_name = "total-input-packet"];
               uint64 sync_request_input_packet = 11 [json_name = "sync-request-input-packet"];
               uint64 sync_receive_input_packet = 12 [json_name = "sync-receive-input-packet"];
               uint64 sync_over_input_packet = 13 [json_name = "sync-over-input-packet"];
               uint64 real_receive_input_packet = 14 [json_name = "real-receive-input-packet"];
               uint64 hello_input_packet = 15 [json_name = "hello-input-packet"];
               uint64 total_output_byte = 16 [json_name = "total-output-byte"];
               uint64 total_output_packet = 17 [json_name = "total-output-packet"];
               uint64 sync_request_output_packet = 18 [json_name = "sync-request-output-packet"];
               uint64 sync_send_output_packet = 19 [json_name = "sync-send-output-packet"];
               uint64 sync_over_output_packet = 20 [json_name = "sync-over-output-packet"];
               uint64 real_send_output_packet = 21 [json_name = "real-send-output-packet"];
               uint64 hello_output_packet = 22 [json_name = "hello-output-packet"];
               uint64 send_error_output_packet = 23 [json_name = "send-error-output-packet"];
            }
            UpInfoVerbose up_info_verbose = 9 [json_name = "up-info-verbose"];
         }
         repeated UpInfo up_info = 1 [json_name = "up-info"];
      }
      UpInfos up_infos = 3 [json_name = "up-infos"];
   }
   TcpSession tcp_session = 10 [json_name = "tcp-session"];
   message RemoteDataServices {
      message RemoteDataService {
         uint32 up_id = 1 [json_name = "up-id"];
         string lastest_up_time = 2 [json_name = "lastest-up-time"];
         string lastest_down_time = 3 [json_name = "lastest-down-time"];
         string ssl_policy_name = 4 [json_name = "ssl-policy-name"];
         enum SslState {
            SslState_INIT = 0;
            SslState_CONNECTING = 1;
            SslState_ACCEPTING = 2;
            SslState_CONNECTED = 3;
            SslState_UNKNOWN = 4;
         };
         SslState ssl_state = 5 [json_name = "ssl-state"];
         enum TcpState {
            TcpState_INIT = 0;
            TcpState_LISTENING = 1;
            TcpState_CONNECTING = 2;
            TcpState_CONNECTED = 3;
            TcpState_UNKNOWN = 4;
         };
         TcpState tcp_state = 6 [json_name = "tcp-state"];
         string peer_ip_address = 7 [json_name = "peer-ip-address"];
         string source_ip_address = 8 [json_name = "source-ip-address"];
         uint32 tcp_port = 9 [json_name = "tcp-port"];
         message InfoDetail {
            uint32 tx_packet = 1 [json_name = "tx-packet"];
            uint32 rx_packet = 2 [json_name = "rx-packet"];
            uint32 last_second_input_rate_byte = 3 [json_name = "last-second-input-rate-byte"];
            uint32 last_second_input_rate_packet = 4 [json_name = "last-second-input-rate-packet"];
            uint32 last_second_output_rate_byte = 5 [json_name = "last-second-output-rate-byte"];
            uint32 last_second_output_rate_packet = 6 [json_name = "last-second-output-rate-packet"];
            uint32 peak_input_rate_byte = 7 [json_name = "peak-input-rate-byte"];
            uint32 peak_input_rate_packet = 8 [json_name = "peak-input-rate-packet"];
            uint32 peak_output_rate_byte = 9 [json_name = "peak-output-rate-byte"];
            uint32 peak_output_rate_packet = 10 [json_name = "peak-output-rate-packet"];
            message Input {
               uint32 total_byte = 1 [json_name = "total-byte"];
               uint32 total_packet = 2 [json_name = "total-packet"];
               uint32 sync_request_packet = 3 [json_name = "sync-request-packet"];
               uint32 sync_receive_packet = 4 [json_name = "sync-receive-packet"];
               uint32 sync_over_packet = 5 [json_name = "sync-over-packet"];
               uint32 real_receive_packet = 6 [json_name = "real-receive-packet"];
               uint32 hello_packet = 7 [json_name = "hello-packet"];
               uint32 bras_last_second_rate_packet = 8 [json_name = "bras-last-second-rate-packet"];
               uint32 peak_rate_packet = 9 [json_name = "peak-rate-packet"];
               uint32 app_total_packet = 10 [json_name = "app-total-packet"];
               uint32 sync_rx_packet = 11 [json_name = "sync-rx-packet"];
               uint32 real_rx_packet = 12 [json_name = "real-rx-packet"];
            }
            Input input = 11 [json_name = "input"];
            message Output {
               uint32 total_byte = 1 [json_name = "total-byte"];
               uint32 total_packet = 2 [json_name = "total-packet"];
               uint32 sync_request_packet = 3 [json_name = "sync-request-packet"];
               uint32 sync_receive_packet = 4 [json_name = "sync-receive-packet"];
               uint32 sync_over_packet = 5 [json_name = "sync-over-packet"];
               uint32 real_receive_packet = 6 [json_name = "real-receive-packet"];
               uint32 hello_packet = 7 [json_name = "hello-packet"];
               uint32 bras_last_second_rate_packet = 8 [json_name = "bras-last-second-rate-packet"];
               uint32 peak_rate_packet = 9 [json_name = "peak-rate-packet"];
               uint32 app_total_packet = 10 [json_name = "app-total-packet"];
               uint32 send_error_packet = 11 [json_name = "send-error-packet"];
               uint32 sync_tx_packet = 12 [json_name = "sync-tx-packet"];
               uint32 real_tx_packet = 13 [json_name = "real-tx-packet"];
               uint32 sync_over_tx_packet = 14 [json_name = "sync-over-tx-packet"];
            }
            Output output = 12 [json_name = "output"];
         }
         InfoDetail info_detail = 10 [json_name = "info-detail"];
      }
      repeated RemoteDataService remote_data_service = 1 [json_name = "remote-data-service"];
   }
   RemoteDataServices remote_data_services = 11 [json_name = "remote-data-services"];
   message GroupInfos {
      message GroupInfo {
         string group_name = 1 [json_name = "group-name"];
         uint32 up_id = 2 [json_name = "up-id"];
         message RecoveryRole {
            enum Role {
               INVALID_ENUM_VALUE_Role = 0;
               Role_MASTER = 1;
               Role_SLAVE = 2;
            };
            Role role = 1 [json_name = "role"];
            bool disaster_recovery_enable = 2 [json_name = "disaster-recovery-enable"];
         }
         RecoveryRole recovery_role = 3 [json_name = "recovery-role"];
         message RecoveryStatus {
            enum BatchBackupState {
               BatchBackupState_FINISHED = 0;
               BatchBackupState_DOING = 1;
               BatchBackupState_OFFLINE = 2;
            };
            BatchBackupState batch_backup_state = 1 [json_name = "batch-backup-state"];
         }
         RecoveryStatus recovery_status = 4 [json_name = "recovery-status"];
      }
      repeated GroupInfo group_info = 1 [json_name = "group-info"];
   }
   GroupInfos group_infos = 12 [json_name = "group-infos"];
}

