syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2022-03-28 11:52:09
// ProtoYang-version 1
// module huawei-bridge
// revision 2022-01-30
// namespace urn:huawei:yang:huawei-bridge

package huawei_bridge;

message Bridge {
   message Bridges {
      message Bridge3 {
         string name = 1 [json_name = "name"];
         bool vlan_filtering = 2 [json_name = "vlan-filtering"];
         uint32 id = 3 [json_name = "id"];
         string if = 4 [json_name = "if"];
         message Vlans {
            message Vlan {
               uint32 id = 1 [json_name = "id"];
               enum Type {
                  INVALID_ENUM_VALUE_Type = 0;
                  Type_COMMON = 1;
               };
               Type type = 2 [json_name = "type"];
               enum Status {
                  Status_DOWN = 0;
                  Status_UP = 1;
               };
               Status status = 3 [json_name = "status"];
               string if = 4 [json_name = "if"];
               message Mac {
                  bool mac_learning = 1 [json_name = "mac-learning"];
                  message MacLimit {
                     uint32 maximum = 1 [json_name = "maximum"];
                     enum Action {
                        Action_DISCARD = 0;
                        Action_FORWARD = 1;
                     };
                     Action action = 2 [json_name = "action"];
                     bool alarm = 3 [json_name = "alarm"];
                  }
                  MacLimit mac_limit = 2 [json_name = "mac-limit"];
                  message MacAddresss {
                     message MacAddress {
                        string address = 1 [json_name = "address"];
                        message MacType_BlackHole {
                           bool black_hole = 1 [json_name = "black-hole"];
                        }
                        message MacType_Static {
                           string out_interface_name = 1 [json_name = "out-interface-name"];
                        }
                        oneof MacType {
                           MacType_BlackHole mac_type_black_hole = 2 [json_name = "black-hole"];
                           MacType_Static mac_type_static = 3 [json_name = "static"];
                        }
                     }
                     repeated MacAddress mac_address = 1 [json_name = "mac-address"];
                  }
                  MacAddresss mac_addresss = 3 [json_name = "mac-addresss"];
               }
               Mac mac = 5 [json_name = "mac"];
               message MemberPorts {
                  message MemberPort {
                     string port_name = 1 [json_name = "port-name"];
                     enum State {
                        State_DOWN = 0;
                        State_UP = 1;
                     };
                     State state = 2 [json_name = "state"];
                     enum TagMode {
                        TagMode_UNTAG = 0;
                        TagMode_TAG = 1;
                     };
                     TagMode tag_mode = 3 [json_name = "tag-mode"];
                  }
                  repeated MemberPort member_port = 1 [json_name = "member-port"];
               }
               MemberPorts member_ports = 6 [json_name = "member-ports"];
            }
            repeated Vlan vlan = 1 [json_name = "vlan"];
         }
         Vlans vlans = 5 [json_name = "vlans"];
         message Ports {
            message Port {
               string port_name = 1 [json_name = "port-name"];
               uint32 pvid = 2 [json_name = "pvid"];
               string trunk_vlans = 3 [json_name = "trunk-vlans"];
               string untag_vlans = 4 [json_name = "untag-vlans"];
               message PortIsolateGroups {
                  message PortIsolateGroup {
                     uint32 group_id = 1 [json_name = "group-id"];
                  }
                  repeated PortIsolateGroup port_isolate_group = 1 [json_name = "port-isolate-group"];
               }
               PortIsolateGroups port_isolate_groups = 5 [json_name = "port-isolate-groups"];
               message Mac {
                  message MacLearning {
                     bool enable = 1 [json_name = "enable"];
                     enum Action {
                        Action_DISCARD = 0;
                        Action_FORWARD = 1;
                     };
                     Action action = 2 [json_name = "action"];
                  }
                  MacLearning mac_learning = 1 [json_name = "mac-learning"];
                  message MacLimit {
                     uint32 maximum = 1 [json_name = "maximum"];
                     enum Action {
                        Action_DISCARD = 0;
                        Action_FORWARD = 1;
                     };
                     Action action = 2 [json_name = "action"];
                     bool alarm = 3 [json_name = "alarm"];
                  }
                  MacLimit mac_limit = 2 [json_name = "mac-limit"];
                  message PortSecurity {
                     uint32 maximum = 1 [json_name = "maximum"];
                     enum Action {
                        Action_RESTRICT = 0;
                        Action_PROTECT = 1;
                        Action_ERRORX_DOWN = 2;
                     };
                     Action action = 2 [json_name = "action"];
                     uint32 aging_time = 3 [json_name = "aging-time"];
                     bool sticky = 4 [json_name = "sticky"];
                     message MacAddresses {
                        message MacAddress {
                           string address = 1 [json_name = "address"];
                           uint32 vlan_id = 2 [json_name = "vlan-id"];
                        }
                        repeated MacAddress mac_address = 1 [json_name = "mac-address"];
                     }
                     MacAddresses mac_addresses = 5 [json_name = "mac-addresses"];
                  }
                  PortSecurity port_security = 3 [json_name = "port-security"];
               }
               Mac mac = 6 [json_name = "mac"];
            }
            repeated Port port = 1 [json_name = "port"];
         }
         Ports ports = 6 [json_name = "ports"];
         message Mac {
            uint32 aging_time = 1 [json_name = "aging-time"];
            message ThresholdAlarm {
               uint32 up_threshold = 1 [json_name = "up-threshold"];
               uint32 down_threshold = 2 [json_name = "down-threshold"];
            }
            ThresholdAlarm threshold_alarm = 2 [json_name = "threshold-alarm"];
            message GlobalBlackholeMacs {
               message GlobalBlackholeMac {
                  string address = 1 [json_name = "address"];
               }
               repeated GlobalBlackholeMac global_blackhole_mac = 1 [json_name = "global-blackhole-mac"];
            }
            GlobalBlackholeMacs global_blackhole_macs = 3 [json_name = "global-blackhole-macs"];
            message Macs {
               message Mac6 {
                  uint32 vlan_id = 1 [json_name = "vlan-id"];
                  string address = 2 [json_name = "address"];
                  enum Type {
                     Type_STATIC = 0;
                     Type_BLACKX_HOLE = 1;
                     Type_DYNAMIC = 2;
                     Type_STICKY = 3;
                     Type_SECURITY = 5;
                  };
                  Type type = 3 [json_name = "type"];
                  string out_interface_name = 4 [json_name = "out-interface-name"];
               }
               repeated Mac6 mac6 = 1 [json_name = "mac"];
            }
            Macs macs = 4 [json_name = "macs"];
            message MacStatistic {
               uint32 total = 1 [json_name = "total"];
               uint32 black_hole = 2 [json_name = "black-hole"];
               uint32 static = 3 [json_name = "static"];
               uint32 dynamic = 4 [json_name = "dynamic"];
               uint32 sticky = 5 [json_name = "sticky"];
               uint32 security = 6 [json_name = "security"];
            }
            MacStatistic mac_statistic = 5 [json_name = "mac-statistic"];
         }
         Mac mac = 7 [json_name = "mac"];
      }
      repeated Bridge3 bridge3 = 1 [json_name = "bridge"];
   }
   Bridges bridges = 1 [json_name = "bridges"];
}

