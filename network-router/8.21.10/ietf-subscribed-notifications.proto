syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-09-01 20:16:01
// ProtoYang-version 1
// module ietf-subscribed-notifications
// revision 2018-09-13
// namespace urn:ietf:params:xml:ns:yang:ietf-subscribed-notifications

package ietf_subscribed_notifications;

message Streams {
   message Stream {
      string name = 1 [json_name = "name"];
      string description = 2 [json_name = "description"];
      bool replay_support = 3 [json_name = "replay-support"];
      string replay_log_creation_time = 4 [json_name = "replay-log-creation-time"];
      string replay_log_aged_time = 5 [json_name = "replay-log-aged-time"];
   }
   repeated Stream stream = 1 [json_name = "stream"];
}
message Filters {
   message StreamFilter {
      string name = 1 [json_name = "name"];
      message FilterSpec_StreamSubtreeFilter {
         message StreamSubtreeFilter4 {
         }
         StreamSubtreeFilter4 stream_subtree_filter = 1 [json_name = "stream-subtree-filter"];
      }
      message FilterSpec_StreamXpathFilter {
         string stream_xpath_filter = 1 [json_name = "stream-xpath-filter"];
      }
      oneof FilterSpec {
         FilterSpec_StreamSubtreeFilter filter_spec_stream_subtree_filter = 2 [json_name = "stream-subtree-filter"];
         FilterSpec_StreamXpathFilter filter_spec_stream_xpath_filter = 3 [json_name = "stream-xpath-filter"];
      }
   }
   repeated StreamFilter stream_filter = 1 [json_name = "stream-filter"];
   message SelectionFilter {
      string filter_id = 1 [json_name = "filter-id"];
      message FilterSpec_DatastoreSubtreeFilter {
         message DatastoreSubtreeFilter4 {
         }
         DatastoreSubtreeFilter4 datastore_subtree_filter = 1 [json_name = "datastore-subtree-filter"];
      }
      message FilterSpec_DatastoreXpathFilter {
         string datastore_xpath_filter = 1 [json_name = "datastore-xpath-filter"];
      }
      oneof FilterSpec {
         FilterSpec_DatastoreSubtreeFilter filter_spec_datastore_subtree_filter = 2 [json_name = "datastore-subtree-filter"];
         FilterSpec_DatastoreXpathFilter filter_spec_datastore_xpath_filter = 3 [json_name = "datastore-xpath-filter"];
      }
   }
   repeated SelectionFilter selection_filter = 2 [json_name = "selection-filter"];
}
message Subscriptions {
   message Subscription {
      uint32 id = 1 [json_name = "id"];
      message Target_Stream {
         message StreamFilter_ByReference {
            string stream_filter_name = 1 [json_name = "stream-filter-name"];
         }
         message StreamFilter_WithinSubscription {
            message FilterSpec_StreamSubtreeFilter {
               message StreamSubtreeFilter6 {
               }
               StreamSubtreeFilter6 stream_subtree_filter = 1 [json_name = "stream-subtree-filter"];
            }
            message FilterSpec_StreamXpathFilter {
               string stream_xpath_filter = 1 [json_name = "stream-xpath-filter"];
            }
            oneof FilterSpec {
               FilterSpec_StreamSubtreeFilter filter_spec_stream_subtree_filter = 1 [json_name = "stream-subtree-filter"];
               FilterSpec_StreamXpathFilter filter_spec_stream_xpath_filter = 2 [json_name = "stream-xpath-filter"];
            }
         }
         oneof StreamFilter {
            StreamFilter_ByReference stream_filter_by_reference = 1 [json_name = "by-reference"];
            StreamFilter_WithinSubscription stream_filter_within_subscription = 2 [json_name = "within-subscription"];
         }
         string stream4 = 3 [json_name = "stream"];
         string replay_start_time = 4 [json_name = "replay-start-time"];
         bool configured_replay = 5 [json_name = "configured-replay"];
      }
      message Target_Datastore {
         string datastore4 = 1 [json_name = "datastore"];
         message SelectionFilter_ByReference {
            string selection_filter_ref = 1 [json_name = "selection-filter-ref"];
         }
         message SelectionFilter_WithinSubscription {
            message FilterSpec_DatastoreSubtreeFilter {
               message DatastoreSubtreeFilter6 {
               }
               DatastoreSubtreeFilter6 datastore_subtree_filter = 1 [json_name = "datastore-subtree-filter"];
            }
            message FilterSpec_DatastoreXpathFilter {
               string datastore_xpath_filter = 1 [json_name = "datastore-xpath-filter"];
            }
            oneof FilterSpec {
               FilterSpec_DatastoreSubtreeFilter filter_spec_datastore_subtree_filter = 1 [json_name = "datastore-subtree-filter"];
               FilterSpec_DatastoreXpathFilter filter_spec_datastore_xpath_filter = 2 [json_name = "datastore-xpath-filter"];
            }
         }
         oneof SelectionFilter {
            SelectionFilter_ByReference selection_filter_by_reference = 2 [json_name = "by-reference"];
            SelectionFilter_WithinSubscription selection_filter_within_subscription = 3 [json_name = "within-subscription"];
         }
      }
      oneof Target {
         Target_Stream target_stream = 2 [json_name = "stream"];
         Target_Datastore target_datastore = 3 [json_name = "datastore"];
      }
      string stop_time = 4 [json_name = "stop-time"];
      uint32 dscp = 5 [json_name = "dscp"];
      uint32 weighting = 6 [json_name = "weighting"];
      uint32 dependency = 7 [json_name = "dependency"];
      string transport = 8 [json_name = "transport"];
      string encoding = 9 [json_name = "encoding"];
      string purpose = 10 [json_name = "purpose"];
      message NotificationMessageOrigin_InterfaceOriginated {
         string source_interface = 1 [json_name = "source-interface"];
      }
      message NotificationMessageOrigin_AddressOriginated {
         string source_vrf = 1 [json_name = "source-vrf"];
         string source_address = 2 [json_name = "source-address"];
      }
      oneof NotificationMessageOrigin {
         NotificationMessageOrigin_InterfaceOriginated notification_message_origin_interface_originated = 11 [json_name = "interface-originated"];
         NotificationMessageOrigin_AddressOriginated notification_message_origin_address_originated = 12 [json_name = "address-originated"];
      }
      enum ConfiguredSubscriptionState {
         INVALID_ENUM_VALUE_ConfiguredSubscriptionState = 0;
         ConfiguredSubscriptionState_VALID = 1;
         ConfiguredSubscriptionState_INVALID = 2;
         ConfiguredSubscriptionState_CONCLUDED = 3;
      };
      ConfiguredSubscriptionState configured_subscription_state = 13 [json_name = "configured-subscription-state"];
      message Receivers {
         message Receiver {
            string name = 1 [json_name = "name"];
            uint64 sent_event_records = 2 [json_name = "sent-event-records"];
            uint64 excluded_event_records = 3 [json_name = "excluded-event-records"];
            enum State {
               INVALID_ENUM_VALUE_State = 0;
               State_ACTIVE = 1;
               State_SUSPENDED = 2;
               State_CONNECTING = 3;
               State_DISCONNECTED = 4;
            };
            State state = 4 [json_name = "state"];
         }
         repeated Receiver receiver = 1 [json_name = "receiver"];
      }
      Receivers receivers = 14 [json_name = "receivers"];
      uint32 collect_depth = 15 [json_name = "collect-depth"];
      message UpdateTrigger_Periodic {
         message Periodic4 {
            uint32 period = 1 [json_name = "period"];
            string anchor_time = 2 [json_name = "anchor-time"];
         }
         Periodic4 periodic4 = 1 [json_name = "periodic"];
      }
      message UpdateTrigger_OnChange {
         message OnChange4 {
            uint32 dampening_period = 1 [json_name = "dampening-period"];
            bool sync_on_start = 2 [json_name = "sync-on-start"];
            enum ExcludedChange {
               ExcludedChange_CREATE = 0;
               ExcludedChange_DELETE = 1;
               ExcludedChange_INSERT = 2;
               ExcludedChange_MOVE = 3;
               ExcludedChange_REPLACE = 4;
            };
            repeated ExcludedChange excluded_change = 3 [json_name = "excluded-change"];
         }
         OnChange4 on_change = 1 [json_name = "on-change"];
      }
      oneof UpdateTrigger {
         UpdateTrigger_Periodic update_trigger_periodic = 16 [json_name = "periodic"];
         UpdateTrigger_OnChange update_trigger_on_change = 17 [json_name = "on-change"];
      }
   }
   repeated Subscription subscription = 1 [json_name = "subscription"];
}
message ReplayCompleted {
   uint32 id = 1 [json_name = "id"];
}
message SubscriptionCompleted {
   uint32 id = 1 [json_name = "id"];
}
message SubscriptionModified {
   uint32 id = 1 [json_name = "id"];
   message Target_Stream {
      message StreamFilter_ByReference {
         string stream_filter_name = 1 [json_name = "stream-filter-name"];
      }
      message StreamFilter_WithinSubscription {
         message FilterSpec_StreamSubtreeFilter {
            message StreamSubtreeFilter5 {
            }
            StreamSubtreeFilter5 stream_subtree_filter = 1 [json_name = "stream-subtree-filter"];
         }
         message FilterSpec_StreamXpathFilter {
            string stream_xpath_filter = 1 [json_name = "stream-xpath-filter"];
         }
         oneof FilterSpec {
            FilterSpec_StreamSubtreeFilter filter_spec_stream_subtree_filter = 1 [json_name = "stream-subtree-filter"];
            FilterSpec_StreamXpathFilter filter_spec_stream_xpath_filter = 2 [json_name = "stream-xpath-filter"];
         }
      }
      oneof StreamFilter {
         StreamFilter_ByReference stream_filter_by_reference = 1 [json_name = "by-reference"];
         StreamFilter_WithinSubscription stream_filter_within_subscription = 2 [json_name = "within-subscription"];
      }
      string stream3 = 3 [json_name = "stream"];
      string replay_start_time = 4 [json_name = "replay-start-time"];
   }
   message Target_Datastore {
      string datastore3 = 1 [json_name = "datastore"];
      message SelectionFilter_ByReference {
         string selection_filter_ref = 1 [json_name = "selection-filter-ref"];
      }
      message SelectionFilter_WithinSubscription {
         message FilterSpec_DatastoreSubtreeFilter {
            message DatastoreSubtreeFilter5 {
            }
            DatastoreSubtreeFilter5 datastore_subtree_filter = 1 [json_name = "datastore-subtree-filter"];
         }
         message FilterSpec_DatastoreXpathFilter {
            string datastore_xpath_filter = 1 [json_name = "datastore-xpath-filter"];
         }
         oneof FilterSpec {
            FilterSpec_DatastoreSubtreeFilter filter_spec_datastore_subtree_filter = 1 [json_name = "datastore-subtree-filter"];
            FilterSpec_DatastoreXpathFilter filter_spec_datastore_xpath_filter = 2 [json_name = "datastore-xpath-filter"];
         }
      }
      oneof SelectionFilter {
         SelectionFilter_ByReference selection_filter_by_reference = 2 [json_name = "by-reference"];
         SelectionFilter_WithinSubscription selection_filter_within_subscription = 3 [json_name = "within-subscription"];
      }
   }
   oneof Target {
      Target_Stream target_stream = 2 [json_name = "stream"];
      Target_Datastore target_datastore = 3 [json_name = "datastore"];
   }
   string stop_time = 4 [json_name = "stop-time"];
   uint32 dscp = 5 [json_name = "dscp"];
   uint32 weighting = 6 [json_name = "weighting"];
   uint32 dependency = 7 [json_name = "dependency"];
   string transport = 8 [json_name = "transport"];
   string encoding = 9 [json_name = "encoding"];
   string purpose = 10 [json_name = "purpose"];
   message UpdateTrigger_Periodic {
      message Periodic3 {
         uint32 period = 1 [json_name = "period"];
         string anchor_time = 2 [json_name = "anchor-time"];
      }
      Periodic3 periodic3 = 1 [json_name = "periodic"];
   }
   message UpdateTrigger_OnChange {
      message OnChange3 {
         uint32 dampening_period = 1 [json_name = "dampening-period"];
         bool sync_on_start = 2 [json_name = "sync-on-start"];
         enum ExcludedChange {
            ExcludedChange_CREATE = 0;
            ExcludedChange_DELETE = 1;
            ExcludedChange_INSERT = 2;
            ExcludedChange_MOVE = 3;
            ExcludedChange_REPLACE = 4;
         };
         repeated ExcludedChange excluded_change = 3 [json_name = "excluded-change"];
      }
      OnChange3 on_change = 1 [json_name = "on-change"];
   }
   oneof UpdateTrigger {
      UpdateTrigger_Periodic update_trigger_periodic = 11 [json_name = "periodic"];
      UpdateTrigger_OnChange update_trigger_on_change = 12 [json_name = "on-change"];
   }
}
message SubscriptionResumed {
   uint32 id = 1 [json_name = "id"];
}
message SubscriptionStarted {
   uint32 id = 1 [json_name = "id"];
   message Target_Stream {
      message StreamFilter_ByReference {
         string stream_filter_name = 1 [json_name = "stream-filter-name"];
      }
      message StreamFilter_WithinSubscription {
         message FilterSpec_StreamSubtreeFilter {
            message StreamSubtreeFilter5 {
            }
            StreamSubtreeFilter5 stream_subtree_filter = 1 [json_name = "stream-subtree-filter"];
         }
         message FilterSpec_StreamXpathFilter {
            string stream_xpath_filter = 1 [json_name = "stream-xpath-filter"];
         }
         oneof FilterSpec {
            FilterSpec_StreamSubtreeFilter filter_spec_stream_subtree_filter = 1 [json_name = "stream-subtree-filter"];
            FilterSpec_StreamXpathFilter filter_spec_stream_xpath_filter = 2 [json_name = "stream-xpath-filter"];
         }
      }
      oneof StreamFilter {
         StreamFilter_ByReference stream_filter_by_reference = 1 [json_name = "by-reference"];
         StreamFilter_WithinSubscription stream_filter_within_subscription = 2 [json_name = "within-subscription"];
      }
      string stream3 = 3 [json_name = "stream"];
      string replay_start_time = 4 [json_name = "replay-start-time"];
      string replay_previous_event_time = 5 [json_name = "replay-previous-event-time"];
   }
   message Target_Datastore {
      string datastore3 = 1 [json_name = "datastore"];
      message SelectionFilter_ByReference {
         string selection_filter_ref = 1 [json_name = "selection-filter-ref"];
      }
      message SelectionFilter_WithinSubscription {
         message FilterSpec_DatastoreSubtreeFilter {
            message DatastoreSubtreeFilter5 {
            }
            DatastoreSubtreeFilter5 datastore_subtree_filter = 1 [json_name = "datastore-subtree-filter"];
         }
         message FilterSpec_DatastoreXpathFilter {
            string datastore_xpath_filter = 1 [json_name = "datastore-xpath-filter"];
         }
         oneof FilterSpec {
            FilterSpec_DatastoreSubtreeFilter filter_spec_datastore_subtree_filter = 1 [json_name = "datastore-subtree-filter"];
            FilterSpec_DatastoreXpathFilter filter_spec_datastore_xpath_filter = 2 [json_name = "datastore-xpath-filter"];
         }
      }
      oneof SelectionFilter {
         SelectionFilter_ByReference selection_filter_by_reference = 2 [json_name = "by-reference"];
         SelectionFilter_WithinSubscription selection_filter_within_subscription = 3 [json_name = "within-subscription"];
      }
   }
   oneof Target {
      Target_Stream target_stream = 2 [json_name = "stream"];
      Target_Datastore target_datastore = 3 [json_name = "datastore"];
   }
   string stop_time = 4 [json_name = "stop-time"];
   uint32 dscp = 5 [json_name = "dscp"];
   uint32 weighting = 6 [json_name = "weighting"];
   uint32 dependency = 7 [json_name = "dependency"];
   string transport = 8 [json_name = "transport"];
   string encoding = 9 [json_name = "encoding"];
   string purpose = 10 [json_name = "purpose"];
   message UpdateTrigger_Periodic {
      message Periodic3 {
         uint32 period = 1 [json_name = "period"];
         string anchor_time = 2 [json_name = "anchor-time"];
      }
      Periodic3 periodic3 = 1 [json_name = "periodic"];
   }
   message UpdateTrigger_OnChange {
      message OnChange3 {
         uint32 dampening_period = 1 [json_name = "dampening-period"];
         bool sync_on_start = 2 [json_name = "sync-on-start"];
         enum ExcludedChange {
            ExcludedChange_CREATE = 0;
            ExcludedChange_DELETE = 1;
            ExcludedChange_INSERT = 2;
            ExcludedChange_MOVE = 3;
            ExcludedChange_REPLACE = 4;
         };
         repeated ExcludedChange excluded_change = 3 [json_name = "excluded-change"];
      }
      OnChange3 on_change = 1 [json_name = "on-change"];
   }
   oneof UpdateTrigger {
      UpdateTrigger_Periodic update_trigger_periodic = 11 [json_name = "periodic"];
      UpdateTrigger_OnChange update_trigger_on_change = 12 [json_name = "on-change"];
   }
}
message SubscriptionSuspended {
   uint32 id = 1 [json_name = "id"];
   string reason = 2 [json_name = "reason"];
}
message SubscriptionTerminated {
   uint32 id = 1 [json_name = "id"];
   string reason = 2 [json_name = "reason"];
}

