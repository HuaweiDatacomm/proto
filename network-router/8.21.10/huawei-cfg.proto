syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2022-01-29 09:36:30
// ProtoYang-version 1
// module huawei-cfg
// revision 2022-01-25
// revision 2021-01-26
// revision 2020-03-18
// revision 2020-02-21
// namespace urn:huawei:yang:huawei-cfg

package huawei_cfg;

message Cfg {
   message AutoBackupConfig {
      uint32 intervalTime = 1;
      string startTime = 2;
   }
   AutoBackupConfig autoBackupConfig = 1;
   message AutosaveCheckpoint {
      string start_time = 1 [json_name = "start-time"];
   }
   AutosaveCheckpoint autosave_checkpoint = 2 [json_name = "autosave-checkpoint"];
   message AutoSaveconfig {
      uint32 cpuLimit = 1;
      uint32 delayTime = 2;
      uint32 intervalTime = 3;
      bool isEnable = 4;
   }
   AutoSaveconfig autoSaveconfig = 3;
   message BackupServers {
      message BackupServer {
         string password = 1 [json_name = "password"];
         string path = 2 [json_name = "path"];
         string server_ip = 3 [json_name = "server-ip"];
         enum TransportType {
            INVALID_ENUM_VALUE_TransportType = 0;
            TransportType_FTP = 1;
            TransportType_TFTP = 2;
            TransportType_SFTP = 3;
            TransportType_HTTP = 5;
         };
         TransportType transport_type = 4 [json_name = "transport-type"];
         string username = 5 [json_name = "username"];
         string vpn_instance = 6 [json_name = "vpn-instance"];
         uint32 port = 7 [json_name = "port"];
      }
      repeated BackupServer backup_server = 1 [json_name = "backup-server"];
   }
   BackupServers backup_servers = 4 [json_name = "backup-servers"];
   message CfgBackAndRecoverStateInfos {
      message CfgBackAndRecoverStateInfo {
         string fileName = 1;
         uint32 index = 2;
         uint32 lastTime = 3;
         uint32 operateProgress = 4;
         enum OperationType {
            OperationType_DELSTARTUP = 0;
            OperationType_NET2RUNNING = 1;
            OperationType_NET2STARTUP = 2;
            OperationType_RUNNING2NET = 3;
            OperationType_RUNNING2STARTUP = 4;
            OperationType_STARTUP2NET = 5;
            OperationType_STARTUP2RUNNING = 6;
         };
         OperationType operationType = 5;
         uint32 serviceType = 6;
         string startTime = 7;
         enum State {
            State_AUTHFAIL = 0;
            State_DEVICEBUSY = 1;
            State_DEVICEFULL = 2;
            State_FILEOPENERROR = 3;
            State_FILETRANSFERERROR = 4;
            State_INVALIDDESTNAME = 5;
            State_INVALIDOPERATION = 6;
            State_INVALIDSERVERADDRESS = 7;
            State_INVALIDSOURCENAME = 8;
            State_RUNNING = 9;
            State_SUCCESS = 10;
            State_TIMEOUT = 11;
            State_UNKNOWNFAILURE = 12;
         };
         State state = 8;
      }
      repeated CfgBackAndRecoverStateInfo cfgBackAndRecoverStateInfo = 1;
   }
   CfgBackAndRecoverStateInfos cfgBackAndRecoverStateInfos = 5;
   message CfgChgFlowId {
      string cfgBaselineTime = 1;
      uint32 curCfgChgFlowId = 2;
   }
   CfgChgFlowId cfgChgFlowId = 6;
   message CfgFiles {
      message CfgFile {
         string create_time = 1 [json_name = "create-time"];
         message FileCurrentChanges {
            message FileCurrentChange {
               string config_change = 1 [json_name = "config-change"];
               uint32 index = 2 [json_name = "index"];
            }
            repeated FileCurrentChange file_current_change = 1 [json_name = "file-current-change"];
         }
         FileCurrentChanges file_current_changes = 2 [json_name = "file-current-changes"];
         string filename = 3 [json_name = "filename"];
         uint32 size = 4 [json_name = "size"];
      }
      repeated CfgFile cfg_file = 1 [json_name = "cfg-file"];
   }
   CfgFiles cfg_files = 7 [json_name = "cfg-files"];
   message CheckPointInfos {
      message CheckPointInfo {
         enum Client {
            Client_CLI = 0;
            Client_MML = 1;
            Client_NETCONF = 2;
            Client_RESTORE = 3;
            Client_ROLLBACK = 4;
            Client_SNMP = 5;
            Client_SYSTEM = 6;
            Client_X_ = 7;
            Client_Y2 = 8;
         };
         Client client = 1;
         string commitId = 2;
         message CurrentPointChanges {
            message CurrentPointChange {
               string configChange = 1;
               uint32 index = 2;
            }
            repeated CurrentPointChange currentPointChange = 1;
         }
         CurrentPointChanges currentPointChanges = 3;
         string description = 4;
         string line = 5;
         message SincePointChanges {
            message SincePointChange {
               string configChange = 1;
               uint32 index = 2;
            }
            repeated SincePointChange sincePointChange = 1;
         }
         SincePointChanges sincePointChanges = 6;
         string timeStamp = 7;
         string userLabel = 8;
         string userName = 9;
      }
      repeated CheckPointInfo checkPointInfo = 1;
   }
   CheckPointInfos checkPointInfos = 8;
   message ConfigAutobackupfiles {
      message ConfigAutobackupfile {
         string cfgAutobackupTime = 1;
      }
      repeated ConfigAutobackupfile configAutobackupfile = 1;
   }
   ConfigAutobackupfiles configAutobackupfiles = 9;
   message ConfigInitResult {
      enum Result {
         Result_ABORT = 0;
         Result_DEVICEBUSY = 1;
         Result_DEVICEFULL = 2;
         Result_INIT = 3;
         Result_NOMEMORY = 4;
         Result_RUNNING = 5;
         Result_SUCCESS = 6;
         Result_UNKNOWNFAILURE = 7;
      };
      Result result = 1;
   }
   ConfigInitResult configInitResult = 10;
   message ConfigRecoverResults {
      message ConfigRecoverResult {
         string command = 1 [json_name = "command"];
         uint32 index = 2 [json_name = "index"];
         uint32 line = 3 [json_name = "line"];
         enum Reason {
            Reason_UNKNOWNX_COMMAND = 0;
            Reason_EXECUTEX_FAILED = 1;
            Reason_EXECUTEX_TIMEOUT = 2;
         };
         Reason reason = 4 [json_name = "reason"];
         string time = 5 [json_name = "time"];
         string view = 6 [json_name = "view"];
      }
      repeated ConfigRecoverResult config_recover_result = 1 [json_name = "config-recover-result"];
   }
   ConfigRecoverResults config_recover_results = 11 [json_name = "config-recover-results"];
   message ConfigRollbackResult {
      string rollbackRslt = 1;
      message Result {
      }
      Result result = 2 [json_name = "result"];
   }
   ConfigRollbackResult config_rollback_result = 12 [json_name = "config-rollback-result"];
   message ConfigSessions {
      message ConfigSession {
         enum Client {
            Client_CLI = 0;
            Client_MML = 1;
            Client_NETCONF = 2;
            Client_RESTORE = 3;
            Client_ROLLBACK = 4;
            Client_SNMP = 5;
            Client_SYSTEM = 6;
            Client_X_ = 7;
            Client_Y2 = 8;
         };
         Client client = 1;
         string createTime = 2;
         string line = 3;
         string lock = 4;
         uint32 sessionId = 5;
         string userName = 6;
      }
      repeated ConfigSession configSession = 1;
   }
   ConfigSessions configSessions = 13;
   message ConfigurationLock {
      bool isLock = 1;
      string lockLevel = 2;
   }
   ConfigurationLock configurationLock = 14;
   message ConfigurationOperationCpuLimit {
      uint32 cpuLimit = 1;
      bool snmp_switch = 2 [json_name = "snmp-switch"];
      uint32 netconf_cpu_limit = 3 [json_name = "netconf-cpu-limit"];
      bool netconf_switch = 4 [json_name = "netconf-switch"];
      uint32 snmp_cpu_limit = 5 [json_name = "snmp-cpu-limit"];
   }
   ConfigurationOperationCpuLimit configuration_operation_cpu_limit = 15 [json_name = "configuration-operation-cpu-limit"];
   message GlobalConfig {
      enum AppdataDetectSwitch {
         AppdataDetectSwitch_DISABLE = 0;
         AppdataDetectSwitch_ENABLE = 1;
      };
      AppdataDetectSwitch appdataDetectSwitch = 1;
      enum ConfigurationSlaveDetectSwitch {
         ConfigurationSlaveDetectSwitch_DISABLE = 0;
         ConfigurationSlaveDetectSwitch_ENABLE = 1;
      };
      ConfigurationSlaveDetectSwitch configurationSlaveDetectSwitch = 2;
   }
   GlobalConfig globalConfig = 16;
   message LockByUserInfo {
      uint32 identifier = 1;
      string lockTime = 2;
      string lockUserName = 3;
      string unlockTime = 4;
      string unlockUserName = 5;
   }
   LockByUserInfo lockByUserInfo = 17;
   message LockByUsers {
      message LockByUser {
         string lock_username = 1 [json_name = "lock-username"];
         string lock_time = 2 [json_name = "lock-time"];
         uint32 identifier = 3 [json_name = "identifier"];
         string unlock_username = 4 [json_name = "unlock-username"];
         string unlock_time = 5 [json_name = "unlock-time"];
      }
      repeated LockByUser lock_by_user = 1 [json_name = "lock-by-user"];
   }
   LockByUsers lock_by_users = 18 [json_name = "lock-by-users"];
   message SavedConfigurationTime {
      string autoSaveTime = 1;
      string manSaveTime = 2;
   }
   SavedConfigurationTime savedConfigurationTime = 19;
   message StartupInfos {
      message StartupInfo {
         string configedSysSoft = 1;
         string curPatchFile = 2;
         string curStartupFile = 3;
         string curSysSoft = 4;
         string next_patch_file = 5 [json_name = "next-patch-file"];
         string nextStartupFile = 6;
         string nextSysSoft = 7;
         string position = 8 [json_name = "position"];
         string configed_system_software = 9 [json_name = "configed-system-software"];
         string current_system_software = 10 [json_name = "current-system-software"];
         string next_system_software = 11 [json_name = "next-system-software"];
         string current_cfg_file = 12 [json_name = "current-cfg-file"];
         string next_cfg_file = 13 [json_name = "next-cfg-file"];
         string current_patch_file = 14 [json_name = "current-patch-file"];
      }
      repeated StartupInfo startup_info = 1 [json_name = "startup-info"];
   }
   StartupInfos startup_infos = 20 [json_name = "startup-infos"];
   message TrialStatus {
      enum Status {
         Status_INACTIVE = 0;
         Status_ACTIVE = 1;
         Status_CANCELING = 2;
         Status_WAITX_CANCEL = 3;
      };
      Status status = 1 [json_name = "status"];
      uint32 time_left = 2 [json_name = "time-left"];
      string persist_id = 3 [json_name = "persist-id"];
   }
   TrialStatus trial_status = 21 [json_name = "trial-status"];
   message UserLock {
      string lastConfigTime = 1;
      string lockTime = 2;
      string sessionName = 3;
      string userIP = 4;
      uint32 userIndex = 5;
      uint32 userLockTimeOutTime = 6;
      string userName = 7;
   }
   UserLock userLock = 22;
   message Autosave {
      uint32 interval_time = 1 [json_name = "interval-time"];
      uint32 delay_time = 2 [json_name = "delay-time"];
      uint32 cpu_limit = 3 [json_name = "cpu-limit"];
   }
   Autosave autosave = 23 [json_name = "autosave"];
   message Checkpoints {
      message Checkpoint {
         string commit_id = 1 [json_name = "commit-id"];
         string user_label = 2 [json_name = "user-label"];
         string username = 3 [json_name = "username"];
         string line = 4 [json_name = "line"];
         enum Client {
            Client_CLI = 0;
            Client_NETCONF = 1;
            Client_SNMP = 2;
            Client_ROLLBACK = 3;
            Client_Y2 = 4;
            Client_RESTORE = 5;
            Client_SYSTEM = 6;
            Client_MML = 7;
            Client_INNER = 8;
         };
         Client client = 5 [json_name = "client"];
         string timestamp = 6 [json_name = "timestamp"];
         string description = 7 [json_name = "description"];
         message CurrentPointChanges {
            message CurrentPointChange {
               uint32 index = 1 [json_name = "index"];
               string config_change = 2 [json_name = "config-change"];
            }
            repeated CurrentPointChange current_point_change = 1 [json_name = "current-point-change"];
         }
         CurrentPointChanges current_point_changes = 8 [json_name = "current-point-changes"];
         message SincePointChanges {
            message SincePointChange {
               uint32 index = 1 [json_name = "index"];
               string config_change = 2 [json_name = "config-change"];
            }
            repeated SincePointChange since_point_change = 1 [json_name = "since-point-change"];
         }
         SincePointChanges since_point_changes = 9 [json_name = "since-point-changes"];
      }
      repeated Checkpoint checkpoint = 1 [json_name = "checkpoint"];
   }
   Checkpoints checkpoints = 24 [json_name = "checkpoints"];
   message GlobalSwitch {
      bool configuration_slave_detect_switch = 1 [json_name = "configuration-slave-detect-switch"];
      bool appdata_detect_switch = 2 [json_name = "appdata-detect-switch"];
      bool checkpoint_switch = 3 [json_name = "checkpoint-switch"];
   }
   GlobalSwitch global_switch = 25 [json_name = "global-switch"];
   message BackupAndRecoveryStates {
      message BackupAndRecoveryState {
         uint32 index = 1 [json_name = "index"];
         enum OperationType {
            INVALID_ENUM_VALUE_OperationType = 0;
            OperationType_RUNNING2STARTUP = 1;
            OperationType_STARTUP2RUNNING = 2;
            OperationType_RUNNING2NET = 3;
            OperationType_NET2RUNNING = 4;
            OperationType_NET2STARTUP = 5;
            OperationType_STARTUP2NET = 6;
            OperationType_DELSTARTUP = 7;
         };
         OperationType operation_type = 2 [json_name = "operation-type"];
         enum State {
            INVALID_ENUM_VALUE_State = 0;
            State_RUNNING = 1;
            State_SUCCESS = 2;
            State_INVALIDX_OPERATION = 3;
            State_INVALIDX_SERVERX_ADDRESS = 4;
            State_INVALIDX_SOURCEX_NAME = 5;
            State_INVALIDX_DESTX_NAME = 6;
            State_DEVICEX_BUSY = 7;
            State_DEVICEX_FULL = 8;
            State_FILEX_OPENX_ERROR = 9;
            State_FILEX_TRANSFERX_ERROR = 10;
            State_AUTHX_FAIL = 11;
            State_TIMEOUT = 12;
            State_STARTUPX_FILEX_LOCKED = 13;
            State_SETX_STARTUPX_FILEX_FAIL = 14;
            State_UNKNOWNX_FAILURE = 15;
         };
         State state = 3 [json_name = "state"];
         uint32 operate_progress = 4 [json_name = "operate-progress"];
         string start_time = 5 [json_name = "start-time"];
         uint32 last_time = 6 [json_name = "last-time"];
         string filename = 7 [json_name = "filename"];
         enum ServiceType {
            ServiceType_COMMON = 0;
            ServiceType_CFG = 4;
         };
         ServiceType service_type = 8 [json_name = "service-type"];
      }
      repeated BackupAndRecoveryState backup_and_recovery_state = 1 [json_name = "backup-and-recovery-state"];
   }
   BackupAndRecoveryStates backup_and_recovery_states = 26 [json_name = "backup-and-recovery-states"];
   message ConfigurationBackupToFile {
      uint32 interval_time = 1 [json_name = "interval-time"];
      string start_time = 2 [json_name = "start-time"];
   }
   ConfigurationBackupToFile configuration_backup_to_file = 27 [json_name = "configuration-backup-to-file"];
   message ConfigChange {
      uint32 flow_id = 1 [json_name = "flow-id"];
      string baseline_time = 2 [json_name = "baseline-time"];
   }
   ConfigChange config_change = 28 [json_name = "config-change"];
   message LockByUsername {
      string lock_username = 1 [json_name = "lock-username"];
      string lock_time = 2 [json_name = "lock-time"];
      uint32 identifier = 3 [json_name = "identifier"];
      string unlock_username = 4 [json_name = "unlock-username"];
      string unlock_time = 5 [json_name = "unlock-time"];
   }
   LockByUsername lock_by_username = 29 [json_name = "lock-by-username"];
}

