syntax = "proto3";
// Automatically generated by ProtoYang
// ProtoYang-version 1
// module huawei-bras-chasten
// revision 2020-04-13
// namespace urn:huawei:yang:huawei-bras-chasten

package huawei_bras_chasten;

message BrasChasten {
   message Ipv6AllSlots {
      uint32 check_period = 1 [json_name = "check-period"];
      uint32 restrain_period = 2 [json_name = "restrain-period"];
      uint32 authen_packets = 3 [json_name = "authen-packets"];
      uint32 request_packets = 4 [json_name = "request-packets"];
   }
   Ipv6AllSlots ipv6_all_slots = 1 [json_name = "ipv6-all-slots"];
   message Ipv6Slots {
      message Ipv6Slot {
         string slot_id = 1 [json_name = "slot-id"];
         uint32 authen_packets = 2 [json_name = "authen-packets"];
         uint32 request_packets = 3 [json_name = "request-packets"];
         uint32 check_period = 4 [json_name = "check-period"];
         uint32 restrain_period = 5 [json_name = "restrain-period"];
      }
      repeated Ipv6Slot ipv6_slot = 1 [json_name = "ipv6-slot"];
   }
   Ipv6Slots ipv6_slots = 2 [json_name = "ipv6-slots"];
   message Ipv6Users {
      message Ipv6User {
         string mac_address = 1 [json_name = "mac-address"];
         uint32 pe_vlan = 2 [json_name = "pe-vlan"];
         uint32 ce_vlan = 3 [json_name = "ce-vlan"];
         string slot_id = 4 [json_name = "slot-id"];
         string if_name = 5 [json_name = "if-name"];
         enum UserState {
            INVALID_ENUM_VALUE_UserState = 0;
            UserState_RESTRAIN = 1;
            UserState_CHECK = 2;
         };
         UserState user_state = 6 [json_name = "user-state"];
         string receive_packet_time = 7 [json_name = "receive-packet-time"];
         uint32 receive_packet_count = 8 [json_name = "receive-packet-count"];
         uint32 receive_authen_count = 9 [json_name = "receive-authen-count"];
         uint32 total_restrain_packet = 10 [json_name = "total-restrain-packet"];
         uint32 total_pass_packet = 11 [json_name = "total-pass-packet"];
      }
      repeated Ipv6User ipv6_user = 1 [json_name = "ipv6-user"];
   }
   Ipv6Users ipv6_users = 3 [json_name = "ipv6-users"];
   message Ipv4AllSlots {
      uint32 check_period = 1 [json_name = "check-period"];
      uint32 restrain_period = 2 [json_name = "restrain-period"];
      uint32 authen_packets = 3 [json_name = "authen-packets"];
      uint32 request_packets = 4 [json_name = "request-packets"];
   }
   Ipv4AllSlots ipv4_all_slots = 4 [json_name = "ipv4-all-slots"];
   message Ipv4Slots {
      message Ipv4Slot {
         string slot_id = 1 [json_name = "slot-id"];
         uint32 authen_packets = 2 [json_name = "authen-packets"];
         uint32 request_packets = 3 [json_name = "request-packets"];
         uint32 check_period = 4 [json_name = "check-period"];
         uint32 restrain_period = 5 [json_name = "restrain-period"];
      }
      repeated Ipv4Slot ipv4_slot = 1 [json_name = "ipv4-slot"];
   }
   Ipv4Slots ipv4_slots = 5 [json_name = "ipv4-slots"];
   message Ipv4Users {
      message Ipv4User {
         string mac_address = 1 [json_name = "mac-address"];
         uint32 pe_vlan = 2 [json_name = "pe-vlan"];
         uint32 ce_vlan = 3 [json_name = "ce-vlan"];
         string slot_id = 4 [json_name = "slot-id"];
         string if_name = 5 [json_name = "if-name"];
         enum UserState {
            INVALID_ENUM_VALUE_UserState = 0;
            UserState_RESTRAIN = 1;
            UserState_CHECK = 2;
         };
         UserState user_state = 6 [json_name = "user-state"];
         string receive_packet_time = 7 [json_name = "receive-packet-time"];
         uint32 receive_packet_count = 8 [json_name = "receive-packet-count"];
         uint32 receive_authen_count = 9 [json_name = "receive-authen-count"];
         uint32 total_restrain_packet = 10 [json_name = "total-restrain-packet"];
         uint32 total_pass_packet = 11 [json_name = "total-pass-packet"];
      }
      repeated Ipv4User ipv4_user = 1 [json_name = "ipv4-user"];
   }
   Ipv4Users ipv4_users = 6 [json_name = "ipv4-users"];
}

