syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-08-25 17:55:50
// ProtoYang-version 1
// module huawei-clocksync-ptpadapt
// revision 2020-03-19
// revision 2020-03-14
// revision 2020-03-04
// revision 2019-12-25
// revision 2019-05-06
// namespace urn:huawei:yang:huawei-clocksync-ptpadapt

package huawei_clocksync_ptpadapt;

message ClocksyncPtpadapt {
   message PtpaCommon {
      bool enable = 1 [json_name = "enable"];
      enum DeviceType {
         INVALID_ENUM_VALUE_DeviceType = 0;
         DeviceType_CLIENT = 2;
         DeviceType_SERVER = 3;
         DeviceType_SERVERX_ANDX_CLIENT = 4;
         DeviceType_NONE = 99;
      };
      DeviceType device_type = 2 [json_name = "device-type"];
      enum NegoMode {
         INVALID_ENUM_VALUE_NegoMode = 0;
         NegoMode_ONEX_WAY = 1;
         NegoMode_TWOX_WAY = 2;
         NegoMode_ACR = 3;
         NegoMode_ATR = 4;
         NegoMode_NONE = 99;
      };
      NegoMode nego_mode = 3 [json_name = "nego-mode"];
      int32 dscp = 4 [json_name = "dscp"];
      uint32 domain = 5 [json_name = "domain"];
      string local_ip = 6 [json_name = "local-ip"];
      int32 req_ann_interval = 7 [json_name = "req-ann-interval"];
      int32 req_sync_interval = 8 [json_name = "req-sync-interval"];
      int32 req_dly_resp_interval = 9 [json_name = "req-dly-resp-interval"];
      int32 ann_recv_timeout = 10 [json_name = "ann-recv-timeout"];
      int32 ann_duration = 11 [json_name = "ann-duration"];
      int32 sync_duration = 12 [json_name = "sync-duration"];
      int32 dly_resp_duration = 13 [json_name = "dly-resp-duration"];
      enum TraceSource {
         TraceSource_LOCAL = 0;
         TraceSource_SERVER1 = 1;
         TraceSource_SERVER2 = 2;
         TraceSource_VPORT1 = 3;
         TraceSource_VPORT2 = 4;
      };
      TraceSource trace_source = 14 [json_name = "trace-source"];
      enum FreqProfile {
         FreqProfile_PART = 0;
         FreqProfile_ALL = 1;
         FreqProfile_TIMEPROFILE = 2;
      };
      FreqProfile freq_profile = 15 [json_name = "freq-profile"];
      string vpn_instance = 16 [json_name = "vpn-instance"];
      bool hop_by_hop_mode = 17 [json_name = "hop-by-hop-mode"];
   }
   PtpaCommon ptpa_common = 1 [json_name = "ptpa-common"];
   message PtpaServers {
      message PtpaServer {
         enum ServerIndex {
            INVALID_ENUM_VALUE_ServerIndex = 0;
            ServerIndex_SERVER1 = 1;
            ServerIndex_SERVER2 = 2;
         };
         ServerIndex server_index = 1 [json_name = "server-index"];
         string server_ip = 2 [json_name = "server-ip"];
         bool is_cur_trace_source = 3 [json_name = "is-cur-trace-source"];
         string clock_id = 4 [json_name = "clock-id"];
         enum NegoState {
            NegoState_INIT = 0;
            NegoState_SUCCESS = 1;
            NegoState_ERROR = 2;
            NegoState_NONE = 3;
         };
         NegoState nego_state = 5 [json_name = "nego-state"];
         enum ErrorReason {
            INVALID_ENUM_VALUE_ErrorReason = 0;
            ErrorReason_DELETEX_LINK = 2;
            ErrorReason_ANNOUNCEX_TIMEOUT = 3;
            ErrorReason_ANNOUNCEX_NEGOX_TIMEOUT = 4;
            ErrorReason_ANNOUNCEX_NEGOX_DENY = 5;
            ErrorReason_SYNCX_NEGOX_FAILED = 6;
            ErrorReason_SYNCX_NEGOX_DENY = 7;
            ErrorReason_DELAYX_RESPX_NEGOX_TIMEOUT = 8;
            ErrorReason_DELAYX_RESPX_NEGOX_DENY = 9;
            ErrorReason_IFX_CANNOTX_SUPPORTX_PTP = 10;
            ErrorReason_SERVICEX_MODEX_NOTSUPPORTX_PTP = 11;
            ErrorReason_ROUTEX_UNREACH = 12;
            ErrorReason_BMCX_FAILED = 13;
            ErrorReason_MASTERX_SYNCHRONIZATIONX_FAULT = 14;
            ErrorReason_NONE = 15;
         };
         ErrorReason error_reason = 6 [json_name = "error-reason"];
         message BmcAttr {
            uint32 priority1 = 1 [json_name = "priority1"];
            uint32 priority2 = 2 [json_name = "priority2"];
            uint32 clock_class = 3 [json_name = "clock-class"];
            uint32 clock_accuracy = 4 [json_name = "clock-accuracy"];
            enum TimeSource {
               INVALID_ENUM_VALUE_TimeSource = 0;
               TimeSource_ATOMICCLOCK = 16;
               TimeSource_GPS = 32;
               TimeSource_TERRESTRIALRADIO = 48;
               TimeSource_PTP = 64;
               TimeSource_NTP = 80;
               TimeSource_HANDSET = 96;
               TimeSource_OTHER = 144;
               TimeSource_INTERNALOSCILLATOR = 160;
            };
            TimeSource time_source = 5 [json_name = "time-source"];
            bool ptp_sync_uncertain = 6 [json_name = "ptp-sync-uncertain"];
         }
         BmcAttr bmc_attr = 7 [json_name = "bmc-attr"];
         message BmcaAttr {
            enum ServerSsm {
               ServerSsm_UNK = 0;
               ServerSsm_PRC = 2;
               ServerSsm_SSUA = 4;
               ServerSsm_SSUB = 8;
               ServerSsm_SEC = 11;
               ServerSsm_DNU = 15;
               ServerSsm_NONE = 16;
            };
            ServerSsm server_ssm = 1 [json_name = "server-ssm"];
            uint32 server_priority = 2 [json_name = "server-priority"];
            enum ServerPtsf {
               ServerPtsf_ABNORMAL = 0;
               ServerPtsf_NORMAL = 1;
            };
            ServerPtsf server_ptsf = 3 [json_name = "server-ptsf"];
         }
         BmcaAttr bmca_attr = 8 [json_name = "bmca-attr"];
         string parent_clockid = 9 [json_name = "parent-clockid"];
         uint32 parent_port_num = 10 [json_name = "parent-port-num"];
         bool two_step_flag = 11 [json_name = "two-step-flag"];
         uint32 steps_removed = 12 [json_name = "steps-removed"];
         uint32 time_scale = 13 [json_name = "time-scale"];
         uint32 offset_scaled = 14 [json_name = "offset-scaled"];
         bool time_traceable = 15 [json_name = "time-traceable"];
         bool frequency_traceable = 16 [json_name = "frequency-traceable"];
         bool loss_announce = 17 [json_name = "loss-announce"];
         bool loss_sync = 18 [json_name = "loss-sync"];
         bool loss_followup = 19 [json_name = "loss-followup"];
         bool loss_resp = 20 [json_name = "loss-resp"];
         message ServerPktStatistics {
            uint32 rev_signal = 1 [json_name = "rev-signal"];
            uint32 rev_announce = 2 [json_name = "rev-announce"];
            uint32 rev_sync = 3 [json_name = "rev-sync"];
            uint32 rev_delay_resp = 4 [json_name = "rev-delay-resp"];
            uint32 rev_followup = 5 [json_name = "rev-followup"];
            uint32 send_signal = 6 [json_name = "send-signal"];
            uint32 send_delay_req = 7 [json_name = "send-delay-req"];
            uint32 discard_signal = 8 [json_name = "discard-signal"];
            uint32 discard_announce = 9 [json_name = "discard-announce"];
            uint32 discard_sync = 10 [json_name = "discard-sync"];
            uint32 discard_delay_resp = 11 [json_name = "discard-delay-resp"];
            uint32 discard_followup = 12 [json_name = "discard-followup"];
         }
         ServerPktStatistics server_pkt_statistics = 21 [json_name = "server-pkt-statistics"];
         message AsymCorrection {
            enum AsymCorrFlag {
               AsymCorrFlag_NEGATIVE = 0;
               AsymCorrFlag_POSITIVE = 1;
            };
            AsymCorrFlag asym_corr_flag = 1 [json_name = "asym-corr-flag"];
            uint32 asym_corr_value = 2 [json_name = "asym-corr-value"];
            int32 correction = 3 [json_name = "correction"];
         }
         AsymCorrection asym_correction = 22 [json_name = "asym-correction"];
         bool ptsf_unusable = 23 [json_name = "ptsf-unusable"];
      }
      repeated PtpaServer ptpa_server = 1 [json_name = "ptpa-server"];
   }
   PtpaServers ptpa_servers = 2 [json_name = "ptpa-servers"];
   message PtpaClients {
      message PtpaClient {
         uint32 client_id = 1 [json_name = "client-id"];
         string client_ip = 2 [json_name = "client-ip"];
         string clockid = 3 [json_name = "clockid"];
         enum NegoMode {
            INVALID_ENUM_VALUE_NegoMode = 0;
            NegoMode_ONEX_WAY = 1;
            NegoMode_TWOX_WAY = 2;
            NegoMode_ACR = 3;
            NegoMode_ATR = 4;
            NegoMode_NONE = 99;
         };
         NegoMode nego_mode = 4 [json_name = "nego-mode"];
         string ann_interval = 5 [json_name = "ann-interval"];
         string sync_interval = 6 [json_name = "sync-interval"];
         string dly_resp_interval = 7 [json_name = "dly-resp-interval"];
         int32 ann_duration = 8 [json_name = "ann-duration"];
         int32 sync_duration = 9 [json_name = "sync-duration"];
         int32 dly_resp_duration = 10 [json_name = "dly-resp-duration"];
         message ClientPktStatistics {
            uint32 rev_signal = 1 [json_name = "rev-signal"];
            uint32 rev_delay_req = 2 [json_name = "rev-delay-req"];
            uint32 send_signal = 3 [json_name = "send-signal"];
            uint32 send_announce = 4 [json_name = "send-announce"];
            uint32 send_sync = 5 [json_name = "send-sync"];
            uint32 send_delay_resp = 6 [json_name = "send-delay-resp"];
            uint32 discard_signal = 7 [json_name = "discard-signal"];
            uint32 discard_delay_req = 8 [json_name = "discard-delay-req"];
         }
         ClientPktStatistics client_pkt_statistics = 11 [json_name = "client-pkt-statistics"];
      }
      repeated PtpaClient ptpa_client = 1 [json_name = "ptpa-client"];
   }
   PtpaClients ptpa_clients = 3 [json_name = "ptpa-clients"];
   message PtpaServerAndClient {
      message Vports {
         message Vport {
            uint32 port_id = 1 [json_name = "port-id"];
            string port_ip = 2 [json_name = "port-ip"];
            string vpn_instance = 3 [json_name = "vpn-instance"];
            string remote_port_ip = 4 [json_name = "remote-port-ip"];
            int32 asym_correction_value = 5 [json_name = "asym-correction-value"];
            uint32 local_priority = 6 [json_name = "local-priority"];
            enum BmcaPortState {
               BmcaPortState_MASTER = 0;
               BmcaPortState_SLAVE = 1;
               BmcaPortState_PASSIVE = 2;
               BmcaPortState_LISTENING = 3;
            };
            BmcaPortState bmca_port_state = 7 [json_name = "bmca-port-state"];
            enum NegoState {
               NegoState_INIT = 0;
               NegoState_SUCCESS = 1;
               NegoState_ERROR = 2;
               NegoState_NONE = 3;
            };
            NegoState nego_state = 8 [json_name = "nego-state"];
            uint32 clock_class = 9 [json_name = "clock-class"];
            uint32 clock_accuracy = 10 [json_name = "clock-accuracy"];
            uint32 priority2 = 11 [json_name = "priority2"];
         }
         repeated Vport vport = 1 [json_name = "vport"];
      }
      Vports vports = 1 [json_name = "vports"];
      message MasterVports {
         message MasterVport {
            uint32 port_id = 1 [json_name = "port-id"];
            string port_ip = 2 [json_name = "port-ip"];
            string vpn_instance = 3 [json_name = "vpn-instance"];
            uint32 client_number = 4 [json_name = "client-number"];
         }
         repeated MasterVport master_vport = 1 [json_name = "master-vport"];
      }
      MasterVports master_vports = 2 [json_name = "master-vports"];
   }
   PtpaServerAndClient ptpa_server_and_client = 4 [json_name = "ptpa-server-and-client"];
   message VirtualPortManagement {
      message AdaptiveVirtualPorts {
         message AdaptiveVirtualPort {
            uint32 port_id = 1 [json_name = "port-id"];
            string port_ip = 2 [json_name = "port-ip"];
            string vpn_instance = 3 [json_name = "vpn-instance"];
            string remote_port_ip = 4 [json_name = "remote-port-ip"];
            int32 asym_correction_value = 5 [json_name = "asym-correction-value"];
            uint32 local_priority = 6 [json_name = "local-priority"];
            enum BmcaPortState {
               BmcaPortState_MASTER = 0;
               BmcaPortState_SLAVE = 1;
               BmcaPortState_PASSIVE = 2;
               BmcaPortState_LISTENING = 3;
            };
            BmcaPortState bmca_port_state = 7 [json_name = "bmca-port-state"];
            enum NegoState {
               NegoState_INIT = 0;
               NegoState_SUCCESS = 1;
               NegoState_ERROR = 2;
               NegoState_NONE = 3;
            };
            NegoState nego_state = 8 [json_name = "nego-state"];
            uint32 clock_class = 9 [json_name = "clock-class"];
            uint32 clock_accuracy = 10 [json_name = "clock-accuracy"];
            uint32 priority2 = 11 [json_name = "priority2"];
         }
         repeated AdaptiveVirtualPort adaptive_virtual_port = 1 [json_name = "adaptive-virtual-port"];
      }
      AdaptiveVirtualPorts adaptive_virtual_ports = 1 [json_name = "adaptive-virtual-ports"];
      message ServerVirtualPorts {
         message ServerVirtualPort {
            uint32 port_id = 1 [json_name = "port-id"];
            string port_ip = 2 [json_name = "port-ip"];
            string vpn_instance = 3 [json_name = "vpn-instance"];
            uint32 client_number = 4 [json_name = "client-number"];
            message ClientInfos {
               message ClientInfo {
                  int32 client_id = 1 [json_name = "client-id"];
                  string client_ip = 2 [json_name = "client-ip"];
                  string clock_id = 3 [json_name = "clock-id"];
                  enum NegoMode {
                     INVALID_ENUM_VALUE_NegoMode = 0;
                     NegoMode_ONEX_WAY = 1;
                     NegoMode_TWOX_WAY = 2;
                     NegoMode_ACR = 3;
                     NegoMode_ATR = 4;
                     NegoMode_NONE = 99;
                  };
                  NegoMode nego_mode = 4 [json_name = "nego-mode"];
                  string ann_interval = 5 [json_name = "ann-interval"];
                  string sync_interval = 6 [json_name = "sync-interval"];
                  string dly_resp_interval = 7 [json_name = "dly-resp-interval"];
                  int32 ann_duration = 8 [json_name = "ann-duration"];
                  int32 sync_duration = 9 [json_name = "sync-duration"];
                  int32 dly_resp_duration = 10 [json_name = "dly-resp-duration"];
               }
               repeated ClientInfo client_info = 1 [json_name = "client-info"];
            }
            ClientInfos client_infos = 5 [json_name = "client-infos"];
         }
         repeated ServerVirtualPort server_virtual_port = 1 [json_name = "server-virtual-port"];
      }
      ServerVirtualPorts server_virtual_ports = 2 [json_name = "server-virtual-ports"];
   }
   VirtualPortManagement virtual_port_management = 5 [json_name = "virtual-port-management"];
}

