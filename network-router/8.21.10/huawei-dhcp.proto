syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2022-04-26 14:14:16
// ProtoYang-version 1
// module huawei-dhcp
// revision 2022-03-21
// revision 2022-01-06
// revision 2020-12-24
// revision 2020-07-02
// revision 2020-04-10
// revision 2020-03-03
// namespace urn:huawei:yang:huawei-dhcp

package huawei_dhcp;

message Dhcp {
   message Common {
      message Global {
         bool enable = 1 [json_name = "enable"];
         bool ignore_hostname = 2 [json_name = "ignore-hostname"];
         bool rate_limit_enable = 3 [json_name = "rate-limit-enable"];
         uint32 rate_limit = 4 [json_name = "rate-limit"];
         uint32 aging_time = 5 [json_name = "aging-time"];
         bool check_magic_cookie = 6 [json_name = "check-magic-cookie"];
         bool check_udp_checksum = 7 [json_name = "check-udp-checksum"];
         bool udp_checksum = 8 [json_name = "udp-checksum"];
         bool broadcast_suppress = 9 [json_name = "broadcast-suppress"];
      }
      Global global = 1 [json_name = "global"];
      message SessionCar {
         bool enable = 1 [json_name = "enable"];
         uint32 cir_value = 2 [json_name = "cir-value"];
         uint32 cbs_value = 3 [json_name = "cbs-value"];
         uint32 pir_value = 4 [json_name = "pir-value"];
         uint32 pbs_value = 5 [json_name = "pbs-value"];
      }
      SessionCar session_car = 2 [json_name = "session-car"];
      message Chasten {
         bool enable = 1 [json_name = "enable"];
         uint32 request_packets = 2 [json_name = "request-packets"];
         uint32 check_period = 3 [json_name = "check-period"];
         uint32 restrain_period = 4 [json_name = "restrain-period"];
      }
      Chasten chasten = 3 [json_name = "chasten"];
      message Option82 {
         message GlobalFormats {
            message GlobalFormat {
               enum SubOptionType {
                  INVALID_ENUM_VALUE_SubOptionType = 0;
                  SubOptionType_CIRCUITX_ID = 1;
                  SubOptionType_REMOTEX_ID = 2;
                  SubOptionType_CIRCUITX_REMOTE = 3;
               };
               SubOptionType sub_option_type = 1 [json_name = "sub-option-type"];
               enum Option82Format {
                  INVALID_ENUM_VALUE_Option82Format = 0;
                  Option82Format_COMMON = 1;
                  Option82Format_EXTEND = 2;
                  Option82Format_USERX_DEFINED = 3;
                  Option82Format_DEFAULT = 4;
                  Option82Format_TYPE1 = 5;
                  Option82Format_TYPE2 = 6;
                  Option82Format_SELFX_DEFINE = 7;
                  Option82Format_DEFAULTX_EXTRA = 8;
                  Option82Format_CNX_TELECOM = 9;
                  Option82Format_SELFX_DEFINEX_EXTRA = 10;
                  Option82Format_INTRACOMX_VXLAN = 11;
                  Option82Format_CNX_TELECOMX_INHERIT = 12;
               };
               Option82Format option82_format = 2 [json_name = "option82-format"];
               string user_defind_text = 3 [json_name = "user-defind-text"];
            }
            repeated GlobalFormat global_format = 1 [json_name = "global-format"];
         }
         GlobalFormats global_formats = 1 [json_name = "global-formats"];
         message GlobalVlanFormats {
            message GlobalVlanFormat {
               uint32 vlan_id = 1 [json_name = "vlan-id"];
               uint32 cevlan_id = 2 [json_name = "cevlan-id"];
               enum SubOptionType {
                  INVALID_ENUM_VALUE_SubOptionType = 0;
                  SubOptionType_CIRCUITX_ID = 1;
                  SubOptionType_REMOTEX_ID = 2;
                  SubOptionType_CIRCUITX_REMOTE = 3;
               };
               SubOptionType sub_option_type = 3 [json_name = "sub-option-type"];
               enum Option82Format {
                  INVALID_ENUM_VALUE_Option82Format = 0;
                  Option82Format_COMMON = 1;
                  Option82Format_EXTEND = 2;
                  Option82Format_USERX_DEFINED = 3;
                  Option82Format_DEFAULT = 4;
                  Option82Format_TYPE1 = 5;
                  Option82Format_TYPE2 = 6;
                  Option82Format_SELFX_DEFINE = 7;
                  Option82Format_DEFAULTX_EXTRA = 8;
                  Option82Format_CNX_TELECOM = 9;
                  Option82Format_SELFX_DEFINEX_EXTRA = 10;
                  Option82Format_INTRACOMX_VXLAN = 11;
                  Option82Format_CNX_TELECOMX_INHERIT = 12;
               };
               Option82Format option82_format = 4 [json_name = "option82-format"];
               string user_defind_text = 5 [json_name = "user-defind-text"];
            }
            repeated GlobalVlanFormat global_vlan_format = 1 [json_name = "global-vlan-format"];
         }
         GlobalVlanFormats global_vlan_formats = 2 [json_name = "global-vlan-formats"];
         message VendorSubOptions {
            message VendorSubOption {
               uint32 sub_option_num = 1 [json_name = "sub-option-num"];
               string user_define_text = 3 [json_name = "user-define-text"];
               repeated string ip_addresses = 4 [json_name = "ip-addresses"];
               uint32 sub_option_index = 5 [json_name = "sub-option-index"];
               message SubOptionFormat_AsciiFormat {
                  string ascii_string = 1 [json_name = "ascii-string"];
               }
               message SubOptionFormat_HexFormat {
                  string hex_string = 1 [json_name = "hex-string"];
               }
               message SubOptionFormat_SysnameFormat {
                  enum Sysname {
                     INVALID_ENUM_VALUE_Sysname = 0;
                     Sysname_SYSNAME = 4;
                  };
                  Sysname sysname = 1 [json_name = "sysname"];
               }
               message SubOptionFormat_IpFormat {
                  repeated string ip_addresses = 1 [json_name = "ip-addresses"];
               }
               oneof SubOptionFormat {
                  SubOptionFormat_AsciiFormat sub_option_format_ascii_format = 6 [json_name = "ascii-format"];
                  SubOptionFormat_HexFormat sub_option_format_hex_format = 7 [json_name = "hex-format"];
                  SubOptionFormat_SysnameFormat sub_option_format_sysname_format = 8 [json_name = "sysname-format"];
                  SubOptionFormat_IpFormat sub_option_format_ip_format = 9 [json_name = "ip-format"];
               }
            }
            repeated VendorSubOption vendor_sub_option = 1 [json_name = "vendor-sub-option"];
         }
         VendorSubOptions vendor_sub_options = 3 [json_name = "vendor-sub-options"];
         message Encapsulation {
            enum Suboption {
               Suboption_CIRCUITX_ID = 0;
               Suboption_REMOTEX_ID = 1;
               Suboption_SUBSCRIBERX_ID = 2;
               Suboption_VENDORX_SPECIFICX_ID = 3;
            };
            repeated Suboption suboption = 1 [json_name = "suboption"];
         }
         Encapsulation encapsulation = 4 [json_name = "encapsulation"];
         message SubscriberId {
            string ascii_text = 1 [json_name = "ascii-text"];
            string hex_text = 2 [json_name = "hex-text"];
            message SubscriberIdFormat_AsciiFormat {
               string ascii_text = 1 [json_name = "ascii-text"];
            }
            message SubscriberIdFormat_HexFormat {
               string hex_text = 1 [json_name = "hex-text"];
            }
            oneof SubscriberIdFormat {
               SubscriberIdFormat_AsciiFormat subscriber_id_format_ascii_format = 3 [json_name = "ascii-format"];
               SubscriberIdFormat_HexFormat subscriber_id_format_hex_format = 4 [json_name = "hex-format"];
            }
         }
         SubscriberId subscriber_id = 5 [json_name = "subscriber-id"];
      }
      Option82 option82 = 4 [json_name = "option82"];
      message Openflow {
         bool openflow_enable = 1 [json_name = "openflow-enable"];
      }
      Openflow openflow = 5 [json_name = "openflow"];
      message AntiAttackOption {
         bool enable = 1 [json_name = "enable"];
         message Options {
            message Option {
               uint32 option_start = 1 [json_name = "option-start"];
               uint32 option_end = 2 [json_name = "option-end"];
            }
            repeated Option option = 1 [json_name = "option"];
         }
         Options options = 2 [json_name = "options"];
      }
      AntiAttackOption anti_attack_option = 6 [json_name = "anti-attack-option"];
      message GlobalPacketStatistics {
         uint32 total_packets_receive = 1 [json_name = "total-packets-receive"];
         uint32 discarded_packets_receive = 2 [json_name = "discarded-packets-receive"];
         uint32 bootp_request_packets_receive = 3 [json_name = "bootp-request-packets-receive"];
         uint32 bootp_reply_packets_receive = 4 [json_name = "bootp-reply-packets-receive"];
         uint32 discover_packets_receive = 5 [json_name = "discover-packets-receive"];
         uint32 offer_packets_receive = 6 [json_name = "offer-packets-receive"];
         uint32 request_packets_receive = 7 [json_name = "request-packets-receive"];
         uint32 ack_packets_receive = 8 [json_name = "ack-packets-receive"];
         uint32 release_packets_receive = 9 [json_name = "release-packets-receive"];
         uint32 nak_packets_receive = 10 [json_name = "nak-packets-receive"];
         uint32 decline_packets_receive = 11 [json_name = "decline-packets-receive"];
         uint32 inform_packets_receive = 12 [json_name = "inform-packets-receive"];
         uint32 total_packets_send = 13 [json_name = "total-packets-send"];
         uint32 total_discarded_packets = 14 [json_name = "total-discarded-packets"];
         uint32 memory_exhaust_discarded_packets = 15 [json_name = "memory-exhaust-discarded-packets"];
         uint32 rate_limit_discarded_packets = 16 [json_name = "rate-limit-discarded-packets"];
         uint32 bad_packet_length_discarded_packets = 17 [json_name = "bad-packet-length-discarded-packets"];
         uint32 hops_exceed_length_discarded_packets = 18 [json_name = "hops-exceed-length-discarded-packets"];
         uint32 bad_magic_cookie_discarded_packets = 19 [json_name = "bad-magic-cookie-discarded-packets"];
         uint32 duplicate_option_discarded_packets = 20 [json_name = "duplicate-option-discarded-packets"];
         uint32 bad_option_length_discarded_packets = 21 [json_name = "bad-option-length-discarded-packets"];
         uint32 bad_chaddr_discarded_packets = 22 [json_name = "bad-chaddr-discarded-packets"];
         uint32 bad_request_discarded_packets = 23 [json_name = "bad-request-discarded-packets"];
         uint32 bad_reply_discarded_packets = 24 [json_name = "bad-reply-discarded-packets"];
         uint32 unknown_type_discarded_packets = 25 [json_name = "unknown-type-discarded-packets"];
         uint32 bad_broadcast_flag_discarded_packets = 26 [json_name = "bad-broadcast-flag-discarded-packets"];
         uint32 bad_mac_type_discarded_packets = 27 [json_name = "bad-mac-type-discarded-packets"];
         uint32 bad_mac_length_discarded_packets = 28 [json_name = "bad-mac-length-discarded-packets"];
         uint32 bad_source_mac_discarded_packets = 29 [json_name = "bad-source-mac-discarded-packets"];
         uint32 invalid_option82_discarded_packets = 30 [json_name = "invalid-option82-discarded-packets"];
         uint32 getting_info_failed_discarded_packets = 31 [json_name = "getting-info-failed-discarded-packets"];
         uint32 bad_info_discarded_packets = 32 [json_name = "bad-info-discarded-packets"];
         uint32 other_error_discarded_packets = 33 [json_name = "other-error-discarded-packets"];
         uint32 unknown_message_type_discarded_packets = 34 [json_name = "unknown-message-type-discarded-packets"];
         uint32 max_user_limit_discarded_packets = 35 [json_name = "max-user-limit-discarded-packets"];
         uint32 add_binding_table_failed_discarded_packets = 36 [json_name = "add-binding-table-failed-discarded-packets"];
         uint32 client_transfered_discarded_packets = 37 [json_name = "client-transfered-discarded-packets"];
         uint32 destination_port_equals_source_port_discarded_packets = 38 [json_name = "destination-port-equals-source-port-discarded-packets"];
         uint32 lease_query_discarded_packets = 39 [json_name = "lease-query-discarded-packets"];
         uint32 same_mac_discarded_packets = 40 [json_name = "same-mac-discarded-packets"];
      }
      GlobalPacketStatistics global_packet_statistics = 7 [json_name = "global-packet-statistics"];
      message IpsecPeers {
         message IpsecPeer {
            string peer_address = 1 [json_name = "peer-address"];
            string vpn_name = 2 [json_name = "vpn-name"];
            string sa_name = 3 [json_name = "sa-name"];
         }
         repeated IpsecPeer ipsec_peer = 1 [json_name = "ipsec-peer"];
      }
      IpsecPeers ipsec_peers = 8 [json_name = "ipsec-peers"];
   }
   Common common = 1 [json_name = "common"];
   message Relay {
      message Global {
         uint32 user_detect_interval = 1 [json_name = "user-detect-interval"];
         bool user_autosave_flag = 2 [json_name = "user-autosave-flag"];
         uint32 user_store_interval = 3 [json_name = "user-store-interval"];
         bool distribute_flag = 4 [json_name = "distribute-flag"];
         bool opt82_inner_vlan_insert_flag = 5 [json_name = "opt82-inner-vlan-insert-flag"];
         message Option {
            uint32 option_code = 1 [json_name = "option-code"];
            uint32 sub_option = 2 [json_name = "sub-option"];
         }
         Option option = 6 [json_name = "option"];
         message SourceIp {
            string source_ip_address = 1 [json_name = "source-ip-address"];
            string vpn_name = 2 [json_name = "vpn-name"];
         }
         SourceIp source_ip = 7 [json_name = "source-ip"];
         message RouteIsolationVpns {
            message RouteIsolationVpn {
               string source_address = 1 [json_name = "source-address"];
               string vpn_name = 2 [json_name = "vpn-name"];
               string if_name = 3 [json_name = "if-name"];
            }
            repeated RouteIsolationVpn route_isolation_vpn = 1 [json_name = "route-isolation-vpn"];
         }
         RouteIsolationVpns route_isolation_vpns = 8 [json_name = "route-isolation-vpns"];
         message RelayStatistics {
            uint32 packets_receive_from_client = 1 [json_name = "packets-receive-from-client"];
            uint32 discover_packets_receive = 2 [json_name = "discover-packets-receive"];
            uint32 request_packets_receive = 3 [json_name = "request-packets-receive"];
            uint32 release_packets_receive = 4 [json_name = "release-packets-receive"];
            uint32 inform_packets_receive = 5 [json_name = "inform-packets-receive"];
            uint32 decline_packets_receive = 6 [json_name = "decline-packets-receive"];
            uint32 init_request_packets_receive = 7 [json_name = "init-request-packets-receive"];
            uint32 select_request_packets_receive = 8 [json_name = "select-request-packets-receive"];
            uint32 renew_request_packets_receive = 9 [json_name = "renew-request-packets-receive"];
            uint32 rebind_request_packets_receive = 10 [json_name = "rebind-request-packets-receive"];
            uint32 packets_sent_to_clients = 11 [json_name = "packets-sent-to-clients"];
            uint32 unicast_packets_sent_to_clients = 12 [json_name = "unicast-packets-sent-to-clients"];
            uint32 broadcast_packets_sent_to_clients = 13 [json_name = "broadcast-packets-sent-to-clients"];
            uint32 offer_packets_sent_to_clients = 14 [json_name = "offer-packets-sent-to-clients"];
            uint32 ack_packets_sent_to_clients = 15 [json_name = "ack-packets-sent-to-clients"];
            uint32 nak_packets_sent_to_clients = 16 [json_name = "nak-packets-sent-to-clients"];
            uint32 packets_receive_from_servers = 17 [json_name = "packets-receive-from-servers"];
            uint32 offer_packets_receive = 18 [json_name = "offer-packets-receive"];
            uint32 ack_packets_receive = 19 [json_name = "ack-packets-receive"];
            uint32 nak_packets_receive = 20 [json_name = "nak-packets-receive"];
            uint32 packets_sent_to_servers = 21 [json_name = "packets-sent-to-servers"];
            uint32 discover_packets_sent = 22 [json_name = "discover-packets-sent"];
            uint32 request_packets_sent = 23 [json_name = "request-packets-sent"];
            uint32 release_packets_sent = 24 [json_name = "release-packets-sent"];
            uint32 inform_packets_sent = 25 [json_name = "inform-packets-sent"];
            uint32 decline_packets_sent = 26 [json_name = "decline-packets-sent"];
            uint32 init_request_packets_sent = 27 [json_name = "init-request-packets-sent"];
            uint32 select_request_packets_sent = 28 [json_name = "select-request-packets-sent"];
            uint32 renew_request_packets_sent = 29 [json_name = "renew-request-packets-sent"];
            uint32 rebind_request_packets_sent = 30 [json_name = "rebind-request-packets-sent"];
            uint32 bad_packets_receive = 31 [json_name = "bad-packets-receive"];
            uint32 release_packets_sent_to_servers = 32 [json_name = "release-packets-sent-to-servers"];
         }
         RelayStatistics relay_statistics = 9 [json_name = "relay-statistics"];
         bool trust_option82 = 10 [json_name = "trust-option82"];
         bool address_cycle = 11 [json_name = "address-cycle"];
         enum SetTtlType {
            INVALID_ENUM_VALUE_SetTtlType = 0;
            SetTtlType_UNVARIED = 1;
            SetTtlType_TTL = 2;
            SetTtlType_MINUSX_ONE = 3;
         };
         SetTtlType set_ttl_type = 12 [json_name = "set-ttl-type"];
         uint32 ttl_value = 13 [json_name = "ttl-value"];
         bool reply_forward_all = 14 [json_name = "reply-forward-all"];
         bool request_server_match = 15 [json_name = "request-server-match"];
         message RelayPacketStatistics {
            uint32 packets_receive_from_client = 1 [json_name = "packets-receive-from-client"];
            uint32 discover_packets_receive = 2 [json_name = "discover-packets-receive"];
            uint32 request_packets_receive = 3 [json_name = "request-packets-receive"];
            uint32 release_packets_receive = 4 [json_name = "release-packets-receive"];
            uint32 inform_packets_receive = 5 [json_name = "inform-packets-receive"];
            uint32 decline_packets_receive = 6 [json_name = "decline-packets-receive"];
            uint32 init_request_packets_receive = 7 [json_name = "init-request-packets-receive"];
            uint32 select_request_packets_receive = 8 [json_name = "select-request-packets-receive"];
            uint32 renew_request_packets_receive = 9 [json_name = "renew-request-packets-receive"];
            uint32 rebind_request_packets_receive = 10 [json_name = "rebind-request-packets-receive"];
            uint32 packets_sent_to_clients = 11 [json_name = "packets-sent-to-clients"];
            uint32 unicast_packets_sent_to_clients = 12 [json_name = "unicast-packets-sent-to-clients"];
            uint32 broadcast_packets_sent_to_clients = 13 [json_name = "broadcast-packets-sent-to-clients"];
            uint32 offer_packets_sent_to_clients = 14 [json_name = "offer-packets-sent-to-clients"];
            uint32 ack_packets_sent_to_clients = 15 [json_name = "ack-packets-sent-to-clients"];
            uint32 nak_packets_sent_to_clients = 16 [json_name = "nak-packets-sent-to-clients"];
            uint32 packets_receive_from_servers = 17 [json_name = "packets-receive-from-servers"];
            uint32 offer_packets_receive = 18 [json_name = "offer-packets-receive"];
            uint32 ack_packets_receive = 19 [json_name = "ack-packets-receive"];
            uint32 nak_packets_receive = 20 [json_name = "nak-packets-receive"];
            uint32 packets_sent_to_servers = 21 [json_name = "packets-sent-to-servers"];
            uint32 discover_packets_sent = 22 [json_name = "discover-packets-sent"];
            uint32 request_packets_sent = 23 [json_name = "request-packets-sent"];
            uint32 release_packets_sent = 24 [json_name = "release-packets-sent"];
            uint32 inform_packets_sent = 25 [json_name = "inform-packets-sent"];
            uint32 decline_packets_sent = 26 [json_name = "decline-packets-sent"];
            uint32 init_request_packets_sent = 27 [json_name = "init-request-packets-sent"];
            uint32 select_request_packets_sent = 28 [json_name = "select-request-packets-sent"];
            uint32 renew_request_packets_sent = 29 [json_name = "renew-request-packets-sent"];
            uint32 rebind_request_packets_sent = 30 [json_name = "rebind-request-packets-sent"];
            uint32 bad_packets_receive = 31 [json_name = "bad-packets-receive"];
            uint32 release_packets_sent_to_servers = 32 [json_name = "release-packets-sent-to-servers"];
            uint32 ipsec_authentication_fail = 33 [json_name = "ipsec-authentication-fail"];
         }
         RelayPacketStatistics relay_packet_statistics = 16 [json_name = "relay-packet-statistics"];
      }
      Global global = 1 [json_name = "global"];
      message ServerGroups {
         message ServerGroup {
            string server_group_name = 1 [json_name = "server-group-name"];
            string gateway = 2 [json_name = "gateway"];
            bool undo_gateway = 3 [json_name = "undo-gateway"];
            string vpn_name = 4 [json_name = "vpn-name"];
            message ServerAddresses {
               message ServerAddress {
                  string server_address = 1 [json_name = "server-address"];
                  uint32 server_index = 2 [json_name = "server-index"];
               }
               repeated ServerAddress server_address = 1 [json_name = "server-address"];
            }
            ServerAddresses server_addresses = 5 [json_name = "server-addresses"];
            message ServerGroupStatistics {
               message ServerGroupStatistic {
                  string server_address = 1 [json_name = "server-address"];
                  uint32 bad_packets_receive = 2 [json_name = "bad-packets-receive"];
                  uint32 packets_receive_from_client = 3 [json_name = "packets-receive-from-client"];
                  uint32 discover_packets_receive = 4 [json_name = "discover-packets-receive"];
                  uint32 request_packets_receive = 5 [json_name = "request-packets-receive"];
                  uint32 release_packets_receive = 6 [json_name = "release-packets-receive"];
                  uint32 inform_packets_receive = 7 [json_name = "inform-packets-receive"];
                  uint32 decline_packets_receive = 8 [json_name = "decline-packets-receive"];
                  uint32 packets_receive_from_servers = 9 [json_name = "packets-receive-from-servers"];
                  uint32 offer_packets_receive = 10 [json_name = "offer-packets-receive"];
                  uint32 ack_packets_receive = 11 [json_name = "ack-packets-receive"];
                  uint32 nak_packets_receive = 12 [json_name = "nak-packets-receive"];
                  uint32 packets_sent_to_servers = 13 [json_name = "packets-sent-to-servers"];
                  uint32 packets_sent_to_clients = 14 [json_name = "packets-sent-to-clients"];
                  uint32 unicast_packets_sent_to_clients = 15 [json_name = "unicast-packets-sent-to-clients"];
                  uint32 broadcast_packets_sent_to_clients = 16 [json_name = "broadcast-packets-sent-to-clients"];
               }
               repeated ServerGroupStatistic server_group_statistic = 1 [json_name = "server-group-statistic"];
            }
            ServerGroupStatistics server_group_statistics = 6 [json_name = "server-group-statistics"];
         }
         repeated ServerGroup server_group = 1 [json_name = "server-group"];
      }
      ServerGroups server_groups = 2 [json_name = "server-groups"];
      message ClientRecords {
         message ClientRecord {
            string if_name = 1 [json_name = "if-name"];
            uint32 pevlan_id = 2 [json_name = "pevlan-id"];
            uint32 cevlan_id = 3 [json_name = "cevlan-id"];
            string mac_address = 4 [json_name = "mac-address"];
            string option_value = 5 [json_name = "option-value"];
            uint32 table_index = 6 [json_name = "table-index"];
            string table_create_time = 7 [json_name = "table-create-time"];
            enum TableStatus {
               TableStatus_SUCCESS = 0;
               TableStatus_WAITX_OFFER = 1;
               TableStatus_WAITX_REQUEST = 2;
               TableStatus_WAITX_ACK = 3;
               TableStatus_INVALID = 4;
            };
            TableStatus table_status = 8 [json_name = "table-status"];
         }
         repeated ClientRecord client_record = 1 [json_name = "client-record"];
      }
      ClientRecords client_records = 3 [json_name = "client-records"];
      message RelayStatistics {
         uint32 bad_packets_receive = 1 [json_name = "bad-packets-receive"];
         uint32 packets_receive_from_client = 2 [json_name = "packets-receive-from-client"];
         uint32 discover_packets_receive = 3 [json_name = "discover-packets-receive"];
         uint32 request_packets_receive = 4 [json_name = "request-packets-receive"];
         uint32 inform_packets_receive = 5 [json_name = "inform-packets-receive"];
         uint32 decline_packets_receive = 6 [json_name = "decline-packets-receive"];
         uint32 release_packets_receive = 7 [json_name = "release-packets-receive"];
         uint32 packets_receive_from_servers = 8 [json_name = "packets-receive-from-servers"];
         uint32 offer_packets_receive = 9 [json_name = "offer-packets-receive"];
         uint32 ack_packets_receive = 10 [json_name = "ack-packets-receive"];
         uint32 nak_packets_receive = 11 [json_name = "nak-packets-receive"];
         uint32 packets_sent_to_servers = 12 [json_name = "packets-sent-to-servers"];
         uint32 packets_sent_to_clients = 13 [json_name = "packets-sent-to-clients"];
         uint32 unicast_packets_sent_to_clients = 14 [json_name = "unicast-packets-sent-to-clients"];
         uint32 broadcast_packets_sent_to_clients = 15 [json_name = "broadcast-packets-sent-to-clients"];
         uint32 release_packets_sent_to_servers = 16 [json_name = "release-packets-sent-to-servers"];
         uint32 send_forcerenew_packets = 17 [json_name = "send-forcerenew-packets"];
         uint32 send_esn_forcerenew_packets = 18 [json_name = "send-esn-forcerenew-packets"];
         uint32 send_noesn_forcerenew_packet = 19 [json_name = "send-noesn-forcerenew-packet"];
         uint32 send_esn_forcerenew_packets_error = 20 [json_name = "send-esn-forcerenew-packets-error"];
         uint32 send_noesn_forcerenew_packet_error = 21 [json_name = "send-noesn-forcerenew-packet-error"];
         uint32 authenticate_packets_receive = 22 [json_name = "authenticate-packets-receive"];
         uint32 authenticate_packets_receive_time = 23 [json_name = "authenticate-packets-receive-time"];
         uint32 bad_authenticate_packets_receive = 24 [json_name = "bad-authenticate-packets-receive"];
         uint32 authenticate_packets_send = 25 [json_name = "authenticate-packets-send"];
      }
      RelayStatistics relay_statistics = 4 [json_name = "relay-statistics"];
   }
   Relay relay = 2 [json_name = "relay"];
   message Server {
      message Common {
         uint32 ping_packet_nub = 1 [json_name = "ping-packet-nub"];
         uint32 ping_packet_timeout = 2 [json_name = "ping-packet-timeout"];
         bool trust_option82 = 3 [json_name = "trust-option82"];
         bool bootp_enable = 4 [json_name = "bootp-enable"];
         bool bootp_auto_enable = 5 [json_name = "bootp-auto-enable"];
         bool database_enable = 6 [json_name = "database-enable"];
         bool database_recover = 7 [json_name = "database-recover"];
         uint32 write_delay_interval = 8 [json_name = "write-delay-interval"];
         bool option60_enable = 9 [json_name = "option60-enable"];
         bool dest_ip_enable = 10 [json_name = "dest-ip-enable"];
         string lease_items_path = 11 [json_name = "lease-items-path"];
         string conflict_items_path = 12 [json_name = "conflict-items-path"];
         bool link_selection_enable = 13 [json_name = "link-selection-enable"];
         bool server_id_override_enable = 14 [json_name = "server-id-override-enable"];
         bool request_packet_all_interface_enable = 15 [json_name = "request-packet-all-interface-enable"];
         bool force_response = 16 [json_name = "force-response"];
         enum FileAuthenticationMode {
            FileAuthenticationMode_CHECK = 0;
            FileAuthenticationMode_NOX_CHECK = 1;
            FileAuthenticationMode_FORCEX_CHECK = 2;
         };
         FileAuthenticationMode file_authentication_mode = 17 [json_name = "file-authentication-mode"];
      }
      Common common = 1 [json_name = "common"];
      message GlobalIpPools {
         message GlobalIpPool {
            string ip_pool_name = 1 [json_name = "ip-pool-name"];
            string vpn_instance = 2 [json_name = "vpn-instance"];
            bool locked_flag = 3 [json_name = "locked-flag"];
            bool option_router_disable = 4 [json_name = "option-router-disable"];
            bool warning_exhaust_enable = 5 [json_name = "warning-exhaust-enable"];
            uint32 warning_threshold = 6 [json_name = "warning-threshold"];
            message Gateway {
               string ip_address = 1 [json_name = "ip-address"];
               string mask = 2 [json_name = "mask"];
            }
            Gateway gateway = 7 [json_name = "gateway"];
            message ConflictRecycle {
               bool auto_recycle_enable = 1 [json_name = "auto-recycle-enable"];
               uint32 conflict_recycle_interval = 2 [json_name = "conflict-recycle-interval"];
            }
            ConflictRecycle conflict_recycle = 8 [json_name = "conflict-recycle"];
            message LeaseTime {
               uint32 day = 1 [json_name = "day"];
               uint32 hour = 2 [json_name = "hour"];
               uint32 minute = 3 [json_name = "minute"];
               bool unlimited = 4 [json_name = "unlimited"];
            }
            LeaseTime lease_time = 9 [json_name = "lease-time"];
            message RebindTime {
               uint32 day = 1 [json_name = "day"];
               uint32 hour = 2 [json_name = "hour"];
               uint32 minute = 3 [json_name = "minute"];
            }
            RebindTime rebind_time = 10 [json_name = "rebind-time"];
            message RenewTime {
               uint32 day = 1 [json_name = "day"];
               uint32 hour = 2 [json_name = "hour"];
               uint32 minute = 3 [json_name = "minute"];
            }
            RenewTime renew_time = 11 [json_name = "renew-time"];
            message Option125 {
               uint32 enterprise_code = 1 [json_name = "enterprise-code"];
               string option_string = 2 [json_name = "option-string"];
            }
            Option125 option125 = 12 [json_name = "option125"];
            message SipServer {
               enum SipServerMode {
                  INVALID_ENUM_VALUE_SipServerMode = 0;
                  SipServerMode_IPX_MODE = 1;
                  SipServerMode_LISTX_MODE = 2;
               };
               SipServerMode sip_server_mode = 1 [json_name = "sip-server-mode"];
               message SipServerFormat_IpFormat {
                  string sip_server_ip1 = 1 [json_name = "sip-server-ip1"];
                  string sip_server_ip2 = 2 [json_name = "sip-server-ip2"];
               }
               message SipServerFormat_StringFormat {
                  string sip_server_name1 = 1 [json_name = "sip-server-name1"];
                  string sip_server_name2 = 2 [json_name = "sip-server-name2"];
               }
               oneof SipServerFormat {
                  SipServerFormat_IpFormat sip_server_format_ip_format = 3 [json_name = "ip-format"];
                  SipServerFormat_StringFormat sip_server_format_string_format = 4 [json_name = "string-format"];
               }
            }
            SipServer sip_server = 13 [json_name = "sip-server"];
            message Sections {
               message Section {
                  uint32 section_index = 1 [json_name = "section-index"];
                  string start_ip = 2 [json_name = "start-ip"];
                  string end_ip = 3 [json_name = "end-ip"];
                  message IpPoolStatistics {
                     uint32 used_ip_count = 1 [json_name = "used-ip-count"];
                     uint32 idle_ip_count = 2 [json_name = "idle-ip-count"];
                     uint32 conflict_ip_count = 3 [json_name = "conflict-ip-count"];
                     uint32 disable_ip_count = 4 [json_name = "disable-ip-count"];
                     uint32 total_ip_count = 5 [json_name = "total-ip-count"];
                  }
                  IpPoolStatistics ip_pool_statistics = 4 [json_name = "ip-pool-statistics"];
                  message IpPoolAddressStatuses {
                     message IpPoolAddressStatus {
                        string ip_address = 1 [json_name = "ip-address"];
                        string mac_address = 2 [json_name = "mac-address"];
                        string user_id = 3 [json_name = "user-id"];
                        string lease_time = 4 [json_name = "lease-time"];
                        enum Status {
                           Status_STATICX_BINDX_USED = 0;
                           Status_STATICX_BIND = 1;
                           Status_USED = 2;
                           Status_EXPIRED = 3;
                           Status_CONFLICT = 4;
                           Status_DISABLE = 5;
                           Status_IDLE = 6;
                           Status_ERROR = 7;
                        };
                        Status status = 5 [json_name = "status"];
                     }
                     repeated IpPoolAddressStatus ip_pool_address_status = 1 [json_name = "ip-pool-address-status"];
                  }
                  IpPoolAddressStatuses ip_pool_address_statuses = 5 [json_name = "ip-pool-address-statuses"];
               }
               repeated Section section = 1 [json_name = "section"];
            }
            Sections sections = 14 [json_name = "sections"];
            message DnsLists {
               message DnsList {
                  string dns_ip = 1 [json_name = "dns-ip"];
               }
               repeated DnsList dns_list = 1 [json_name = "dns-list"];
            }
            DnsLists dns_lists = 15 [json_name = "dns-lists"];
            message UserOptions {
               message UserOption {
                  uint32 option_code = 1 [json_name = "option-code"];
                  message OptionFormat_AsciiFormat {
                     string ascii_string = 1 [json_name = "ascii-string"];
                  }
                  message OptionFormat_IpFormat {
                     repeated string option_ip_addresses = 1 [json_name = "option-ip-addresses"];
                     string option_ip1 = 2 [json_name = "option-ip1"];
                     string option_ip2 = 3 [json_name = "option-ip2"];
                  }
                  message OptionFormat_HexFormat {
                     string hex_string = 1 [json_name = "hex-string"];
                  }
                  message OptionFormat_CipherFormat {
                     string cipher_string = 1 [json_name = "cipher-string"];
                  }
                  message OptionFormat_SubOptionFormat {
                     message SubUserOptions {
                        message SubUserOption {
                           uint32 sub_option_code = 1 [json_name = "sub-option-code"];
                           message OptionFormat_SubIpFormat {
                              string sub_option_ip = 1 [json_name = "sub-option-ip"];
                           }
                           message OptionFormat_SubAsciiFormat {
                              string ascii_string = 1 [json_name = "ascii-string"];
                           }
                           message OptionFormat_SubCipherFormat {
                              string cipher_string = 1 [json_name = "cipher-string"];
                           }
                           oneof OptionFormat {
                              OptionFormat_SubIpFormat option_format_sub_ip_format = 2 [json_name = "sub-ip-format"];
                              OptionFormat_SubAsciiFormat option_format_sub_ascii_format = 3 [json_name = "sub-ascii-format"];
                              OptionFormat_SubCipherFormat option_format_sub_cipher_format = 4 [json_name = "sub-cipher-format"];
                           }
                        }
                        repeated SubUserOption sub_user_option = 1 [json_name = "sub-user-option"];
                     }
                     SubUserOptions sub_user_options = 1 [json_name = "sub-user-options"];
                  }
                  oneof OptionFormat {
                     OptionFormat_AsciiFormat option_format_ascii_format = 3 [json_name = "ascii-format"];
                     OptionFormat_IpFormat option_format_ip_format = 4 [json_name = "ip-format"];
                     OptionFormat_HexFormat option_format_hex_format = 5 [json_name = "hex-format"];
                     OptionFormat_CipherFormat option_format_cipher_format = 6 [json_name = "cipher-format"];
                     OptionFormat_SubOptionFormat option_format_sub_option_format = 7 [json_name = "sub-option-format"];
                  }
               }
               repeated UserOption user_option = 1 [json_name = "user-option"];
            }
            UserOptions user_options = 16 [json_name = "user-options"];
            message OptionForceReplys {
               message OptionForceReply {
                  uint32 option_code = 1 [json_name = "option-code"];
               }
               repeated OptionForceReply option_force_reply = 1 [json_name = "option-force-reply"];
            }
            OptionForceReplys option_force_replys = 17 [json_name = "option-force-replys"];
            string client_option60_string = 18 [json_name = "client-option60-string"];
            string domain_name = 19 [json_name = "domain-name"];
            enum NetworkBiosType {
               INVALID_ENUM_VALUE_NetworkBiosType = 0;
               NetworkBiosType_BX_NODE = 1;
               NetworkBiosType_HX_NODE = 2;
               NetworkBiosType_MX_NODE = 3;
               NetworkBiosType_PX_NODE = 4;
            };
            NetworkBiosType network_bios_type = 20 [json_name = "network-bios-type"];
            enum ReplyPacketPolicy {
               INVALID_ENUM_VALUE_ReplyPacketPolicy = 0;
               ReplyPacketPolicy_BROADCASTX_ALWAYS = 1;
               ReplyPacketPolicy_UNICASTX_ALWAYS = 2;
            };
            ReplyPacketPolicy reply_packet_policy = 21 [json_name = "reply-packet-policy"];
            string identifier_ip = 22 [json_name = "identifier-ip"];
            message NetworkBiosIpAddresses {
               message NetworkBiosIpAddress {
                  string network_bios_ip = 1 [json_name = "network-bios-ip"];
               }
               repeated NetworkBiosIpAddress network_bios_ip_address = 1 [json_name = "network-bios-ip-address"];
            }
            NetworkBiosIpAddresses network_bios_ip_addresses = 23 [json_name = "network-bios-ip-addresses"];
            message ExcludedIpAddresses {
               message ExcludedIpAddress {
                  string start_ip_address = 1 [json_name = "start-ip-address"];
                  string end_ip_address = 2 [json_name = "end-ip-address"];
               }
               repeated ExcludedIpAddress excluded_ip_address = 1 [json_name = "excluded-ip-address"];
            }
            ExcludedIpAddresses excluded_ip_addresses = 24 [json_name = "excluded-ip-addresses"];
            message StaticBinds {
               message StaticBind {
                  string static_bind_ip = 1 [json_name = "static-bind-ip"];
                  string static_bind_mac = 2 [json_name = "static-bind-mac"];
                  string option_template = 3 [json_name = "option-template"];
                  string description = 4 [json_name = "description"];
               }
               repeated StaticBind static_bind = 1 [json_name = "static-bind"];
            }
            StaticBinds static_binds = 25 [json_name = "static-binds"];
            message Option121S {
               message Option121 {
                  string destination_ip = 1 [json_name = "destination-ip"];
                  uint32 mask = 2 [json_name = "mask"];
                  string gateway = 3 [json_name = "gateway"];
               }
               repeated Option121 option121 = 1 [json_name = "option121"];
            }
            Option121S option121s = 26 [json_name = "option121s"];
            message Option33S {
               message Option33 {
                  string destination_ip = 1 [json_name = "destination-ip"];
                  string gateway = 2 [json_name = "gateway"];
               }
               repeated Option33 option33 = 1 [json_name = "option33"];
            }
            Option33S option33s = 27 [json_name = "option33s"];
            message DomainLists {
               message DomainList {
                  string domain_name = 1 [json_name = "domain-name"];
               }
               repeated DomainList domain_list = 1 [json_name = "domain-list"];
            }
            DomainLists domain_lists = 28 [json_name = "domain-lists"];
            string network_ipv4_address = 29 [json_name = "network-ipv4-address"];
            string network_mask = 30 [json_name = "network-mask"];
            string next_server_ip = 31 [json_name = "next-server-ip"];
            string profile_name = 32 [json_name = "profile-name"];
            string bootfile = 33 [json_name = "bootfile"];
            string sname = 34 [json_name = "sname"];
            string dns_interface = 35 [json_name = "dns-interface"];
            bool reserved_ip = 36 [json_name = "reserved-ip"];
            enum Logging {
               INVALID_ENUM_VALUE_Logging = 0;
               Logging_ALLOCATIONX_FAIL = 1;
               Logging_ALLOCATIONX_SUCCESS = 2;
               Logging_RELEASE = 3;
               Logging_RENEWX_FAIL = 4;
               Logging_RENEWX_SUCCESS = 5;
               Logging_DETECTX_CONFLICT = 6;
               Logging_RECYCLEX_CONFLICT = 7;
            };
            repeated Logging logging = 37 [json_name = "logging"];
            repeated string nbns_list = 38 [json_name = "nbns-list"];
            repeated uint32 force_insert_option = 39 [json_name = "force-insert-option"];
            message GatewayLists {
               message GatewayList {
                  string gateway_ip = 1 [json_name = "gateway-ip"];
               }
               repeated GatewayList gateway_list = 1 [json_name = "gateway-list"];
            }
            GatewayLists gateway_lists = 40 [json_name = "gateway-lists"];
            message Option184 {
               string as_ip = 1 [json_name = "as-ip"];
               string ncp_ip = 2 [json_name = "ncp-ip"];
               uint32 voice_vlan = 3 [json_name = "voice-vlan"];
               string failover_ip = 4 [json_name = "failover-ip"];
               string dial_string = 5 [json_name = "dial-string"];
            }
            Option184 option184 = 41 [json_name = "option184"];
            message Options {
               message Option {
                  uint32 option_code = 1 [json_name = "option-code"];
                  message OptionFormat_IpFormat {
                     repeated string ip_addresses = 1 [json_name = "ip-addresses"];
                  }
                  message OptionFormat_AsciiFormat {
                     string ascii_string = 1 [json_name = "ascii-string"];
                  }
                  message OptionFormat_HexFormat {
                     string hex_string = 1 [json_name = "hex-string"];
                  }
                  message OptionFormat_CipherFormat {
                     string cipher_string = 1 [json_name = "cipher-string"];
                  }
                  message OptionFormat_SubOptionsFormat {
                     message SubOptions {
                        message SubOption {
                           uint32 sub_option_code = 1 [json_name = "sub-option-code"];
                           message OptionFormat_SubIpFormat {
                              repeated string ip_addresses = 1 [json_name = "ip-addresses"];
                           }
                           message OptionFormat_SubAsciiFormat {
                              string ascii_string = 1 [json_name = "ascii-string"];
                           }
                           message OptionFormat_SubHexFormat {
                              string hex_string = 1 [json_name = "hex-string"];
                           }
                           message OptionFormat_SubCipherFormat {
                              string cipher_string = 1 [json_name = "cipher-string"];
                           }
                           oneof OptionFormat {
                              OptionFormat_SubIpFormat option_format_sub_ip_format = 2 [json_name = "sub-ip-format"];
                              OptionFormat_SubAsciiFormat option_format_sub_ascii_format = 3 [json_name = "sub-ascii-format"];
                              OptionFormat_SubHexFormat option_format_sub_hex_format = 4 [json_name = "sub-hex-format"];
                              OptionFormat_SubCipherFormat option_format_sub_cipher_format = 5 [json_name = "sub-cipher-format"];
                           }
                        }
                        repeated SubOption sub_option = 1 [json_name = "sub-option"];
                     }
                     SubOptions sub_options = 1 [json_name = "sub-options"];
                  }
                  oneof OptionFormat {
                     OptionFormat_IpFormat option_format_ip_format = 2 [json_name = "ip-format"];
                     OptionFormat_AsciiFormat option_format_ascii_format = 3 [json_name = "ascii-format"];
                     OptionFormat_HexFormat option_format_hex_format = 4 [json_name = "hex-format"];
                     OptionFormat_CipherFormat option_format_cipher_format = 5 [json_name = "cipher-format"];
                     OptionFormat_SubOptionsFormat option_format_sub_options_format = 6 [json_name = "sub-options-format"];
                  }
               }
               repeated Option option = 1 [json_name = "option"];
            }
            Options options = 42 [json_name = "options"];
            message ClientOptions {
               message ClientOption {
                  uint32 option_code = 1 [json_name = "option-code"];
                  string cilent_string = 2 [json_name = "cilent-string"];
                  uint32 reply_code = 3 [json_name = "reply-code"];
                  message ClientSubOptions {
                     message ClientSubOption {
                        uint32 sub_option_code = 1 [json_name = "sub-option-code"];
                        message OptionFormat_SubIpFormat {
                           string sub_option_ip = 1 [json_name = "sub-option-ip"];
                        }
                        message OptionFormat_SubAsciiFormat {
                           string ascii_string = 1 [json_name = "ascii-string"];
                        }
                        message OptionFormat_SubHexFormat {
                           string hex_string = 1 [json_name = "hex-string"];
                        }
                        oneof OptionFormat {
                           OptionFormat_SubIpFormat option_format_sub_ip_format = 2 [json_name = "sub-ip-format"];
                           OptionFormat_SubAsciiFormat option_format_sub_ascii_format = 3 [json_name = "sub-ascii-format"];
                           OptionFormat_SubHexFormat option_format_sub_hex_format = 4 [json_name = "sub-hex-format"];
                        }
                     }
                     repeated ClientSubOption client_sub_option = 1 [json_name = "client-sub-option"];
                  }
                  ClientSubOptions client_sub_options = 4 [json_name = "client-sub-options"];
               }
               repeated ClientOption client_option = 1 [json_name = "client-option"];
            }
            ClientOptions client_options = 43 [json_name = "client-options"];
            message AlarmIpUsed {
               uint32 resum_percent = 1 [json_name = "resum-percent"];
               uint32 alarm_percent = 2 [json_name = "alarm-percent"];
            }
            AlarmIpUsed alarm_ip_used = 44 [json_name = "alarm-ip-used"];
            message AutoRecycle {
               uint32 day = 1 [json_name = "day"];
               uint32 hour = 2 [json_name = "hour"];
               uint32 minute = 3 [json_name = "minute"];
            }
            AutoRecycle auto_recycle = 45 [json_name = "auto-recycle"];
            message IpPoolStatistics {
               uint32 used_ip_count = 1 [json_name = "used-ip-count"];
               uint32 idle_ip_count = 2 [json_name = "idle-ip-count"];
               uint32 expired_ip_count = 3 [json_name = "expired-ip-count"];
               uint32 conflict_ip_count = 4 [json_name = "conflict-ip-count"];
               uint32 disable_ip_count = 5 [json_name = "disable-ip-count"];
               uint32 total_ip_count = 6 [json_name = "total-ip-count"];
               string start_ip = 7 [json_name = "start-ip"];
               string end_ip = 8 [json_name = "end-ip"];
            }
            IpPoolStatistics ip_pool_statistics = 46 [json_name = "ip-pool-statistics"];
            message IpPoolAddressStatuses {
               message IpPoolAddressStatus {
                  string ip_address = 1 [json_name = "ip-address"];
                  uint32 ip_index = 2 [json_name = "ip-index"];
                  string mac_address = 3 [json_name = "mac-address"];
                  uint32 lease_time = 4 [json_name = "lease-time"];
                  enum Status {
                     Status_STATICX_BINDX_USED = 0;
                     Status_STATICX_BIND = 1;
                     Status_USED = 2;
                     Status_EXPIRED = 3;
                     Status_CONFLICT = 4;
                     Status_DISABLE = 5;
                     Status_IDLE = 6;
                     Status_ERROR = 7;
                  };
                  Status status = 5 [json_name = "status"];
               }
               repeated IpPoolAddressStatus ip_pool_address_status = 1 [json_name = "ip-pool-address-status"];
            }
            IpPoolAddressStatuses ip_pool_address_statuses = 47 [json_name = "ip-pool-address-statuses"];
            message IpPoolUsage {
               uint32 pool_length = 1 [json_name = "pool-length"];
               uint32 used_ip_count = 2 [json_name = "used-ip-count"];
               uint32 ratio = 3 [json_name = "ratio"];
               string last_time = 4 [json_name = "last-time"];
            }
            IpPoolUsage ip_pool_usage = 48 [json_name = "ip-pool-usage"];
            message IpPoolMaxUsage {
               uint32 pool_length = 1 [json_name = "pool-length"];
               uint32 used_ip_count = 2 [json_name = "used-ip-count"];
               string last_time = 3 [json_name = "last-time"];
            }
            IpPoolMaxUsage ip_pool_max_usage = 49 [json_name = "ip-pool-max-usage"];
         }
         repeated GlobalIpPool global_ip_pool = 1 [json_name = "global-ip-pool"];
      }
      GlobalIpPools global_ip_pools = 2 [json_name = "global-ip-pools"];
      message OptionTemplates {
         message OptionTemplate {
            string name = 1 [json_name = "name"];
            string next_server = 2 [json_name = "next-server"];
            enum NetworkBiosType {
               INVALID_ENUM_VALUE_NetworkBiosType = 0;
               NetworkBiosType_BX_NODE = 1;
               NetworkBiosType_HX_NODE = 2;
               NetworkBiosType_MX_NODE = 3;
               NetworkBiosType_PX_NODE = 4;
            };
            NetworkBiosType network_bios_type = 3 [json_name = "network-bios-type"];
            string domain_name = 4 [json_name = "domain-name"];
            string bootfile = 5 [json_name = "bootfile"];
            string sname = 6 [json_name = "sname"];
            repeated string nbns_list = 7 [json_name = "nbns-list"];
            repeated uint32 force_insert_option = 8 [json_name = "force-insert-option"];
            message GatewayLists {
               message GatewayList {
                  string gateway_ip = 1 [json_name = "gateway-ip"];
               }
               repeated GatewayList gateway_list = 1 [json_name = "gateway-list"];
            }
            GatewayLists gateway_lists = 9 [json_name = "gateway-lists"];
            message DnsLists {
               message DnsList {
                  string dns_ip = 1 [json_name = "dns-ip"];
               }
               repeated DnsList dns_list = 1 [json_name = "dns-list"];
            }
            DnsLists dns_lists = 10 [json_name = "dns-lists"];
            message Option121S {
               message Option121 {
                  string destination_ip = 1 [json_name = "destination-ip"];
                  uint32 mask = 2 [json_name = "mask"];
                  string gateway_address = 3 [json_name = "gateway-address"];
               }
               repeated Option121 option121 = 1 [json_name = "option121"];
            }
            Option121S option121s = 11 [json_name = "option121s"];
         }
         repeated OptionTemplate option_template = 1 [json_name = "option-template"];
      }
      OptionTemplates option_templates = 3 [json_name = "option-templates"];
      message PacketStatistics {
         uint32 client_request_count = 1 [json_name = "client-request-count"];
         uint32 discover_count = 2 [json_name = "discover-count"];
         uint32 request_count = 3 [json_name = "request-count"];
         uint32 decline_count = 4 [json_name = "decline-count"];
         uint32 release_count = 5 [json_name = "release-count"];
         uint32 inform_count = 6 [json_name = "inform-count"];
         uint32 server_reply_count = 7 [json_name = "server-reply-count"];
         uint32 offer_count = 8 [json_name = "offer-count"];
         uint32 ack_count = 9 [json_name = "ack-count"];
         uint32 nak_count = 10 [json_name = "nak-count"];
         uint32 force_renew_count = 11 [json_name = "force-renew-count"];
         uint32 bad_message_count = 12 [json_name = "bad-message-count"];
         uint32 bootp_request_count = 13 [json_name = "bootp-request-count"];
         uint32 bootp_reply_count = 14 [json_name = "bootp-reply-count"];
      }
      PacketStatistics packet_statistics = 4 [json_name = "packet-statistics"];
      message IpPoolQuerys {
         message IpPoolQuery {
            string pool_name = 1 [json_name = "pool-name"];
            string ip_address = 2 [json_name = "ip-address"];
            string mac_address = 3 [json_name = "mac-address"];
            uint32 lease_time = 4 [json_name = "lease-time"];
            enum Status {
               Status_STATICX_BINDX_USED = 0;
               Status_STATICX_BIND = 1;
               Status_USED = 2;
               Status_EXPIRED = 3;
               Status_CONFLICT = 4;
               Status_DISABLE = 5;
               Status_IDLE = 6;
               Status_ERROR = 7;
            };
            Status status = 5 [json_name = "status"];
         }
         repeated IpPoolQuery ip_pool_query = 1 [json_name = "ip-pool-query"];
      }
      IpPoolQuerys ip_pool_querys = 5 [json_name = "ip-pool-querys"];
      message IpPoolUserInfos {
         message IpPoolUserInfo {
            string pool_name = 1 [json_name = "pool-name"];
            string ip_address = 2 [json_name = "ip-address"];
            string mac_address = 3 [json_name = "mac-address"];
            uint32 lease_time = 4 [json_name = "lease-time"];
            enum Status {
               Status_STATICX_BINDX_USED = 0;
               Status_STATICX_BIND = 1;
               Status_USED = 2;
               Status_EXPIRED = 3;
               Status_CONFLICT = 4;
               Status_DISABLE = 5;
               Status_IDLE = 6;
               Status_ERROR = 7;
            };
            Status status = 5 [json_name = "status"];
         }
         repeated IpPoolUserInfo ip_pool_user_info = 1 [json_name = "ip-pool-user-info"];
      }
      IpPoolUserInfos ip_pool_user_infos = 6 [json_name = "ip-pool-user-infos"];
   }
   Server server = 3 [json_name = "server"];
   message Snooping {
      message Global {
         bool enable = 1 [json_name = "enable"];
         bool server_detect_enable = 2 [json_name = "server-detect-enable"];
         bool user_bind_auto_save_enable = 3 [json_name = "user-bind-auto-save-enable"];
         string user_bind_file_name = 4 [json_name = "user-bind-file-name"];
         uint32 alarm_threshold = 5 [json_name = "alarm-threshold"];
         bool arp_detect_enable = 6 [json_name = "arp-detect-enable"];
         bool mac_strict_check_enable = 7 [json_name = "mac-strict-check-enable"];
         bool unicast_cpu_forward_disable = 8 [json_name = "unicast-cpu-forward-disable"];
         bool check_rate_enable = 9 [json_name = "check-rate-enable"];
         uint32 rate_limit = 10 [json_name = "rate-limit"];
         bool check_rate_alarm_enable = 11 [json_name = "check-rate-alarm-enable"];
         uint32 rate_threshold = 12 [json_name = "rate-threshold"];
         uint32 rate_limit_packet_count = 13 [json_name = "rate-limit-packet-count"];
         bool user_offline_remove_mac = 14 [json_name = "user-offline-remove-mac"];
         uint32 global_max_user = 15 [json_name = "global-max-user"];
         bool snoop_user_transfer_enable = 16 [json_name = "snoop-user-transfer-enable"];
         enum FileAuthenticationMode {
            FileAuthenticationMode_CHECK = 0;
            FileAuthenticationMode_NOX_CHECK = 1;
            FileAuthenticationMode_FORCEX_CHECK = 2;
         };
         FileAuthenticationMode file_authentication_mode = 17 [json_name = "file-authentication-mode"];
         bool check_server_vlan = 18 [json_name = "check-server-vlan"];
      }
      Global global = 1 [json_name = "global"];
      message WhiteLists {
         message WhiteList {
            string white_list_name = 1 [json_name = "white-list-name"];
            bool apply_flag = 2 [json_name = "apply-flag"];
            message WhiteRules {
               message WhiteRule {
                  uint32 rule_id = 1 [json_name = "rule-id"];
                  string source_ip = 2 [json_name = "source-ip"];
                  string source_mask = 3 [json_name = "source-mask"];
                  string destination_address = 4 [json_name = "destination-address"];
                  string destination_mask = 5 [json_name = "destination-mask"];
                  enum SourcePort {
                     SourcePort_BOOTPS = 0;
                     SourcePort_BOOTPC = 1;
                  };
                  SourcePort source_port = 6 [json_name = "source-port"];
                  enum DestinationPort {
                     DestinationPort_BOOTPS = 0;
                     DestinationPort_BOOTPC = 1;
                  };
                  DestinationPort destination_port = 7 [json_name = "destination-port"];
               }
               repeated WhiteRule white_rule = 1 [json_name = "white-rule"];
            }
            WhiteRules white_rules = 3 [json_name = "white-rules"];
         }
         repeated WhiteList white_list = 1 [json_name = "white-list"];
      }
      WhiteLists white_lists = 2 [json_name = "white-lists"];
      message CommittedAccessRate {
         uint32 car_cir = 1 [json_name = "car-cir"];
         uint32 car_cbs = 2 [json_name = "car-cbs"];
      }
      CommittedAccessRate committed_access_rate = 3 [json_name = "committed-access-rate"];
      message DynamicBinds {
         message DynamicBind {
            string ip_address = 1 [json_name = "ip-address"];
            uint32 outer_vlan = 2 [json_name = "outer-vlan"];
            uint32 inner_vlan = 3 [json_name = "inner-vlan"];
            string vsi_name = 4 [json_name = "vsi-name"];
            string vpn_name = 5 [json_name = "vpn-name"];
            uint32 bridge_domain = 6 [json_name = "bridge-domain"];
            string mac_address = 7 [json_name = "mac-address"];
            string interface_name = 8 [json_name = "interface-name"];
            string lease = 9 [json_name = "lease"];
         }
         repeated DynamicBind dynamic_bind = 1 [json_name = "dynamic-bind"];
      }
      DynamicBinds dynamic_binds = 4 [json_name = "dynamic-binds"];
      message StaticBinds {
         message StaticBind {
            string mac_address = 1 [json_name = "mac-address"];
            string ip_address = 2 [json_name = "ip-address"];
            string if_name = 3 [json_name = "if-name"];
            uint32 pe_vlan = 4 [json_name = "pe-vlan"];
            uint32 ce_vlan = 5 [json_name = "ce-vlan"];
         }
         repeated StaticBind static_bind = 1 [json_name = "static-bind"];
      }
      StaticBinds static_binds = 5 [json_name = "static-binds"];
   }
   Snooping snooping = 4 [json_name = "snooping"];
   message Client {
      message Global {
         string option60 = 1 [json_name = "option60"];
         bool unicast_flag = 2 [json_name = "unicast-flag"];
         message IpRoutes {
            message IpRoute {
               string ip_address = 1 [json_name = "ip-address"];
               string mask = 2 [json_name = "mask"];
               uint32 mask_length = 3 [json_name = "mask-length"];
               string interface_name = 4 [json_name = "interface-name"];
               uint32 preference_value = 5 [json_name = "preference-value"];
            }
            repeated IpRoute ip_route = 1 [json_name = "ip-route"];
         }
         IpRoutes ip_routes = 3 [json_name = "ip-routes"];
      }
      Global global = 1 [json_name = "global"];
      message ExcludedServers {
         message ExcludedServer {
            string server_address = 1 [json_name = "server-address"];
         }
         repeated ExcludedServer excluded_server = 1 [json_name = "excluded-server"];
      }
      ExcludedServers excluded_servers = 2 [json_name = "excluded-servers"];
      message ClientQuerys {
         message ClientQuery {
            string interface_name = 1 [json_name = "interface-name"];
            string ip_address = 2 [json_name = "ip-address"];
            string mask = 3 [json_name = "mask"];
            string tftp_server_name = 4 [json_name = "tftp-server-name"];
            string startup_file_name = 5 [json_name = "startup-file-name"];
            string option148 = 6 [json_name = "option148"];
            string dhcp_server_ip = 7 [json_name = "dhcp-server-ip"];
            string client_state = 8 [json_name = "client-state"];
            repeated string tftp_server_ip = 9 [json_name = "tftp-server-ip"];
            string option145 = 10 [json_name = "option145"];
            string option146 = 11 [json_name = "option146"];
            message Option43 {
               string sub_option5 = 1 [json_name = "sub-option5"];
            }
            Option43 option43 = 12 [json_name = "option43"];
         }
         repeated ClientQuery client_query = 1 [json_name = "client-query"];
      }
      ClientQuerys client_querys = 3 [json_name = "client-querys"];
      message ClientGatewayQuerys {
         message ClientGatewayQuery {
            string interface_name = 1 [json_name = "interface-name"];
            string gateway = 2 [json_name = "gateway"];
         }
         repeated ClientGatewayQuery client_gateway_query = 1 [json_name = "client-gateway-query"];
      }
      ClientGatewayQuerys client_gateway_querys = 4 [json_name = "client-gateway-querys"];
      message ClientDnsServerQuerys {
         message ClientDnsServerQuery {
            string interface_name = 1 [json_name = "interface-name"];
            string dns_server_ip = 2 [json_name = "dns-server-ip"];
         }
         repeated ClientDnsServerQuery client_dns_server_query = 1 [json_name = "client-dns-server-query"];
      }
      ClientDnsServerQuerys client_dns_server_querys = 5 [json_name = "client-dns-server-querys"];
      message ClientLogServerQuerys {
         message ClientLogServerQuery {
            string interface_name = 1 [json_name = "interface-name"];
            string log_server_ip = 2 [json_name = "log-server-ip"];
         }
         repeated ClientLogServerQuery client_log_server_query = 1 [json_name = "client-log-server-query"];
      }
      ClientLogServerQuerys client_log_server_querys = 6 [json_name = "client-log-server-querys"];
      message ClientBootstrapServerUrlQuerys {
         message ClientBootstrapServerUrlQuery {
            string interface_name = 1 [json_name = "interface-name"];
            string bootstrap_server_url = 2 [json_name = "bootstrap-server-url"];
         }
         repeated ClientBootstrapServerUrlQuery client_bootstrap_server_url_query = 1 [json_name = "client-bootstrap-server-url-query"];
      }
      ClientBootstrapServerUrlQuerys client_bootstrap_server_url_querys = 7 [json_name = "client-bootstrap-server-url-querys"];
   }
   Client client = 5 [json_name = "client"];
}

