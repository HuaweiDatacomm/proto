syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-12-27 14:54:41
// ProtoYang-version 1
// module huawei-soc
// revision 2021-12-25
// revision 2020-05-08
// namespace urn:huawei:yang:huawei-soc

package huawei_soc;

message Soc {
   message SocAdjThrshldNodes {
      message SocAdjThrshldNode {
         uint32 alarmValue = 1;
         enum MonitorType {
            MonitorType_ACCESSX_QUEUE = 0;
            MonitorType_DHCPX_SLOTX_QUEUE = 1;
            MonitorType_L2TPX_QUEUE = 2;
            MonitorType_MAINX_CPUX_USAGE = 3;
            MonitorType_MAINX_MEMORYX_USAGE = 4;
            MonitorType_PPPOEX_RECEIVEX_QUEUE = 5;
            MonitorType_PPPX_CPCARX_DROP = 6;
            MonitorType_PPPX_RECEIVEX_QUEUE = 7;
            MonitorType_SLOTX_CPUX_USAGE = 8;
            MonitorType_SLOTX_MEMORYX_USAGE = 9;
         };
         MonitorType monitorType = 2;
         uint32 resumeValue = 3;
      }
      repeated SocAdjThrshldNode socAdjThrshldNode = 1;
   }
   SocAdjThrshldNodes socAdjThrshldNodes = 1;
   message SocAdjUsrTypNodes {
      message SocAdjUsrTypNode {
         enum DhcpFlag {
            DhcpFlag_OFF = 0;
            DhcpFlag_ON = 1;
         };
         DhcpFlag dhcpFlag = 1;
         enum Dhcpv6Flag {
            Dhcpv6Flag_OFF = 0;
            Dhcpv6Flag_ON = 1;
         };
         Dhcpv6Flag dhcpv6Flag = 2;
         enum Dot1XFlag {
            Dot1XFlag_OFF = 0;
            Dot1XFlag_ON = 1;
         };
         Dot1XFlag dot1xFlag = 3;
         enum Ipv4TriggerFlag {
            Ipv4TriggerFlag_OFF = 0;
            Ipv4TriggerFlag_ON = 1;
         };
         Ipv4TriggerFlag ipv4triggerFlag = 4;
         enum Ipv6TriggerFlag {
            Ipv6TriggerFlag_OFF = 0;
            Ipv6TriggerFlag_ON = 1;
         };
         Ipv6TriggerFlag ipv6triggerFlag = 5;
         enum L2TpFlag {
            L2TpFlag_OFF = 0;
            L2TpFlag_ON = 1;
         };
         L2TpFlag l2tpFlag = 6;
         enum PppoeFlag {
            PppoeFlag_OFF = 0;
            PppoeFlag_ON = 1;
         };
         PppoeFlag pppoeFlag = 7;
         uint32 socID = 8;
      }
      repeated SocAdjUsrTypNode socAdjUsrTypNode = 1;
   }
   SocAdjUsrTypNodes socAdjUsrTypNodes = 2;
   message SocAppStats {
      message SocAppStat {
         uint32 socCPUUsage = 1;
         uint64 socErrPkt = 2;
         uint32 socErrPktRate = 3;
         uint64 socErrSess = 4;
         uint32 socErrSessRate = 5;
         uint32 socPktPCT = 6;
         enum SocProtocolId {
            SocProtocolId_ACR = 0;
            SocProtocolId_ARP = 1;
            SocProtocolId_ARPMISS = 2;
            SocProtocolId_ATMX_INARP = 3;
            SocProtocolId_BFD = 4;
            SocProtocolId_BFDV6 = 5;
            SocProtocolId_BGP = 6;
            SocProtocolId_BGPV6 = 7;
            SocProtocolId_BLACKX_LIST = 8;
            SocProtocolId_DHCP = 9;
            SocProtocolId_DHCPV6 = 10;
            SocProtocolId_DIAMETER = 11;
            SocProtocolId_DLPX_BGP = 12;
            SocProtocolId_DLPX_LDP = 13;
            SocProtocolId_DLPX_OSPF = 14;
            SocProtocolId_DNSV6 = 15;
            SocProtocolId_DNSX_CLIENT = 16;
            SocProtocolId_EAPOL = 17;
            SocProtocolId_FIBMISS = 18;
            SocProtocolId_FIBMISSV6 = 19;
            SocProtocolId_FTPV6X_CLIENT = 20;
            SocProtocolId_FTPV6X_SERVER = 21;
            SocProtocolId_FTPX_CLIENT = 22;
            SocProtocolId_FTPX_SERVER = 23;
            SocProtocolId_HGMP = 24;
            SocProtocolId_HTTPX_CLIENT = 25;
            SocProtocolId_HTTPX_REDIRECTX_CHASTEN = 26;
            SocProtocolId_HTTPX_SERVER = 27;
            SocProtocolId_HWTACACS = 28;
            SocProtocolId_ICMP = 29;
            SocProtocolId_ICMPV6 = 30;
            SocProtocolId_ICMPX_BROADCASTX_ADDRESSX_ECHO = 31;
            SocProtocolId_IGMP = 32;
            SocProtocolId_IP = 33;
            SocProtocolId_IPFPM = 34;
            SocProtocolId_IPV6 = 35;
            SocProtocolId_ISIS = 36;
            SocProtocolId_L2TP = 37;
            SocProtocolId_LACP = 38;
            SocProtocolId_LDP = 39;
            SocProtocolId_LLDP = 40;
            SocProtocolId_LSPPING = 41;
            SocProtocolId_MKA = 42;
            SocProtocolId_MLD = 43;
            SocProtocolId_MPLSX_OAM = 44;
            SocProtocolId_MSDP = 45;
            SocProtocolId_MUTICAST = 46;
            SocProtocolId_MUTICASTV6 = 47;
            SocProtocolId_NA = 48;
            SocProtocolId_ND = 49;
            SocProtocolId_NQAX_TCPX_CLIENT = 50;
            SocProtocolId_NQAX_TCPX_SERVER = 51;
            SocProtocolId_NQAX_UDPX_CLIENT = 52;
            SocProtocolId_NQAX_UDPX_SERVER = 53;
            SocProtocolId_NS = 54;
            SocProtocolId_NTP = 55;
            SocProtocolId_OPENFLOW = 56;
            SocProtocolId_OSPFV2 = 57;
            SocProtocolId_OSPFV3 = 58;
            SocProtocolId_OSPFV6 = 59;
            SocProtocolId_PADI = 60;
            SocProtocolId_PIM = 61;
            SocProtocolId_PIMV6 = 62;
            SocProtocolId_PIM_MC = 63;
            SocProtocolId_PORTAL = 64;
            SocProtocolId_PPPOE = 65;
            SocProtocolId_RA = 66;
            SocProtocolId_RADIUS = 67;
            SocProtocolId_RIP = 68;
            SocProtocolId_RIPNG = 69;
            SocProtocolId_RRPP = 70;
            SocProtocolId_RS = 71;
            SocProtocolId_RSVP = 72;
            SocProtocolId_SFTPX_CLIENT = 73;
            SocProtocolId_SFTPX_SERVER = 74;
            SocProtocolId_SNMP = 75;
            SocProtocolId_SNMPV6 = 76;
            SocProtocolId_SSHV6X_CLIENT = 77;
            SocProtocolId_SSHV6X_SERVER = 78;
            SocProtocolId_SSHX_CLIENT = 79;
            SocProtocolId_SSHX_SERVER = 80;
            SocProtocolId_TCP = 81;
            SocProtocolId_TCPX_65410 = 82;
            SocProtocolId_TELNETV6X_CLIENT = 83;
            SocProtocolId_TELNETV6X_SERVER = 84;
            SocProtocolId_TELNETX_CLIENT = 85;
            SocProtocolId_TELNETX_SERVER = 86;
            SocProtocolId_TFTP = 87;
            SocProtocolId_TFTPV6X_CLIENT = 88;
            SocProtocolId_TTLEXPIRED = 89;
            SocProtocolId_TTLEXPIREDV6 = 90;
            SocProtocolId_UDP = 91;
            SocProtocolId_UNICASTX_VRRP = 92;
            SocProtocolId_UNKNOWN = 93;
            SocProtocolId_VGMP = 94;
            SocProtocolId_VRRP = 95;
            SocProtocolId_WEB = 96;
            SocProtocolId_WEB_AUTH_SERVER = 97;
            SocProtocolId_WHITEX_LIST = 98;
            SocProtocolId_X_802X_1AG = 99;
            SocProtocolId_X_802X_3AH = 100;
            SocProtocolId_DCNX_PKTX_FIN = 101;
            SocProtocolId_DLPX_IPV6X_BGP = 102;
            SocProtocolId_DLPX_IPV6X_OSPF = 103;
            SocProtocolId_DLPX_ISIS = 104;
            SocProtocolId_DLPX_RADIUS = 105;
            SocProtocolId_DLPX_RSVP = 106;
         };
         SocProtocolId socProtocolId = 7;
         uint32 socSessPCT = 8;
         uint32 socShowNo = 9;
         string socSlotID = 10;
         enum SocTimeLevel {
            SocTimeLevel_LASTCYCLE = 0;
            SocTimeLevel_X_15MIN = 1;
            SocTimeLevel_X_60MIN = 2;
            SocTimeLevel_X_72HOURS = 3;
         };
         SocTimeLevel socTimeLevel = 11;
         uint32 socTotSessRate = 12;
         uint64 socTotalPkt = 13;
         uint32 socTotalPktRate = 14;
         uint64 socTotalSess = 15;
      }
      repeated SocAppStat socAppStat = 1;
   }
   SocAppStats socAppStats = 3;
   message SocArpRatPubCars {
      message SocArpRatPubCar {
         uint32 socCirValue = 1;
         string socSlotID = 2;
      }
      repeated SocArpRatPubCar socArpRatPubCar = 1;
   }
   SocArpRatPubCars socArpRatPubCars = 4;
   message SocArpVlanCarAlarms {
      message SocArpVlanCarAlarm {
         bool socArpVlCarAlmEnable = 1;
         string socSlotID = 2;
      }
      repeated SocArpVlanCarAlarm socArpVlanCarAlarm = 1;
   }
   SocArpVlanCarAlarms socArpVlanCarAlarms = 5;
   message SocAttackReasonThres {
      message SocAttackReasonThre {
         uint32 socAppPktPCT = 1;
         uint32 socBroadcast = 2;
         uint32 socId = 3;
         uint32 socTop1AddrPktPCT = 4;
      }
      repeated SocAttackReasonThre socAttackReasonThre = 1;
   }
   SocAttackReasonThres socAttackReasonThres = 6;
   message SocAttackTraceThres {
      message SocAttackTraceThre {
         uint32 socId = 1;
         uint32 socMainIF = 2;
         uint32 socQinQ = 3;
         uint32 socSrcIP = 4;
         uint32 socSrcMAC = 5;
         uint32 socSubIF = 6;
         uint32 socVlAN = 7;
         uint32 socVni = 8;
      }
      repeated SocAttackTraceThre socAttackTraceThre = 1;
   }
   SocAttackTraceThres socAttackTraceThres = 7;
   message SocCarStats {
      message SocCarStat {
         string socCarName = 1;
         uint64 socDiscardBytes = 2;
         uint64 socDiscardPkts = 3;
         uint32 socDropPktRate = 4;
         uint64 socPassBytes = 5;
         uint64 socPassPkts = 6;
         uint32 socPktPCT = 7;
         string socProtocolName = 8;
         uint32 socShowNo = 9;
         string socSlotID = 10;
         enum SocTimeLevel {
            SocTimeLevel_LASTCYCLE = 0;
            SocTimeLevel_X_15MIN = 1;
            SocTimeLevel_X_60MIN = 2;
            SocTimeLevel_X_72HOURS = 3;
         };
         SocTimeLevel socTimeLevel = 11;
         uint32 socTotalPktRate = 12;
      }
      repeated SocCarStat socCarStat = 1;
   }
   SocCarStats socCarStats = 8;
   message SocCpRateLimits {
      message SocCpRateLimit {
         string ifName = 1;
         uint32 socCbs = 2;
         uint32 socCeVlanIdBegin = 3;
         uint32 socCeVlanIdEnd = 4;
         uint32 socCir = 5;
         bool socEnhance = 6;
         uint32 socPevid = 7;
         enum SocProtocolType {
            SocProtocolType_DHCP = 0;
            SocProtocolType_DHCPV6 = 1;
            SocProtocolType_ICMP = 2;
            SocProtocolType_ICMPV6 = 3;
            SocProtocolType_IGMP = 4;
            SocProtocolType_PORT = 5;
            SocProtocolType_ISIS = 6;
            SocProtocolType_LDPX_HELLO = 7;
            SocProtocolType_OSPF = 8;
            SocProtocolType_PIM = 9;
            SocProtocolType_RIP = 10;
            SocProtocolType_RSVP = 11;
            SocProtocolType_VRRP = 12;
         };
         SocProtocolType socProtocolType = 8;
         enum SocPrior {
            SocPrior_DISABLE = 0;
            SocPrior_ENABLE = 1;
         };
         SocPrior socPrior = 9;
      }
      repeated SocCpRateLimit socCpRateLimit = 1;
   }
   SocCpRateLimits socCpRateLimits = 9;
   message SocDefendEnables {
      message SocDefendEnable {
         uint32 socId = 2;
      }
      repeated SocDefendEnable socDefendEnable = 1;
   }
   SocDefendEnables socDefendEnables = 10;
   message SocDefendStats {
      message SocDefendStat {
         uint32 socDefendCevlan = 1;
         uint32 socDefendDropPkts = 2;
         uint32 socDefendPassPkts = 3;
         uint32 socDefendPevlan = 4;
         string socIfName = 5;
         string socSlotID = 6;
      }
      repeated SocDefendStat socDefendStat = 1;
   }
   SocDefendStats socDefendStats = 11;
   message SocDfdUsrDfGrps {
      message SocDfdUsrDfGrp {
         enum SocDfdGrpEn {
            SocDfdGrpEn_DISABLE = 0;
            SocDfdGrpEn_ENABLE = 1;
         };
         SocDfdGrpEn socDfdGrpEn = 1;
         enum SocUsrDfdGrpID {
            SocUsrDfdGrpID_USER_DISABLE_GROUP = 0;
            SocUsrDfdGrpID_USER_ENABLE_GROUP = 1;
         };
         SocUsrDfdGrpID socUsrDfdGrpID = 2;
      }
      repeated SocDfdUsrDfGrp socDfdUsrDfGrp = 1;
   }
   SocDfdUsrDfGrps socDfdUsrDfGrps = 12;
   message SocDfdUsrDfPros {
      message SocDfdUsrDfPro {
         enum SocProtocolID {
            SocProtocolID_BFD = 0;
            SocProtocolID_BGP = 1;
            SocProtocolID_BGPV6 = 2;
            SocProtocolID_DHCP = 3;
            SocProtocolID_DNSV6 = 4;
            SocProtocolID_DNSX_CLIENT = 5;
            SocProtocolID_FTPV6X_CLIENT = 6;
            SocProtocolID_FTPV6X_SERVER = 7;
            SocProtocolID_FTPX_CLIENT = 8;
            SocProtocolID_FTPX_SERVER = 9;
            SocProtocolID_HWTACACS = 10;
            SocProtocolID_ICMP = 11;
            SocProtocolID_ICMPV6 = 12;
            SocProtocolID_IGMP = 13;
            SocProtocolID_ISIS = 14;
            SocProtocolID_LACP = 15;
            SocProtocolID_LDP = 16;
            SocProtocolID_LSPPING = 17;
            SocProtocolID_MSDP = 18;
            SocProtocolID_OSPFV2 = 19;
            SocProtocolID_OSPFV3 = 20;
            SocProtocolID_PIM = 21;
            SocProtocolID_PIMV6 = 22;
            SocProtocolID_RADIUS = 23;
            SocProtocolID_RIP = 24;
            SocProtocolID_RRPP = 25;
            SocProtocolID_RSVP = 26;
            SocProtocolID_SNMP = 27;
            SocProtocolID_SSHV6X_SERVER = 28;
            SocProtocolID_SSHX_CLIENT = 29;
            SocProtocolID_SSHX_SERVER = 30;
            SocProtocolID_TELNETV6X_CLIENT = 31;
            SocProtocolID_TELNETV6X_SERVER = 32;
            SocProtocolID_TELNETX_CLIENT = 33;
            SocProtocolID_TELNETX_SERVER = 34;
            SocProtocolID_TFTP = 35;
            SocProtocolID_VRRP = 36;
         };
         SocProtocolID socProtocolID = 1;
         enum SocUsrDfdGrpID {
            SocUsrDfdGrpID_USER_DISABLE_GROUP = 0;
            SocUsrDfdGrpID_USER_ENABLE_GROUP = 1;
         };
         SocUsrDfdGrpID socUsrDfdGrpID = 2;
      }
      repeated SocDfdUsrDfPro socDfdUsrDfPro = 1;
   }
   SocDfdUsrDfPros socDfdUsrDfPros = 13;
   message SocDisRateLimits {
      message SocDisRateLimit {
         uint32 socCeVlanId = 1;
         uint64 socDropByteRate = 2;
         uint64 socDropBytes = 3;
         uint64 socDropPktRate = 4;
         uint64 socDropPkts = 5;
         bool socEnhance = 6;
         string socIfName = 7;
         uint64 socPassByteRate = 8;
         uint64 socPassBytes = 9;
         uint64 socPassPktRate = 10;
         uint64 socPassPkts = 11;
         uint32 socPeVlanId = 12;
         enum SocProtocolType {
            SocProtocolType_DHCP = 0;
            SocProtocolType_DHCPV6 = 1;
            SocProtocolType_ICMP = 2;
            SocProtocolType_ICMPV6 = 3;
            SocProtocolType_IGMP = 4;
            SocProtocolType_PORT = 5;
            SocProtocolType_ISIS = 6;
            SocProtocolType_LDPX_HELLO = 7;
            SocProtocolType_OSPF = 8;
            SocProtocolType_PIM = 9;
            SocProtocolType_RIP = 10;
            SocProtocolType_RSVP = 11;
            SocProtocolType_VRRP = 12;
         };
         SocProtocolType socProtocolType = 13;
         string socSlotID = 14;
      }
      repeated SocDisRateLimit socDisRateLimit = 1;
   }
   SocDisRateLimits socDisRateLimits = 14;
   message SocDispEvents {
      message SocDispEvent {
         string socAgentId = 1;
         string socAgentPCT = 2;
         string socAppPCT = 3;
         enum SocAttkProbID {
            SocAttkProbID_DETERMINED = 0;
            SocAttkProbID_NOTIFICATION = 1;
            SocAttkProbID_SUSPICION = 2;
            SocAttkProbID_UNKNOWN = 3;
         };
         SocAttkProbID socAttkProbID = 4;
         string socAttkReasDesc = 5;
         string socEndTime = 6;
         int32 socEventSeqNO = 7;
         string socFamilyId = 8;
         string socFamilyPCT = 9;
         string socIfName = 10;
         string socProtocolID = 11;
         string socQinQ = 12;
         string socQinQPCT = 13;
         string socRemoteId = 14;
         string socRemotePCT = 15;
         string socSessionId = 16;
         string socSessionPCT = 17;
         string socSlotID = 18;
         string socSrcIPv6Addr = 19;
         string socSrcIpAddr = 20;
         string socSrcIpPCT = 21;
         string socSrcIpv6PCT = 22;
         string socSrcMacAddr = 23;
         string socSrcMacPCT = 24;
         string socStartTime = 25;
         string socSubIfIndex = 26;
         string socSubIfName = 27;
         string socSubIfPCT = 28;
         string socTunnelId = 29;
         string socTunnelPCT = 30;
         string socVlanIndex = 31;
         string socVlanPCT = 32;
         string socVniIndex = 33;
         string socVniPCT = 34;
      }
      repeated SocDispEvent socDispEvent = 1;
   }
   SocDispEvents socDispEvents = 15;
   message SocEnL3LoDetects {
      message SocEnL3LoDetect {
         uint32 instId = 1;
         enum L3LoopEnable {
            L3LoopEnable_DISABLE = 0;
            L3LoopEnable_ENABLE = 1;
         };
         L3LoopEnable l3LoopEnable = 2;
      }
      repeated SocEnL3LoDetect socEnL3LoDetect = 1;
   }
   SocEnL3LoDetects socEnL3LoDetects = 16;
   message SocEnables {
      message SocEnable {
         uint32 socId = 2;
      }
      repeated SocEnable socEnable = 1;
   }
   SocEnables socEnables = 17;
   message SocHcdtctDRates {
      message SocHcdtctDRate {
         uint32 dropRateValue = 1;
         enum HostCarType {
            HostCarType_HOSTCAR = 0;
            HostCarType_HTTPX_HOSTCAR = 1;
            HostCarType_VLANX_HOSTX_CAR = 2;
         };
         HostCarType hostCarType = 2;
         string slotID = 3;
      }
      repeated SocHcdtctDRate socHcdtctDRate = 1;
   }
   SocHcdtctDRates socHcdtctDRates = 18;
   message SocHlthEnblNodes {
      message SocHlthEnblNode {
         enum HealthEnable {
            HealthEnable_DISABLE = 0;
            HealthEnable_ENABLE = 1;
         };
         HealthEnable healthEnable = 1;
         enum HealthStricFlag {
            HealthStricFlag_DISABLE = 0;
            HealthStricFlag_ENABLE = 1;
         };
         HealthStricFlag healthStricFlag = 2;
         enum L2TpEnableFlag {
            L2TpEnableFlag_DISABLE = 0;
            L2TpEnableFlag_ENABLE = 1;
         };
         L2TpEnableFlag l2tpEnableFlag = 3;
         uint32 vrId = 4;
      }
      repeated SocHlthEnblNode socHlthEnblNode = 1;
   }
   SocHlthEnblNodes socHlthEnblNodes = 19;
   message SocHlthTimes {
      message SocHlthTime {
         uint32 adjDelayCnt = 1;
         uint32 adjInterval = 2;
         enum BoardFlag {
            BoardFlag_CONTROL = 0;
            BoardFlag_INTERFACE = 1;
         };
         BoardFlag boardFlag = 3;
      }
      repeated SocHlthTime socHlthTime = 1;
   }
   SocHlthTimes socHlthTimes = 20;
   message SocL2LoDteThres {
      message SocL2LoDteThre {
         uint32 detectThresh = 1;
         string slotIDStr = 2;
      }
      repeated SocL2LoDteThre socL2loDteThre = 1;
   }
   SocL2LoDteThres socL2loDteThres = 21;
   message SocL2LoLevelThs {
      message SocL2LoLevelTh {
         uint32 determinThresh = 1;
         enum InterfaceType {
            InterfaceType_MAINX_INTERFACE = 0;
            InterfaceType_SUBX_INTERFACE = 1;
         };
         InterfaceType interfaceType = 2;
         uint32 notifyThresh = 3;
         string slotIDStr = 4;
         uint32 suspectThresh = 5;
      }
      repeated SocL2LoLevelTh socL2loLevelTh = 1;
   }
   SocL2LoLevelThs socL2loLevelThs = 22;
   message SocProbalityThres {
      message SocProbalityThre {
         uint32 socDeterminThr = 1;
         uint32 socNotifiThr = 2;
         enum SocProbID {
            SocProbID_APP_ERRPERCENT = 0;
            SocProbID_BROADCAST = 1;
            SocProbID_TOP5_QINQ = 2;
            SocProbID_TOP5_SRCIP = 3;
            SocProbID_TOP5_SRCMAC = 4;
         };
         SocProbID socProbID = 3;
         uint32 socSuspicionThr = 4;
      }
      repeated SocProbalityThre socProbalityThre = 1;
   }
   SocProbalityThres socProbalityThres = 23;
   message SocUsageHistorys {
      message SocUsageHistory {
         uint32 socCpuUsageAvge = 1;
         uint32 socShowNo = 2;
         string socSlotID = 3;
         enum SocTimeLevel {
            SocTimeLevel_LASTCYCLE = 0;
            SocTimeLevel_X_15MIN = 1;
            SocTimeLevel_X_60MIN = 2;
            SocTimeLevel_X_72HOURS = 3;
         };
         SocTimeLevel socTimeLevel = 4;
      }
      repeated SocUsageHistory socUsageHistory = 1;
   }
   SocUsageHistorys socUsageHistorys = 24;
   message SocAdjFloorThrs {
      message SocAdjFloorThr {
         uint32 socAdjIntval = 1;
         uint32 socFloorValue = 2;
         uint32 socID = 3;
         uint32 socResumeIntval = 4;
      }
      repeated SocAdjFloorThr socAdjFloorThr = 1;
   }
   SocAdjFloorThrs socAdjFloorThrs = 25;
   message SocAttkCpuThrs {
      message SocAttkCpuThr {
         uint32 socCpuThr = 1;
         uint32 socID = 2;
      }
      repeated SocAttkCpuThr socAttkCpuThr = 1;
   }
   SocAttkCpuThrs socAttkCpuThrs = 26;
   message SocAttkDctCarThs {
      message SocAttkDctCarTh {
         uint32 socCarDropPct = 1;
         uint32 socCarMinRate = 2;
         string socProtocolName = 3;
      }
      repeated SocAttkDctCarTh socAttkDctCarTh = 1;
   }
   SocAttkDctCarThs socAttkDctCarThs = 27;
   message SecurityOperationCenter {
      message AttackDefend {
         bool enable = 1 [json_name = "enable"];
         message UserDisableGroups {
            message UserDisableGroup {
               enum ProtocolName {
                  INVALID_ENUM_VALUE_ProtocolName = 0;
                  ProtocolName_ICMP = 1;
                  ProtocolName_DHCP = 2;
                  ProtocolName_FTPX_SERVER = 4;
                  ProtocolName_SSHX_SERVER = 5;
                  ProtocolName_SNMP = 6;
                  ProtocolName_TELNETX_SERVER = 7;
                  ProtocolName_TFTP = 8;
                  ProtocolName_BGP = 9;
                  ProtocolName_LDP = 10;
                  ProtocolName_RSVP = 11;
                  ProtocolName_OSPFV2 = 12;
                  ProtocolName_RIP = 13;
                  ProtocolName_OSPFV3 = 15;
                  ProtocolName_MSDP = 16;
                  ProtocolName_PIM = 17;
                  ProtocolName_IGMP = 18;
                  ProtocolName_ISIS = 20;
                  ProtocolName_PIMV6 = 21;
                  ProtocolName_FTPX_CLIENT = 23;
                  ProtocolName_TELNETX_CLIENT = 24;
                  ProtocolName_SSHX_CLIENT = 25;
                  ProtocolName_RADIUS = 28;
                  ProtocolName_HWTACACS = 29;
                  ProtocolName_LSPPING = 30;
                  ProtocolName_VRRP = 32;
                  ProtocolName_BFD = 33;
                  ProtocolName_DNSX_CLIENT = 38;
                  ProtocolName_TELNETV6X_SERVER = 39;
                  ProtocolName_TELNETV6X_CLIENT = 40;
                  ProtocolName_ICMPV6 = 42;
                  ProtocolName_DNSV6 = 43;
                  ProtocolName_SSHV6X_SERVER = 44;
                  ProtocolName_RRPP = 47;
                  ProtocolName_LACP = 50;
                  ProtocolName_BGPV6 = 58;
                  ProtocolName_FTPV6X_CLIENT = 59;
                  ProtocolName_FTPV6X_SERVER = 60;
               };
               ProtocolName protocol_name = 1 [json_name = "protocol-name"];
            }
            repeated UserDisableGroup user_disable_group = 1 [json_name = "user-disable-group"];
         }
         UserDisableGroups user_disable_groups = 2 [json_name = "user-disable-groups"];
         message UserEnableGroups {
            message UserEnableGroup {
               enum ProtocolName {
                  INVALID_ENUM_VALUE_ProtocolName = 0;
                  ProtocolName_ICMP = 1;
                  ProtocolName_DHCP = 2;
                  ProtocolName_FTPX_SERVER = 4;
                  ProtocolName_SSHX_SERVER = 5;
                  ProtocolName_SNMP = 6;
                  ProtocolName_TELNETX_SERVER = 7;
                  ProtocolName_TFTP = 8;
                  ProtocolName_BGP = 9;
                  ProtocolName_LDP = 10;
                  ProtocolName_RSVP = 11;
                  ProtocolName_OSPFV2 = 12;
                  ProtocolName_RIP = 13;
                  ProtocolName_OSPFV3 = 15;
                  ProtocolName_MSDP = 16;
                  ProtocolName_PIM = 17;
                  ProtocolName_IGMP = 18;
                  ProtocolName_ISIS = 20;
                  ProtocolName_PIMV6 = 21;
                  ProtocolName_FTPX_CLIENT = 23;
                  ProtocolName_TELNETX_CLIENT = 24;
                  ProtocolName_SSHX_CLIENT = 25;
                  ProtocolName_RADIUS = 28;
                  ProtocolName_HWTACACS = 29;
                  ProtocolName_LSPPING = 30;
                  ProtocolName_VRRP = 32;
                  ProtocolName_BFD = 33;
                  ProtocolName_DNSX_CLIENT = 38;
                  ProtocolName_TELNETV6X_SERVER = 39;
                  ProtocolName_TELNETV6X_CLIENT = 40;
                  ProtocolName_ICMPV6 = 42;
                  ProtocolName_DNSV6 = 43;
                  ProtocolName_SSHV6X_SERVER = 44;
                  ProtocolName_RRPP = 47;
                  ProtocolName_LACP = 50;
                  ProtocolName_BGPV6 = 58;
                  ProtocolName_FTPV6X_CLIENT = 59;
                  ProtocolName_FTPV6X_SERVER = 60;
               };
               ProtocolName protocol_name = 1 [json_name = "protocol-name"];
            }
            repeated UserEnableGroup user_enable_group = 1 [json_name = "user-enable-group"];
         }
         UserEnableGroups user_enable_groups = 3 [json_name = "user-enable-groups"];
      }
      AttackDefend attack_defend = 1 [json_name = "attack-defend"];
      message AttackDetect {
         message Threshold {
            message CpuUsages {
               uint32 cpu_usage = 1 [json_name = "cpu-usage"];
            }
            CpuUsages cpu_usages = 1 [json_name = "cpu-usages"];
            message ProtocolCars {
               message ProtocolCar {
                  enum ProtocolName {
                     ProtocolName_ARP = 0;
                     ProtocolName_ICMP = 1;
                     ProtocolName_DHCP = 2;
                     ProtocolName_PPPOE = 3;
                     ProtocolName_FTPX_SERVER = 4;
                     ProtocolName_SSHX_SERVER = 5;
                     ProtocolName_SNMP = 6;
                     ProtocolName_TELNETX_SERVER = 7;
                     ProtocolName_TFTP = 8;
                     ProtocolName_BGP = 9;
                     ProtocolName_LDP = 10;
                     ProtocolName_RSVP = 11;
                     ProtocolName_OSPFV2 = 12;
                     ProtocolName_RIP = 13;
                     ProtocolName_RIPNG = 14;
                     ProtocolName_OSPFV3 = 15;
                     ProtocolName_MSDP = 16;
                     ProtocolName_PIM = 17;
                     ProtocolName_IGMP = 18;
                     ProtocolName_MLD = 19;
                     ProtocolName_ISIS = 20;
                     ProtocolName_PIMV6 = 21;
                     ProtocolName_SFTPX_SERVER = 22;
                     ProtocolName_FTPX_CLIENT = 23;
                     ProtocolName_TELNETX_CLIENT = 24;
                     ProtocolName_SSHX_CLIENT = 25;
                     ProtocolName_SFTPX_CLIENT = 26;
                     ProtocolName_NTP = 27;
                     ProtocolName_RADIUS = 28;
                     ProtocolName_HWTACACS = 29;
                     ProtocolName_LSPPING = 30;
                     ProtocolName_VGMP = 31;
                     ProtocolName_VRRP = 32;
                     ProtocolName_BFD = 33;
                     ProtocolName_NQAX_UDPX_CLIENT = 34;
                     ProtocolName_NQAX_UDPX_SERVER = 35;
                     ProtocolName_NQAX_TCPX_CLIENT = 36;
                     ProtocolName_NQAX_TCPX_SERVER = 37;
                     ProtocolName_DNSX_CLIENT = 38;
                     ProtocolName_TELNETV6X_SERVER = 39;
                     ProtocolName_TELNETV6X_CLIENT = 40;
                     ProtocolName_TFTPV6X_CLIENT = 41;
                     ProtocolName_ICMPV6 = 42;
                     ProtocolName_DNSV6 = 43;
                     ProtocolName_SSHV6X_SERVER = 44;
                     ProtocolName_SSHV6X_CLIENT = 45;
                     ProtocolName_MPLSX_OAM = 46;
                     ProtocolName_RRPP = 47;
                     ProtocolName_X_802X_1AG = 48;
                     ProtocolName_X_802X_3AH = 49;
                     ProtocolName_LACP = 50;
                     ProtocolName_HTTPX_CLIENT = 51;
                     ProtocolName_HTTPX_SERVER = 52;
                     ProtocolName_ACR = 53;
                     ProtocolName_UNKNOWN = 54;
                     ProtocolName_WHITEX_LIST = 55;
                     ProtocolName_BLACKX_LIST = 56;
                     ProtocolName_HGMP = 57;
                     ProtocolName_BGPV6 = 58;
                     ProtocolName_FTPV6X_CLIENT = 59;
                     ProtocolName_FTPV6X_SERVER = 60;
                     ProtocolName_IPFPM = 61;
                     ProtocolName_SNMPV6 = 62;
                     ProtocolName_MULTICAST = 63;
                     ProtocolName_MULTICASTV6 = 64;
                     ProtocolName_IP = 65;
                     ProtocolName_IPV6 = 66;
                     ProtocolName_TCP = 67;
                     ProtocolName_UDP = 68;
                     ProtocolName_EAPOL = 69;
                     ProtocolName_PORTAL = 70;
                     ProtocolName_WEB = 71;
                     ProtocolName_L2TP = 72;
                     ProtocolName_DHCPV6 = 73;
                     ProtocolName_ND = 74;
                     ProtocolName_FIBX_MISS = 75;
                     ProtocolName_FIBX_MISSV6 = 76;
                     ProtocolName_TTLX_EXPIRED = 77;
                     ProtocolName_TTLX_EXPIREDV6 = 78;
                     ProtocolName_OSPFV6 = 79;
                     ProtocolName_LLDP = 80;
                     ProtocolName_BFDV6 = 81;
                     ProtocolName_ARPMISS = 82;
                     ProtocolName_PIMX_MC = 83;
                     ProtocolName_OPENFLOW = 84;
                     ProtocolName_RA = 85;
                     ProtocolName_RS = 86;
                     ProtocolName_NA = 87;
                     ProtocolName_NS = 88;
                     ProtocolName_WEBX_AUTHX_SERVER = 89;
                     ProtocolName_DIAMETER = 90;
                     ProtocolName_HTTPX_REDIRECTX_CHASTEN = 91;
                     ProtocolName_ATMX_INARP = 92;
                     ProtocolName_UNICASTX_VRRP = 93;
                     ProtocolName_DLPX_BGP = 94;
                     ProtocolName_DLPX_LDP = 95;
                     ProtocolName_DLPX_OSPF = 96;
                     ProtocolName_TCPX_65410 = 97;
                     ProtocolName_PADI = 98;
                     ProtocolName_MKA = 99;
                     ProtocolName_ICMPX_BROADCASTX_ADDRESSX_ECHO = 100;
                     ProtocolName_DLPX_RSVP = 101;
                     ProtocolName_DLPX_ISIS = 102;
                     ProtocolName_DLPX_RADIUS = 103;
                     ProtocolName_DLPX_IPV6X_BGP = 104;
                     ProtocolName_DLPX_IPV6X_OSPF = 105;
                     ProtocolName_DCNX_PKTX_FIN = 106;
                     ProtocolName_PCEP = 107;
                     ProtocolName_VRRPV6 = 108;
                     ProtocolName_RADIUSV6 = 109;
                     ProtocolName_HWTACACSV6 = 110;
                     ProtocolName_LSPPINGV6 = 111;
                     ProtocolName_SYSLOGV6 = 112;
                     ProtocolName_WEBX_AUTHX_SERVERV6 = 113;
                     ProtocolName_IPV6X_NDHX_MISS = 114;
                     ProtocolName_CUSP = 115;
                  };
                  ProtocolName protocol_name = 1 [json_name = "protocol-name"];
                  uint32 min_rate = 2 [json_name = "min-rate"];
                  uint32 drop_packet_percent = 3 [json_name = "drop-packet-percent"];
               }
               repeated ProtocolCar protocol_car = 1 [json_name = "protocol-car"];
            }
            ProtocolCars protocol_cars = 2 [json_name = "protocol-cars"];
         }
         Threshold threshold = 1 [json_name = "threshold"];
      }
      AttackDetect attack_detect = 2 [json_name = "attack-detect"];
      message AttackTrace {
         message AttackReason {
            uint32 broadcast_flood_percent = 1 [json_name = "broadcast-flood-percent"];
            uint32 change_source_packet_percent = 2 [json_name = "change-source-packet-percent"];
            uint32 app_packet_percent = 3 [json_name = "app-packet-percent"];
         }
         AttackReason attack_reason = 1 [json_name = "attack-reason"];
         message AttackLocationType {
            uint32 interface_percent = 1 [json_name = "interface-percent"];
            uint32 sub_interface_percent = 2 [json_name = "sub-interface-percent"];
            uint32 vlan_percent = 3 [json_name = "vlan-percent"];
            uint32 source_mac_percent = 4 [json_name = "source-mac-percent"];
            uint32 source_ip_percent = 5 [json_name = "source-ip-percent"];
            uint32 qinq_percent = 6 [json_name = "qinq-percent"];
            uint32 vni_percent = 7 [json_name = "vni-percent"];
         }
         AttackLocationType attack_location_type = 2 [json_name = "attack-location-type"];
         message AttackProbabilitys {
            message AttackProbability {
               enum DetermineObject {
                  DetermineObject_TOP5X_USER = 0;
                  DetermineObject_TOP5X_SOURCEX_MAC = 1;
                  DetermineObject_TOP5X_SOURCEX_IP = 2;
                  DetermineObject_BROADCASTX_FLOOD = 3;
                  DetermineObject_APPX_ERRORX_PERCENT = 6;
               };
               DetermineObject determine_object = 1 [json_name = "determine-object"];
               uint32 determined_threshold_value = 2 [json_name = "determined-threshold-value"];
               uint32 suspicion_threshold_value = 3 [json_name = "suspicion-threshold-value"];
               uint32 notification_threshold_value = 4 [json_name = "notification-threshold-value"];
            }
            repeated AttackProbability attack_probability = 1 [json_name = "attack-probability"];
         }
         AttackProbabilitys attack_probabilitys = 3 [json_name = "attack-probabilitys"];
      }
      AttackTrace attack_trace = 3 [json_name = "attack-trace"];
      message AttackDefendStatistics {
         message PortVlanCars {
            message PortVlanCar {
               uint32 number6 = 1 [json_name = "number"];
               string slot = 2 [json_name = "slot"];
               string interface = 3 [json_name = "interface"];
               uint32 outer_vlan = 4 [json_name = "outer-vlan"];
               uint32 inner_vlan = 5 [json_name = "inner-vlan"];
               uint64 passed_packets = 6 [json_name = "passed-packets"];
               uint64 dropped_packets = 7 [json_name = "dropped-packets"];
            }
            repeated PortVlanCar port_vlan_car = 1 [json_name = "port-vlan-car"];
         }
         PortVlanCars port_vlan_cars = 1 [json_name = "port-vlan-cars"];
      }
      AttackDefendStatistics attack_defend_statistics = 4 [json_name = "attack-defend-statistics"];
      message AttackDetectStatistics {
         message Application {
            message Currents {
               message Current {
                  string slot = 1 [json_name = "slot"];
                  enum Protocol {
                     Protocol_ARP = 0;
                     Protocol_ICMP = 1;
                     Protocol_DHCP = 2;
                     Protocol_PPPOE = 3;
                     Protocol_FTPX_SERVER = 4;
                     Protocol_SSHX_SERVER = 5;
                     Protocol_SNMP = 6;
                     Protocol_TELNETX_SERVER = 7;
                     Protocol_TFTP = 8;
                     Protocol_BGP = 9;
                     Protocol_LDP = 10;
                     Protocol_RSVP = 11;
                     Protocol_OSPFV2 = 12;
                     Protocol_RIP = 13;
                     Protocol_RIPNG = 14;
                     Protocol_OSPFV3 = 15;
                     Protocol_MSDP = 16;
                     Protocol_PIM = 17;
                     Protocol_IGMP = 18;
                     Protocol_MLD = 19;
                     Protocol_ISIS = 20;
                     Protocol_PIMV6 = 21;
                     Protocol_SFTPX_SERVER = 22;
                     Protocol_FTPX_CLIENT = 23;
                     Protocol_TELNETX_CLIENT = 24;
                     Protocol_SSHX_CLIENT = 25;
                     Protocol_SFTPX_CLIENT = 26;
                     Protocol_NTP = 27;
                     Protocol_RADIUS = 28;
                     Protocol_HWTACACS = 29;
                     Protocol_LSPPING = 30;
                     Protocol_VGMP = 31;
                     Protocol_VRRP = 32;
                     Protocol_BFD = 33;
                     Protocol_NQAX_UDPX_CLIENT = 34;
                     Protocol_NQAX_UDPX_SERVER = 35;
                     Protocol_NQAX_TCPX_CLIENT = 36;
                     Protocol_NQAX_TCPX_SERVER = 37;
                     Protocol_DNSX_CLIENT = 38;
                     Protocol_TELNETV6X_SERVER = 39;
                     Protocol_TELNETV6X_CLIENT = 40;
                     Protocol_TFTPV6X_CLIENT = 41;
                     Protocol_ICMPV6 = 42;
                     Protocol_DNSV6 = 43;
                     Protocol_SSHV6X_SERVER = 44;
                     Protocol_SSHV6X_CLIENT = 45;
                     Protocol_MPLSX_OAM = 46;
                     Protocol_RRPP = 47;
                     Protocol_X_802X_1AG = 48;
                     Protocol_X_802X_3AH = 49;
                     Protocol_LACP = 50;
                     Protocol_HTTPX_CLIENT = 51;
                     Protocol_HTTPX_SERVER = 52;
                     Protocol_ACR = 53;
                     Protocol_UNKNOWN = 54;
                     Protocol_WHITEX_LIST = 55;
                     Protocol_BLACKX_LIST = 56;
                     Protocol_HGMP = 57;
                     Protocol_BGPV6 = 58;
                     Protocol_FTPV6X_CLIENT = 59;
                     Protocol_FTPV6X_SERVER = 60;
                     Protocol_IPFPM = 61;
                     Protocol_SNMPV6 = 62;
                     Protocol_MULTICAST = 63;
                     Protocol_MULTICASTV6 = 64;
                     Protocol_IP = 65;
                     Protocol_IPV6 = 66;
                     Protocol_TCP = 67;
                     Protocol_UDP = 68;
                     Protocol_EAPOL = 69;
                     Protocol_PORTAL = 70;
                     Protocol_WEB = 71;
                     Protocol_L2TP = 72;
                     Protocol_DHCPV6 = 73;
                     Protocol_ND = 74;
                     Protocol_FIBX_MISS = 75;
                     Protocol_FIBX_MISSV6 = 76;
                     Protocol_TTLX_EXPIRED = 77;
                     Protocol_TTLX_EXPIREDV6 = 78;
                     Protocol_OSPFV6 = 79;
                     Protocol_LLDP = 80;
                     Protocol_BFDV6 = 81;
                     Protocol_ARPMISS = 82;
                     Protocol_PIMX_MC = 83;
                     Protocol_OPENFLOW = 84;
                     Protocol_RA = 85;
                     Protocol_RS = 86;
                     Protocol_NA = 87;
                     Protocol_NS = 88;
                     Protocol_WEBX_AUTHX_SERVER = 89;
                     Protocol_DIAMETER = 90;
                     Protocol_HTTPX_REDIRECTX_CHASTEN = 91;
                     Protocol_ATMX_INARP = 92;
                     Protocol_UNICASTX_VRRP = 93;
                     Protocol_DLPX_BGP = 94;
                     Protocol_DLPX_LDP = 95;
                     Protocol_DLPX_OSPF = 96;
                     Protocol_TCPX_65410 = 97;
                     Protocol_PADI = 98;
                     Protocol_MKA = 99;
                     Protocol_ICMPX_BROADCASTX_ADDRESSX_ECHO = 100;
                     Protocol_DLPX_RSVP = 101;
                     Protocol_DLPX_ISIS = 102;
                     Protocol_DLPX_RADIUS = 103;
                     Protocol_DLPX_IPV6X_BGP = 104;
                     Protocol_DLPX_IPV6X_OSPF = 105;
                     Protocol_DCNX_PKTX_FIN = 106;
                     Protocol_PCEP = 107;
                     Protocol_VRRPV6 = 108;
                     Protocol_RADIUSV6 = 109;
                     Protocol_HWTACACSV6 = 110;
                     Protocol_LSPPINGV6 = 111;
                     Protocol_SYSLOGV6 = 112;
                     Protocol_WEBX_AUTHX_SERVERV6 = 113;
                     Protocol_IPV6X_NDHX_MISS = 114;
                     Protocol_CUSP = 115;
                  };
                  Protocol protocol = 2 [json_name = "protocol"];
                  uint64 total_packet = 3 [json_name = "total-packet"];
                  uint64 illegal_packet = 4 [json_name = "illegal-packet"];
                  uint32 illegal_packet_percent = 5 [json_name = "illegal-packet-percent"];
                  uint64 total_session = 6 [json_name = "total-session"];
                  uint64 illegal_session = 7 [json_name = "illegal-session"];
                  uint32 illegal_session_percent = 8 [json_name = "illegal-session-percent"];
               }
               repeated Current current = 1 [json_name = "current"];
            }
            Currents currents = 1 [json_name = "currents"];
            message Last15Minutess {
               message Last15Minutes {
                  string slot = 1 [json_name = "slot"];
                  enum Protocol {
                     Protocol_ARP = 0;
                     Protocol_ICMP = 1;
                     Protocol_DHCP = 2;
                     Protocol_PPPOE = 3;
                     Protocol_FTPX_SERVER = 4;
                     Protocol_SSHX_SERVER = 5;
                     Protocol_SNMP = 6;
                     Protocol_TELNETX_SERVER = 7;
                     Protocol_TFTP = 8;
                     Protocol_BGP = 9;
                     Protocol_LDP = 10;
                     Protocol_RSVP = 11;
                     Protocol_OSPFV2 = 12;
                     Protocol_RIP = 13;
                     Protocol_RIPNG = 14;
                     Protocol_OSPFV3 = 15;
                     Protocol_MSDP = 16;
                     Protocol_PIM = 17;
                     Protocol_IGMP = 18;
                     Protocol_MLD = 19;
                     Protocol_ISIS = 20;
                     Protocol_PIMV6 = 21;
                     Protocol_SFTPX_SERVER = 22;
                     Protocol_FTPX_CLIENT = 23;
                     Protocol_TELNETX_CLIENT = 24;
                     Protocol_SSHX_CLIENT = 25;
                     Protocol_SFTPX_CLIENT = 26;
                     Protocol_NTP = 27;
                     Protocol_RADIUS = 28;
                     Protocol_HWTACACS = 29;
                     Protocol_LSPPING = 30;
                     Protocol_VGMP = 31;
                     Protocol_VRRP = 32;
                     Protocol_BFD = 33;
                     Protocol_NQAX_UDPX_CLIENT = 34;
                     Protocol_NQAX_UDPX_SERVER = 35;
                     Protocol_NQAX_TCPX_CLIENT = 36;
                     Protocol_NQAX_TCPX_SERVER = 37;
                     Protocol_DNSX_CLIENT = 38;
                     Protocol_TELNETV6X_SERVER = 39;
                     Protocol_TELNETV6X_CLIENT = 40;
                     Protocol_TFTPV6X_CLIENT = 41;
                     Protocol_ICMPV6 = 42;
                     Protocol_DNSV6 = 43;
                     Protocol_SSHV6X_SERVER = 44;
                     Protocol_SSHV6X_CLIENT = 45;
                     Protocol_MPLSX_OAM = 46;
                     Protocol_RRPP = 47;
                     Protocol_X_802X_1AG = 48;
                     Protocol_X_802X_3AH = 49;
                     Protocol_LACP = 50;
                     Protocol_HTTPX_CLIENT = 51;
                     Protocol_HTTPX_SERVER = 52;
                     Protocol_ACR = 53;
                     Protocol_UNKNOWN = 54;
                     Protocol_WHITEX_LIST = 55;
                     Protocol_BLACKX_LIST = 56;
                     Protocol_HGMP = 57;
                     Protocol_BGPV6 = 58;
                     Protocol_FTPV6X_CLIENT = 59;
                     Protocol_FTPV6X_SERVER = 60;
                     Protocol_IPFPM = 61;
                     Protocol_SNMPV6 = 62;
                     Protocol_MULTICAST = 63;
                     Protocol_MULTICASTV6 = 64;
                     Protocol_IP = 65;
                     Protocol_IPV6 = 66;
                     Protocol_TCP = 67;
                     Protocol_UDP = 68;
                     Protocol_EAPOL = 69;
                     Protocol_PORTAL = 70;
                     Protocol_WEB = 71;
                     Protocol_L2TP = 72;
                     Protocol_DHCPV6 = 73;
                     Protocol_ND = 74;
                     Protocol_FIBX_MISS = 75;
                     Protocol_FIBX_MISSV6 = 76;
                     Protocol_TTLX_EXPIRED = 77;
                     Protocol_TTLX_EXPIREDV6 = 78;
                     Protocol_OSPFV6 = 79;
                     Protocol_LLDP = 80;
                     Protocol_BFDV6 = 81;
                     Protocol_ARPMISS = 82;
                     Protocol_PIMX_MC = 83;
                     Protocol_OPENFLOW = 84;
                     Protocol_RA = 85;
                     Protocol_RS = 86;
                     Protocol_NA = 87;
                     Protocol_NS = 88;
                     Protocol_WEBX_AUTHX_SERVER = 89;
                     Protocol_DIAMETER = 90;
                     Protocol_HTTPX_REDIRECTX_CHASTEN = 91;
                     Protocol_ATMX_INARP = 92;
                     Protocol_UNICASTX_VRRP = 93;
                     Protocol_DLPX_BGP = 94;
                     Protocol_DLPX_LDP = 95;
                     Protocol_DLPX_OSPF = 96;
                     Protocol_TCPX_65410 = 97;
                     Protocol_PADI = 98;
                     Protocol_MKA = 99;
                     Protocol_ICMPX_BROADCASTX_ADDRESSX_ECHO = 100;
                     Protocol_DLPX_RSVP = 101;
                     Protocol_DLPX_ISIS = 102;
                     Protocol_DLPX_RADIUS = 103;
                     Protocol_DLPX_IPV6X_BGP = 104;
                     Protocol_DLPX_IPV6X_OSPF = 105;
                     Protocol_DCNX_PKTX_FIN = 106;
                     Protocol_PCEP = 107;
                     Protocol_VRRPV6 = 108;
                     Protocol_RADIUSV6 = 109;
                     Protocol_HWTACACSV6 = 110;
                     Protocol_LSPPINGV6 = 111;
                     Protocol_SYSLOGV6 = 112;
                     Protocol_WEBX_AUTHX_SERVERV6 = 113;
                     Protocol_IPV6X_NDHX_MISS = 114;
                     Protocol_CUSP = 115;
                  };
                  Protocol protocol = 2 [json_name = "protocol"];
                  uint32 time_number = 3 [json_name = "time-number"];
                  uint32 total_packet_rate = 4 [json_name = "total-packet-rate"];
                  uint32 illegal_packet_rate = 5 [json_name = "illegal-packet-rate"];
                  uint32 illegal_packet_percent = 6 [json_name = "illegal-packet-percent"];
                  uint32 total_session_rate = 7 [json_name = "total-session-rate"];
                  uint32 illegal_session_rate = 8 [json_name = "illegal-session-rate"];
                  uint32 illegal_session_percent = 9 [json_name = "illegal-session-percent"];
                  uint32 cpu_usage = 10 [json_name = "cpu-usage"];
               }
               repeated Last15Minutes last_15_minutes = 1 [json_name = "last-15-minutes"];
            }
            Last15Minutess last_15_minutess = 2 [json_name = "last-15-minutess"];
            message Last60Minutess {
               message Last60Minutes {
                  string slot = 1 [json_name = "slot"];
                  enum Protocol {
                     Protocol_ARP = 0;
                     Protocol_ICMP = 1;
                     Protocol_DHCP = 2;
                     Protocol_PPPOE = 3;
                     Protocol_FTPX_SERVER = 4;
                     Protocol_SSHX_SERVER = 5;
                     Protocol_SNMP = 6;
                     Protocol_TELNETX_SERVER = 7;
                     Protocol_TFTP = 8;
                     Protocol_BGP = 9;
                     Protocol_LDP = 10;
                     Protocol_RSVP = 11;
                     Protocol_OSPFV2 = 12;
                     Protocol_RIP = 13;
                     Protocol_RIPNG = 14;
                     Protocol_OSPFV3 = 15;
                     Protocol_MSDP = 16;
                     Protocol_PIM = 17;
                     Protocol_IGMP = 18;
                     Protocol_MLD = 19;
                     Protocol_ISIS = 20;
                     Protocol_PIMV6 = 21;
                     Protocol_SFTPX_SERVER = 22;
                     Protocol_FTPX_CLIENT = 23;
                     Protocol_TELNETX_CLIENT = 24;
                     Protocol_SSHX_CLIENT = 25;
                     Protocol_SFTPX_CLIENT = 26;
                     Protocol_NTP = 27;
                     Protocol_RADIUS = 28;
                     Protocol_HWTACACS = 29;
                     Protocol_LSPPING = 30;
                     Protocol_VGMP = 31;
                     Protocol_VRRP = 32;
                     Protocol_BFD = 33;
                     Protocol_NQAX_UDPX_CLIENT = 34;
                     Protocol_NQAX_UDPX_SERVER = 35;
                     Protocol_NQAX_TCPX_CLIENT = 36;
                     Protocol_NQAX_TCPX_SERVER = 37;
                     Protocol_DNSX_CLIENT = 38;
                     Protocol_TELNETV6X_SERVER = 39;
                     Protocol_TELNETV6X_CLIENT = 40;
                     Protocol_TFTPV6X_CLIENT = 41;
                     Protocol_ICMPV6 = 42;
                     Protocol_DNSV6 = 43;
                     Protocol_SSHV6X_SERVER = 44;
                     Protocol_SSHV6X_CLIENT = 45;
                     Protocol_MPLSX_OAM = 46;
                     Protocol_RRPP = 47;
                     Protocol_X_802X_1AG = 48;
                     Protocol_X_802X_3AH = 49;
                     Protocol_LACP = 50;
                     Protocol_HTTPX_CLIENT = 51;
                     Protocol_HTTPX_SERVER = 52;
                     Protocol_ACR = 53;
                     Protocol_UNKNOWN = 54;
                     Protocol_WHITEX_LIST = 55;
                     Protocol_BLACKX_LIST = 56;
                     Protocol_HGMP = 57;
                     Protocol_BGPV6 = 58;
                     Protocol_FTPV6X_CLIENT = 59;
                     Protocol_FTPV6X_SERVER = 60;
                     Protocol_IPFPM = 61;
                     Protocol_SNMPV6 = 62;
                     Protocol_MULTICAST = 63;
                     Protocol_MULTICASTV6 = 64;
                     Protocol_IP = 65;
                     Protocol_IPV6 = 66;
                     Protocol_TCP = 67;
                     Protocol_UDP = 68;
                     Protocol_EAPOL = 69;
                     Protocol_PORTAL = 70;
                     Protocol_WEB = 71;
                     Protocol_L2TP = 72;
                     Protocol_DHCPV6 = 73;
                     Protocol_ND = 74;
                     Protocol_FIBX_MISS = 75;
                     Protocol_FIBX_MISSV6 = 76;
                     Protocol_TTLX_EXPIRED = 77;
                     Protocol_TTLX_EXPIREDV6 = 78;
                     Protocol_OSPFV6 = 79;
                     Protocol_LLDP = 80;
                     Protocol_BFDV6 = 81;
                     Protocol_ARPMISS = 82;
                     Protocol_PIMX_MC = 83;
                     Protocol_OPENFLOW = 84;
                     Protocol_RA = 85;
                     Protocol_RS = 86;
                     Protocol_NA = 87;
                     Protocol_NS = 88;
                     Protocol_WEBX_AUTHX_SERVER = 89;
                     Protocol_DIAMETER = 90;
                     Protocol_HTTPX_REDIRECTX_CHASTEN = 91;
                     Protocol_ATMX_INARP = 92;
                     Protocol_UNICASTX_VRRP = 93;
                     Protocol_DLPX_BGP = 94;
                     Protocol_DLPX_LDP = 95;
                     Protocol_DLPX_OSPF = 96;
                     Protocol_TCPX_65410 = 97;
                     Protocol_PADI = 98;
                     Protocol_MKA = 99;
                     Protocol_ICMPX_BROADCASTX_ADDRESSX_ECHO = 100;
                     Protocol_DLPX_RSVP = 101;
                     Protocol_DLPX_ISIS = 102;
                     Protocol_DLPX_RADIUS = 103;
                     Protocol_DLPX_IPV6X_BGP = 104;
                     Protocol_DLPX_IPV6X_OSPF = 105;
                     Protocol_DCNX_PKTX_FIN = 106;
                     Protocol_PCEP = 107;
                     Protocol_VRRPV6 = 108;
                     Protocol_RADIUSV6 = 109;
                     Protocol_HWTACACSV6 = 110;
                     Protocol_LSPPINGV6 = 111;
                     Protocol_SYSLOGV6 = 112;
                     Protocol_WEBX_AUTHX_SERVERV6 = 113;
                     Protocol_IPV6X_NDHX_MISS = 114;
                     Protocol_CUSP = 115;
                  };
                  Protocol protocol = 2 [json_name = "protocol"];
                  uint32 time_number = 3 [json_name = "time-number"];
                  uint32 total_packet_rate = 4 [json_name = "total-packet-rate"];
                  uint32 illegal_packet_rate = 5 [json_name = "illegal-packet-rate"];
                  uint32 illegal_packet_percent = 6 [json_name = "illegal-packet-percent"];
                  uint32 total_session_rate = 7 [json_name = "total-session-rate"];
                  uint32 illegal_session_rate = 8 [json_name = "illegal-session-rate"];
                  uint32 illegal_session_percent = 9 [json_name = "illegal-session-percent"];
                  uint32 cpu_usage = 10 [json_name = "cpu-usage"];
               }
               repeated Last60Minutes last_60_minutes = 1 [json_name = "last-60-minutes"];
            }
            Last60Minutess last_60_minutess = 3 [json_name = "last-60-minutess"];
            message Last72Hourss {
               message Last72Hours {
                  string slot = 1 [json_name = "slot"];
                  enum Protocol {
                     Protocol_ARP = 0;
                     Protocol_ICMP = 1;
                     Protocol_DHCP = 2;
                     Protocol_PPPOE = 3;
                     Protocol_FTPX_SERVER = 4;
                     Protocol_SSHX_SERVER = 5;
                     Protocol_SNMP = 6;
                     Protocol_TELNETX_SERVER = 7;
                     Protocol_TFTP = 8;
                     Protocol_BGP = 9;
                     Protocol_LDP = 10;
                     Protocol_RSVP = 11;
                     Protocol_OSPFV2 = 12;
                     Protocol_RIP = 13;
                     Protocol_RIPNG = 14;
                     Protocol_OSPFV3 = 15;
                     Protocol_MSDP = 16;
                     Protocol_PIM = 17;
                     Protocol_IGMP = 18;
                     Protocol_MLD = 19;
                     Protocol_ISIS = 20;
                     Protocol_PIMV6 = 21;
                     Protocol_SFTPX_SERVER = 22;
                     Protocol_FTPX_CLIENT = 23;
                     Protocol_TELNETX_CLIENT = 24;
                     Protocol_SSHX_CLIENT = 25;
                     Protocol_SFTPX_CLIENT = 26;
                     Protocol_NTP = 27;
                     Protocol_RADIUS = 28;
                     Protocol_HWTACACS = 29;
                     Protocol_LSPPING = 30;
                     Protocol_VGMP = 31;
                     Protocol_VRRP = 32;
                     Protocol_BFD = 33;
                     Protocol_NQAX_UDPX_CLIENT = 34;
                     Protocol_NQAX_UDPX_SERVER = 35;
                     Protocol_NQAX_TCPX_CLIENT = 36;
                     Protocol_NQAX_TCPX_SERVER = 37;
                     Protocol_DNSX_CLIENT = 38;
                     Protocol_TELNETV6X_SERVER = 39;
                     Protocol_TELNETV6X_CLIENT = 40;
                     Protocol_TFTPV6X_CLIENT = 41;
                     Protocol_ICMPV6 = 42;
                     Protocol_DNSV6 = 43;
                     Protocol_SSHV6X_SERVER = 44;
                     Protocol_SSHV6X_CLIENT = 45;
                     Protocol_MPLSX_OAM = 46;
                     Protocol_RRPP = 47;
                     Protocol_X_802X_1AG = 48;
                     Protocol_X_802X_3AH = 49;
                     Protocol_LACP = 50;
                     Protocol_HTTPX_CLIENT = 51;
                     Protocol_HTTPX_SERVER = 52;
                     Protocol_ACR = 53;
                     Protocol_UNKNOWN = 54;
                     Protocol_WHITEX_LIST = 55;
                     Protocol_BLACKX_LIST = 56;
                     Protocol_HGMP = 57;
                     Protocol_BGPV6 = 58;
                     Protocol_FTPV6X_CLIENT = 59;
                     Protocol_FTPV6X_SERVER = 60;
                     Protocol_IPFPM = 61;
                     Protocol_SNMPV6 = 62;
                     Protocol_MULTICAST = 63;
                     Protocol_MULTICASTV6 = 64;
                     Protocol_IP = 65;
                     Protocol_IPV6 = 66;
                     Protocol_TCP = 67;
                     Protocol_UDP = 68;
                     Protocol_EAPOL = 69;
                     Protocol_PORTAL = 70;
                     Protocol_WEB = 71;
                     Protocol_L2TP = 72;
                     Protocol_DHCPV6 = 73;
                     Protocol_ND = 74;
                     Protocol_FIBX_MISS = 75;
                     Protocol_FIBX_MISSV6 = 76;
                     Protocol_TTLX_EXPIRED = 77;
                     Protocol_TTLX_EXPIREDV6 = 78;
                     Protocol_OSPFV6 = 79;
                     Protocol_LLDP = 80;
                     Protocol_BFDV6 = 81;
                     Protocol_ARPMISS = 82;
                     Protocol_PIMX_MC = 83;
                     Protocol_OPENFLOW = 84;
                     Protocol_RA = 85;
                     Protocol_RS = 86;
                     Protocol_NA = 87;
                     Protocol_NS = 88;
                     Protocol_WEBX_AUTHX_SERVER = 89;
                     Protocol_DIAMETER = 90;
                     Protocol_HTTPX_REDIRECTX_CHASTEN = 91;
                     Protocol_ATMX_INARP = 92;
                     Protocol_UNICASTX_VRRP = 93;
                     Protocol_DLPX_BGP = 94;
                     Protocol_DLPX_LDP = 95;
                     Protocol_DLPX_OSPF = 96;
                     Protocol_TCPX_65410 = 97;
                     Protocol_PADI = 98;
                     Protocol_MKA = 99;
                     Protocol_ICMPX_BROADCASTX_ADDRESSX_ECHO = 100;
                     Protocol_DLPX_RSVP = 101;
                     Protocol_DLPX_ISIS = 102;
                     Protocol_DLPX_RADIUS = 103;
                     Protocol_DLPX_IPV6X_BGP = 104;
                     Protocol_DLPX_IPV6X_OSPF = 105;
                     Protocol_DCNX_PKTX_FIN = 106;
                     Protocol_PCEP = 107;
                     Protocol_VRRPV6 = 108;
                     Protocol_RADIUSV6 = 109;
                     Protocol_HWTACACSV6 = 110;
                     Protocol_LSPPINGV6 = 111;
                     Protocol_SYSLOGV6 = 112;
                     Protocol_WEBX_AUTHX_SERVERV6 = 113;
                     Protocol_IPV6X_NDHX_MISS = 114;
                     Protocol_CUSP = 115;
                  };
                  Protocol protocol = 2 [json_name = "protocol"];
                  uint32 time_number = 3 [json_name = "time-number"];
                  uint32 total_packet_rate = 4 [json_name = "total-packet-rate"];
                  uint32 illegal_packet_rate = 5 [json_name = "illegal-packet-rate"];
                  uint32 illegal_packet_percent = 6 [json_name = "illegal-packet-percent"];
                  uint32 total_session_rate = 7 [json_name = "total-session-rate"];
                  uint32 illegal_session_rate = 8 [json_name = "illegal-session-rate"];
                  uint32 illegal_session_percent = 9 [json_name = "illegal-session-percent"];
                  uint32 cpu_usage = 10 [json_name = "cpu-usage"];
               }
               repeated Last72Hours last_72_hours = 1 [json_name = "last-72-hours"];
            }
            Last72Hourss last_72_hourss = 4 [json_name = "last-72-hourss"];
         }
         Application application = 1 [json_name = "application"];
         message Car {
            message Currents {
               message Current {
                  string slot = 1 [json_name = "slot"];
                  enum Protocol {
                     Protocol_ARP = 0;
                     Protocol_ICMP = 1;
                     Protocol_DHCP = 2;
                     Protocol_PPPOE = 3;
                     Protocol_FTPX_SERVER = 4;
                     Protocol_SSHX_SERVER = 5;
                     Protocol_SNMP = 6;
                     Protocol_TELNETX_SERVER = 7;
                     Protocol_TFTP = 8;
                     Protocol_BGP = 9;
                     Protocol_LDP = 10;
                     Protocol_RSVP = 11;
                     Protocol_OSPFV2 = 12;
                     Protocol_RIP = 13;
                     Protocol_RIPNG = 14;
                     Protocol_OSPFV3 = 15;
                     Protocol_MSDP = 16;
                     Protocol_PIM = 17;
                     Protocol_IGMP = 18;
                     Protocol_MLD = 19;
                     Protocol_ISIS = 20;
                     Protocol_PIMV6 = 21;
                     Protocol_SFTPX_SERVER = 22;
                     Protocol_FTPX_CLIENT = 23;
                     Protocol_TELNETX_CLIENT = 24;
                     Protocol_SSHX_CLIENT = 25;
                     Protocol_SFTPX_CLIENT = 26;
                     Protocol_NTP = 27;
                     Protocol_RADIUS = 28;
                     Protocol_HWTACACS = 29;
                     Protocol_LSPPING = 30;
                     Protocol_VGMP = 31;
                     Protocol_VRRP = 32;
                     Protocol_BFD = 33;
                     Protocol_NQAX_UDPX_CLIENT = 34;
                     Protocol_NQAX_UDPX_SERVER = 35;
                     Protocol_NQAX_TCPX_CLIENT = 36;
                     Protocol_NQAX_TCPX_SERVER = 37;
                     Protocol_DNSX_CLIENT = 38;
                     Protocol_TELNETV6X_SERVER = 39;
                     Protocol_TELNETV6X_CLIENT = 40;
                     Protocol_TFTPV6X_CLIENT = 41;
                     Protocol_ICMPV6 = 42;
                     Protocol_DNSV6 = 43;
                     Protocol_SSHV6X_SERVER = 44;
                     Protocol_SSHV6X_CLIENT = 45;
                     Protocol_MPLSX_OAM = 46;
                     Protocol_RRPP = 47;
                     Protocol_X_802X_1AG = 48;
                     Protocol_X_802X_3AH = 49;
                     Protocol_LACP = 50;
                     Protocol_HTTPX_CLIENT = 51;
                     Protocol_HTTPX_SERVER = 52;
                     Protocol_ACR = 53;
                     Protocol_UNKNOWN = 54;
                     Protocol_WHITEX_LIST = 55;
                     Protocol_BLACKX_LIST = 56;
                     Protocol_HGMP = 57;
                     Protocol_BGPV6 = 58;
                     Protocol_FTPV6X_CLIENT = 59;
                     Protocol_FTPV6X_SERVER = 60;
                     Protocol_IPFPM = 61;
                     Protocol_SNMPV6 = 62;
                     Protocol_MULTICAST = 63;
                     Protocol_MULTICASTV6 = 64;
                     Protocol_IP = 65;
                     Protocol_IPV6 = 66;
                     Protocol_TCP = 67;
                     Protocol_UDP = 68;
                     Protocol_EAPOL = 69;
                     Protocol_PORTAL = 70;
                     Protocol_WEB = 71;
                     Protocol_L2TP = 72;
                     Protocol_DHCPV6 = 73;
                     Protocol_ND = 74;
                     Protocol_FIBX_MISS = 75;
                     Protocol_FIBX_MISSV6 = 76;
                     Protocol_TTLX_EXPIRED = 77;
                     Protocol_TTLX_EXPIREDV6 = 78;
                     Protocol_OSPFV6 = 79;
                     Protocol_LLDP = 80;
                     Protocol_BFDV6 = 81;
                     Protocol_ARPMISS = 82;
                     Protocol_PIMX_MC = 83;
                     Protocol_OPENFLOW = 84;
                     Protocol_RA = 85;
                     Protocol_RS = 86;
                     Protocol_NA = 87;
                     Protocol_NS = 88;
                     Protocol_WEBX_AUTHX_SERVER = 89;
                     Protocol_DIAMETER = 90;
                     Protocol_HTTPX_REDIRECTX_CHASTEN = 91;
                     Protocol_ATMX_INARP = 92;
                     Protocol_UNICASTX_VRRP = 93;
                     Protocol_DLPX_BGP = 94;
                     Protocol_DLPX_LDP = 95;
                     Protocol_DLPX_OSPF = 96;
                     Protocol_TCPX_65410 = 97;
                     Protocol_PADI = 98;
                     Protocol_MKA = 99;
                     Protocol_ICMPX_BROADCASTX_ADDRESSX_ECHO = 100;
                     Protocol_DLPX_RSVP = 101;
                     Protocol_DLPX_ISIS = 102;
                     Protocol_DLPX_RADIUS = 103;
                     Protocol_DLPX_IPV6X_BGP = 104;
                     Protocol_DLPX_IPV6X_OSPF = 105;
                     Protocol_DCNX_PKTX_FIN = 106;
                     Protocol_PCEP = 107;
                     Protocol_VRRPV6 = 108;
                     Protocol_RADIUSV6 = 109;
                     Protocol_HWTACACSV6 = 110;
                     Protocol_LSPPINGV6 = 111;
                     Protocol_SYSLOGV6 = 112;
                     Protocol_WEBX_AUTHX_SERVERV6 = 113;
                     Protocol_IPV6X_NDHX_MISS = 114;
                     Protocol_CUSP = 115;
                  };
                  Protocol protocol = 2 [json_name = "protocol"];
                  string car_name = 3 [json_name = "car-name"];
                  uint64 passed_packets = 4 [json_name = "passed-packets"];
                  uint64 dropped_packets = 5 [json_name = "dropped-packets"];
                  uint64 passed_bytes = 6 [json_name = "passed-bytes"];
                  uint64 dropped_bytes = 7 [json_name = "dropped-bytes"];
               }
               repeated Current current = 1 [json_name = "current"];
            }
            Currents currents = 1 [json_name = "currents"];
            message Last15Minutess {
               message Last15Minutes {
                  string slot = 1 [json_name = "slot"];
                  enum Protocol {
                     Protocol_ARP = 0;
                     Protocol_ICMP = 1;
                     Protocol_DHCP = 2;
                     Protocol_PPPOE = 3;
                     Protocol_FTPX_SERVER = 4;
                     Protocol_SSHX_SERVER = 5;
                     Protocol_SNMP = 6;
                     Protocol_TELNETX_SERVER = 7;
                     Protocol_TFTP = 8;
                     Protocol_BGP = 9;
                     Protocol_LDP = 10;
                     Protocol_RSVP = 11;
                     Protocol_OSPFV2 = 12;
                     Protocol_RIP = 13;
                     Protocol_RIPNG = 14;
                     Protocol_OSPFV3 = 15;
                     Protocol_MSDP = 16;
                     Protocol_PIM = 17;
                     Protocol_IGMP = 18;
                     Protocol_MLD = 19;
                     Protocol_ISIS = 20;
                     Protocol_PIMV6 = 21;
                     Protocol_SFTPX_SERVER = 22;
                     Protocol_FTPX_CLIENT = 23;
                     Protocol_TELNETX_CLIENT = 24;
                     Protocol_SSHX_CLIENT = 25;
                     Protocol_SFTPX_CLIENT = 26;
                     Protocol_NTP = 27;
                     Protocol_RADIUS = 28;
                     Protocol_HWTACACS = 29;
                     Protocol_LSPPING = 30;
                     Protocol_VGMP = 31;
                     Protocol_VRRP = 32;
                     Protocol_BFD = 33;
                     Protocol_NQAX_UDPX_CLIENT = 34;
                     Protocol_NQAX_UDPX_SERVER = 35;
                     Protocol_NQAX_TCPX_CLIENT = 36;
                     Protocol_NQAX_TCPX_SERVER = 37;
                     Protocol_DNSX_CLIENT = 38;
                     Protocol_TELNETV6X_SERVER = 39;
                     Protocol_TELNETV6X_CLIENT = 40;
                     Protocol_TFTPV6X_CLIENT = 41;
                     Protocol_ICMPV6 = 42;
                     Protocol_DNSV6 = 43;
                     Protocol_SSHV6X_SERVER = 44;
                     Protocol_SSHV6X_CLIENT = 45;
                     Protocol_MPLSX_OAM = 46;
                     Protocol_RRPP = 47;
                     Protocol_X_802X_1AG = 48;
                     Protocol_X_802X_3AH = 49;
                     Protocol_LACP = 50;
                     Protocol_HTTPX_CLIENT = 51;
                     Protocol_HTTPX_SERVER = 52;
                     Protocol_ACR = 53;
                     Protocol_UNKNOWN = 54;
                     Protocol_WHITEX_LIST = 55;
                     Protocol_BLACKX_LIST = 56;
                     Protocol_HGMP = 57;
                     Protocol_BGPV6 = 58;
                     Protocol_FTPV6X_CLIENT = 59;
                     Protocol_FTPV6X_SERVER = 60;
                     Protocol_IPFPM = 61;
                     Protocol_SNMPV6 = 62;
                     Protocol_MULTICAST = 63;
                     Protocol_MULTICASTV6 = 64;
                     Protocol_IP = 65;
                     Protocol_IPV6 = 66;
                     Protocol_TCP = 67;
                     Protocol_UDP = 68;
                     Protocol_EAPOL = 69;
                     Protocol_PORTAL = 70;
                     Protocol_WEB = 71;
                     Protocol_L2TP = 72;
                     Protocol_DHCPV6 = 73;
                     Protocol_ND = 74;
                     Protocol_FIBX_MISS = 75;
                     Protocol_FIBX_MISSV6 = 76;
                     Protocol_TTLX_EXPIRED = 77;
                     Protocol_TTLX_EXPIREDV6 = 78;
                     Protocol_OSPFV6 = 79;
                     Protocol_LLDP = 80;
                     Protocol_BFDV6 = 81;
                     Protocol_ARPMISS = 82;
                     Protocol_PIMX_MC = 83;
                     Protocol_OPENFLOW = 84;
                     Protocol_RA = 85;
                     Protocol_RS = 86;
                     Protocol_NA = 87;
                     Protocol_NS = 88;
                     Protocol_WEBX_AUTHX_SERVER = 89;
                     Protocol_DIAMETER = 90;
                     Protocol_HTTPX_REDIRECTX_CHASTEN = 91;
                     Protocol_ATMX_INARP = 92;
                     Protocol_UNICASTX_VRRP = 93;
                     Protocol_DLPX_BGP = 94;
                     Protocol_DLPX_LDP = 95;
                     Protocol_DLPX_OSPF = 96;
                     Protocol_TCPX_65410 = 97;
                     Protocol_PADI = 98;
                     Protocol_MKA = 99;
                     Protocol_ICMPX_BROADCASTX_ADDRESSX_ECHO = 100;
                     Protocol_DLPX_RSVP = 101;
                     Protocol_DLPX_ISIS = 102;
                     Protocol_DLPX_RADIUS = 103;
                     Protocol_DLPX_IPV6X_BGP = 104;
                     Protocol_DLPX_IPV6X_OSPF = 105;
                     Protocol_DCNX_PKTX_FIN = 106;
                     Protocol_PCEP = 107;
                     Protocol_VRRPV6 = 108;
                     Protocol_RADIUSV6 = 109;
                     Protocol_HWTACACSV6 = 110;
                     Protocol_LSPPINGV6 = 111;
                     Protocol_SYSLOGV6 = 112;
                     Protocol_WEBX_AUTHX_SERVERV6 = 113;
                     Protocol_IPV6X_NDHX_MISS = 114;
                     Protocol_CUSP = 115;
                  };
                  Protocol protocol = 2 [json_name = "protocol"];
                  string car_name = 3 [json_name = "car-name"];
                  uint32 time_number = 4 [json_name = "time-number"];
                  uint32 total_packet_rate = 5 [json_name = "total-packet-rate"];
                  uint32 dropped_packet_rate = 6 [json_name = "dropped-packet-rate"];
                  uint32 dropped_packet_percent = 7 [json_name = "dropped-packet-percent"];
               }
               repeated Last15Minutes last_15_minutes = 1 [json_name = "last-15-minutes"];
            }
            Last15Minutess last_15_minutess = 2 [json_name = "last-15-minutess"];
            message Last60Minutess {
               message Last60Minutes {
                  string slot = 1 [json_name = "slot"];
                  enum Protocol {
                     Protocol_ARP = 0;
                     Protocol_ICMP = 1;
                     Protocol_DHCP = 2;
                     Protocol_PPPOE = 3;
                     Protocol_FTPX_SERVER = 4;
                     Protocol_SSHX_SERVER = 5;
                     Protocol_SNMP = 6;
                     Protocol_TELNETX_SERVER = 7;
                     Protocol_TFTP = 8;
                     Protocol_BGP = 9;
                     Protocol_LDP = 10;
                     Protocol_RSVP = 11;
                     Protocol_OSPFV2 = 12;
                     Protocol_RIP = 13;
                     Protocol_RIPNG = 14;
                     Protocol_OSPFV3 = 15;
                     Protocol_MSDP = 16;
                     Protocol_PIM = 17;
                     Protocol_IGMP = 18;
                     Protocol_MLD = 19;
                     Protocol_ISIS = 20;
                     Protocol_PIMV6 = 21;
                     Protocol_SFTPX_SERVER = 22;
                     Protocol_FTPX_CLIENT = 23;
                     Protocol_TELNETX_CLIENT = 24;
                     Protocol_SSHX_CLIENT = 25;
                     Protocol_SFTPX_CLIENT = 26;
                     Protocol_NTP = 27;
                     Protocol_RADIUS = 28;
                     Protocol_HWTACACS = 29;
                     Protocol_LSPPING = 30;
                     Protocol_VGMP = 31;
                     Protocol_VRRP = 32;
                     Protocol_BFD = 33;
                     Protocol_NQAX_UDPX_CLIENT = 34;
                     Protocol_NQAX_UDPX_SERVER = 35;
                     Protocol_NQAX_TCPX_CLIENT = 36;
                     Protocol_NQAX_TCPX_SERVER = 37;
                     Protocol_DNSX_CLIENT = 38;
                     Protocol_TELNETV6X_SERVER = 39;
                     Protocol_TELNETV6X_CLIENT = 40;
                     Protocol_TFTPV6X_CLIENT = 41;
                     Protocol_ICMPV6 = 42;
                     Protocol_DNSV6 = 43;
                     Protocol_SSHV6X_SERVER = 44;
                     Protocol_SSHV6X_CLIENT = 45;
                     Protocol_MPLSX_OAM = 46;
                     Protocol_RRPP = 47;
                     Protocol_X_802X_1AG = 48;
                     Protocol_X_802X_3AH = 49;
                     Protocol_LACP = 50;
                     Protocol_HTTPX_CLIENT = 51;
                     Protocol_HTTPX_SERVER = 52;
                     Protocol_ACR = 53;
                     Protocol_UNKNOWN = 54;
                     Protocol_WHITEX_LIST = 55;
                     Protocol_BLACKX_LIST = 56;
                     Protocol_HGMP = 57;
                     Protocol_BGPV6 = 58;
                     Protocol_FTPV6X_CLIENT = 59;
                     Protocol_FTPV6X_SERVER = 60;
                     Protocol_IPFPM = 61;
                     Protocol_SNMPV6 = 62;
                     Protocol_MULTICAST = 63;
                     Protocol_MULTICASTV6 = 64;
                     Protocol_IP = 65;
                     Protocol_IPV6 = 66;
                     Protocol_TCP = 67;
                     Protocol_UDP = 68;
                     Protocol_EAPOL = 69;
                     Protocol_PORTAL = 70;
                     Protocol_WEB = 71;
                     Protocol_L2TP = 72;
                     Protocol_DHCPV6 = 73;
                     Protocol_ND = 74;
                     Protocol_FIBX_MISS = 75;
                     Protocol_FIBX_MISSV6 = 76;
                     Protocol_TTLX_EXPIRED = 77;
                     Protocol_TTLX_EXPIREDV6 = 78;
                     Protocol_OSPFV6 = 79;
                     Protocol_LLDP = 80;
                     Protocol_BFDV6 = 81;
                     Protocol_ARPMISS = 82;
                     Protocol_PIMX_MC = 83;
                     Protocol_OPENFLOW = 84;
                     Protocol_RA = 85;
                     Protocol_RS = 86;
                     Protocol_NA = 87;
                     Protocol_NS = 88;
                     Protocol_WEBX_AUTHX_SERVER = 89;
                     Protocol_DIAMETER = 90;
                     Protocol_HTTPX_REDIRECTX_CHASTEN = 91;
                     Protocol_ATMX_INARP = 92;
                     Protocol_UNICASTX_VRRP = 93;
                     Protocol_DLPX_BGP = 94;
                     Protocol_DLPX_LDP = 95;
                     Protocol_DLPX_OSPF = 96;
                     Protocol_TCPX_65410 = 97;
                     Protocol_PADI = 98;
                     Protocol_MKA = 99;
                     Protocol_ICMPX_BROADCASTX_ADDRESSX_ECHO = 100;
                     Protocol_DLPX_RSVP = 101;
                     Protocol_DLPX_ISIS = 102;
                     Protocol_DLPX_RADIUS = 103;
                     Protocol_DLPX_IPV6X_BGP = 104;
                     Protocol_DLPX_IPV6X_OSPF = 105;
                     Protocol_DCNX_PKTX_FIN = 106;
                     Protocol_PCEP = 107;
                     Protocol_VRRPV6 = 108;
                     Protocol_RADIUSV6 = 109;
                     Protocol_HWTACACSV6 = 110;
                     Protocol_LSPPINGV6 = 111;
                     Protocol_SYSLOGV6 = 112;
                     Protocol_WEBX_AUTHX_SERVERV6 = 113;
                     Protocol_IPV6X_NDHX_MISS = 114;
                     Protocol_CUSP = 115;
                  };
                  Protocol protocol = 2 [json_name = "protocol"];
                  string car_name = 3 [json_name = "car-name"];
                  uint32 time_number = 4 [json_name = "time-number"];
                  uint32 total_packet_rate = 5 [json_name = "total-packet-rate"];
                  uint32 dropped_packet_rate = 6 [json_name = "dropped-packet-rate"];
                  uint32 dropped_packet_percent = 7 [json_name = "dropped-packet-percent"];
               }
               repeated Last60Minutes last_60_minutes = 1 [json_name = "last-60-minutes"];
            }
            Last60Minutess last_60_minutess = 3 [json_name = "last-60-minutess"];
            message Last72Hourss {
               message Last72Hours {
                  string slot = 1 [json_name = "slot"];
                  enum Protocol {
                     Protocol_ARP = 0;
                     Protocol_ICMP = 1;
                     Protocol_DHCP = 2;
                     Protocol_PPPOE = 3;
                     Protocol_FTPX_SERVER = 4;
                     Protocol_SSHX_SERVER = 5;
                     Protocol_SNMP = 6;
                     Protocol_TELNETX_SERVER = 7;
                     Protocol_TFTP = 8;
                     Protocol_BGP = 9;
                     Protocol_LDP = 10;
                     Protocol_RSVP = 11;
                     Protocol_OSPFV2 = 12;
                     Protocol_RIP = 13;
                     Protocol_RIPNG = 14;
                     Protocol_OSPFV3 = 15;
                     Protocol_MSDP = 16;
                     Protocol_PIM = 17;
                     Protocol_IGMP = 18;
                     Protocol_MLD = 19;
                     Protocol_ISIS = 20;
                     Protocol_PIMV6 = 21;
                     Protocol_SFTPX_SERVER = 22;
                     Protocol_FTPX_CLIENT = 23;
                     Protocol_TELNETX_CLIENT = 24;
                     Protocol_SSHX_CLIENT = 25;
                     Protocol_SFTPX_CLIENT = 26;
                     Protocol_NTP = 27;
                     Protocol_RADIUS = 28;
                     Protocol_HWTACACS = 29;
                     Protocol_LSPPING = 30;
                     Protocol_VGMP = 31;
                     Protocol_VRRP = 32;
                     Protocol_BFD = 33;
                     Protocol_NQAX_UDPX_CLIENT = 34;
                     Protocol_NQAX_UDPX_SERVER = 35;
                     Protocol_NQAX_TCPX_CLIENT = 36;
                     Protocol_NQAX_TCPX_SERVER = 37;
                     Protocol_DNSX_CLIENT = 38;
                     Protocol_TELNETV6X_SERVER = 39;
                     Protocol_TELNETV6X_CLIENT = 40;
                     Protocol_TFTPV6X_CLIENT = 41;
                     Protocol_ICMPV6 = 42;
                     Protocol_DNSV6 = 43;
                     Protocol_SSHV6X_SERVER = 44;
                     Protocol_SSHV6X_CLIENT = 45;
                     Protocol_MPLSX_OAM = 46;
                     Protocol_RRPP = 47;
                     Protocol_X_802X_1AG = 48;
                     Protocol_X_802X_3AH = 49;
                     Protocol_LACP = 50;
                     Protocol_HTTPX_CLIENT = 51;
                     Protocol_HTTPX_SERVER = 52;
                     Protocol_ACR = 53;
                     Protocol_UNKNOWN = 54;
                     Protocol_WHITEX_LIST = 55;
                     Protocol_BLACKX_LIST = 56;
                     Protocol_HGMP = 57;
                     Protocol_BGPV6 = 58;
                     Protocol_FTPV6X_CLIENT = 59;
                     Protocol_FTPV6X_SERVER = 60;
                     Protocol_IPFPM = 61;
                     Protocol_SNMPV6 = 62;
                     Protocol_MULTICAST = 63;
                     Protocol_MULTICASTV6 = 64;
                     Protocol_IP = 65;
                     Protocol_IPV6 = 66;
                     Protocol_TCP = 67;
                     Protocol_UDP = 68;
                     Protocol_EAPOL = 69;
                     Protocol_PORTAL = 70;
                     Protocol_WEB = 71;
                     Protocol_L2TP = 72;
                     Protocol_DHCPV6 = 73;
                     Protocol_ND = 74;
                     Protocol_FIBX_MISS = 75;
                     Protocol_FIBX_MISSV6 = 76;
                     Protocol_TTLX_EXPIRED = 77;
                     Protocol_TTLX_EXPIREDV6 = 78;
                     Protocol_OSPFV6 = 79;
                     Protocol_LLDP = 80;
                     Protocol_BFDV6 = 81;
                     Protocol_ARPMISS = 82;
                     Protocol_PIMX_MC = 83;
                     Protocol_OPENFLOW = 84;
                     Protocol_RA = 85;
                     Protocol_RS = 86;
                     Protocol_NA = 87;
                     Protocol_NS = 88;
                     Protocol_WEBX_AUTHX_SERVER = 89;
                     Protocol_DIAMETER = 90;
                     Protocol_HTTPX_REDIRECTX_CHASTEN = 91;
                     Protocol_ATMX_INARP = 92;
                     Protocol_UNICASTX_VRRP = 93;
                     Protocol_DLPX_BGP = 94;
                     Protocol_DLPX_LDP = 95;
                     Protocol_DLPX_OSPF = 96;
                     Protocol_TCPX_65410 = 97;
                     Protocol_PADI = 98;
                     Protocol_MKA = 99;
                     Protocol_ICMPX_BROADCASTX_ADDRESSX_ECHO = 100;
                     Protocol_DLPX_RSVP = 101;
                     Protocol_DLPX_ISIS = 102;
                     Protocol_DLPX_RADIUS = 103;
                     Protocol_DLPX_IPV6X_BGP = 104;
                     Protocol_DLPX_IPV6X_OSPF = 105;
                     Protocol_DCNX_PKTX_FIN = 106;
                     Protocol_PCEP = 107;
                     Protocol_VRRPV6 = 108;
                     Protocol_RADIUSV6 = 109;
                     Protocol_HWTACACSV6 = 110;
                     Protocol_LSPPINGV6 = 111;
                     Protocol_SYSLOGV6 = 112;
                     Protocol_WEBX_AUTHX_SERVERV6 = 113;
                     Protocol_IPV6X_NDHX_MISS = 114;
                     Protocol_CUSP = 115;
                  };
                  Protocol protocol = 2 [json_name = "protocol"];
                  string car_name = 3 [json_name = "car-name"];
                  uint32 time_number = 4 [json_name = "time-number"];
                  uint32 total_packet_rate = 5 [json_name = "total-packet-rate"];
                  uint32 dropped_packet_rate = 6 [json_name = "dropped-packet-rate"];
                  uint32 dropped_packet_percent = 7 [json_name = "dropped-packet-percent"];
               }
               repeated Last72Hours last_72_hours = 1 [json_name = "last-72-hours"];
            }
            Last72Hourss last_72_hourss = 4 [json_name = "last-72-hourss"];
         }
         Car car = 2 [json_name = "car"];
         message CpuUsage {
            message Last15Minutess {
               message Last15Minutes {
                  string slot = 1 [json_name = "slot"];
                  uint32 time_number = 2 [json_name = "time-number"];
                  uint32 cpu_usage = 3 [json_name = "cpu-usage"];
               }
               repeated Last15Minutes last_15_minutes = 1 [json_name = "last-15-minutes"];
            }
            Last15Minutess last_15_minutess = 1 [json_name = "last-15-minutess"];
            message Last60Minutess {
               message Last60Minutes {
                  string slot = 1 [json_name = "slot"];
                  uint32 time_number = 2 [json_name = "time-number"];
                  uint32 cpu_usage = 3 [json_name = "cpu-usage"];
               }
               repeated Last60Minutes last_60_minutes = 1 [json_name = "last-60-minutes"];
            }
            Last60Minutess last_60_minutess = 2 [json_name = "last-60-minutess"];
            message Last72Hourss {
               message Last72Hours {
                  string slot = 1 [json_name = "slot"];
                  uint32 time_number = 2 [json_name = "time-number"];
                  uint32 cpu_usage = 3 [json_name = "cpu-usage"];
                  uint32 peak_cpu_usage = 4 [json_name = "peak-cpu-usage"];
               }
               repeated Last72Hours last_72_hours = 1 [json_name = "last-72-hours"];
            }
            Last72Hourss last_72_hourss = 3 [json_name = "last-72-hourss"];
         }
         CpuUsage cpu_usage = 3 [json_name = "cpu-usage"];
      }
      AttackDetectStatistics attack_detect_statistics = 5 [json_name = "attack-detect-statistics"];
      message AttackEventReports {
         message AttackEventReport {
            uint32 event_number = 1 [json_name = "event-number"];
            string slot = 2 [json_name = "slot"];
            string start_time = 3 [json_name = "start-time"];
            string end_time = 4 [json_name = "end-time"];
            string location = 5 [json_name = "location"];
            enum Probability {
               INVALID_ENUM_VALUE_Probability = 0;
               Probability_NOTIFICATION = 1;
               Probability_SUSPICION = 2;
               Probability_DETERMINED = 3;
            };
            Probability probability = 6 [json_name = "probability"];
            string reason = 7 [json_name = "reason"];
            message InterfaceRankings {
               message InterfaceRanking {
                  uint32 rank = 1 [json_name = "rank"];
                  string interface_name = 2 [json_name = "interface-name"];
                  uint32 interface_percent = 3 [json_name = "interface-percent"];
               }
               repeated InterfaceRanking interface_ranking = 1 [json_name = "interface-ranking"];
            }
            InterfaceRankings interface_rankings = 8 [json_name = "interface-rankings"];
            message VlanRankings {
               message VlanRanking {
                  uint32 rank = 1 [json_name = "rank"];
                  uint32 vlan_id = 2 [json_name = "vlan-id"];
                  uint32 pevlan = 3 [json_name = "pevlan"];
                  uint32 cevlan = 4 [json_name = "cevlan"];
                  uint32 vlan_percent = 5 [json_name = "vlan-percent"];
               }
               repeated VlanRanking vlan_ranking = 1 [json_name = "vlan-ranking"];
            }
            VlanRankings vlan_rankings = 9 [json_name = "vlan-rankings"];
            message VniRankings {
               message VniRanking {
                  uint32 rank = 1 [json_name = "rank"];
                  uint32 vni = 2 [json_name = "vni"];
                  uint32 vni_percent = 3 [json_name = "vni-percent"];
               }
               repeated VniRanking vni_ranking = 1 [json_name = "vni-ranking"];
            }
            VniRankings vni_rankings = 10 [json_name = "vni-rankings"];
            message MacRankings {
               message MacRanking {
                  uint32 rank = 1 [json_name = "rank"];
                  string mac = 2 [json_name = "mac"];
                  uint32 mac_percent = 3 [json_name = "mac-percent"];
               }
               repeated MacRanking mac_ranking = 1 [json_name = "mac-ranking"];
            }
            MacRankings mac_rankings = 11 [json_name = "mac-rankings"];
            message SourceIpRankings {
               message SourceIpRanking {
                  uint32 rank = 1 [json_name = "rank"];
                  string source_ip = 2 [json_name = "source-ip"];
                  uint32 source_ip_percent = 3 [json_name = "source-ip-percent"];
               }
               repeated SourceIpRanking source_ip_ranking = 1 [json_name = "source-ip-ranking"];
            }
            SourceIpRankings source_ip_rankings = 12 [json_name = "source-ip-rankings"];
            message SourceIpv6Rankings {
               message SourceIpv6Ranking {
                  uint32 rank = 1 [json_name = "rank"];
                  string source_ipv6 = 2 [json_name = "source-ipv6"];
                  uint32 source_ipv6_percent = 3 [json_name = "source-ipv6-percent"];
               }
               repeated SourceIpv6Ranking source_ipv6_ranking = 1 [json_name = "source-ipv6-ranking"];
            }
            SourceIpv6Rankings source_ipv6_rankings = 13 [json_name = "source-ipv6-rankings"];
            message ApplicationRankings {
               message ApplicationRanking {
                  uint32 rank = 1 [json_name = "rank"];
                  string application = 2 [json_name = "application"];
                  uint32 application_percent = 3 [json_name = "application-percent"];
               }
               repeated ApplicationRanking application_ranking = 1 [json_name = "application-ranking"];
            }
            ApplicationRankings application_rankings = 14 [json_name = "application-rankings"];
            message CircuitIdRankings {
               message CircuitIdRanking {
                  uint32 rank = 1 [json_name = "rank"];
                  string circuit_id = 2 [json_name = "circuit-id"];
                  uint32 circuit_id_percent = 3 [json_name = "circuit-id-percent"];
               }
               repeated CircuitIdRanking circuit_id_ranking = 1 [json_name = "circuit-id-ranking"];
            }
            CircuitIdRankings circuit_id_rankings = 15 [json_name = "circuit-id-rankings"];
            message RemoteIdRankings {
               message RemoteIdRanking {
                  uint32 rank = 1 [json_name = "rank"];
                  string remote_id = 2 [json_name = "remote-id"];
                  uint32 remote_id_percent = 3 [json_name = "remote-id-percent"];
               }
               repeated RemoteIdRanking remote_id_ranking = 1 [json_name = "remote-id-ranking"];
            }
            RemoteIdRankings remote_id_rankings = 16 [json_name = "remote-id-rankings"];
            message TunnelIdRankings {
               message TunnelIdRanking {
                  uint32 rank = 1 [json_name = "rank"];
                  uint32 tunnel_id = 2 [json_name = "tunnel-id"];
                  uint32 tunnel_id_percent = 3 [json_name = "tunnel-id-percent"];
               }
               repeated TunnelIdRanking tunnel_id_ranking = 1 [json_name = "tunnel-id-ranking"];
            }
            TunnelIdRankings tunnel_id_rankings = 17 [json_name = "tunnel-id-rankings"];
            message SessionIdRankings {
               message SessionIdRanking {
                  uint32 rank = 1 [json_name = "rank"];
                  uint32 session_id = 2 [json_name = "session-id"];
                  uint32 session_id_percent = 3 [json_name = "session-id-percent"];
               }
               repeated SessionIdRanking session_id_ranking = 1 [json_name = "session-id-ranking"];
            }
            SessionIdRankings session_id_rankings = 18 [json_name = "session-id-rankings"];
         }
         repeated AttackEventReport attack_event_report = 1 [json_name = "attack-event-report"];
      }
      AttackEventReports attack_event_reports = 6 [json_name = "attack-event-reports"];
   }
   SecurityOperationCenter security_operation_center = 28 [json_name = "security-operation-center"];
   message LoopDetect {
      message L3LoopDetect {
         bool enable = 1 [json_name = "enable"];
      }
      L3LoopDetect l3_loop_detect = 1 [json_name = "l3-loop-detect"];
      message L2LoopDetect {
         message LoopStatuss {
            message LoopStatus {
               string slot = 1 [json_name = "slot"];
               string interface = 2 [json_name = "interface"];
               uint32 vlan_id = 3 [json_name = "vlan-id"];
               enum LoopLevel {
                  INVALID_ENUM_VALUE_LoopLevel = 0;
                  LoopLevel_NOTIFICATION = 1;
                  LoopLevel_SUSPECT = 2;
                  LoopLevel_DETERMINED = 3;
               };
               LoopLevel loop_level = 4 [json_name = "loop-level"];
               enum InterfaceState {
                  INVALID_ENUM_VALUE_InterfaceState = 0;
                  InterfaceState_UP = 1;
                  InterfaceState_DOWN = 2;
               };
               InterfaceState interface_state = 5 [json_name = "interface-state"];
            }
            repeated LoopStatus loop_status = 1 [json_name = "loop-status"];
         }
         LoopStatuss loop_statuss = 1 [json_name = "loop-statuss"];
         message Packets {
            message Packet {
               string slot = 1 [json_name = "slot"];
               string interface = 2 [json_name = "interface"];
               uint32 packet_number = 3 [json_name = "packet-number"];
               string logical_interface = 4 [json_name = "logical-interface"];
               uint32 outer_vlan = 5 [json_name = "outer-vlan"];
               uint32 inner_vlan = 6 [json_name = "inner-vlan"];
               uint32 protocol_type = 7 [json_name = "protocol-type"];
               enum PacketType {
                  INVALID_ENUM_VALUE_PacketType = 0;
                  PacketType_BROADCAST = 1;
                  PacketType_MULTICAST = 2;
                  PacketType_UNICAST = 3;
               };
               PacketType packet_type = 8 [json_name = "packet-type"];
               string source_mac = 9 [json_name = "source-mac"];
               string protocol_name = 10 [json_name = "protocol-name"];
            }
            repeated Packet packet = 1 [json_name = "packet"];
         }
         Packets packets = 2 [json_name = "packets"];
      }
      L2LoopDetect l2_loop_detect = 2 [json_name = "l2-loop-detect"];
   }
   LoopDetect loop_detect = 29 [json_name = "loop-detect"];
}
message HwArpVlanCarEnhanceResume {
   uint32 CeVlan = 1;
   string LogicalInterface = 2;
   uint32 PeVlan = 3;
   string PhysicalInterface = 4;
   uint32 SampleRate = 5;
}
message HwArpVlanCarEnhanceTrap {
   uint32 CeVlan = 1;
   string LogicalInterface = 2;
   uint32 PeVlan = 3;
   string PhysicalInterface = 4;
   uint32 SampleRate = 5;
}
message HwBaseArpVlanCarResumeTrap {
   string LOGICALINTERFACE = 1;
   string PHYSICALINTERFACE = 2;
   uint32 VLAN = 3;
}
message HwBaseArpVlanCarTrap {
   string LOGICALINTERFACE = 1;
   string PHYSICALINTERFACE = 2;
   uint32 VLAN = 3;
}
message HwBaseSocAttackResumeTrap {
   string hwSocAttackIPAddr = 1;
   string hwSocAttackIPAddrV6 = 2;
   string hwSocAttackIfName = 3;
   string hwSocAttackMacAddr = 4;
   string hwSocAttackPossib = 5;
   string hwSocAttackReason = 6;
   int32 hwSocAttackSeqNo = 7;
   string hwSocAttackSubIfName = 8;
   string hwSocAttackUserQinQIndex = 9;
   string hwSocAttackVlanIndex = 10;
   string hwSocAttackVniIndex = 11;
}
message HwBaseSocAttackTrap {
   string hwSocAttackIPAddr = 1;
   string hwSocAttackIPAddrV6 = 2;
   string hwSocAttackIfName = 3;
   string hwSocAttackMacAddr = 4;
   string hwSocAttackPossib = 5;
   string hwSocAttackReason = 6;
   int32 hwSocAttackSeqNo = 7;
   string hwSocAttackSubIfName = 8;
   string hwSocAttackUserQinQIndex = 9;
   string hwSocAttackVlanIndex = 10;
   string hwSocAttackVniIndex = 11;
}
message HwCprlDiscardedAlarm {
   int32 hwXQoSCpRateLimitCeVidBegin = 1;
   string hwXQoSCpRateLimitIfIndex = 2;
   int32 hwXQoSCpRateLimitPeVidValue = 3;
}
message HwCprlDiscardedAlarmClear {
   int32 hwXQoSCpRateLimitCeVidBegin = 1;
   string hwXQoSCpRateLimitIfIndex = 2;
   int32 hwXQoSCpRateLimitPeVidValue = 3;
}
message HwL3LoopDetectAlarm {
   int32 hwL3LoopDetectChassisID = 1;
   string hwL3LoopDetectIPAddr = 2;
   int32 hwL3LoopDetectSlotID = 3;
}
message HwL3LoopDetectAlarmResume {
   int32 hwL3LoopDetectChassisID = 1;
   string hwL3LoopDetectIPAddr = 2;
   int32 hwL3LoopDetectSlotID = 3;
}
message HwStormControlInterface {
   uint32 ChassisID = 1;
   string IfName = 2;
   string LoopLevel = 3;
   uint32 SlotID = 4;
   uint32 VlanID = 5;
}
message HwStormControlInterfaceRes {
   uint32 ChassisID = 1;
   string IfName = 2;
   string LoopLevel = 3;
   uint32 SlotID = 4;
   uint32 VlanID = 5;
}

