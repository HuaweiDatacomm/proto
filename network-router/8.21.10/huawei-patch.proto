syntax = "proto3";
// Automatically generated by ProtoYang
// ProtoYang-version 1
// module huawei-patch
// revision 2021-03-24
// revision 2021-03-15
// revision 2021-03-08
// revision 2021-01-20
// revision 2020-12-14
// revision 2020-11-17
// revision 2020-06-29
// revision 2020-02-19
// revision 2020-01-16
// revision 2019-11-27
// namespace urn:huawei:yang:huawei-patch

package huawei_patch;

message Patch {
   message PatchInfos {
      message PatchInfo {
         string name = 1 [json_name = "name"];
         string version = 2 [json_name = "version"];
         enum State {
            State_NOTX_EXIST = 0;
            State_RUNNING = 3;
         };
         State state = 3 [json_name = "state"];
         string runtime = 4 [json_name = "runtime"];
         string path = 5 [json_name = "path"];
         message Operations {
            message Operation {
               string position = 1 [json_name = "position"];
               string position_type = 2 [json_name = "position-type"];
               enum UpgradeMode {
                  UpgradeMode_RESETX_PROCESS = 0;
                  UpgradeMode_RESETX_SYSTEM = 1;
                  UpgradeMode_RESETX_BOARD = 2;
                  UpgradeMode_RESETX_CHASSIS = 3;
               };
               UpgradeMode upgrade_mode = 3 [json_name = "upgrade-mode"];
            }
            repeated Operation operation = 1 [json_name = "operation"];
         }
         Operations operations = 6 [json_name = "operations"];
      }
      repeated PatchInfo patch_info = 1 [json_name = "patch-info"];
   }
   PatchInfos patch_infos = 1 [json_name = "patch-infos"];
   message OperationSchedules {
      message OperationSchedule {
         enum Phase {
            Phase_LOADX_PATCH = 0;
            Phase_DELETEX_PATCH = 1;
            Phase_STARTUPX_NEXTX_PATCH = 2;
            Phase_RESETX_STARTUPX_PATCH = 3;
         };
         Phase phase = 1 [json_name = "phase"];
         string name = 2 [json_name = "name"];
         enum Status {
            Status_NOTX_STARTED = 0;
            Status_OPERATING = 1;
            Status_SUCCESSFUL = 2;
            Status_FAILED = 3;
         };
         Status status = 3 [json_name = "status"];
         uint32 schedule = 4 [json_name = "schedule"];
         enum FailReason {
            FailReason_FILEX_NOTX_EXIST = 0;
            FailReason_FILENAMEX_CHECKX_FAILED = 1;
            FailReason_INTEGRITYX_CHECKX_FAILED = 2;
            FailReason_FILEX_CHECKX_FAILED = 3;
            FailReason_FILEX_NOTX_MATCH = 4;
            FailReason_SYSTEMX_BUSY = 5;
            FailReason_INSUFFICIENTX_STORAGEX_SPACE = 6;
            FailReason_OPERATIONX_FAILED = 7;
         };
         FailReason fail_reason = 5 [json_name = "fail-reason"];
      }
      repeated OperationSchedule operation_schedule = 1 [json_name = "operation-schedule"];
   }
   OperationSchedules operation_schedules = 2 [json_name = "operation-schedules"];
   message NextStartupPatchs {
      message NextStartupPatch {
         string name = 1 [json_name = "name"];
      }
      repeated NextStartupPatch next_startup_patch = 1 [json_name = "next-startup-patch"];
   }
   NextStartupPatchs next_startup_patchs = 3 [json_name = "next-startup-patchs"];
   message DownloadPackageSchedule {
      string name = 1 [json_name = "name"];
      enum Status {
         Status_NOTX_STARTED = 0;
         Status_OPERATING = 1;
         Status_SUCCESSFUL = 2;
         Status_FAILED = 3;
      };
      Status status = 2 [json_name = "status"];
      uint32 schedule = 3 [json_name = "schedule"];
      uint32 transfer_index = 4 [json_name = "transfer-index"];
      enum QueryType {
         QueryType_DEFAULT = 0;
         QueryType_HFTP = 1;
      };
      QueryType query_type = 5 [json_name = "query-type"];
   }
   DownloadPackageSchedule download_package_schedule = 4 [json_name = "download-package-schedule"];
   message DownloadPackageLoadPath {
      enum FileType {
         FileType_NORMAL = 0;
      };
      FileType file_type = 1 [json_name = "file-type"];
      enum ServiceType {
         INVALID_ENUM_VALUE_ServiceType = 0;
         ServiceType_PATCH = 7;
      };
      ServiceType service_type = 2 [json_name = "service-type"];
      string file_path = 3 [json_name = "file-path"];
   }
   DownloadPackageLoadPath download_package_load_path = 5 [json_name = "download-package-load-path"];
   message CpuUsageThresholds {
      message CpuUsageThreshold {
         string slot = 1 [json_name = "slot"];
         uint32 threshold = 2 [json_name = "threshold"];
      }
      repeated CpuUsageThreshold cpu_usage_threshold = 1 [json_name = "cpu-usage-threshold"];
   }
   CpuUsageThresholds cpu_usage_thresholds = 6 [json_name = "cpu-usage-thresholds"];
}

