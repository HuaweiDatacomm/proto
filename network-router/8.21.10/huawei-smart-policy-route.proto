syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2022-03-09 11:06:03
// ProtoYang-version 1
// module huawei-smart-policy-route
// revision 2022-03-04
// revision 2022-01-10
// revision 2021-01-28
// revision 2020-11-16
// revision 2020-05-11
// namespace urn:huawei:yang:huawei-smart-policy-route

package huawei_smart_policy_route;

message SmartPolicyRoute {
   uint32 switch_period = 1 [json_name = "switch-period"];
   uint32 refresh_period = 2 [json_name = "refresh-period"];
   uint32 suppress_flapping_period = 3 [json_name = "suppress-flapping-period"];
   uint32 wait_restore_period = 4 [json_name = "wait-restore-period"];
   enum PathSelection {
      INVALID_ENUM_VALUE_PathSelection = 0;
      PathSelection_SYMMETRIC = 1;
      PathSelection_ASYMMETRIC = 2;
   };
   PathSelection path_selection = 5 [json_name = "path-selection"];
   bool same_network_prefer = 6 [json_name = "same-network-prefer"];
   message SuppressSwitchTrap {
      bool enable = 1 [json_name = "enable"];
      uint32 threshold = 2 [json_name = "threshold"];
      uint32 time = 3 [json_name = "time"];
   }
   SuppressSwitchTrap suppress_switch_trap = 7 [json_name = "suppress-switch-trap"];
   message ServiceMaps {
      message ServiceMap {
         string name = 1 [json_name = "name"];
         message MatchRule {
            message Acls {
               repeated string acl = 1 [json_name = "acl"];
            }
            Acls acls = 1 [json_name = "acls"];
            message Apps {
               repeated string app = 1 [json_name = "app"];
            }
            Apps apps = 2 [json_name = "apps"];
            message Appgroups {
               repeated string appgroup = 1 [json_name = "appgroup"];
            }
            Appgroups appgroups = 3 [json_name = "appgroups"];
            message AppAcls {
               message AppAcl {
                  string acl = 1 [json_name = "acl"];
                  string app = 2 [json_name = "app"];
               }
               repeated AppAcl app_acl = 1 [json_name = "app-acl"];
            }
            AppAcls app_acls = 4 [json_name = "app-acls"];
            message AppgroupAcls {
               message AppgroupAcl {
                  string acl = 1 [json_name = "acl"];
                  string appgroup = 2 [json_name = "appgroup"];
               }
               repeated AppgroupAcl appgroup_acl = 1 [json_name = "appgroup-acl"];
            }
            AppgroupAcls appgroup_acls = 5 [json_name = "appgroup-acls"];
         }
         MatchRule match_rule = 2 [json_name = "match-rule"];
      }
      repeated ServiceMap service_map = 1 [json_name = "service-map"];
   }
   ServiceMaps service_maps = 8 [json_name = "service-maps"];
   message SprPolicys {
      message SprPolicy {
         uint32 node_index = 1 [json_name = "node-index"];
         bool wait_restore_enable = 2 [json_name = "wait-restore-enable"];
         string time_range = 3 [json_name = "time-range"];
         enum DefaultAction {
            INVALID_ENUM_VALUE_DefaultAction = 0;
            DefaultAction_DISCARD = 1;
            DefaultAction_FORWARD = 2;
         };
         DefaultAction default_action = 4 [json_name = "default-action"];
         uint32 priority = 5 [json_name = "priority"];
         string service_map = 6 [json_name = "service-map"];
         message QualityThreshold {
            uint32 delay = 1 [json_name = "delay"];
            uint32 jitter = 2 [json_name = "jitter"];
            uint32 loss = 3 [json_name = "loss"];
            uint32 cmi = 4 [json_name = "cmi"];
         }
         QualityThreshold quality_threshold = 7 [json_name = "quality-threshold"];
         message LinkTransportNetworks {
            message LinkTransportNetwork {
               string network_name = 1 [json_name = "network-name"];
               uint32 network_id = 2 [json_name = "network-id"];
               enum Role {
                  INVALID_ENUM_VALUE_Role = 0;
                  Role_MASTER = 1;
                  Role_BACKUP = 2;
               };
               Role role = 3 [json_name = "role"];
               uint32 priority = 4 [json_name = "priority"];
               repeated string srv6_te_path_name = 5 [json_name = "srv6-te-path-name"];
               message LimitType_LimitValue {
                  message LimitValue7 {
                     uint32 lower = 1 [json_name = "lower"];
                     uint32 upper = 2 [json_name = "upper"];
                  }
                  LimitValue7 limit_value = 1 [json_name = "limit-value"];
               }
               message LimitType_LimitPercentage {
                  message LimitPercentage7 {
                     uint32 lower = 1 [json_name = "lower"];
                     uint32 upper = 2 [json_name = "upper"];
                  }
                  LimitPercentage7 limit_percentage = 1 [json_name = "limit-percentage"];
               }
               oneof LimitType {
                  LimitType_LimitValue limit_type_limit_value = 6 [json_name = "limit-value"];
                  LimitType_LimitPercentage limit_type_limit_percentage = 7 [json_name = "limit-percentage"];
               }
            }
            repeated LinkTransportNetwork link_transport_network = 1 [json_name = "link-transport-network"];
         }
         LinkTransportNetworks link_transport_networks = 8 [json_name = "link-transport-networks"];
         message ApplyToVpnInstances {
            message ApplyToVpnInstance {
               string vpn_instance = 1 [json_name = "vpn-instance"];
               string site_list = 2 [json_name = "site-list"];
            }
            repeated ApplyToVpnInstance apply_to_vpn_instance = 1 [json_name = "apply-to-vpn-instance"];
         }
         ApplyToVpnInstances apply_to_vpn_instances = 9 [json_name = "apply-to-vpn-instances"];
         enum RoutingMode {
            INVALID_ENUM_VALUE_RoutingMode = 0;
            RoutingMode_PATHX_PREFER = 1;
            RoutingMode_LOADX_BALANCE = 2;
         };
         RoutingMode routing_mode = 10 [json_name = "routing-mode"];
         string apply_to_site_list = 11 [json_name = "apply-to-site-list"];
      }
      repeated SprPolicy spr_policy = 1 [json_name = "spr-policy"];
   }
   SprPolicys spr_policys = 9 [json_name = "spr-policys"];
   bool local_network_prefer = 10 [json_name = "local-network-prefer"];
   uint32 bandwidth_threshold_percentage = 11 [json_name = "bandwidth-threshold-percentage"];
   message SiteLists {
      message SiteList {
         string name = 1 [json_name = "name"];
         message PeerSites {
            message PeerSite {
               uint32 id = 1 [json_name = "id"];
            }
            repeated PeerSite peer_site = 1 [json_name = "peer-site"];
         }
         PeerSites peer_sites = 2 [json_name = "peer-sites"];
      }
      repeated SiteList site_list = 1 [json_name = "site-list"];
   }
   SiteLists site_lists = 12 [json_name = "site-lists"];
   message SprInstanceUsage {
      uint32 spr_instance_limit = 1 [json_name = "spr-instance-limit"];
      uint32 spr_instance_number = 2 [json_name = "spr-instance-number"];
   }
   SprInstanceUsage spr_instance_usage = 13 [json_name = "spr-instance-usage"];
}

