syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2022-01-12 10:19:26
// ProtoYang-version 1
// module huawei-ospfv3
// revision 2022-01-11
// revision 2020-06-17
// revision 2020-03-28
// revision 2020-03-13
// revision 2020-03-09
// revision 2020-03-04
// revision 2020-03-03
// revision 2020-02-27
// revision 2020-02-17
// revision 2020-02-04
// revision 2019-12-19
// revision 2019-12-16
// revision 2019-11-22
// revision 2019-11-15
// revision 2019-10-26
// revision 2019-10-22
// revision 2019-04-04
// namespace urn:huawei:yang:huawei-ospfv3

package huawei_ospfv3;

message Ospfv3 {
   message Ospfv3Comm {
      message OspfChkRtIds {
         message OspfChkRtId {
            bool rtIdConfFlag = 1;
         }
         OspfChkRtId ospfChkRtId = 1;
      }
      OspfChkRtIds ospfChkRtIds = 1;
      message OspfGtsms {
         message OspfGtsm {
            uint32 hops = 1;
            string vrfName = 2;
         }
         repeated OspfGtsm ospfGtsm = 1;
      }
      OspfGtsms ospfGtsms = 2;
      message OspfIntfIPSecs {
         message OspfIntfIPSec {
            string ifName = 1;
            string saName = 2;
         }
         repeated OspfIntfIPSec ospfIntfIPSec = 1;
      }
      OspfIntfIPSecs ospfIntfIPSecs = 3;
      message OspfSites {
         message OspfSite {
            message ProcessTopologys_1 {
               message ProcessTopology_1 {
                  message AsbrSummaryMTs {
                     message AsbrSummaryMT {
                        uint32 addressmask = 1;
                        message AsbrSumPreMTs {
                           message AsbrSumPreMT {
                              string destIpAddress = 1;
                              uint32 mask = 2;
                              uint32 metric = 3;
                              uint32 protoProcId = 4;
                              enum Protocol {
                                 Protocol_BGP = 0;
                                 Protocol_DIRECT = 1;
                                 Protocol_ISIS = 2;
                                 Protocol_OSPFV3 = 3;
                                 Protocol_RIPNG = 4;
                                 Protocol_STATIC = 5;
                                 Protocol_UNR = 6;
                              };
                              Protocol protocol = 5;
                              uint32 type = 6;
                           }
                           repeated AsbrSumPreMT asbrSumPreMT = 1;
                        }
                        AsbrSumPreMTs asbrSumPreMTs = 2;
                        uint32 cost = 3;
                        uint32 count = 4;
                        uint32 distributeDelayInterval = 5;
                        string ipAddress = 6;
                        enum NotAdvertiseFlag {
                           NotAdvertiseFlag_ADVERTISE = 0;
                           NotAdvertiseFlag_DONOTX_ADVERTISE = 1;
                        };
                        NotAdvertiseFlag notAdvertiseFlag = 7;
                        uint32 tag = 8;
                     }
                     repeated AsbrSummaryMT asbrSummaryMT = 1;
                  }
                  AsbrSummaryMTs asbrSummaryMTs = 1;
                  uint32 defaultCost = 2;
                  message DefaultRouteMTs {
                     message DefaultRouteMT {
                        bool configCost = 1;
                        bool configTag = 2;
                        bool configType = 3;
                        uint32 cost = 4;
                        bool defRoutEnableFlag = 5;
                        uint32 delayTimer = 6;
                        enum Flag {
                           Flag_ALWAYS = 0;
                           Flag_DEFRTADV = 1;
                        };
                        Flag flag = 7;
                        bool permitCalculateOther = 8;
                        enum PolicyType {
                           PolicyType_NONE = 0;
                           PolicyType_ROUTE_FILTER = 1;
                           PolicyType_ROUTE_POLICY = 2;
                        };
                        PolicyType policyType = 9;
                        string routeFilterName = 10;
                        string routePolicyName = 11;
                        uint32 tag = 12;
                        enum Type {
                           Type_TYPE1 = 0;
                           Type_TYPE2 = 1;
                        };
                        Type type = 13;
                     }
                     DefaultRouteMT defaultRouteMT = 1;
                  }
                  DefaultRouteMTs defaultRouteMTs = 3;
                  uint32 defaultTag = 4;
                  enum DefaultType {
                     DefaultType_TYPE1 = 0;
                     DefaultType_TYPE2 = 1;
                  };
                  DefaultType defaultType = 5;
                  message FilterPolicyMTs {
                     message FilterPolicyMT {
                        string aclNameOrNum = 1;
                        enum FilterType {
                           FilterType_EXPORT = 0;
                           FilterType_IMPORT = 1;
                        };
                        FilterType filterType = 2;
                        string ipPrefix = 3;
                        enum Protocol {
                           Protocol_BGP = 0;
                           Protocol_DEFAULT = 1;
                           Protocol_DIRECT = 2;
                           Protocol_ISIS = 3;
                           Protocol_OSPFV3 = 4;
                           Protocol_RIPNG = 5;
                           Protocol_STATIC = 6;
                           Protocol_UNR = 7;
                        };
                        Protocol protocol = 4;
                        uint32 protocolProcessId = 5;
                        string routeFilterName = 6;
                        string routePolicy = 7;
                        enum Type {
                           Type_ACL_NAME_OR_NUM = 0;
                           Type_IP_PREFIX = 1;
                           Type_ROUTE_FILTER = 2;
                           Type_ROUTE_POLICY = 3;
                        };
                        Type type = 8;
                     }
                     repeated FilterPolicyMT filterPolicyMT = 1;
                  }
                  FilterPolicyMTs filterPolicyMTs = 6;
                  message ImportRouteMTs {
                     message ImportRouteMT {
                        uint32 cost = 1;
                        bool costConfigFlag = 2;
                        bool inheritCostFlag = 3;
                        bool permitIbgpFlag = 4;
                        enum PolicyType {
                           PolicyType_NONE = 0;
                           PolicyType_ROUTE_FILTER = 1;
                           PolicyType_ROUTE_POLICY = 2;
                        };
                        PolicyType policyType = 5;
                        enum Protocol {
                           Protocol_BGP = 0;
                           Protocol_DIRECT = 1;
                           Protocol_ISIS = 2;
                           Protocol_OSPFV3 = 3;
                           Protocol_RIPNG = 4;
                           Protocol_STATIC = 5;
                           Protocol_UNR = 6;
                        };
                        Protocol protocol = 6;
                        uint32 protocolProcessId = 7;
                        string routeFilterName = 8;
                        string routePolicyName = 9;
                        uint32 tag = 10;
                        bool tagConfigFlag = 11;
                        enum Type {
                           Type_TYPE1 = 0;
                           Type_TYPE2 = 1;
                        };
                        Type type = 12;
                        bool typeConfigFlag = 13;
                     }
                     repeated ImportRouteMT importRouteMT = 1;
                  }
                  ImportRouteMTs importRouteMTs = 7;
                  uint32 maxLoadBalancing = 8;
                  message NexthopMTs {
                     message NexthopMT {
                        string ifName = 1;
                        string ipAddress = 2;
                        uint32 weight = 3;
                     }
                     repeated NexthopMT nexthopMT = 1;
                  }
                  NexthopMTs nexthopMTs = 9;
                  message PreferenceMTs {
                     message PreferenceMT {
                        enum PolicyType {
                           PolicyType_NONE = 0;
                           PolicyType_ROUTE_FILTER = 1;
                           PolicyType_ROUTE_POLICY = 2;
                        };
                        PolicyType policyType = 1;
                        uint32 preference = 2;
                        string routeFilterName = 3;
                        string routePolicyName = 4;
                        enum RouteType {
                           RouteType_ASE = 0;
                           RouteType_NONX_ASE = 1;
                        };
                        RouteType routeType = 5;
                     }
                     repeated PreferenceMT preferenceMT = 1;
                  }
                  PreferenceMTs preferenceMTs = 10;
                  message RoutePriorityMTs {
                     message RoutePriorityMT {
                        string ipPrefixName = 1;
                        enum Priority {
                           Priority_CRITICAL = 0;
                           Priority_HIGH = 1;
                           Priority_MEDIUM = 2;
                        };
                        Priority priority = 2;
                     }
                     repeated RoutePriorityMT routePriorityMT = 1;
                  }
                  RoutePriorityMTs routePriorityMTs = 11;
                  string topoName = 12;
               }
               repeated ProcessTopology_1 ProcessTopology = 1;
            }
            ProcessTopologys_1 ProcessTopologys = 1;
            uint32 areaCount = 2;
            message Areas {
               message Area {
                  message AreaAuthentications {
                     uint32 authKeyId = 1;
                     string authText = 2;
                     enum AuthenticationMode {
                        AuthenticationMode_HMACX_SHA256 = 0;
                        AuthenticationMode_NONE = 1;
                     };
                     AuthenticationMode authenticationMode = 3;
                  }
                  AreaAuthentications areaAuthentications = 1;
                  uint32 areaBdrCount = 2;
                  string areaId = 3;
                  message AreaMTs {
                     message AreaMT {
                        message AbrSummaryMTs {
                           message AbrSummaryMT {
                              uint32 addressMask = 1;
                              bool advertise = 2;
                              bool configCost = 3;
                              uint32 cost = 4;
                              bool enableHoldMaxCost = 5;
                              uint32 holdMaxCostInterval = 6;
                              string ipAddress = 7;
                           }
                           repeated AbrSummaryMT abrSummaryMT = 1;
                        }
                        AbrSummaryMTs abrSummaryMTs = 1;
                        message AreaMTFilters {
                           message AreaMTFilter {
                              string aclNameOrNum = 1;
                              enum FilterType {
                                 FilterType_EXPORT = 0;
                                 FilterType_IMPORT = 1;
                              };
                              FilterType filterType = 2;
                              string ipPrefix = 3;
                              string routeFilterName = 4;
                              string routePolicy = 5;
                              enum Type {
                                 Type_ACL_NAME_OR_NUM = 0;
                                 Type_ACL_NUM = 1;
                                 Type_IP_PREFIX = 2;
                                 Type_ROUTE_FILTER = 3;
                                 Type_ROUTE_POLICY = 4;
                              };
                              Type type = 6;
                           }
                           repeated AreaMTFilter areaMTFilter = 1;
                        }
                        AreaMTFilters areaMTFilters = 2;
                        string topoName = 3;
                     }
                     repeated AreaMT areaMT = 1;
                  }
                  AreaMTs areaMTs = 4;
                  enum AreaStatus {
                     AreaStatus_DOWN = 0;
                     AreaStatus_UP = 1;
                  };
                  AreaStatus areaStatus = 5;
                  enum AreaType {
                     AreaType_NORMAL = 0;
                     AreaType_NSSA = 1;
                     AreaType_STUB = 2;
                  };
                  AreaType areaType = 6;
                  uint32 asBdrCount = 7;
                  enum AuthenMode {
                     AuthenMode_HMACX_SHA256 = 0;
                     AuthenMode_NONE = 1;
                  };
                  AuthenMode authenMode = 8;
                  int32 defaultCost = 9;
                  string descriptionArea = 10;
                  enum ImportLimitStatus {
                     ImportLimitStatus_ALARM = 0;
                     ImportLimitStatus_DISABLE = 1;
                     ImportLimitStatus_ENABLE = 2;
                     ImportLimitStatus_OVERLIMIT = 3;
                  };
                  ImportLimitStatus importLimitStatus = 11;
                  uint32 interfaceCount = 12;
                  message Interfaces {
                     message Interface {
                        uint32 adjNbrCount = 1;
                        enum AuthFlag {
                           AuthFlag_HMACX_SHA256 = 0;
                           AuthFlag_HMACX_SHA256X_X_INHERITEDX_ = 1;
                           AuthFlag_NONE = 2;
                        };
                        AuthFlag authFlag = 2;
                        uint32 authSeqHigh = 3;
                        uint32 authSeqLow = 4;
                        string backupDesignatedRouter = 5;
                        uint32 bandwidthHigh = 6;
                        uint32 bandwidthLow = 7;
                        string bdrLinkLocalAdd = 8;
                        uint32 bfdDetectMultiplierValue = 9;
                        bool bfdEnable = 10;
                        uint32 bfdIncrCost = 11;
                        bool bfdIncrCostBlock = 12;
                        uint32 bfdMinRxInterval = 13;
                        uint32 bfdMinTxInterval = 14;
                        message BfdStatistics {
                           message BfdStatistic {
                              enum BfdState {
                                 BfdState_DOWN = 0;
                                 BfdState_UNKNOWN = 1;
                                 BfdState_UP = 2;
                              };
                              BfdState bfdState = 1;
                              string localIpv6Addr = 2;
                              string neighbourRouterId = 3;
                              string remoteIpv6Addr = 4;
                              string routerId = 5;
                           }
                           repeated BfdStatistic bfdStatistic = 1;
                        }
                        BfdStatistics bfdStatistics = 15;
                        bool bfdblock = 16;
                        uint32 configCost = 17;
                        int32 deadInterval = 18;
                        string designatedRouter = 19;
                        string drLinkLocalAddr = 20;
                        int32 drPriority = 21;
                        message ErrorDatas {
                           message ErrorData {
                              uint32 ackBadCnt = 1;
                              uint32 ackDuplicateCnt = 2;
                              uint32 ackNbrLowCnt = 3;
                              uint32 ackUnknwnLsaCnt = 4;
                              uint32 authKeyFailCnt = 5;
                              uint32 authSeqFailCnt = 6;
                              uint32 authTypeFailCnt = 7;
                              uint32 badAreaPktCnt = 8;
                              uint32 badChkSumPktCnt = 9;
                              uint32 badInstIdCnt = 10;
                              uint32 badPktCnt = 11;
                              uint32 badVerCnt = 12;
                              uint32 badVirtLinkCnt = 13;
                              uint32 ddMtuMsMatchCnt = 14;
                              uint32 ddNbrLowCnt = 15;
                              uint32 ddOptMsMatchCnt = 16;
                              uint32 ddRtrIdCnt = 17;
                              uint32 ddUnknwnLsaCnt = 18;
                              uint32 grInvalidLsaCnt = 19;
                              uint32 grInvalidPolCnt = 20;
                              uint32 grInvalidPrdCnt = 21;
                              uint32 helloDrMisCnt = 22;
                              uint32 ifDownCnt = 23;
                              uint32 misDeadIntlCnt = 24;
                              uint32 misExtRouCapCnt = 25;
                              uint32 misHelloIntlCnt = 26;
                              uint32 noNbr = 27;
                              uint32 reqBadCnt = 28;
                              uint32 reqEmptyCnt = 29;
                              uint32 reqNbrLowCnt = 30;
                              string rtrId = 31;
                              uint32 sameIpPktCnt = 32;
                              uint32 sameRtrHPktCt = 33;
                              uint32 shortPktCnt = 34;
                              uint32 txErrCnt = 35;
                              uint32 updLesRecentCnt = 36;
                              uint32 updLsChkSumCnt = 37;
                              uint32 updMinLSArrCnt = 38;
                              uint32 updNbrLowCnt = 39;
                              uint32 updSelfNewrCnt = 40;
                              uint32 updUnknwLsaCnt = 41;
                              uint32 vlinkNbrMisCnt = 42;
                           }
                           repeated ErrorData errorData = 1;
                        }
                        ErrorDatas errorDatas = 22;
                        uint32 events = 23;
                        bool frrBindingFlag = 24;
                        bool frrBlockFlag = 25;
                        enum GrState {
                           GrState_HELPER = 0;
                           GrState_NORMAL = 1;
                        };
                        GrState grState = 26;
                        string helloDueTimer = 27;
                        int32 helloInterval = 28;
                        string ifName = 29;
                        uint32 instanceID = 30;
                        int32 interfaceCost = 31;
                        enum InterfaceState {
                           InterfaceState_BACKUP = 0;
                           InterfaceState_BDR = 1;
                           InterfaceState_DOWN = 2;
                           InterfaceState_DR = 3;
                           InterfaceState_DROTHER = 4;
                           InterfaceState_LOOPBACK = 5;
                           InterfaceState_POINTX_TOX_POINT = 6;
                           InterfaceState_PX_2X_P = 7;
                           InterfaceState_WAITING = 8;
                        };
                        InterfaceState interfaceState = 32;
                        message IntfAuthentications {
                           uint32 authKeyId = 1;
                           string authText = 2;
                           enum AuthenticationMode {
                              AuthenticationMode_HMACX_SHA256 = 0;
                              AuthenticationMode_NONE = 1;
                           };
                           AuthenticationMode authenticationMode = 3;
                        }
                        IntfAuthentications intfAuthentications = 33;
                        string intfLsaChksum = 34;
                        uint32 intfLsaCount = 35;
                        message Ipv6Prefixess {
                           message Ipv6Prefixes {
                              string ipv6Prefix = 1;
                              uint32 prefixLen = 2;
                           }
                           repeated Ipv6Prefixes ipv6Prefixes = 1;
                        }
                        Ipv6Prefixess ipv6Prefixess = 36;
                        string linkLocalAddr = 37;
                        enum LinkProtocol {
                           LinkProtocol_DOWN = 0;
                           LinkProtocol_UP = 1;
                        };
                        LinkProtocol linkProtocol = 38;
                        uint32 mtu = 39;
                        bool mtuEnable = 40;
                        uint32 nbrCount = 41;
                        message NbrStatistics {
                           message NbrStatistic {
                              string deadDueTimer = 1;
                              uint32 events = 2;
                              uint32 lsReqListNum = 3;
                              uint32 lsRetransNum = 4;
                              uint32 nbrAuthSeqHigh = 5;
                              uint32 nbrAuthSeqLow = 6;
                              string nbrBDR = 7;
                              string nbrDR = 8;
                              int32 nbrIfId = 9;
                              string nbrIpv6Addr = 10;
                              enum NbrOptions {
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_NX_MCX_EX_V6 = 0;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_NX_MCX_EX_X_ = 1;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_NX_MCX_X_X_V6 = 2;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_NX_MCX_X_X_X_ = 3;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_NX_X_X_EX_V6 = 4;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_NX_X_X_EX_X_ = 5;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_NX_X_X_X_X_V6 = 6;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_NX_X_X_X_X_X_ = 7;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_X_X_MCX_EX_V6 = 8;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_X_X_MCX_EX_X_ = 9;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_X_X_MCX_X_X_V6 = 10;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_X_X_MCX_X_X_X_ = 11;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_X_X_X_X_EX_V6 = 12;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_X_X_X_X_EX_X_ = 13;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_X_X_X_X_X_X_V6 = 14;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_X_X_X_X_X_X_X_ = 15;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_NX_MCX_EX_V6 = 16;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_NX_MCX_EX_X_ = 17;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_NX_MCX_X_X_V6 = 18;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_NX_MCX_X_X_X_ = 19;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_NX_X_X_EX_V6 = 20;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_NX_X_X_EX_X_ = 21;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_NX_X_X_X_X_V6 = 22;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_NX_X_X_X_X_X_ = 23;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_X_X_MCX_EX_V6 = 24;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_X_X_MCX_EX_X_ = 25;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_X_X_MCX_X_X_V6 = 26;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_X_X_MCX_X_X_X_ = 27;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_X_X_X_X_EX_V6 = 28;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_X_X_X_X_EX_X_ = 29;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_X_X_X_X_X_X_V6 = 30;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_X_X_X_X_X_X_X_ = 31;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_NX_MCX_EX_V6 = 32;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_NX_MCX_EX_X_ = 33;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_NX_MCX_X_X_V6 = 34;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_NX_MCX_X_X_X_ = 35;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_NX_X_X_EX_V6 = 36;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_NX_X_X_EX_X_ = 37;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_NX_X_X_X_X_V6 = 38;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_NX_X_X_X_X_X_ = 39;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_X_X_MCX_EX_V6 = 40;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_X_X_MCX_EX_X_ = 41;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_X_X_MCX_X_X_V6 = 42;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_X_X_MCX_X_X_X_ = 43;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_X_X_X_X_EX_V6 = 44;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_X_X_X_X_EX_X_ = 45;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_X_X_X_X_X_X_V6 = 46;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_X_X_X_X_X_X_X_ = 47;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_NX_MCX_EX_V6 = 48;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_NX_MCX_EX_X_ = 49;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_NX_MCX_X_X_V6 = 50;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_NX_MCX_X_X_X_ = 51;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_NX_X_X_EX_V6 = 52;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_NX_X_X_EX_X_ = 53;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_NX_X_X_X_X_V6 = 54;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_NX_X_X_X_X_X_ = 55;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_X_X_MCX_EX_V6 = 56;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_X_X_MCX_EX_X_ = 57;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_X_X_MCX_X_X_V6 = 58;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_X_X_MCX_X_X_X_ = 59;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_EX_V6 = 60;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_EX_X_ = 61;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_V6 = 62;
                                 NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_ = 63;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_NX_MCX_EX_V6 = 64;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_NX_MCX_EX_X_ = 65;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_NX_MCX_X_X_V6 = 66;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_NX_MCX_X_X_X_ = 67;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_NX_X_X_EX_V6 = 68;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_NX_X_X_EX_X_ = 69;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_NX_X_X_X_X_V6 = 70;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_NX_X_X_X_X_X_ = 71;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_X_X_MCX_EX_V6 = 72;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_X_X_MCX_EX_X_ = 73;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_X_X_MCX_X_X_V6 = 74;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_X_X_MCX_X_X_X_ = 75;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_X_X_X_X_EX_V6 = 76;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_X_X_X_X_EX_X_ = 77;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_X_X_X_X_X_X_V6 = 78;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_X_X_X_X_X_X_X_ = 79;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_NX_MCX_EX_V6 = 80;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_NX_MCX_EX_X_ = 81;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_NX_MCX_X_X_V6 = 82;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_NX_MCX_X_X_X_ = 83;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_NX_X_X_EX_V6 = 84;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_NX_X_X_EX_X_ = 85;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_NX_X_X_X_X_V6 = 86;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_NX_X_X_X_X_X_ = 87;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_X_X_MCX_EX_V6 = 88;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_X_X_MCX_EX_X_ = 89;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_X_X_MCX_X_X_V6 = 90;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_X_X_MCX_X_X_X_ = 91;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_X_X_X_X_EX_V6 = 92;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_X_X_X_X_EX_X_ = 93;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_X_X_X_X_X_X_V6 = 94;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_X_X_X_X_X_X_X_ = 95;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_NX_MCX_EX_V6 = 96;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_NX_MCX_EX_X_ = 97;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_NX_MCX_X_X_V6 = 98;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_NX_MCX_X_X_X_ = 99;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_NX_X_X_EX_V6 = 100;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_NX_X_X_EX_X_ = 101;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_NX_X_X_X_X_V6 = 102;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_NX_X_X_X_X_X_ = 103;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_X_X_MCX_EX_V6 = 104;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_X_X_MCX_EX_X_ = 105;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_X_X_MCX_X_X_V6 = 106;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_X_X_MCX_X_X_X_ = 107;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_X_X_X_X_EX_V6 = 108;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_X_X_X_X_EX_X_ = 109;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_X_X_X_X_X_X_V6 = 110;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_X_X_X_X_X_X_X_ = 111;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_NX_MCX_EX_V6 = 112;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_NX_MCX_EX_X_ = 113;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_NX_MCX_X_X_V6 = 114;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_NX_MCX_X_X_X_ = 115;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_NX_X_X_EX_V6 = 116;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_NX_X_X_EX_X_ = 117;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_NX_X_X_X_X_V6 = 118;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_NX_X_X_X_X_X_ = 119;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_MCX_EX_V6 = 120;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_MCX_EX_X_ = 121;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_MCX_X_X_V6 = 122;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_MCX_X_X_X_ = 123;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_EX_V6 = 124;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_EX_X_ = 125;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_V6 = 126;
                                 NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_ = 127;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_NX_MCX_EX_V6 = 128;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_NX_MCX_EX_X_ = 129;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_NX_MCX_X_X_V6 = 130;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_NX_MCX_X_X_X_ = 131;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_NX_X_X_EX_V6 = 132;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_NX_X_X_EX_X_ = 133;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_NX_X_X_X_X_V6 = 134;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_NX_X_X_X_X_X_ = 135;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_X_X_MCX_EX_V6 = 136;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_X_X_MCX_EX_X_ = 137;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_X_X_MCX_X_X_V6 = 138;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_X_X_MCX_X_X_X_ = 139;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_X_X_X_X_EX_V6 = 140;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_X_X_X_X_EX_X_ = 141;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_X_X_X_X_X_X_V6 = 142;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_X_X_X_X_X_X_X_ = 143;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_NX_MCX_EX_V6 = 144;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_NX_MCX_EX_X_ = 145;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_NX_MCX_X_X_V6 = 146;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_NX_MCX_X_X_X_ = 147;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_NX_X_X_EX_V6 = 148;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_NX_X_X_EX_X_ = 149;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_NX_X_X_X_X_V6 = 150;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_NX_X_X_X_X_X_ = 151;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_X_X_MCX_EX_V6 = 152;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_X_X_MCX_EX_X_ = 153;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_X_X_MCX_X_X_V6 = 154;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_X_X_MCX_X_X_X_ = 155;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_X_X_X_X_EX_V6 = 156;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_X_X_X_X_EX_X_ = 157;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_X_X_X_X_X_X_V6 = 158;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_X_X_X_X_X_X_X_ = 159;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_NX_MCX_EX_V6 = 160;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_NX_MCX_EX_X_ = 161;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_NX_MCX_X_X_V6 = 162;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_NX_MCX_X_X_X_ = 163;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_NX_X_X_EX_V6 = 164;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_NX_X_X_EX_X_ = 165;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_NX_X_X_X_X_V6 = 166;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_NX_X_X_X_X_X_ = 167;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_X_X_MCX_EX_V6 = 168;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_X_X_MCX_EX_X_ = 169;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_X_X_MCX_X_X_V6 = 170;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_X_X_MCX_X_X_X_ = 171;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_X_X_X_X_EX_V6 = 172;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_X_X_X_X_EX_X_ = 173;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_X_X_X_X_X_X_V6 = 174;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_X_X_X_X_X_X_X_ = 175;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_NX_MCX_EX_V6 = 176;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_NX_MCX_EX_X_ = 177;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_NX_MCX_X_X_V6 = 178;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_NX_MCX_X_X_X_ = 179;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_NX_X_X_EX_V6 = 180;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_NX_X_X_EX_X_ = 181;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_NX_X_X_X_X_V6 = 182;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_NX_X_X_X_X_X_ = 183;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_X_X_MCX_EX_V6 = 184;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_X_X_MCX_EX_X_ = 185;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_X_X_MCX_X_X_V6 = 186;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_X_X_MCX_X_X_X_ = 187;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_EX_V6 = 188;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_EX_X_ = 189;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_V6 = 190;
                                 NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_ = 191;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_NX_MCX_EX_V6 = 192;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_NX_MCX_EX_X_ = 193;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_NX_MCX_X_X_V6 = 194;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_NX_MCX_X_X_X_ = 195;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_NX_X_X_EX_V6 = 196;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_NX_X_X_EX_X_ = 197;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_NX_X_X_X_X_V6 = 198;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_NX_X_X_X_X_X_ = 199;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_X_X_MCX_EX_V6 = 200;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_X_X_MCX_EX_X_ = 201;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_X_X_MCX_X_X_V6 = 202;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_X_X_MCX_X_X_X_ = 203;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_X_X_X_X_EX_V6 = 204;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_X_X_X_X_EX_X_ = 205;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_X_X_X_X_X_X_V6 = 206;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_X_X_X_X_X_X_X_ = 207;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_NX_MCX_EX_V6 = 208;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_NX_MCX_EX_X_ = 209;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_NX_MCX_X_X_V6 = 210;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_NX_MCX_X_X_X_ = 211;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_NX_X_X_EX_V6 = 212;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_NX_X_X_EX_X_ = 213;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_NX_X_X_X_X_V6 = 214;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_NX_X_X_X_X_X_ = 215;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_X_X_MCX_EX_V6 = 216;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_X_X_MCX_EX_X_ = 217;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_X_X_MCX_X_X_V6 = 218;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_X_X_MCX_X_X_X_ = 219;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_X_X_X_X_EX_V6 = 220;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_X_X_X_X_EX_X_ = 221;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_X_X_X_X_X_X_V6 = 222;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_X_X_X_X_X_X_X_ = 223;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_NX_MCX_EX_V6 = 224;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_NX_MCX_EX_X_ = 225;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_NX_MCX_X_X_V6 = 226;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_NX_MCX_X_X_X_ = 227;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_NX_X_X_EX_V6 = 228;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_NX_X_X_EX_X_ = 229;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_NX_X_X_X_X_V6 = 230;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_NX_X_X_X_X_X_ = 231;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_X_X_MCX_EX_V6 = 232;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_X_X_MCX_EX_X_ = 233;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_X_X_MCX_X_X_V6 = 234;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_X_X_MCX_X_X_X_ = 235;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_X_X_X_X_EX_V6 = 236;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_X_X_X_X_EX_X_ = 237;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_X_X_X_X_X_X_V6 = 238;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_X_X_X_X_X_X_X_ = 239;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_NX_MCX_EX_V6 = 240;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_NX_MCX_EX_X_ = 241;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_NX_MCX_X_X_V6 = 242;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_NX_MCX_X_X_X_ = 243;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_NX_X_X_EX_V6 = 244;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_NX_X_X_EX_X_ = 245;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_NX_X_X_X_X_V6 = 246;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_NX_X_X_X_X_X_ = 247;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_MCX_EX_V6 = 248;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_MCX_EX_X_ = 249;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_MCX_X_X_V6 = 250;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_MCX_X_X_X_ = 251;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_EX_V6 = 252;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_EX_X_ = 253;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_V6 = 254;
                                 NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_ = 255;
                              };
                              NbrOptions nbrOptions = 11;
                              int32 nbrPriority = 12;
                              string nbrRouterId = 13;
                              enum NbrState {
                                 NbrState_ATTEMPT = 0;
                                 NbrState_DOWN = 1;
                                 NbrState_EXCHANGE = 2;
                                 NbrState_EXSTART = 3;
                                 NbrState_FULL = 4;
                                 NbrState_INIT = 5;
                                 NbrState_LOADING = 6;
                                 NbrState_X_2X_WAY = 7;
                              };
                              NbrState nbrState = 14;
                              enum NbrStatus {
                                 NbrStatus_BACKUP = 0;
                                 NbrStatus_DR = 1;
                                 NbrStatus_DROTHER = 2;
                                 NbrStatus_PX_2X_P = 3;
                                 NbrStatus_WAITING = 4;
                                 NbrStatus_X_ = 5;
                              };
                              NbrStatus nbrStatus = 15;
                              string nbrUpTime = 16;
                              string upTimeStamp = 17;
                           }
                           repeated NbrStatistic nbrStatistic = 1;
                        }
                        NbrStatistics nbrStatistics = 42;
                        enum NetworkType {
                           NetworkType_BROADCAST = 0;
                           NetworkType_LOOPBACK = 1;
                           NetworkType_NBMA = 2;
                           NetworkType_POINTX_TOX_MULTIPOINT = 3;
                           NetworkType_POINTX_TOX_MULTIPOINTX_NONBROADCAST = 4;
                           NetworkType_POINTX_TOX_POINT = 5;
                        };
                        NetworkType networkType = 43;
                        bool oneArmEchoFlag = 44;
                        uint32 peerFlapSuppDetectInterval = 45;
                        bool peerFlapSuppHoldDown = 46;
                        uint32 peerFlapSuppHoldDownInterval = 47;
                        bool peerFlapSuppHoldMaxCost = 48;
                        uint32 peerFlapSuppResumeInterval = 49;
                        uint32 peerFlapSuppThreshold = 50;
                        bool peerFlapSuppress = 51;
                        uint32 peerFlappingCount = 52;
                        uint32 peerFlappingSuppressRemainTimer = 53;
                        enum PeerFlappingSuppressStatus {
                           PeerFlappingSuppressStatus_DISABLE = 0;
                           PeerFlappingSuppressStatus_ENABLE = 1;
                           PeerFlappingSuppressStatus_HOLDX_DOWN = 2;
                           PeerFlappingSuppressStatus_HOLDX_MAXX_COST = 3;
                        };
                        PeerFlappingSuppressStatus peerFlappingSuppressStatus = 54;
                        string peerFlappingSuppressTimer = 55;
                        uint32 peerFlappingThreshold = 56;
                        message Peers {
                           message Peer {
                              uint32 cost = 1;
                              bool drEligible = 2;
                              string nbrRouterId = 3;
                              string nbrlinkLocalAddr = 4;
                              int32 poll = 5;
                           }
                           repeated Peer peer = 1;
                        }
                        Peers peers = 57;
                        bool perLinkFlag = 58;
                        int32 pollInterval = 59;
                        uint32 prefixLen = 60;
                        message RequestQueues {
                           message RequestQueue {
                              string advertiseRouterId = 1;
                              string linkStateId = 2;
                              uint32 lsaAge = 3;
                              uint32 lsaCount = 4;
                              string lsaSequence = 5;
                              enum LsaType {
                                 LsaType_ASX_EXTERNALX_LSA = 0;
                                 LsaType_EXTERNAL = 1;
                                 LsaType_GRACEX_LSA = 2;
                                 LsaType_GROUPX_MEMBERSHIPX_LSA = 3;
                                 LsaType_INTERX_AREAX_PREFIXX_LSA = 4;
                                 LsaType_INTERX_AREAX_ROUTERX_LSA = 5;
                                 LsaType_INTRAX_AREAX_PREFIXX_LSA = 6;
                                 LsaType_LINKX_LSA = 7;
                                 LsaType_NETWORK = 8;
                                 LsaType_NETWORKX_LSA = 9;
                                 LsaType_NSSA = 10;
                                 LsaType_OPQ_AREA = 11;
                                 LsaType_OPQ_AS = 12;
                                 LsaType_OPQ_LINK = 13;
                                 LsaType_REQLISTX_LINKX_LSA = 14;
                                 LsaType_RIX_AREAX_LSA = 15;
                                 LsaType_RIX_ASX_LSA = 16;
                                 LsaType_RIX_LINKX_LSA = 17;
                                 LsaType_ROUTER = 18;
                                 LsaType_ROUTERX_LSA = 19;
                                 LsaType_SUM_ASBR = 20;
                                 LsaType_SUM_NET = 21;
                                 LsaType_TYPEX_7X_LSA = 22;
                                 LsaType_UNKNOWNX_LSA = 23;
                              };
                              LsaType lsaType = 6;
                              string nbrIpAddr = 7;
                              string nbrRouterId = 8;
                              string routerId = 9;
                           }
                           repeated RequestQueue requestQueue = 1;
                        }
                        RequestQueues requestQueues = 61;
                        message RetransQueues {
                           message RetransQueue {
                              string advertiseRouterId = 1;
                              string linkStateId = 2;
                              uint32 lsaAge = 3;
                              uint32 lsaCount = 4;
                              string lsaSequence = 5;
                              enum LsaType {
                                 LsaType_ASX_EXTERNALX_LSA = 0;
                                 LsaType_EXTERNAL = 1;
                                 LsaType_GRACEX_LSA = 2;
                                 LsaType_GROUPX_MEMBERSHIPX_LSA = 3;
                                 LsaType_INTERX_AREAX_PREFIXX_LSA = 4;
                                 LsaType_INTERX_AREAX_ROUTERX_LSA = 5;
                                 LsaType_INTRAX_AREAX_PREFIXX_LSA = 6;
                                 LsaType_LINKX_LSA = 7;
                                 LsaType_NETWORK = 8;
                                 LsaType_NETWORKX_LSA = 9;
                                 LsaType_NSSA = 10;
                                 LsaType_OPQ_AREA = 11;
                                 LsaType_OPQ_AS = 12;
                                 LsaType_OPQ_LINK = 13;
                                 LsaType_REQLISTX_LINKX_LSA = 14;
                                 LsaType_RIX_AREAX_LSA = 15;
                                 LsaType_RIX_ASX_LSA = 16;
                                 LsaType_RIX_LINKX_LSA = 17;
                                 LsaType_ROUTER = 18;
                                 LsaType_ROUTERX_LSA = 19;
                                 LsaType_SUM_ASBR = 20;
                                 LsaType_SUM_NET = 21;
                                 LsaType_TYPEX_7X_LSA = 22;
                                 LsaType_UNKNOWNX_LSA = 23;
                              };
                              LsaType lsaType = 6;
                              string nbrIpAddr = 7;
                              string nbrRouterId = 8;
                              string routerId = 9;
                           }
                           repeated RetransQueue retransQueue = 1;
                        }
                        RetransQueues retransQueues = 62;
                        int32 retransmitInterval = 63;
                        string saName = 64;
                        string saNameCfg = 65;
                        bool silentEnable = 66;
                        uint32 timerConserFlag = 67;
                        int32 transDelayInterval = 68;
                        uint32 waitInterval = 69;
                     }
                     repeated Interface interface = 1;
                  }
                  Interfaces interfaces = 13;
                  string lsaCksumSum = 14;
                  uint32 lsaCount = 15;
                  int32 nssaDefaultCost = 16;
                  bool nssaDefaultCostConfigFlag = 17;
                  bool nssaDefaultRouteAdvertise = 18;
                  uint32 nssaDefaultTag = 19;
                  bool nssaDefaultTagConfigFlag = 20;
                  int32 nssaDefaultType = 21;
                  bool nssaDefaultTypeConfigFlag = 22;
                  uint32 nssaLsaCount = 23;
                  bool nssaNoImportRoute = 24;
                  bool nssaNoSummary = 25;
                  bool nssaSetNbit = 26;
                  bool nssaTranslatorAlways = 27;
                  int32 nssaTranslatorInterval = 28;
                  uint32 nxtSpfTrigTime = 29;
                  enum RtrIdConState {
                     RtrIdConState_NA = 0;
                     RtrIdConState_NORMAL = 1;
                     RtrIdConState_RTRIDX_CHANGED = 2;
                     RtrIdConState_SELECTING = 3;
                     RtrIdConState_SUSPEND = 4;
                     RtrIdConState_WAITX_SELECT = 5;
                  };
                  RtrIdConState rtrIdConState = 30;
                  string saName = 31;
                  uint32 spfScheduleTimes = 32;
                  bool stubNoSummary = 33;
                  uint32 unknownLsaCount = 34;
               }
               repeated Area area = 1;
            }
            Areas areas = 3;
            string asUnLSAChksum = 4;
            uint32 asUnLSACount = 5;
            string aseLSAChkSum = 6;
            uint32 aseLSACount = 7;
            enum AuthenMode {
               AuthenMode_HMACX_SHA256 = 0;
               AuthenMode_NONE = 1;
            };
            AuthenMode authenMode = 8;
            uint32 bandwidthReference = 9;
            uint32 bfdAllIfIncrCost = 10;
            bool bfdAllInterfacesFlag = 11;
            uint32 bfdDetectMultiplierInterval = 12;
            uint32 bfdMinRxInterval = 13;
            uint32 bfdMinTxInterval = 14;
            bool bfdRxCfgFlag = 15;
            message BfdStatDatas {
               message BfdStatData {
                  uint32 InstanceId = 1;
                  string LocalIpv6Addr = 2;
                  string NbrRouterID = 3;
                  string RemoteIpv6Addr = 4;
                  string areaId = 5;
                  enum BfdState {
                     BfdState_DOWN = 0;
                     BfdState_UNKNOWN = 1;
                     BfdState_UP = 2;
                  };
                  BfdState bfdState = 6;
                  string ifName = 7;
               }
               repeated BfdStatData bfdStatData = 1;
            }
            BfdStatDatas bfdStatDatas = 16;
            bool bfdTxCfgFlag = 17;
            string description = 18;
            message DomainIDs {
               message DomainID {
                  string domainID = 1;
                  bool secondaryFlag = 2;
                  enum Type {
                     Type_X_0005 = 0;
                     Type_X_0105 = 1;
                     Type_X_0205 = 2;
                     Type_X_8005 = 3;
                  };
                  Type type = 3;
                  string value = 4;
               }
               repeated DomainID domainID = 1;
            }
            DomainIDs domainIDs = 19;
            bool domainIdNullFlag = 20;
            message DynamicHostNames {
               message DynamicHostName {
                  string areaId = 1;
                  string hostName = 2;
                  string routerId = 3;
                  string scope = 4;
               }
               repeated DynamicHostName dynamicHostName = 1;
            }
            DynamicHostNames dynamicHostNames = 21;
            message ErrorProcessDatas {
               message ErrorProcessData {
                  uint32 ackBadCnt = 1;
                  uint32 ackDuplicateCnt = 2;
                  uint32 ackNbrLowCnt = 3;
                  uint32 ackUnknwnLsaCnt = 4;
                  uint32 authKeyFailCnt = 5;
                  uint32 authSeqFailCnt = 6;
                  uint32 authTypeFailCnt = 7;
                  uint32 badAreaPktCnt = 8;
                  uint32 badChkSumPktCnt = 9;
                  uint32 badInstIdCnt = 10;
                  uint32 badPktCnt = 11;
                  uint32 badVerCnt = 12;
                  uint32 badVirtLinkCnt = 13;
                  uint32 ddMtuMsMatchCnt = 14;
                  uint32 ddNbrLowCnt = 15;
                  uint32 ddOptMsMatchCnt = 16;
                  uint32 ddRtrIdCnt = 17;
                  uint32 ddUnknwnLsaCnt = 18;
                  uint32 grInvalidLsaCnt = 19;
                  uint32 grInvalidPolCnt = 20;
                  uint32 grInvalidPrdCnt = 21;
                  uint32 helloDrMisCnt = 22;
                  uint32 ifDownCnt = 23;
                  uint32 misDeadIntlCnt = 24;
                  uint32 misExtRouCapCnt = 25;
                  uint32 misHelloIntlCnt = 26;
                  uint32 noNbr = 27;
                  uint32 reqBadCnt = 28;
                  uint32 reqEmptyCnt = 29;
                  uint32 reqNbrLowCnt = 30;
                  string rtrId = 31;
                  uint32 sameIpPktCnt = 32;
                  uint32 sameRtrHPktCt = 33;
                  uint32 shortPktCnt = 34;
                  uint32 txErrCnt = 35;
                  uint32 updLesRecentCnt = 36;
                  uint32 updLsChkSumCnt = 37;
                  uint32 updMinLSArrCnt = 38;
                  uint32 updNbrLowCnt = 39;
                  uint32 updSelfNewrCnt = 40;
                  uint32 updUnknwLsaCnt = 41;
                  uint32 vlinkNbrMisCnt = 42;
               }
               repeated ErrorProcessData errorProcessData = 1;
            }
            ErrorProcessDatas errorProcessDatas = 22;
            uint32 exchangeAndLoadingNerghbor = 23;
            bool frrBindingFlag = 24;
            uint32 fullNbrCount = 25;
            message GracefulRestartInformations {
               message GracefulRestartInformation {
                  uint32 RestartNbrNum = 1;
                  enum GrCapability {
                     GrCapability_DISABLED = 0;
                     GrCapability_ENABLED = 1;
                  };
                  GrCapability grCapability = 2;
                  enum HelpRole {
                     HelpRole_IGNOREX_EXTERNALX_LSAX_CHECK = 0;
                     HelpRole_LSAX_CHECKINGX_IGNORE = 1;
                     HelpRole_NEVER = 2;
                     HelpRole_NONE = 3;
                     HelpRole_PLANNED = 4;
                     HelpRole_PLANNEDX_ANDX_UNPLANNED = 5;
                     HelpRole_PLANNEDX_ANDX_UNX_PLANNEDX_X_STRICTX_LSAX_CHECK = 6;
                     HelpRole_PLANNEDX_X_IGNOREX_EXTERNALX_LSAX_CHECK = 7;
                     HelpRole_PLANNEDX_X_STRICTX_LSAX_CHECK = 8;
                     HelpRole_PLANNEDX_X_UNX_PLANNEDX_X_IGNOREX_EXTERNALX_LSAX_CHECK = 9;
                     HelpRole_PLANNEDX_X_UNX_PLANNEDX_X_STRICTX_LSAX_CHECK = 10;
                     HelpRole_UNX_PLANNEDX_X_IGNOREX_EXTERNALX_LSAX_CHECK = 11;
                     HelpRole_UNX_PLANNEDX_X_LSAX_CHECKINGX_IGNORE = 12;
                     HelpRole_UNX_PLANNEDX_X_STRICTX_LSAX_CHECK = 13;
                  };
                  HelpRole helpRole = 3;
                  uint32 maxGracePeriod = 4;
                  enum OnHelper {
                     OnHelper_FLOODINGX_CHANGEDX_LSA = 0;
                     OnHelper_GRACEFULX_RESTARTX_UNCONFIGUREDX_ATX_PROCESSX_LEVEL = 1;
                     OnHelper_GRACEX_LSAX_NOTX_FOUND = 2;
                     OnHelper_GRACEX_PERIODX_EXP = 3;
                     OnHelper_GRACEX_PERIODX_EXPIRED = 4;
                     OnHelper_INTERFACEX_DOWN = 5;
                     OnHelper_INTERFACEX_IDX_CHANGE = 6;
                     OnHelper_INTERFACEX_STATUSX_CHANGED = 7;
                     OnHelper_NEIGHBORX_RESET = 8;
                     OnHelper_NONE = 9;
                     OnHelper_POLICYX_CHECKX_FAILEDX_FORX_RECEIVEDX_GRACEX_LSA = 10;
                     OnHelper_PROCESSX_RESET = 11;
                     OnHelper_RECEIVEDX_FLUSHEDX_GRACEX_LSA = 12;
                     OnHelper_ROUTERX_IDX_UNSET = 13;
                     OnHelper_SUCCESSFUL = 14;
                     OnHelper_SUCCESSFULX_EXIT = 15;
                     OnHelper_TOPOLOGYX_CHANGE = 16;
                  };
                  OnHelper onHelper = 5;
               }
               repeated GracefulRestartInformation gracefulRestartInformation = 1;
            }
            GracefulRestartInformations gracefulRestartInformations = 26;
            enum ImportLimitStatus {
               ImportLimitStatus_ALARM = 0;
               ImportLimitStatus_DISABLE = 1;
               ImportLimitStatus_ENABLE = 2;
               ImportLimitStatus_OVERLIMIT = 3;
            };
            ImportLimitStatus importLimitStatus = 27;
            message LastDownNbrs {
               message LastDownNbr {
                  string areaId = 1;
                  string ifName = 2;
                  uint32 instanceId = 3;
                  uint32 listIndex = 4;
                  enum NbrDownImmediateReason {
                     NbrDownImmediateReason_NEIGHBORX_DOWNX_DUEX_TOX_1X_WAYHELLOX_RECEIVED = 0;
                     NbrDownImmediateReason_NEIGHBORX_DOWNX_DUEX_TOX_ADJOKX_ = 1;
                     NbrDownImmediateReason_NEIGHBORX_DOWNX_DUEX_TOX_BADLSREQ = 2;
                     NbrDownImmediateReason_NEIGHBORX_DOWNX_DUEX_TOX_INACTIVITY = 3;
                     NbrDownImmediateReason_NEIGHBORX_DOWNX_DUEX_TOX_KILLX_NEIGHBOR = 4;
                     NbrDownImmediateReason_NEIGHBORX_DOWNX_DUEX_TOX_LLX_DOWN = 5;
                     NbrDownImmediateReason_NEIGHBORX_DOWNX_DUEX_TOX_SEQUENCENUMX_MISMATCH = 6;
                  };
                  NbrDownImmediateReason nbrDownImmediateReason = 5;
                  enum NbrDownPrimaryReason {
                     NbrDownPrimaryReason_ACLX_CHANGEDX_FORX_FILTERX_LSA = 0;
                     NbrDownPrimaryReason_AREAX_OPTIONX_MISX_MATCH = 1;
                     NbrDownPrimaryReason_AREAX_RESET = 2;
                     NbrDownPrimaryReason_BFDX_SESSIONX_DOWN = 3;
                     NbrDownPrimaryReason_COMPONENTX_ISX_INX_IMPLEMENTX_STAT = 4;
                     NbrDownPrimaryReason_CPUX_OVERLOAD = 5;
                     NbrDownPrimaryReason_DDX_RETRANSX_TIMESX_UPTOX_LIMIT = 6;
                     NbrDownPrimaryReason_DOWNX_REASONX_INITX_VALUE = 7;
                     NbrDownPrimaryReason_FILTERX_LSAX_CONFIGURATIONX_CHANGE = 8;
                     NbrDownPrimaryReason_HELLOX_NOTX_SEEN = 9;
                     NbrDownPrimaryReason_INTERFACEX_PARAMETERX_MISMATCH = 10;
                     NbrDownPrimaryReason_INTERFACEX_RESET = 11;
                     NbrDownPrimaryReason_INTERFACEX_STATEX_CHANGEDX_TOX_STANDBY = 12;
                     NbrDownPrimaryReason_IX_BITX_INCORRECTX_INX_DD = 13;
                     NbrDownPrimaryReason_LINKX_FAULTX_ORX_INTERFACEX_CONFIGURATIONX_CHANGE = 14;
                     NbrDownPrimaryReason_LOGICALX_INTERFACEX_STATEX_CHANGE = 15;
                     NbrDownPrimaryReason_LSREQUESTX_PACKETX_REQUESTX_LSAX_ISX_NOTX_INX_THEX_LSDB = 16;
                     NbrDownPrimaryReason_LSREQUESTX_PACKETX_UNKNOWNX_REASON = 17;
                     NbrDownPrimaryReason_LSREQUESTX_PACKETX_X_EXISTX_NEWERX_LSAX_INX_THEX_LSDB = 18;
                     NbrDownPrimaryReason_LSREQUESTX_PACKETX_X_EXISTX_SAMEX_LSAX_INX_THEX_LSDB = 19;
                     NbrDownPrimaryReason_MSX_BITX_INCORRECTX_INX_DD = 20;
                     NbrDownPrimaryReason_MX_IX_MSX_BITX_ORX_SEQUENCENUMX_INCORRECT = 21;
                     NbrDownPrimaryReason_NEIGHBORX_ROUTERX_IDX_CHANGEDX_ORX_IPX_CONFLICTED = 22;
                     NbrDownPrimaryReason_NEIGHBORX_STATEX_CHANGEX_FROMX_DRX_ORX_BDRX_TOX_DROTHER = 23;
                     NbrDownPrimaryReason_NEIGHBORX_STATEX_WASX_NOTX_FULLX_WHENX_LSDBX_OVERFLOW = 24;
                     NbrDownPrimaryReason_NOTX_NSSAX_FINDX_7X_TYPEX_LSAX_INX_SUMMARYX_LIST = 25;
                     NbrDownPrimaryReason_NOTX_RECEIVEDX_DDX_DURINGX_ROUTERDEADINTERVAL = 26;
                     NbrDownPrimaryReason_NSSAX_AREAX_CONFIGUREX_CHANGE = 27;
                     NbrDownPrimaryReason_NSSAX_ORX_STUBX_AREAX_FINDX_5X_X_11X_TYPEX_LSA = 28;
                     NbrDownPrimaryReason_OPAQUEX_CAPABILITYX_DISABLED = 29;
                     NbrDownPrimaryReason_OPAQUEX_CAPABILITYX_ENABLED = 30;
                     NbrDownPrimaryReason_OPTIONSX_INCORRECTX_INX_DD = 31;
                     NbrDownPrimaryReason_OSPFX_PROCESSX_RESET = 32;
                     NbrDownPrimaryReason_OSPFX_PROCESSX_SHUTDOWN = 33;
                     NbrDownPrimaryReason_PASSIVEX_INTERFACEX_DOWN = 34;
                     NbrDownPrimaryReason_RECEIVEDX_INVALIDX_DDX_PACKET = 35;
                     NbrDownPrimaryReason_RECEIVEDX_MTUX_MISMATCHEDX_DDX_PACKET = 36;
                     NbrDownPrimaryReason_RESETX_OSPFX_PEER = 37;
                     NbrDownPrimaryReason_RETRANSMISSIONX_LIMITX_EXCEED = 38;
                     NbrDownPrimaryReason_ROUTERX_STATEX_CHANGEX_FROMX_DRX_ORX_BDRX_TOX_DROTHER = 39;
                     NbrDownPrimaryReason_SEQEUNCEX_NUMBERX_MISMATCHED = 40;
                     NbrDownPrimaryReason_SHAMX_LINKX_UNREACHABLE = 41;
                     NbrDownPrimaryReason_STUBX_AREAX_CONFIGUREX_CHANGE = 42;
                     NbrDownPrimaryReason_UNABLEX_OPAQUEX_CAPABILITYX_FINDX_9X_10X_11X_TYPEX_LSA = 43;
                     NbrDownPrimaryReason_UNDOX_NBMAX_PEER = 44;
                     NbrDownPrimaryReason_UNDOX_NETWORKX_COMMAND = 45;
                     NbrDownPrimaryReason_UNDOX_OSPFX_AREA = 46;
                     NbrDownPrimaryReason_UNDOX_OSPFX_INTERFACEX_X_UNDOX_AREA = 47;
                     NbrDownPrimaryReason_UNDOX_OSPFX_INTERFACEX_X_UNDOX_AREAX_X_UNDOX_NETWORK = 48;
                     NbrDownPrimaryReason_UNDOX_ROUTERX_ID = 49;
                     NbrDownPrimaryReason_VIRTUALX_INTERFACEX_STATEX_CHANGE = 50;
                     NbrDownPrimaryReason_VLINKX_PEERX_NOTX_REACHABLE = 51;
                     NbrDownPrimaryReason_X_1X_WAYHELLOX_RECEIVED = 52;
                  };
                  NbrDownPrimaryReason nbrDownPrimaryReason = 6;
                  string nbrDownTime = 7;
                  string nbrRouterId = 8;
                  string routerId = 9;
               }
               repeated LastDownNbr lastDownNbr = 1;
            }
            LastDownNbrs lastDownNbrs = 28;
            bool lsaArrivalFlag = 29;
            uint32 lsaArrivalHoldInterval = 30;
            uint32 lsaArrivalInterval = 31;
            uint32 lsaArrivalMaxInterval = 32;
            uint32 lsaArrivalStartInterval = 33;
            uint32 lsaOrgCnt = 34;
            uint32 lsaOriginateHoldInterval = 35;
            uint32 lsaOriginateInterval = 36;
            bool lsaOriginateIntervalFlag = 37;
            uint32 lsaOriginateMaxInterval = 38;
            uint32 lsaOriginateStartInterval = 39;
            uint32 lsaRecvdCnt = 40;
            bool lsaRefreshFlag = 41;
            message LsdbBriefs {
               message LsdbBrief {
                  uint32 IntraprefixLsa = 1;
                  uint32 asbr = 2;
                  uint32 ase = 3;
                  uint32 graceLsa = 4;
                  uint32 linkLsa = 5;
                  uint32 network = 6;
                  uint32 riarealsa = 7;
                  uint32 riaslsa = 8;
                  uint32 rilinklsa = 9;
                  uint32 router = 10;
                  string routerId = 11;
                  uint32 summaryNet = 12;
                  uint32 total = 13;
                  uint32 type7 = 14;
                  uint32 unknownLsa = 15;
               }
               repeated LsdbBrief lsdbBrief = 1;
            }
            LsdbBriefs lsdbBriefs = 42;
            message LsdbStatistics {
               message LsdbStatistic {
                  string advertiseRouterId = 1;
                  string areaId = 2;
                  string checkSum = 3;
                  string hostName = 4;
                  string linkLocalAddr = 5;
                  string linkStateId = 6;
                  int32 lsaAge = 7;
                  uint32 lsaLength = 8;
                  string lsaSequenceNumber = 9;
                  enum LsaType {
                     LsaType_ASX_EXTERNALX_LSA = 0;
                     LsaType_EXTERNAL = 1;
                     LsaType_GRACEX_LSA = 2;
                     LsaType_GROUPX_MEMBERSHIPX_LSA = 3;
                     LsaType_INTERX_AREAX_PREFIXX_LSA = 4;
                     LsaType_INTERX_AREAX_ROUTERX_LSA = 5;
                     LsaType_INTRAX_AREAX_PREFIXX_LSA = 6;
                     LsaType_LINKX_LSA = 7;
                     LsaType_NETWORK = 8;
                     LsaType_NETWORKX_LSA = 9;
                     LsaType_NSSA = 10;
                     LsaType_OPQ_AREA = 11;
                     LsaType_OPQ_AS = 12;
                     LsaType_OPQ_LINK = 13;
                     LsaType_REQLISTX_LINKX_LSA = 14;
                     LsaType_RIX_AREAX_LSA = 15;
                     LsaType_RIX_ASX_LSA = 16;
                     LsaType_RIX_LINKX_LSA = 17;
                     LsaType_ROUTER = 18;
                     LsaType_ROUTERX_LSA = 19;
                     LsaType_SUM_ASBR = 20;
                     LsaType_SUM_NET = 21;
                     LsaType_TYPEX_7X_LSA = 22;
                     LsaType_UNKNOWNX_LSA = 23;
                  };
                  LsaType lsaType = 10;
                  message Lsabodys {
                     message Lsabody {
                        string attachRouterId = 1;
                        string destRouterId = 2;
                        uint32 extMetricType = 3;
                        string fwdIpv6Address = 4;
                        string interfaceId = 5;
                        string ipv6Prefix = 6;
                        enum LinkType {
                           LinkType_NONE = 0;
                           LinkType_POINTX_TOX_POINT = 1;
                           LinkType_PX_2X_P = 2;
                           LinkType_RESERVED = 3;
                           LinkType_STUBNET = 4;
                           LinkType_TRANSITX_NETWORK = 5;
                           LinkType_TRANSNET = 6;
                           LinkType_UNKNOWN = 7;
                           LinkType_VIRTUAL = 8;
                           LinkType_VIRTUALX_LINK = 9;
                        };
                        LinkType linkType = 7;
                        string nbrIntfId = 8;
                        string nbrRouterId = 9;
                        uint32 prefixLen = 10;
                        enum PrefixOptions {
                           PrefixOptions_DNX_PX_MCX_LAX_NU = 0;
                           PrefixOptions_DNX_PX_MCX_LAX_X_ = 1;
                           PrefixOptions_DNX_PX_MCX_X_X_NU = 2;
                           PrefixOptions_DNX_PX_MCX_X_X_X_ = 3;
                           PrefixOptions_DNX_PX_X_X_LAX_NU = 4;
                           PrefixOptions_DNX_PX_X_X_LAX_X_ = 5;
                           PrefixOptions_DNX_PX_X_X_X_X_NU = 6;
                           PrefixOptions_DNX_PX_X_X_X_X_X_ = 7;
                           PrefixOptions_DNX_X_X_MCX_LAX_NU = 8;
                           PrefixOptions_DNX_X_X_MCX_LAX_X_ = 9;
                           PrefixOptions_DNX_X_X_MCX_X_X_NU = 10;
                           PrefixOptions_DNX_X_X_MCX_X_X_X_ = 11;
                           PrefixOptions_DNX_X_X_X_X_LAX_NU = 12;
                           PrefixOptions_DNX_X_X_X_X_LAX_X_ = 13;
                           PrefixOptions_DNX_X_X_X_X_X_X_NU = 14;
                           PrefixOptions_DNX_X_X_X_X_X_X_X_ = 15;
                           PrefixOptions_X_X_PX_MCX_LAX_NU = 16;
                           PrefixOptions_X_X_PX_MCX_LAX_X_ = 17;
                           PrefixOptions_X_X_PX_MCX_X_X_NU = 18;
                           PrefixOptions_X_X_PX_MCX_X_X_X_ = 19;
                           PrefixOptions_X_X_PX_X_X_LAX_NU = 20;
                           PrefixOptions_X_X_PX_X_X_LAX_X_ = 21;
                           PrefixOptions_X_X_PX_X_X_X_X_NU = 22;
                           PrefixOptions_X_X_PX_X_X_X_X_X_ = 23;
                           PrefixOptions_X_X_X_X_MCX_LAX_MU = 24;
                           PrefixOptions_X_X_X_X_MCX_LAX_X_ = 25;
                           PrefixOptions_X_X_X_X_MCX_X_X_NU = 26;
                           PrefixOptions_X_X_X_X_MCX_X_X_X_ = 27;
                           PrefixOptions_X_X_X_X_X_X_LAX_NU = 28;
                           PrefixOptions_X_X_X_X_X_X_LAX_X_ = 29;
                           PrefixOptions_X_X_X_X_X_X_X_X_NU = 30;
                           PrefixOptions_X_X_X_X_X_X_X_X_X_ = 31;
                        };
                        PrefixOptions prefixOptions = 11;
                        uint32 routeTag = 12;
                        uint32 tosMetric = 13;
                     }
                     repeated Lsabody lsabody = 1;
                  }
                  Lsabodys lsabodys = 11;
                  enum OptionFlag {
                     OptionFlag_ABR = 0;
                     OptionFlag_ABRX_X_VIRTUAL = 1;
                     OptionFlag_ASBR = 2;
                     OptionFlag_ASBRX_ABR = 3;
                     OptionFlag_ASBRX_X_ABRX_X_VIRTUAL = 4;
                     OptionFlag_EX_FX_T = 5;
                     OptionFlag_EX_FX_X_ = 6;
                     OptionFlag_EX_X_X_T = 7;
                     OptionFlag_EX_X_X_X_ = 8;
                     OptionFlag_NTX_X_X_VX_EX_B = 9;
                     OptionFlag_NTX_X_X_VX_EX_X_ = 10;
                     OptionFlag_NTX_X_X_VX_X_X_B = 11;
                     OptionFlag_NTX_X_X_VX_X_X_X_ = 12;
                     OptionFlag_NTX_X_X_X_X_EX_B = 13;
                     OptionFlag_NTX_X_X_X_X_EX_X_ = 14;
                     OptionFlag_NTX_X_X_X_X_X_X_B = 15;
                     OptionFlag_NTX_X_X_X_X_X_X_X_ = 16;
                     OptionFlag_X_X_FX_T = 17;
                     OptionFlag_X_X_FX_X_ = 18;
                     OptionFlag_X_X_X_X_T = 19;
                     OptionFlag_X_X_X_X_VX_EX_B = 20;
                     OptionFlag_X_X_X_X_VX_EX_X_ = 21;
                     OptionFlag_X_X_X_X_VX_X_X_B = 22;
                     OptionFlag_X_X_X_X_VX_X_X_X_ = 23;
                     OptionFlag_X_X_X_X_X_ = 24;
                     OptionFlag_X_X_X_X_X_X_EX_B = 25;
                     OptionFlag_X_X_X_X_X_X_EX_X_ = 26;
                     OptionFlag_X_X_X_X_X_X_X_X_B = 27;
                     OptionFlag_X_X_X_X_X_X_X_X_X_ = 28;
                  };
                  OptionFlag optionFlag = 12;
                  enum Options {
                     Options_DCX_RX_NX_MCX_EX_V6 = 0;
                     Options_DCX_RX_NX_MCX_EX_X_ = 1;
                     Options_DCX_RX_NX_MCX_X_X_V6 = 2;
                     Options_DCX_RX_NX_MCX_X_X_X_ = 3;
                     Options_DCX_RX_NX_X_X_EX_V6 = 4;
                     Options_DCX_RX_NX_X_X_EX_X_ = 5;
                     Options_DCX_RX_NX_X_X_X_X_V6 = 6;
                     Options_DCX_RX_NX_X_X_X_X_X_ = 7;
                     Options_DCX_RX_X_X_MCX_EX_V6 = 8;
                     Options_DCX_RX_X_X_MCX_EX_X_ = 9;
                     Options_DCX_RX_X_X_MCX_X_X_V6 = 10;
                     Options_DCX_RX_X_X_MCX_X_X_X_ = 11;
                     Options_DCX_RX_X_X_X_X_EX_V6 = 12;
                     Options_DCX_RX_X_X_X_X_EX_X_ = 13;
                     Options_DCX_RX_X_X_X_X_X_X_V6 = 14;
                     Options_DCX_RX_X_X_X_X_X_X_X_ = 15;
                     Options_DCX_X_X_NX_MCX_EX_V6 = 16;
                     Options_DCX_X_X_NX_MCX_EX_X_ = 17;
                     Options_DCX_X_X_NX_MCX_X_X_V6 = 18;
                     Options_DCX_X_X_NX_MCX_X_X_X_ = 19;
                     Options_DCX_X_X_NX_X_X_EX_V6 = 20;
                     Options_DCX_X_X_NX_X_X_EX_X_ = 21;
                     Options_DCX_X_X_NX_X_X_X_X_V6 = 22;
                     Options_DCX_X_X_NX_X_X_X_X_X_ = 23;
                     Options_DCX_X_X_X_X_MCX_EX_V6 = 24;
                     Options_DCX_X_X_X_X_MCX_EX_X_ = 25;
                     Options_DCX_X_X_X_X_MCX_X_X_V6 = 26;
                     Options_DCX_X_X_X_X_MCX_X_X_X_ = 27;
                     Options_DCX_X_X_X_X_X_X_EX_V6 = 28;
                     Options_DCX_X_X_X_X_X_X_EX_X_ = 29;
                     Options_DCX_X_X_X_X_X_X_X_X_V6 = 30;
                     Options_DCX_X_X_X_X_X_X_X_X_X_ = 31;
                     Options_NONE = 32;
                     Options_X_X_RX_NX_MCX_EX_V6 = 33;
                     Options_X_X_RX_NX_MCX_EX_X_ = 34;
                     Options_X_X_RX_NX_MCX_X_X_V6 = 35;
                     Options_X_X_RX_NX_MCX_X_X_X_ = 36;
                     Options_X_X_RX_NX_X_X_EX_V6 = 37;
                     Options_X_X_RX_NX_X_X_EX_X_ = 38;
                     Options_X_X_RX_NX_X_X_X_X_V6 = 39;
                     Options_X_X_RX_NX_X_X_X_X_X_ = 40;
                     Options_X_X_RX_X_X_MCX_EX_V6 = 41;
                     Options_X_X_RX_X_X_MCX_EX_X_ = 42;
                     Options_X_X_RX_X_X_MCX_X_X_V6 = 43;
                     Options_X_X_RX_X_X_MCX_X_X_X_ = 44;
                     Options_X_X_RX_X_X_X_X_EX_V6 = 45;
                     Options_X_X_RX_X_X_X_X_EX_X_ = 46;
                     Options_X_X_RX_X_X_X_X_X_X_V6 = 47;
                     Options_X_X_RX_X_X_X_X_X_X_X_ = 48;
                     Options_X_X_X_X_NX_MCX_EX_V6 = 49;
                     Options_X_X_X_X_NX_MCX_EX_X_ = 50;
                     Options_X_X_X_X_NX_MCX_X_X_V6 = 51;
                     Options_X_X_X_X_NX_MCX_X_X_X_ = 52;
                     Options_X_X_X_X_NX_X_X_EX_V6 = 53;
                     Options_X_X_X_X_NX_X_X_EX_X_ = 54;
                     Options_X_X_X_X_NX_X_X_X_X_V6 = 55;
                     Options_X_X_X_X_NX_X_X_X_X_X_ = 56;
                     Options_X_X_X_X_X_X_MCX_EX_V6 = 57;
                     Options_X_X_X_X_X_X_MCX_EX_X_ = 58;
                     Options_X_X_X_X_X_X_MCX_X_X_V6 = 59;
                     Options_X_X_X_X_X_X_MCX_X_X_X_ = 60;
                     Options_X_X_X_X_X_X_X_X_EX_V6 = 61;
                     Options_X_X_X_X_X_X_X_X_EX_X_ = 62;
                     Options_X_X_X_X_X_X_X_X_X_X_V6 = 63;
                     Options_X_X_X_X_X_X_X_X_X_X_X_ = 64;
                  };
                  Options options = 13;
                  uint32 prefixNum = 14;
                  string refAdvRtr = 15;
                  string refLsId = 16;
                  enum RefLsType {
                     RefLsType_NETWORKX_LSA = 0;
                     RefLsType_ROUTERX_LSA = 1;
                     RefLsType_X_0 = 2;
                  };
                  RefLsType refLsType = 17;
                  uint32 rtrPri = 18;
               }
               repeated LsdbStatistic lsdbStatistic = 1;
            }
            LsdbStatistics lsdbStatistics = 43;
            message Neighbors {
               message Neighbor {
                  string areaId = 1;
                  string deadDueTimer = 2;
                  string dnsHostName = 3;
                  string hostName = 4;
                  string ifName = 5;
                  uint32 instanceId = 6;
                  int32 nbrPriority = 7;
                  string nbrRouterId = 8;
                  enum NbrState {
                     NbrState_ATTEMPT = 0;
                     NbrState_DOWN = 1;
                     NbrState_EXCHANGE = 2;
                     NbrState_EXSTART = 3;
                     NbrState_FULL = 4;
                     NbrState_INIT = 5;
                     NbrState_LOADING = 6;
                     NbrState_X_2X_WAY = 7;
                  };
                  NbrState nbrState = 9;
                  enum NbrStatus {
                     NbrStatus_BACKUP = 0;
                     NbrStatus_DR = 1;
                     NbrStatus_DROTHER = 2;
                     NbrStatus_PX_2X_P = 3;
                     NbrStatus_WAITING = 4;
                     NbrStatus_X_ = 5;
                  };
                  NbrStatus nbrStatus = 10;
                  message NeighborDatas {
                     message NeighborData {
                        uint32 events = 1;
                        uint32 lsReqListNum = 2;
                        uint32 lsRetransNum = 3;
                        uint32 nbrAuthSeqHigh = 4;
                        uint32 nbrAuthSeqLow = 5;
                        string nbrBDR = 6;
                        string nbrDR = 7;
                        int32 nbrIfId = 8;
                        string nbrIpv6Addr = 9;
                        enum NbrOptions {
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_NX_MCX_EX_V6 = 0;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_NX_MCX_EX_X_ = 1;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_NX_MCX_X_X_V6 = 2;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_NX_MCX_X_X_X_ = 3;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_NX_X_X_EX_V6 = 4;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_NX_X_X_EX_X_ = 5;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_NX_X_X_X_X_V6 = 6;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_NX_X_X_X_X_X_ = 7;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_X_X_MCX_EX_V6 = 8;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_X_X_MCX_EX_X_ = 9;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_X_X_MCX_X_X_V6 = 10;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_X_X_MCX_X_X_X_ = 11;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_X_X_X_X_EX_V6 = 12;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_X_X_X_X_EX_X_ = 13;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_X_X_X_X_X_X_V6 = 14;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_RX_X_X_X_X_X_X_X_ = 15;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_NX_MCX_EX_V6 = 16;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_NX_MCX_EX_X_ = 17;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_NX_MCX_X_X_V6 = 18;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_NX_MCX_X_X_X_ = 19;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_NX_X_X_EX_V6 = 20;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_NX_X_X_EX_X_ = 21;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_NX_X_X_X_X_V6 = 22;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_NX_X_X_X_X_X_ = 23;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_X_X_MCX_EX_V6 = 24;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_X_X_MCX_EX_X_ = 25;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_X_X_MCX_X_X_V6 = 26;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_X_X_MCX_X_X_X_ = 27;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_X_X_X_X_EX_V6 = 28;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_X_X_X_X_EX_X_ = 29;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_X_X_X_X_X_X_V6 = 30;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_DCX_X_X_X_X_X_X_X_X_X_ = 31;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_NX_MCX_EX_V6 = 32;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_NX_MCX_EX_X_ = 33;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_NX_MCX_X_X_V6 = 34;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_NX_MCX_X_X_X_ = 35;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_NX_X_X_EX_V6 = 36;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_NX_X_X_EX_X_ = 37;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_NX_X_X_X_X_V6 = 38;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_NX_X_X_X_X_X_ = 39;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_X_X_MCX_EX_V6 = 40;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_X_X_MCX_EX_X_ = 41;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_X_X_MCX_X_X_V6 = 42;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_X_X_MCX_X_X_X_ = 43;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_X_X_X_X_EX_V6 = 44;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_X_X_X_X_EX_X_ = 45;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_X_X_X_X_X_X_V6 = 46;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_RX_X_X_X_X_X_X_X_ = 47;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_NX_MCX_EX_V6 = 48;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_NX_MCX_EX_X_ = 49;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_NX_MCX_X_X_V6 = 50;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_NX_MCX_X_X_X_ = 51;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_NX_X_X_EX_V6 = 52;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_NX_X_X_EX_X_ = 53;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_NX_X_X_X_X_V6 = 54;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_NX_X_X_X_X_X_ = 55;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_X_X_MCX_EX_V6 = 56;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_X_X_MCX_EX_X_ = 57;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_X_X_MCX_X_X_V6 = 58;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_X_X_MCX_X_X_X_ = 59;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_EX_V6 = 60;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_EX_X_ = 61;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_V6 = 62;
                           NbrOptions_ATX_LX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_ = 63;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_NX_MCX_EX_V6 = 64;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_NX_MCX_EX_X_ = 65;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_NX_MCX_X_X_V6 = 66;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_NX_MCX_X_X_X_ = 67;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_NX_X_X_EX_V6 = 68;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_NX_X_X_EX_X_ = 69;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_NX_X_X_X_X_V6 = 70;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_NX_X_X_X_X_X_ = 71;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_X_X_MCX_EX_V6 = 72;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_X_X_MCX_EX_X_ = 73;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_X_X_MCX_X_X_V6 = 74;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_X_X_MCX_X_X_X_ = 75;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_X_X_X_X_EX_V6 = 76;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_X_X_X_X_EX_X_ = 77;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_X_X_X_X_X_X_V6 = 78;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_RX_X_X_X_X_X_X_X_ = 79;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_NX_MCX_EX_V6 = 80;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_NX_MCX_EX_X_ = 81;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_NX_MCX_X_X_V6 = 82;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_NX_MCX_X_X_X_ = 83;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_NX_X_X_EX_V6 = 84;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_NX_X_X_EX_X_ = 85;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_NX_X_X_X_X_V6 = 86;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_NX_X_X_X_X_X_ = 87;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_X_X_MCX_EX_V6 = 88;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_X_X_MCX_EX_X_ = 89;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_X_X_MCX_X_X_V6 = 90;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_X_X_MCX_X_X_X_ = 91;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_X_X_X_X_EX_V6 = 92;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_X_X_X_X_EX_X_ = 93;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_X_X_X_X_X_X_V6 = 94;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_DCX_X_X_X_X_X_X_X_X_X_ = 95;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_NX_MCX_EX_V6 = 96;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_NX_MCX_EX_X_ = 97;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_NX_MCX_X_X_V6 = 98;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_NX_MCX_X_X_X_ = 99;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_NX_X_X_EX_V6 = 100;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_NX_X_X_EX_X_ = 101;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_NX_X_X_X_X_V6 = 102;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_NX_X_X_X_X_X_ = 103;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_X_X_MCX_EX_V6 = 104;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_X_X_MCX_EX_X_ = 105;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_X_X_MCX_X_X_V6 = 106;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_X_X_MCX_X_X_X_ = 107;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_X_X_X_X_EX_V6 = 108;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_X_X_X_X_EX_X_ = 109;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_X_X_X_X_X_X_V6 = 110;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_RX_X_X_X_X_X_X_X_ = 111;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_NX_MCX_EX_V6 = 112;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_NX_MCX_EX_X_ = 113;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_NX_MCX_X_X_V6 = 114;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_NX_MCX_X_X_X_ = 115;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_NX_X_X_EX_V6 = 116;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_NX_X_X_EX_X_ = 117;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_NX_X_X_X_X_V6 = 118;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_NX_X_X_X_X_X_ = 119;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_MCX_EX_V6 = 120;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_MCX_EX_X_ = 121;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_MCX_X_X_V6 = 122;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_MCX_X_X_X_ = 123;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_EX_V6 = 124;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_EX_X_ = 125;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_V6 = 126;
                           NbrOptions_ATX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_ = 127;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_NX_MCX_EX_V6 = 128;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_NX_MCX_EX_X_ = 129;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_NX_MCX_X_X_V6 = 130;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_NX_MCX_X_X_X_ = 131;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_NX_X_X_EX_V6 = 132;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_NX_X_X_EX_X_ = 133;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_NX_X_X_X_X_V6 = 134;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_NX_X_X_X_X_X_ = 135;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_X_X_MCX_EX_V6 = 136;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_X_X_MCX_EX_X_ = 137;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_X_X_MCX_X_X_V6 = 138;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_X_X_MCX_X_X_X_ = 139;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_X_X_X_X_EX_V6 = 140;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_X_X_X_X_EX_X_ = 141;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_X_X_X_X_X_X_V6 = 142;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_RX_X_X_X_X_X_X_X_ = 143;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_NX_MCX_EX_V6 = 144;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_NX_MCX_EX_X_ = 145;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_NX_MCX_X_X_V6 = 146;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_NX_MCX_X_X_X_ = 147;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_NX_X_X_EX_V6 = 148;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_NX_X_X_EX_X_ = 149;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_NX_X_X_X_X_V6 = 150;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_NX_X_X_X_X_X_ = 151;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_X_X_MCX_EX_V6 = 152;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_X_X_MCX_EX_X_ = 153;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_X_X_MCX_X_X_V6 = 154;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_X_X_MCX_X_X_X_ = 155;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_X_X_X_X_EX_V6 = 156;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_X_X_X_X_EX_X_ = 157;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_X_X_X_X_X_X_V6 = 158;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_DCX_X_X_X_X_X_X_X_X_X_ = 159;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_NX_MCX_EX_V6 = 160;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_NX_MCX_EX_X_ = 161;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_NX_MCX_X_X_V6 = 162;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_NX_MCX_X_X_X_ = 163;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_NX_X_X_EX_V6 = 164;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_NX_X_X_EX_X_ = 165;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_NX_X_X_X_X_V6 = 166;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_NX_X_X_X_X_X_ = 167;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_X_X_MCX_EX_V6 = 168;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_X_X_MCX_EX_X_ = 169;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_X_X_MCX_X_X_V6 = 170;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_X_X_MCX_X_X_X_ = 171;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_X_X_X_X_EX_V6 = 172;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_X_X_X_X_EX_X_ = 173;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_X_X_X_X_X_X_V6 = 174;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_RX_X_X_X_X_X_X_X_ = 175;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_NX_MCX_EX_V6 = 176;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_NX_MCX_EX_X_ = 177;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_NX_MCX_X_X_V6 = 178;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_NX_MCX_X_X_X_ = 179;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_NX_X_X_EX_V6 = 180;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_NX_X_X_EX_X_ = 181;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_NX_X_X_X_X_V6 = 182;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_NX_X_X_X_X_X_ = 183;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_X_X_MCX_EX_V6 = 184;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_X_X_MCX_EX_X_ = 185;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_X_X_MCX_X_X_V6 = 186;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_X_X_MCX_X_X_X_ = 187;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_EX_V6 = 188;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_EX_X_ = 189;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_V6 = 190;
                           NbrOptions_X_X_LX_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_ = 191;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_NX_MCX_EX_V6 = 192;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_NX_MCX_EX_X_ = 193;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_NX_MCX_X_X_V6 = 194;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_NX_MCX_X_X_X_ = 195;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_NX_X_X_EX_V6 = 196;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_NX_X_X_EX_X_ = 197;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_NX_X_X_X_X_V6 = 198;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_NX_X_X_X_X_X_ = 199;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_X_X_MCX_EX_V6 = 200;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_X_X_MCX_EX_X_ = 201;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_X_X_MCX_X_X_V6 = 202;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_X_X_MCX_X_X_X_ = 203;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_X_X_X_X_EX_V6 = 204;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_X_X_X_X_EX_X_ = 205;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_X_X_X_X_X_X_V6 = 206;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_RX_X_X_X_X_X_X_X_ = 207;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_NX_MCX_EX_V6 = 208;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_NX_MCX_EX_X_ = 209;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_NX_MCX_X_X_V6 = 210;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_NX_MCX_X_X_X_ = 211;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_NX_X_X_EX_V6 = 212;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_NX_X_X_EX_X_ = 213;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_NX_X_X_X_X_V6 = 214;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_NX_X_X_X_X_X_ = 215;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_X_X_MCX_EX_V6 = 216;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_X_X_MCX_EX_X_ = 217;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_X_X_MCX_X_X_V6 = 218;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_X_X_MCX_X_X_X_ = 219;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_X_X_X_X_EX_V6 = 220;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_X_X_X_X_EX_X_ = 221;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_X_X_X_X_X_X_V6 = 222;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_DCX_X_X_X_X_X_X_X_X_X_ = 223;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_NX_MCX_EX_V6 = 224;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_NX_MCX_EX_X_ = 225;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_NX_MCX_X_X_V6 = 226;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_NX_MCX_X_X_X_ = 227;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_NX_X_X_EX_V6 = 228;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_NX_X_X_EX_X_ = 229;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_NX_X_X_X_X_V6 = 230;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_NX_X_X_X_X_X_ = 231;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_X_X_MCX_EX_V6 = 232;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_X_X_MCX_EX_X_ = 233;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_X_X_MCX_X_X_V6 = 234;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_X_X_MCX_X_X_X_ = 235;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_X_X_X_X_EX_V6 = 236;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_X_X_X_X_EX_X_ = 237;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_X_X_X_X_X_X_V6 = 238;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_RX_X_X_X_X_X_X_X_ = 239;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_NX_MCX_EX_V6 = 240;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_NX_MCX_EX_X_ = 241;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_NX_MCX_X_X_V6 = 242;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_NX_MCX_X_X_X_ = 243;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_NX_X_X_EX_V6 = 244;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_NX_X_X_EX_X_ = 245;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_NX_X_X_X_X_V6 = 246;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_NX_X_X_X_X_X_ = 247;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_MCX_EX_V6 = 248;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_MCX_EX_X_ = 249;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_MCX_X_X_V6 = 250;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_MCX_X_X_X_ = 251;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_EX_V6 = 252;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_EX_X_ = 253;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_V6 = 254;
                           NbrOptions_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_ = 255;
                        };
                        NbrOptions nbrOptions = 10;
                        string nbrUpTime = 11;
                        string upTimeStamp = 12;
                     }
                     repeated NeighborData neighborData = 1;
                  }
                  NeighborDatas neighborDatas = 11;
               }
               repeated Neighbor neighbor = 1;
            }
            Neighbors neighbors = 44;
            message NexthopInformations {
               message NexthopInformation {
                  string ifName = 1;
                  string nbrRtrId = 2;
                  string nexthopIpAddr6 = 3;
                  uint32 refereceCount = 4;
                  string routerId = 5;
               }
               repeated NexthopInformation nexthopInformation = 1;
            }
            NexthopInformations nexthopInformations = 45;
            uint32 nonFullNbrCount = 46;
            uint32 nonRefreshLsCnt = 47;
            message OspfFRRs {
               message OspfFRR {
                  bool frrEnableFlag = 1;
                  message FrrMTs {
                     message FrrMT {
                        message FrrRoutePolicyMTs {
                           message FrrRoutePolicyMT {
                              enum PolicyType {
                                 PolicyType_NONE = 0;
                                 PolicyType_ROUTE_FILTER = 1;
                                 PolicyType_ROUTE_POLICY = 2;
                              };
                              PolicyType policyType = 1;
                              string routeFilterName = 2;
                              string routePolicyName = 3;
                           }
                           FrrRoutePolicyMT frrRoutePolicyMT = 1;
                        }
                        FrrRoutePolicyMTs frrRoutePolicyMTs = 1;
                        message TiebreakerMT {
                           uint32 lowcostPrefer = 1;
                           uint32 nodeProtectPrefer = 2;
                        }
                        TiebreakerMT tiebreakerMT = 2;
                        string topoName = 3;
                     }
                     repeated FrrMT frrMT = 1;
                  }
                  FrrMTs frrMTs = 2;
                  bool lfaFlag = 3;
               }
               OspfFRR ospfFRR = 1;
            }
            OspfFRRs ospfFRRs = 48;
            message OspfHelpers {
               bool HelperRoleFlg = 1;
               bool IgnExteLsaFlg = 2;
               uint32 Period = 3;
               bool PlannedOnlyFlg = 4;
               enum HelperFilterType {
                  HelperFilterType_ACL_NAME = 0;
                  HelperFilterType_ACL_NUM = 1;
                  HelperFilterType_IP_PREFIX = 2;
                  HelperFilterType_NONE = 3;
               };
               HelperFilterType helperFilterType = 5;
               string helperFilterValue = 6;
            }
            OspfHelpers ospfHelpers = 49;
            message OspfHostNames {
               message OspfHostName {
                  string hostName = 1;
                  bool hostNameEnable = 2;
               }
               OspfHostName ospfHostName = 1;
            }
            OspfHostNames ospfHostNames = 50;
            message OspfImportLimit {
               bool ospfImportLimit = 1;
               uint32 ospfImportLimitCount = 2;
               uint32 ospfLowlimitThreshold = 3;
               uint32 ospfUplimitThreshold = 4;
            }
            OspfImportLimit ospfImportLimit = 51;
            message OspfSilentInterfaces {
               message OspfSilentInterface {
                  string ifName = 1;
               }
               repeated OspfSilentInterface ospfSilentInterface = 1;
            }
            OspfSilentInterfaces ospfSilentInterfaces = 52;
            bool peerFlappingSuppress = 53;
            message ProcAuthentications {
               uint32 authKeyId = 1;
               string authText = 2;
               enum AuthenticationMode {
                  AuthenticationMode_HMACX_SHA256 = 0;
                  AuthenticationMode_NONE = 1;
               };
               AuthenticationMode authenticationMode = 3;
            }
            ProcAuthentications procAuthentications = 54;
            uint32 processId = 55;
            bool qppbEnableFlag = 56;
            uint32 retransmissionLimit = 57;
            bool retransmissionLimitFlag = 58;
            bool rfc1583CompatibleFlag = 59;
            uint32 routeTag = 60;
            bool routeTagFlag = 61;
            string routerId = 62;
            message Routings {
               message Routing {
                  uint32 cost = 1;
                  string destinationIPv6Addr = 2;
                  uint32 ipv6MaskLen = 3;
                  message NexthopDatas {
                     message NexthopData {
                        enum BackupType {
                           BackupType_LINKX_NODEX_PROTECT = 0;
                           BackupType_LINKX_PROTECT = 1;
                           BackupType_X_ = 2;
                        };
                        BackupType backupType = 1;
                        string bakIfName = 2;
                        string bakNextIpv6Addr = 3;
                        string flagsDisp = 4;
                        string ifName = 5;
                        string nexthopIPv6Addr = 6;
                     }
                     repeated NexthopData nexthopData = 1;
                  }
                  NexthopDatas nexthopDatas = 4;
                  string pathType = 5;
                  enum PrefixPriority {
                     PrefixPriority_CRITICAL = 0;
                     PrefixPriority_HIGH = 1;
                     PrefixPriority_LOW = 2;
                     PrefixPriority_MEDIUM = 3;
                  };
                  PrefixPriority prefixPriority = 6;
               }
               repeated Routing routing = 1;
            }
            Routings routings = 63;
            string saName = 64;
            uint32 selfAseLsaCount = 65;
            uint32 spfCount = 66;
            uint32 spfDelayInterval = 67;
            uint32 spfHoldInterval = 68;
            uint32 spfScheduleHoldInterval = 69;
            uint32 spfScheduleIntervalMillisecond = 70;
            enum SpfScheduleIntervalType {
               SpfScheduleIntervalType_INTELLIGENTX_TIMER = 0;
               SpfScheduleIntervalType_MILLISECOND = 1;
               SpfScheduleIntervalType_SPFX_TIMER = 2;
            };
            SpfScheduleIntervalType spfScheduleIntervalType = 71;
            uint32 spfScheduleMaxInterval = 72;
            uint32 spfScheduleStartInterval = 73;
            enum StubRouterFlag {
               StubRouterFlag_NOCONFIG = 0;
               StubRouterFlag_STUBONBOOT = 1;
               StubRouterFlag_STUBONHAND = 2;
            };
            StubRouterFlag stubRouterFlag = 74;
            uint32 stubRouterOnStartupInterval = 75;
            bool vpnInstanceCapabilitySimpleFlag = 76;
            string vrfName = 77;
         }
         repeated OspfSite ospfSite = 1;
      }
      OspfSites ospfSites = 4;
   }
   Ospfv3Comm ospfv3comm = 1;
   message CheckRtId {
      bool conflict_flag = 1 [json_name = "conflict-flag"];
   }
   CheckRtId check_rt_id = 2 [json_name = "check-rt-id"];
   message SessionCar {
      bool enable = 1 [json_name = "enable"];
      uint32 cir_interval = 2 [json_name = "cir-interval"];
      uint32 cbs_interval = 3 [json_name = "cbs-interval"];
      uint32 pir_interval = 4 [json_name = "pir-interval"];
      uint32 pbs_interval = 5 [json_name = "pbs-interval"];
   }
   SessionCar session_car = 3 [json_name = "session-car"];
   message FlushSourceTrace {
      bool enable = 1 [json_name = "enable"];
      uint32 port = 2 [json_name = "port"];
   }
   FlushSourceTrace flush_source_trace = 4 [json_name = "flush-source-trace"];
   message AdvertiseMaxCost {
      bool enable = 1 [json_name = "enable"];
   }
   AdvertiseMaxCost advertise_max_cost = 5 [json_name = "advertise-max-cost"];
   message MibBinding {
      uint32 process_id = 1 [json_name = "process-id"];
   }
   MibBinding mib_binding = 6 [json_name = "mib-binding"];
   message MicroIsolationCar {
      bool enable = 1 [json_name = "enable"];
      uint32 cir = 2 [json_name = "cir"];
      uint32 cbs = 3 [json_name = "cbs"];
      uint32 pir = 4 [json_name = "pir"];
      uint32 pbs = 5 [json_name = "pbs"];
   }
   MicroIsolationCar micro_isolation_car = 7 [json_name = "micro-isolation-car"];
   message RouteLoopDetect {
      bool enable = 1 [json_name = "enable"];
   }
   RouteLoopDetect route_loop_detect = 8 [json_name = "route-loop-detect"];
}
message HwOspfv3DelRouteByPurgeClear {
   uint32 hwOspfv3AffectedNodeNum = 1;
   string hwOspfv3AreaIdIndex = 2;
   uint32 hwOspfv3FlushLsaNum = 3;
   uint32 hwOspfv3ProcessId = 4;
   string hwOspfv3PurgeHostName = 5;
   string hwOspfv3PurgeIpAddress = 6;
   string hwOspfv3PurgeRouterId = 7;
   uint32 hwOspfv3PurgeStatPeriod = 8;
   uint32 hwOspfv3TotalNodeNum = 9;
}
message HwOspfv3DeleteRouteByPurge {
   uint32 hwOspfv3AffectedNodeNum = 1;
   string hwOspfv3AreaIdIndex = 2;
   uint32 hwOspfv3FlushLsaNum = 3;
   uint32 hwOspfv3ProcessId = 4;
   string hwOspfv3PurgeHostName = 5;
   string hwOspfv3PurgeIpAddress = 6;
   string hwOspfv3PurgeRouterId = 7;
   uint32 hwOspfv3PurgeStatPeriod = 8;
   uint32 hwOspfv3TotalNodeNum = 9;
}
message HwOspfv3GreaterAgeLsaRecived {
   string AreaId = 1;
   string IfName = 2;
   uint32 LsaAge = 3;
   string LsaId = 4;
   uint32 ProcessId = 5;
   string RouterId = 6;
}
message HwOspfv3ImAseRouThresholdClear {
   uint32 hwOspfv3ProcessId = 1;
   uint32 hwOspfv3Threshold = 2;
}
message HwOspfv3ImNssaRouThreshClear {
   string hwOspfv3AreaIdIndex = 1;
   uint32 hwOspfv3ProcessId = 2;
   uint32 hwOspfv3Threshold = 3;
}
message HwOspfv3ImNssaRouteThreshold {
   string hwOspfv3AreaIdIndex = 1;
   uint32 hwOspfv3ProcessId = 2;
   uint32 hwOspfv3Threshold = 3;
}
message HwOspfv3ImportAseRoutThreshold {
   uint32 hwOspfv3ProcessId = 1;
   uint32 hwOspfv3Threshold = 2;
}
message HwOspfv3ImportAseRouteExClear {
   uint32 hwOspfv3MaxLimit = 1;
   uint32 hwOspfv3ProcessId = 2;
}
message HwOspfv3ImportAseRouteExceed {
   uint32 hwOspfv3MaxLimit = 1;
   uint32 hwOspfv3ProcessId = 2;
}
message HwOspfv3ImportNssaRouteExClear {
   string hwOspfv3AreaIdIndex = 1;
   uint32 hwOspfv3MaxLimit = 2;
   uint32 hwOspfv3ProcessId = 3;
}
message HwOspfv3ImportNssaRouteExceed {
   string hwOspfv3AreaIdIndex = 1;
   uint32 hwOspfv3MaxLimit = 2;
   uint32 hwOspfv3ProcessId = 3;
}
message HwOspfv3PeerFlapSuppStatChang {
   string AreaId = 1;
   uint32 ProcessId = 2;
   string RouterId = 3;
   uint32 SuppressReason = 4;
   uint32 SuppressStatus = 5;
   string ifName = 6;
}
message HwOspfv3RouBeDelByPExactClear {
   uint32 hwOspfv3AffectedNodeNum = 1;
   string hwOspfv3AreaIdIndex = 2;
   uint32 hwOspfv3FlushLsaNum = 3;
   uint32 hwOspfv3ProcessId = 4;
   string hwOspfv3PurgeHostName = 5;
   string hwOspfv3PurgeIpAddress = 6;
   string hwOspfv3PurgeRouterId = 7;
   uint32 hwOspfv3PurgeStatPeriod = 8;
   uint32 hwOspfv3TotalNodeNum = 9;
}
message HwOspfv3RouteBeDelByPInClear {
   uint32 hwOspfv3AffectedNodeNum = 1;
   string hwOspfv3AreaIdIndex = 2;
   uint32 hwOspfv3FlushLsaNum = 3;
   uint32 hwOspfv3ProcessId = 4;
   string hwOspfv3PurgeHostName = 5;
   string hwOspfv3PurgeIpAddress = 6;
   string hwOspfv3PurgeRouterId = 7;
   uint32 hwOspfv3PurgeStatPeriod = 8;
   uint32 hwOspfv3RuledOutDeviceNum = 9;
   uint32 hwOspfv3TotalNodeNum = 10;
}
message HwOspfv3RouteBeDelByPInexact {
   uint32 hwOspfv3AffectedNodeNum = 1;
   string hwOspfv3AreaIdIndex = 2;
   uint32 hwOspfv3FlushLsaNum = 3;
   uint32 hwOspfv3ProcessId = 4;
   string hwOspfv3PurgeHostName = 5;
   string hwOspfv3PurgeIpAddress = 6;
   string hwOspfv3PurgeRouterId = 7;
   uint32 hwOspfv3PurgeStatPeriod = 8;
   uint32 hwOspfv3RuledOutDeviceNum = 9;
   uint32 hwOspfv3TotalNodeNum = 10;
}
message HwOspfv3RouteBeDelByPurgeClear {
   string hwOspfv3AreaIdIndex = 1;
   uint32 hwOspfv3ProcessId = 2;
   string hwOspfv3PurgeHostName = 3;
   string hwOspfv3PurgeHostName1 = 4;
   string hwOspfv3PurgeHostName2 = 5;
   string hwOspfv3PurgeHostName3 = 6;
   string hwOspfv3PurgeIpAddress = 7;
   string hwOspfv3PurgeIpAddress1 = 8;
   string hwOspfv3PurgeIpAddress2 = 9;
   string hwOspfv3PurgeIpAddress3 = 10;
   string hwOspfv3PurgeRouterId = 11;
   string hwOspfv3PurgeRouterId1 = 12;
   string hwOspfv3PurgeRouterId2 = 13;
   string hwOspfv3PurgeRouterId3 = 14;
   uint32 hwOspfv3TotalNodeNum = 15;
}
message HwOspfv3RouteBeDelByPurgeExact {
   uint32 hwOspfv3AffectedNodeNum = 1;
   string hwOspfv3AreaIdIndex = 2;
   uint32 hwOspfv3FlushLsaNum = 3;
   uint32 hwOspfv3ProcessId = 4;
   string hwOspfv3PurgeHostName = 5;
   string hwOspfv3PurgeIpAddress = 6;
   string hwOspfv3PurgeRouterId = 7;
   uint32 hwOspfv3PurgeStatPeriod = 8;
   uint32 hwOspfv3TotalNodeNum = 9;
}
message HwOspfv3RouteBeDeletedByPurge {
   string hwOspfv3AreaIdIndex = 1;
   uint32 hwOspfv3ProcessId = 2;
   string hwOspfv3PurgeHostName = 3;
   string hwOspfv3PurgeHostName1 = 4;
   string hwOspfv3PurgeHostName2 = 5;
   string hwOspfv3PurgeHostName3 = 6;
   string hwOspfv3PurgeIpAddress = 7;
   string hwOspfv3PurgeIpAddress1 = 8;
   string hwOspfv3PurgeIpAddress2 = 9;
   string hwOspfv3PurgeIpAddress3 = 10;
   string hwOspfv3PurgeRouterId = 11;
   string hwOspfv3PurgeRouterId1 = 12;
   string hwOspfv3PurgeRouterId2 = 13;
   string hwOspfv3PurgeRouterId3 = 14;
   uint32 hwOspfv3TotalNodeNum = 15;
}
message HwOspfv3ThirdPRBeDelByPExClear {
   uint32 hwOspfv3AffectedNodeNum = 1;
   string hwOspfv3AreaIdIndex = 2;
   uint32 hwOspfv3FlushLsaNum = 3;
   uint32 hwOspfv3ProcessId = 4;
   string hwOspfv3PurgeHostName = 5;
   string hwOspfv3PurgeIpAddress = 6;
   string hwOspfv3PurgeRouterId = 7;
   uint32 hwOspfv3PurgeStatPeriod = 8;
   uint32 hwOspfv3TotalNodeNum = 9;
}
message HwOspfv3ThirdPRBeDelByPInClear {
   uint32 hwOspfv3AffectedNodeNum = 1;
   string hwOspfv3AreaIdIndex = 2;
   uint32 hwOspfv3FlushLsaNum = 3;
   uint32 hwOspfv3ProcessId = 4;
   string hwOspfv3PurgeHostName = 5;
   string hwOspfv3PurgeIpAddress = 6;
   string hwOspfv3PurgeRouterId = 7;
   uint32 hwOspfv3PurgeStatPeriod = 8;
   uint32 hwOspfv3RuledOutDeviceNum = 9;
   uint32 hwOspfv3TotalNodeNum = 10;
}
message HwOspfv3ThirdPRouBeDelByPClear {
   string hwOspfv3AreaIdIndex = 1;
   uint32 hwOspfv3ProcessId = 2;
   string hwOspfv3PurgeHostName = 3;
   string hwOspfv3PurgeHostName1 = 4;
   string hwOspfv3PurgeHostName2 = 5;
   string hwOspfv3PurgeHostName3 = 6;
   string hwOspfv3PurgeIpAddress = 7;
   string hwOspfv3PurgeIpAddress1 = 8;
   string hwOspfv3PurgeIpAddress2 = 9;
   string hwOspfv3PurgeIpAddress3 = 10;
   string hwOspfv3PurgeRouterId = 11;
   string hwOspfv3PurgeRouterId1 = 12;
   string hwOspfv3PurgeRouterId2 = 13;
   string hwOspfv3PurgeRouterId3 = 14;
   uint32 hwOspfv3TotalNodeNum = 15;
}
message HwOspfv3ThirdPRouBeDelByPExact {
   uint32 hwOspfv3AffectedNodeNum = 1;
   string hwOspfv3AreaIdIndex = 2;
   uint32 hwOspfv3FlushLsaNum = 3;
   uint32 hwOspfv3ProcessId = 4;
   string hwOspfv3PurgeHostName = 5;
   string hwOspfv3PurgeIpAddress = 6;
   string hwOspfv3PurgeRouterId = 7;
   uint32 hwOspfv3PurgeStatPeriod = 8;
   uint32 hwOspfv3TotalNodeNum = 9;
}
message HwOspfv3ThirdPRouBeDelByPurge {
   string hwOspfv3AreaIdIndex = 1;
   uint32 hwOspfv3ProcessId = 2;
   string hwOspfv3PurgeHostName = 3;
   string hwOspfv3PurgeHostName1 = 4;
   string hwOspfv3PurgeHostName2 = 5;
   string hwOspfv3PurgeHostName3 = 6;
   string hwOspfv3PurgeIpAddress = 7;
   string hwOspfv3PurgeIpAddress1 = 8;
   string hwOspfv3PurgeIpAddress2 = 9;
   string hwOspfv3PurgeIpAddress3 = 10;
   string hwOspfv3PurgeRouterId = 11;
   string hwOspfv3PurgeRouterId1 = 12;
   string hwOspfv3PurgeRouterId2 = 13;
   string hwOspfv3PurgeRouterId3 = 14;
   uint32 hwOspfv3TotalNodeNum = 15;
}
message HwOspfv3ThirdPartRouBeDelByPIn {
   uint32 hwOspfv3AffectedNodeNum = 1;
   string hwOspfv3AreaIdIndex = 2;
   uint32 hwOspfv3FlushLsaNum = 3;
   uint32 hwOspfv3ProcessId = 4;
   string hwOspfv3PurgeHostName = 5;
   string hwOspfv3PurgeIpAddress = 6;
   string hwOspfv3PurgeRouterId = 7;
   uint32 hwOspfv3PurgeStatPeriod = 8;
   uint32 hwOspfv3RuledOutDeviceNum = 9;
   uint32 hwOspfv3TotalNodeNum = 10;
}
message Ifconfigerror {
   int32 ConfigErrorType = 1;
   uint32 IfIndex = 2;
   uint32 IfInstId = 3;
   int32 IfState = 4;
   string PacketSrc = 5;
   int32 PacketType = 6;
   uint32 RouterId = 7;
}
message Ifrxbadpacket {
   uint32 IfIndex = 1;
   uint32 IfInstId = 2;
   int32 IfState = 3;
   string PacketSrc = 4;
   int32 PacketType = 5;
   uint32 RouterId = 6;
}
message Ifstatechange {
   uint32 ChgReason = 1;
   uint32 IfIndex = 2;
   uint32 IfInstId = 3;
   int32 IfState = 4;
   string InterfaceName = 5;
   string RouterId = 6;
}
message Nbrrestarthelperstatuschange {
   uint32 NbrIfIndex = 1;
   uint32 NbrIfInstId = 2;
   uint32 NbrRestartHelperAge = 3;
   uint32 NbrRestartHelperExitReason = 4;
   uint32 NbrRestartHelperStatus = 5;
   uint32 NbrRtrId = 6;
   uint32 RouterId = 7;
}
message Ospfv3NbrStateChange {
   string IfName = 1;
   uint32 NbrIfIndex = 2;
   uint32 NbrIfInstId = 3;
   string NbrRtrId = 4;
   uint32 NbrState = 5;
   string NbrStateChangeReason = 6;
   string RouterId = 7;
   string SubReason = 8;
   uint32 ifIndex = 9;
}

