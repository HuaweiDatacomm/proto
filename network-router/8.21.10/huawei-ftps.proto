syntax = "proto3";
// Automatically generated by ProtoYang
// ProtoYang-version 1
// module huawei-ftps
// revision 2019-07-01
// namespace urn:huawei:yang:huawei-ftps

package huawei_ftps;

message Ftps {
   message FtpIpAuthfailStatisticss {
      message FtpIpAuthfailStatistics {
         uint32 authFailCount = 1;
         string blockIpAddress = 2;
         string firstTimeAuthfail = 3;
         string vpnInstance = 4;
      }
      repeated FtpIpAuthfailStatistics ftpIpAuthfailStatistics = 1;
   }
   FtpIpAuthfailStatisticss ftpIpAuthfailStatisticss = 1;
   message FtpIpBlockCfg {
      bool ipBlockEnable = 1;
      uint32 ipBlockFailedTimes = 2;
      uint32 ipBlockPeriod = 3;
      uint32 ipBlockReactPeriod = 4;
   }
   FtpIpBlockCfg ftpIpBlockCfg = 2;
   message FtpIpBlockStatisticss {
      message FtpIpBlockStatistics {
         string blockIpAddress = 1;
         uint32 unBlockInterval = 2;
         string vpnInstance = 3;
      }
      repeated FtpIpBlockStatistics ftpIpBlockStatistics = 1;
   }
   FtpIpBlockStatisticss ftpIpBlockStatisticss = 3;
   message FtpServer {
      uint32 Ipv6listenPortNumber = 1;
      string acl6Number = 2;
      string aclNumber = 3;
      string aclname4 = 4;
      string aclname6 = 5;
      uint32 currentNumberOfUsers = 6;
      string defaultDir = 7;
      bool ftpIpv6SvrEnble = 8;
      bool ftpServerEnable = 9;
      uint32 idleTimeout = 10;
      uint32 ipv6IdleTimeout = 11;
      uint32 listenPortNumber = 12;
      uint32 maximumNumberOfUsers = 13;
      string sourceInterfaceName = 14;
      string sourceIpv4Address = 15;
      string srcIpv6Addr = 16;
      uint32 srcIpv6VpnId = 17;
      string srcIpv6VpnName = 18;
   }
   FtpServer ftpServer = 4;
   message FtpUserStatuss {
      message FtpUserStatus {
         uint32 dataPort = 1;
         string hostIpAddres = 2;
         uint32 idleTime = 3;
         string rootDir = 4;
         string username = 5;
      }
      repeated FtpUserStatus ftpUserStatus = 1;
   }
   FtpUserStatuss ftpUserStatuss = 5;
   message LoginFailAlarm {
      uint32 lower_limit = 1 [json_name = "lower-limit"];
      uint32 period = 2 [json_name = "period"];
      uint32 upper_limit = 3 [json_name = "upper-limit"];
   }
   LoginFailAlarm login_fail_alarm = 6 [json_name = "login-fail-alarm"];
   message Server {
      enum ServerEnable {
         ServerEnable_DISABLE = 0;
         ServerEnable_ENABLE = 1;
      };
      ServerEnable server_enable = 1 [json_name = "server-enable"];
      enum Ipv6ServerEnable {
         Ipv6ServerEnable_DISABLE = 0;
         Ipv6ServerEnable_ENABLE = 1;
      };
      Ipv6ServerEnable ipv6_server_enable = 2 [json_name = "ipv6-server-enable"];
      uint32 listen_port_number = 3 [json_name = "listen-port-number"];
      uint32 ipv6_listen_port_number = 4 [json_name = "ipv6-listen-port-number"];
      uint32 idle_timeout = 5 [json_name = "idle-timeout"];
      uint32 ipv6_idle_timeout = 6 [json_name = "ipv6-idle-timeout"];
      string default_dir = 7 [json_name = "default-dir"];
      string acl4_name_or_number = 8 [json_name = "acl4-name-or-number"];
      string acl6_name_or_number = 9 [json_name = "acl6-name-or-number"];
      uint32 server_max_sessions = 10 [json_name = "server-max-sessions"];
      uint32 ip_max_sessions = 11 [json_name = "ip-max-sessions"];
   }
   Server server = 7 [json_name = "server"];
   message UsersStatus {
      uint32 current_number_of_users = 1 [json_name = "current-number-of-users"];
      uint32 max_number_of_users = 2 [json_name = "max-number-of-users"];
   }
   UsersStatus users_status = 8 [json_name = "users-status"];
   message IpBlock {
      enum IpBlockEnable {
         IpBlockEnable_DISABLE = 0;
         IpBlockEnable_ENABLE = 1;
      };
      IpBlockEnable ip_block_enable = 1 [json_name = "ip-block-enable"];
      uint32 ip_block_failed_times = 2 [json_name = "ip-block-failed-times"];
      uint32 ip_block_period = 3 [json_name = "ip-block-period"];
      uint32 ip_block_react_period = 4 [json_name = "ip-block-react-period"];
   }
   IpBlock ip_block = 9 [json_name = "ip-block"];
   message Ipv4AddrSources {
      message Ipv4AddrSource {
         string source_ipv4_address = 1 [json_name = "source-ipv4-address"];
      }
      repeated Ipv4AddrSource ipv4_addr_source = 1 [json_name = "ipv4-addr-source"];
   }
   Ipv4AddrSources ipv4_addr_sources = 10 [json_name = "ipv4-addr-sources"];
   message Ipv4SourceInterfaces {
      message Ipv4SourceInterface {
         string src_interface = 1 [json_name = "src-interface"];
      }
      repeated Ipv4SourceInterface ipv4_source_interface = 1 [json_name = "ipv4-source-interface"];
   }
   Ipv4SourceInterfaces ipv4_source_interfaces = 11 [json_name = "ipv4-source-interfaces"];
   message Ipv4IsolateServerSources {
      message Ipv4IsolateServerSource {
         string src_interface = 1 [json_name = "src-interface"];
         string src_ipv4_addr = 2 [json_name = "src-ipv4-addr"];
      }
      repeated Ipv4IsolateServerSource ipv4_isolate_server_source = 1 [json_name = "ipv4-isolate-server-source"];
   }
   Ipv4IsolateServerSources ipv4_isolate_server_sources = 12 [json_name = "ipv4-isolate-server-sources"];
   message Ipv6ServerSources {
      message Ipv6ServerSource {
         string src_ipv6_addr = 1 [json_name = "src-ipv6-addr"];
         string src_ipv6_vpn_name = 2 [json_name = "src-ipv6-vpn-name"];
      }
      repeated Ipv6ServerSource ipv6_server_source = 1 [json_name = "ipv6-server-source"];
   }
   Ipv6ServerSources ipv6_server_sources = 13 [json_name = "ipv6-server-sources"];
   message Ipv6IsolateServerSources {
      message Ipv6IsolateServerSource {
         string src_interface = 1 [json_name = "src-interface"];
         string src_ipv6_addr = 2 [json_name = "src-ipv6-addr"];
      }
      repeated Ipv6IsolateServerSource ipv6_isolate_server_source = 1 [json_name = "ipv6-isolate-server-source"];
   }
   Ipv6IsolateServerSources ipv6_isolate_server_sources = 14 [json_name = "ipv6-isolate-server-sources"];
   message AllServerSource {
      bool all_ipv4_interface = 1 [json_name = "all-ipv4-interface"];
      bool all_ipv6_interface = 2 [json_name = "all-ipv6-interface"];
   }
   AllServerSource all_server_source = 15 [json_name = "all-server-source"];
   message SessionCar {
      bool enable = 1 [json_name = "enable"];
      uint32 cir_interval = 2 [json_name = "cir-interval"];
      uint32 cbs_interval = 3 [json_name = "cbs-interval"];
      uint32 pir_interval = 4 [json_name = "pir-interval"];
      uint32 pbs_interval = 5 [json_name = "pbs-interval"];
   }
   SessionCar session_car = 16 [json_name = "session-car"];
}
message HwFtpLoginFailed {
   uint32 hwFtpUserLoginFailedTimes = 1;
   uint32 hwFtpUserLoginStatisticPeriod = 2;
}
message HwFtpLoginFailedClear {
   uint32 hwFtpUserLoginFailedTimes = 1;
   uint32 hwFtpUserLoginStatisticPeriod = 2;
}

