syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-09-02 10:59:15
// ProtoYang-version 1
// module huawei-bandwidth-management
// revision 2021-06-18
// namespace urn:huawei:yang:huawei-bandwidth-management

package huawei_bandwidth_management;

message BandwidthManagement {
   message BandwidthPolicy {
      message PublicIpMatch {
         bool source = 1 [json_name = "source"];
         bool destination = 2 [json_name = "destination"];
      }
      PublicIpMatch public_ip_match = 1 [json_name = "public-ip-match"];
      message Rules {
         message Rule {
            string name = 1 [json_name = "name"];
            uint32 hit_count = 2 [json_name = "hit-count"];
            string description = 3 [json_name = "description"];
            bool enable = 4 [json_name = "enable"];
            string time_range = 5 [json_name = "time-range"];
            repeated uint32 dscp = 6 [json_name = "dscp"];
            message Action {
               message Action6_NoQos {
                  bool no_qos = 1 [json_name = "no-qos"];
               }
               message Action6_DoQos {
                  string profile = 1 [json_name = "profile"];
               }
               oneof Action6 {
                  Action6_NoQos action_no_qos = 1 [json_name = "no-qos"];
                  Action6_DoQos action_do_qos = 2 [json_name = "do-qos"];
               }
            }
            Action action = 7 [json_name = "action"];
            message Ingress_Zones {
               repeated string source_zone = 1 [json_name = "source-zone"];
            }
            message Ingress_Interfaces {
               repeated string ingress_interface = 1 [json_name = "ingress-interface"];
            }
            oneof Ingress {
               Ingress_Zones ingress_zones = 8 [json_name = "zones"];
               Ingress_Interfaces ingress_interfaces = 9 [json_name = "interfaces"];
            }
            message Egress_Zones {
               repeated string destination_zone = 1 [json_name = "destination-zone"];
            }
            message Egress_Interfaces {
               repeated string egress_interface = 1 [json_name = "egress-interface"];
            }
            oneof Egress {
               Egress_Zones egress_zones = 10 [json_name = "zones"];
               Egress_Interfaces egress_interfaces = 11 [json_name = "interfaces"];
            }
            message SourceAddress {
               repeated string address_object = 1 [json_name = "address-object"];
               repeated string address_group = 2 [json_name = "address-group"];
               message AddressIpv4S {
                  message AddressIpv4 {
                     string ipv4 = 1 [json_name = "ipv4"];
                     string mask = 2 [json_name = "mask"];
                  }
                  repeated AddressIpv4 address_ipv4 = 1 [json_name = "address-ipv4"];
               }
               AddressIpv4S address_ipv4s = 3 [json_name = "address-ipv4s"];
               message AddressIpv6S {
                  message AddressIpv6 {
                     string ipv6 = 1 [json_name = "ipv6"];
                     uint32 prefix_length = 2 [json_name = "prefix-length"];
                  }
                  repeated AddressIpv6 address_ipv6 = 1 [json_name = "address-ipv6"];
               }
               AddressIpv6S address_ipv6s = 4 [json_name = "address-ipv6s"];
               message AddressIpv4Ranges {
                  message AddressIpv4Range {
                     string start_ipv4 = 1 [json_name = "start-ipv4"];
                     string end_ipv4 = 2 [json_name = "end-ipv4"];
                  }
                  repeated AddressIpv4Range address_ipv4_range = 1 [json_name = "address-ipv4-range"];
               }
               AddressIpv4Ranges address_ipv4_ranges = 5 [json_name = "address-ipv4-ranges"];
               message AddressIpv6Ranges {
                  message AddressIpv6Range {
                     string start_ipv6 = 1 [json_name = "start-ipv6"];
                     string end_ipv6 = 2 [json_name = "end-ipv6"];
                  }
                  repeated AddressIpv6Range address_ipv6_range = 1 [json_name = "address-ipv6-range"];
               }
               AddressIpv6Ranges address_ipv6_ranges = 6 [json_name = "address-ipv6-ranges"];
               repeated string address_object_exclude = 7 [json_name = "address-object-exclude"];
               repeated string address_group_exclude = 8 [json_name = "address-group-exclude"];
               message AddressIpv4Excludes {
                  message AddressIpv4Exclude {
                     string ipv4 = 1 [json_name = "ipv4"];
                     string mask = 2 [json_name = "mask"];
                  }
                  repeated AddressIpv4Exclude address_ipv4_exclude = 1 [json_name = "address-ipv4-exclude"];
               }
               AddressIpv4Excludes address_ipv4_excludes = 9 [json_name = "address-ipv4-excludes"];
               message AddressIpv6Excludes {
                  message AddressIpv6Exclude {
                     string ipv6 = 1 [json_name = "ipv6"];
                     uint32 prefix_length = 2 [json_name = "prefix-length"];
                  }
                  repeated AddressIpv6Exclude address_ipv6_exclude = 1 [json_name = "address-ipv6-exclude"];
               }
               AddressIpv6Excludes address_ipv6_excludes = 10 [json_name = "address-ipv6-excludes"];
               message AddressIpv4RangeExcludes {
                  message AddressIpv4RangeExclude {
                     string start_ipv4 = 1 [json_name = "start-ipv4"];
                     string end_ipv4 = 2 [json_name = "end-ipv4"];
                  }
                  repeated AddressIpv4RangeExclude address_ipv4_range_exclude = 1 [json_name = "address-ipv4-range-exclude"];
               }
               AddressIpv4RangeExcludes address_ipv4_range_excludes = 11 [json_name = "address-ipv4-range-excludes"];
               message AddressIpv6RangeExcludes {
                  message AddressIpv6RangeExclude {
                     string start_ipv6 = 1 [json_name = "start-ipv6"];
                     string end_ipv6 = 2 [json_name = "end-ipv6"];
                  }
                  repeated AddressIpv6RangeExclude address_ipv6_range_exclude = 1 [json_name = "address-ipv6-range-exclude"];
               }
               AddressIpv6RangeExcludes address_ipv6_range_excludes = 12 [json_name = "address-ipv6-range-excludes"];
               repeated string domain_set = 13 [json_name = "domain-set"];
            }
            SourceAddress source_address = 12 [json_name = "source-address"];
            message DestinationAddress {
               repeated string address_object = 1 [json_name = "address-object"];
               repeated string address_group = 2 [json_name = "address-group"];
               message AddressIpv4S {
                  message AddressIpv4 {
                     string ipv4 = 1 [json_name = "ipv4"];
                     string mask = 2 [json_name = "mask"];
                  }
                  repeated AddressIpv4 address_ipv4 = 1 [json_name = "address-ipv4"];
               }
               AddressIpv4S address_ipv4s = 3 [json_name = "address-ipv4s"];
               message AddressIpv6S {
                  message AddressIpv6 {
                     string ipv6 = 1 [json_name = "ipv6"];
                     uint32 prefix_length = 2 [json_name = "prefix-length"];
                  }
                  repeated AddressIpv6 address_ipv6 = 1 [json_name = "address-ipv6"];
               }
               AddressIpv6S address_ipv6s = 4 [json_name = "address-ipv6s"];
               message AddressIpv4Ranges {
                  message AddressIpv4Range {
                     string start_ipv4 = 1 [json_name = "start-ipv4"];
                     string end_ipv4 = 2 [json_name = "end-ipv4"];
                  }
                  repeated AddressIpv4Range address_ipv4_range = 1 [json_name = "address-ipv4-range"];
               }
               AddressIpv4Ranges address_ipv4_ranges = 5 [json_name = "address-ipv4-ranges"];
               message AddressIpv6Ranges {
                  message AddressIpv6Range {
                     string start_ipv6 = 1 [json_name = "start-ipv6"];
                     string end_ipv6 = 2 [json_name = "end-ipv6"];
                  }
                  repeated AddressIpv6Range address_ipv6_range = 1 [json_name = "address-ipv6-range"];
               }
               AddressIpv6Ranges address_ipv6_ranges = 6 [json_name = "address-ipv6-ranges"];
               repeated string address_object_exclude = 7 [json_name = "address-object-exclude"];
               repeated string address_group_exclude = 8 [json_name = "address-group-exclude"];
               message AddressIpv4Excludes {
                  message AddressIpv4Exclude {
                     string ipv4 = 1 [json_name = "ipv4"];
                     string mask = 2 [json_name = "mask"];
                  }
                  repeated AddressIpv4Exclude address_ipv4_exclude = 1 [json_name = "address-ipv4-exclude"];
               }
               AddressIpv4Excludes address_ipv4_excludes = 9 [json_name = "address-ipv4-excludes"];
               message AddressIpv6Excludes {
                  message AddressIpv6Exclude {
                     string ipv6 = 1 [json_name = "ipv6"];
                     uint32 prefix_length = 2 [json_name = "prefix-length"];
                  }
                  repeated AddressIpv6Exclude address_ipv6_exclude = 1 [json_name = "address-ipv6-exclude"];
               }
               AddressIpv6Excludes address_ipv6_excludes = 10 [json_name = "address-ipv6-excludes"];
               message AddressIpv4RangeExcludes {
                  message AddressIpv4RangeExclude {
                     string start_ipv4 = 1 [json_name = "start-ipv4"];
                     string end_ipv4 = 2 [json_name = "end-ipv4"];
                  }
                  repeated AddressIpv4RangeExclude address_ipv4_range_exclude = 1 [json_name = "address-ipv4-range-exclude"];
               }
               AddressIpv4RangeExcludes address_ipv4_range_excludes = 11 [json_name = "address-ipv4-range-excludes"];
               message AddressIpv6RangeExcludes {
                  message AddressIpv6RangeExclude {
                     string start_ipv6 = 1 [json_name = "start-ipv6"];
                     string end_ipv6 = 2 [json_name = "end-ipv6"];
                  }
                  repeated AddressIpv6RangeExclude address_ipv6_range_exclude = 1 [json_name = "address-ipv6-range-exclude"];
               }
               AddressIpv6RangeExcludes address_ipv6_range_excludes = 12 [json_name = "address-ipv6-range-excludes"];
               repeated string domain_set = 13 [json_name = "domain-set"];
            }
            DestinationAddress destination_address = 13 [json_name = "destination-address"];
            message Service {
               repeated string service_object = 1 [json_name = "service-object"];
               repeated string service_group = 2 [json_name = "service-group"];
               message ServiceItems {
                  message ProtocolAndPorts {
                     message ProtocolAndPort {
                        enum Protocol {
                           INVALID_ENUM_VALUE_Protocol = 0;
                           Protocol_TCP = 6;
                           Protocol_UDP = 17;
                           Protocol_SCTP = 132;
                        };
                        Protocol protocol = 1 [json_name = "protocol"];
                        string source_port = 2 [json_name = "source-port"];
                        string dest_port = 3 [json_name = "dest-port"];
                     }
                     repeated ProtocolAndPort protocol_and_port = 1 [json_name = "protocol-and-port"];
                  }
                  ProtocolAndPorts protocol_and_ports = 1 [json_name = "protocol-and-ports"];
                  message Icmpv4S {
                     message Icmpv4 {
                        uint32 type = 1 [json_name = "type"];
                        string code = 2 [json_name = "code"];
                     }
                     repeated Icmpv4 icmpv4 = 1 [json_name = "icmpv4"];
                  }
                  Icmpv4S icmpv4s = 2 [json_name = "icmpv4s"];
                  message Icmpv6S {
                     message Icmpv6 {
                        uint32 type = 1 [json_name = "type"];
                        string code = 2 [json_name = "code"];
                     }
                     repeated Icmpv6 icmpv6 = 1 [json_name = "icmpv6"];
                  }
                  Icmpv6S icmpv6s = 3 [json_name = "icmpv6s"];
                  message Protocol {
                     repeated uint32 protocol_id = 1 [json_name = "protocol-id"];
                  }
                  Protocol protocol = 4 [json_name = "protocol"];
               }
               ServiceItems service_items = 3 [json_name = "service-items"];
               repeated string service_object_exclude = 4 [json_name = "service-object-exclude"];
               repeated string service_group_exclude = 5 [json_name = "service-group-exclude"];
               message ServiceItemsExclude {
                  message ProtocolAndPorts {
                     message ProtocolAndPort {
                        enum Protocol {
                           INVALID_ENUM_VALUE_Protocol = 0;
                           Protocol_TCP = 6;
                           Protocol_UDP = 17;
                           Protocol_SCTP = 132;
                        };
                        Protocol protocol = 1 [json_name = "protocol"];
                        string source_port = 2 [json_name = "source-port"];
                        string dest_port = 3 [json_name = "dest-port"];
                     }
                     repeated ProtocolAndPort protocol_and_port = 1 [json_name = "protocol-and-port"];
                  }
                  ProtocolAndPorts protocol_and_ports = 1 [json_name = "protocol-and-ports"];
                  message Icmpv4S {
                     message Icmpv4 {
                        uint32 type = 1 [json_name = "type"];
                        string code = 2 [json_name = "code"];
                     }
                     repeated Icmpv4 icmpv4 = 1 [json_name = "icmpv4"];
                  }
                  Icmpv4S icmpv4s = 2 [json_name = "icmpv4s"];
                  message Icmpv6S {
                     message Icmpv6 {
                        uint32 type = 1 [json_name = "type"];
                        string code = 2 [json_name = "code"];
                     }
                     repeated Icmpv6 icmpv6 = 1 [json_name = "icmpv6"];
                  }
                  Icmpv6S icmpv6s = 3 [json_name = "icmpv6s"];
                  message Protocol {
                     repeated uint32 protocol_id = 1 [json_name = "protocol-id"];
                  }
                  Protocol protocol = 4 [json_name = "protocol"];
               }
               ServiceItemsExclude service_items_exclude = 6 [json_name = "service-items-exclude"];
            }
            Service service = 14 [json_name = "service"];
         }
         repeated Rule rule = 1 [json_name = "rule"];
      }
      Rules rules = 2 [json_name = "rules"];
      message DefaultRule {
         uint32 hit_count = 1 [json_name = "hit-count"];
      }
      DefaultRule default_rule = 3 [json_name = "default-rule"];
   }
   BandwidthPolicy bandwidth_policy = 1 [json_name = "bandwidth-policy"];
   message BandwidthProfile {
      message Profiles {
         message Profile {
            string name = 1 [json_name = "name"];
            uint32 remark_dscp = 2 [json_name = "remark-dscp"];
            message MaximumBandwidth {
               message WholeLimitBandwidth {
                  uint32 upstream_bandwidth = 1 [json_name = "upstream-bandwidth"];
                  uint32 downstream_bandwidth = 2 [json_name = "downstream-bandwidth"];
               }
               WholeLimitBandwidth whole_limit_bandwidth = 1 [json_name = "whole-limit-bandwidth"];
               message PerIpMaximumBandwidth {
                  uint32 upstream_bandwidth = 1 [json_name = "upstream-bandwidth"];
                  uint32 downstream_bandwidth = 2 [json_name = "downstream-bandwidth"];
               }
               PerIpMaximumBandwidth per_ip_maximum_bandwidth = 2 [json_name = "per-ip-maximum-bandwidth"];
            }
            MaximumBandwidth maximum_bandwidth = 3 [json_name = "maximum-bandwidth"];
            message GuaranteedBandwidth {
               message WholeGuaranteedBandwidth {
                  uint32 upstream_bandwidth = 1 [json_name = "upstream-bandwidth"];
                  uint32 downstream_bandwidth = 2 [json_name = "downstream-bandwidth"];
               }
               WholeGuaranteedBandwidth whole_guaranteed_bandwidth = 1 [json_name = "whole-guaranteed-bandwidth"];
               message PerIpGuaranteedBandwidth {
                  uint32 upstream_bandwidth = 1 [json_name = "upstream-bandwidth"];
                  uint32 downstream_bandwidth = 2 [json_name = "downstream-bandwidth"];
               }
               PerIpGuaranteedBandwidth per_ip_guaranteed_bandwidth = 2 [json_name = "per-ip-guaranteed-bandwidth"];
            }
            GuaranteedBandwidth guaranteed_bandwidth = 4 [json_name = "guaranteed-bandwidth"];
            message LimitConnection {
               message WholeLimitConnection {
                  message ChoiceConnection_DirectionConnection {
                     uint32 upstream_connection = 1 [json_name = "upstream-connection"];
                     uint32 downstream_connection = 2 [json_name = "downstream-connection"];
                  }
                  message ChoiceConnection_TotalConnection {
                     uint32 total_connection = 1 [json_name = "total-connection"];
                  }
                  oneof ChoiceConnection {
                     ChoiceConnection_DirectionConnection choice_connection_direction_connection = 1 [json_name = "direction-connection"];
                     ChoiceConnection_TotalConnection choice_connection_total_connection = 2 [json_name = "total-connection"];
                  }
               }
               WholeLimitConnection whole_limit_connection = 1 [json_name = "whole-limit-connection"];
               message PerIpLimitConnection {
                  message ChoiceConnection_DirectionConnection {
                     uint32 upstream_connection = 1 [json_name = "upstream-connection"];
                     uint32 downstream_connection = 2 [json_name = "downstream-connection"];
                  }
                  message ChoiceConnection_TotalConnection {
                     uint32 total_connection = 1 [json_name = "total-connection"];
                  }
                  oneof ChoiceConnection {
                     ChoiceConnection_DirectionConnection choice_connection_direction_connection = 1 [json_name = "direction-connection"];
                     ChoiceConnection_TotalConnection choice_connection_total_connection = 2 [json_name = "total-connection"];
                  }
               }
               PerIpLimitConnection per_ip_limit_connection = 2 [json_name = "per-ip-limit-connection"];
            }
            LimitConnection limit_connection = 5 [json_name = "limit-connection"];
         }
         repeated Profile profile = 1 [json_name = "profile"];
      }
      Profiles profiles = 1 [json_name = "profiles"];
   }
   BandwidthProfile bandwidth_profile = 2 [json_name = "bandwidth-profile"];
}

