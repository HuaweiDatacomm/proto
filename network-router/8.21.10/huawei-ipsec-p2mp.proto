syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-08-03 16:01:26
// ProtoYang-version 1
// module huawei-ipsec-p2mp
// revision 2021-01-12
// revision 2020-05-15
// namespace urn:huawei:yang:huawei-ipsec-p2mp

package huawei_ipsec_p2mp;

message IpsecP2Mp {
   message IpsecP2MpPolicys {
      message IpsecP2MpPolicy {
         string name = 1 [json_name = "name"];
         uint32 lifetime = 2 [json_name = "lifetime"];
         enum EspEncryptionAlgorithm {
            INVALID_ENUM_VALUE_EspEncryptionAlgorithm = 0;
            EspEncryptionAlgorithm_AESX_128 = 1;
            EspEncryptionAlgorithm_AESX_256 = 2;
            EspEncryptionAlgorithm_AESX_128X_GCM = 3;
            EspEncryptionAlgorithm_AESX_256X_GCM = 4;
            EspEncryptionAlgorithm_SM4 = 5;
         };
         EspEncryptionAlgorithm esp_encryption_algorithm = 3 [json_name = "esp-encryption-algorithm"];
         enum EspAuthAlgorithm {
            INVALID_ENUM_VALUE_EspAuthAlgorithm = 0;
            EspAuthAlgorithm_SHA2X_256 = 1;
            EspAuthAlgorithm_SM3 = 2;
         };
         EspAuthAlgorithm esp_auth_algorithm = 4 [json_name = "esp-auth-algorithm"];
         message KeyExchange {
            enum Dh {
               INVALID_ENUM_VALUE_Dh = 0;
               Dh_GROUP19 = 1;
               Dh_GROUP20 = 2;
               Dh_GROUP21 = 3;
            };
            Dh dh = 1 [json_name = "dh"];
            bool strict_enable = 2 [json_name = "strict-enable"];
         }
         KeyExchange key_exchange = 5 [json_name = "key-exchange"];
      }
      repeated IpsecP2MpPolicy ipsec_p2mp_policy = 1 [json_name = "ipsec-p2mp-policy"];
   }
   IpsecP2MpPolicys ipsec_p2mp_policys = 1 [json_name = "ipsec-p2mp-policys"];
}

