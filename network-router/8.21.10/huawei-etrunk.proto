syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-09-07 14:36:00
// ProtoYang-version 1
// module huawei-etrunk
// revision 2021-03-04
// revision 2020-03-12
// revision 2020-03-09
// revision 2020-02-19
// revision 2019-11-07
// namespace urn:huawei:yang:huawei-etrunk

package huawei_etrunk;

message Etrunk {
   message Global {
      uint32 lacp_priority = 1 [json_name = "lacp-priority"];
      string lacp_sys_id = 2 [json_name = "lacp-sys-id"];
      uint32 udp_port = 3 [json_name = "udp-port"];
      uint32 udp6_port = 4 [json_name = "udp6-port"];
      uint64 recv_id_errs = 5 [json_name = "recv-id-errs"];
      uint64 recv_length_errs = 6 [json_name = "recv-length-errs"];
      uint32 all_num = 7 [json_name = "all-num"];
      uint32 master_num = 8 [json_name = "master-num"];
      uint32 backup_num = 9 [json_name = "backup-num"];
      uint32 init_num = 10 [json_name = "init-num"];
      message Etrunk4SessionCar {
         bool enable = 1 [json_name = "enable"];
         uint32 cir = 2 [json_name = "cir"];
         uint32 cbs = 3 [json_name = "cbs"];
         uint32 pir = 4 [json_name = "pir"];
         uint32 pbs = 5 [json_name = "pbs"];
      }
      Etrunk4SessionCar etrunk4_session_car = 11 [json_name = "etrunk4-session-car"];
      message Etrunk6SessionCar {
         bool enable = 1 [json_name = "enable"];
         uint32 cir = 2 [json_name = "cir"];
         uint32 cbs = 3 [json_name = "cbs"];
         uint32 pir = 4 [json_name = "pir"];
         uint32 pbs = 5 [json_name = "pbs"];
      }
      Etrunk6SessionCar etrunk6_session_car = 12 [json_name = "etrunk6-session-car"];
   }
   Global global = 1 [json_name = "global"];
   message Instances {
      message Instance {
         uint32 id = 1 [json_name = "id"];
         uint32 priority = 2 [json_name = "priority"];
         string peer_addr = 3 [json_name = "peer-addr"];
         string source_addr = 4 [json_name = "source-addr"];
         enum SecurityKeyType {
            INVALID_ENUM_VALUE_SecurityKeyType = 0;
            SecurityKeyType_SIMPLE = 1;
            SecurityKeyType_CIPHER = 2;
         };
         SecurityKeyType security_key_type = 6 [json_name = "security-key-type"];
         string security_key = 7 [json_name = "security-key"];
         enum AuthenMode {
            INVALID_ENUM_VALUE_AuthenMode = 0;
            AuthenMode_HMACX_SHA1 = 1;
            AuthenMode_HMACX_SHA256 = 2;
            AuthenMode_ENHANCEDX_HMACX_SHA256 = 3;
         };
         AuthenMode authen_mode = 8 [json_name = "authen-mode"];
         uint32 timer_hello = 9 [json_name = "timer-hello"];
         uint32 timer_multi = 10 [json_name = "timer-multi"];
         enum RevertEnable {
            RevertEnable_ENABLE = 0;
            RevertEnable_DISABLE = 1;
         };
         RevertEnable revert_enable = 11 [json_name = "revert-enable"];
         uint32 timer_revert_delay = 12 [json_name = "timer-revert-delay"];
         enum SequenceEnable {
            SequenceEnable_DISABLE = 0;
            SequenceEnable_ENABLE = 1;
         };
         SequenceEnable sequence_enable = 13 [json_name = "sequence-enable"];
         string description = 14 [json_name = "description"];
         enum SelectMode {
            SelectMode_DEFAULT = 0;
            SelectMode_LINKX_NUMBER = 1;
            SelectMode_BANDWIDTH = 2;
         };
         SelectMode select_mode = 15 [json_name = "select-mode"];
         message Interfaces {
            message Interface {
               string if_name = 1 [json_name = "if-name"];
               uint32 remote_trunk_id = 2 [json_name = "remote-trunk-id"];
               enum Mode {
                  INVALID_ENUM_VALUE_Mode = 0;
                  Mode_AUTO = 1;
                  Mode_FORCEX_BACKUP = 2;
                  Mode_FORCEX_MASTER = 3;
               };
               Mode mode = 3 [json_name = "mode"];
               message LacpSyscfg {
                  uint32 negotiate_delay = 1 [json_name = "negotiate-delay"];
                  uint32 lacp_priority = 2 [json_name = "lacp-priority"];
                  string lacp_sysid = 3 [json_name = "lacp-sysid"];
               }
               LacpSyscfg lacp_syscfg = 4 [json_name = "lacp-syscfg"];
               enum PhyState {
                  INVALID_ENUM_VALUE_PhyState = 0;
                  PhyState_UP = 1;
                  PhyState_DOWN = 2;
               };
               PhyState phy_state = 5 [json_name = "phy-state"];
               enum State {
                  INVALID_ENUM_VALUE_State = 0;
                  State_BACKUP = 1;
                  State_MASTER = 2;
                  State_NEGOTIATION = 3;
               };
               State state = 6 [json_name = "state"];
               enum Causation {
                  INVALID_ENUM_VALUE_Causation = 0;
                  Causation_FORCEX_BACKUP = 1;
                  Causation_FORCEX_MASTER = 2;
                  Causation_ETRUNKX_INIT = 3;
                  Causation_ETRUNKX_BACKUP = 4;
                  Causation_ETRUNKX_MASTER = 5;
                  Causation_PEERX_MEMBERX_DOWN = 6;
                  Causation_PEERX_MEMBERX_UP = 7;
                  Causation_ACTIVEX_ACTIVE = 8;
                  Causation_DEGRADEDX_ACTIVE = 9;
                  Causation_PEERLINKX_DOWN = 10;
                  Causation_LINKX_DOWN = 11;
                  Causation_ALLX_ACTIVE = 12;
                  Causation_PEERX_BANDWIDTHX_LARGE = 13;
                  Causation_LOCALX_BANDWIDTHX_LARGE = 14;
               };
               Causation causation = 7 [json_name = "causation"];
               message StateChanges {
                  message StateChange {
                     uint32 index = 1 [json_name = "index"];
                     string time = 2 [json_name = "time"];
                     enum SourceState {
                        INVALID_ENUM_VALUE_SourceState = 0;
                        SourceState_BACKUP = 1;
                        SourceState_MASTER = 2;
                        SourceState_NEGOTIATION = 3;
                     };
                     SourceState source_state = 3 [json_name = "source-state"];
                     enum DestState {
                        INVALID_ENUM_VALUE_DestState = 0;
                        DestState_BACKUP = 1;
                        DestState_MASTER = 2;
                        DestState_NEGOTIATION = 3;
                     };
                     DestState dest_state = 4 [json_name = "dest-state"];
                     enum Reason {
                        INVALID_ENUM_VALUE_Reason = 0;
                        Reason_FORCEX_BACKUP = 1;
                        Reason_FORCEX_MASTER = 2;
                        Reason_ETRUNKX_INIT = 3;
                        Reason_ETRUNKX_BACKUP = 4;
                        Reason_ETRUNKX_MASTER = 5;
                        Reason_PEERX_MEMBERX_DOWN = 6;
                        Reason_PEERX_MEMBERX_UP = 7;
                        Reason_ACTIVEX_ACTIVE = 8;
                        Reason_DEGRADEDX_ACTIVE = 9;
                        Reason_PEERLINKX_DOWN = 10;
                        Reason_LINKX_DOWN = 11;
                        Reason_ALLX_ACTIVE = 12;
                        Reason_PEERX_BANDWIDTHX_LARGE = 13;
                        Reason_LOCALX_BANDWIDTHX_LARGE = 14;
                     };
                     Reason reason = 5 [json_name = "reason"];
                  }
                  repeated StateChange state_change = 1 [json_name = "state-change"];
               }
               StateChanges state_changes = 8 [json_name = "state-changes"];
            }
            repeated Interface interface = 1 [json_name = "interface"];
         }
         Interfaces interfaces = 16 [json_name = "interfaces"];
         string ni_name = 17 [json_name = "ni-name"];
         string sys_id = 18 [json_name = "sys-id"];
         enum State {
            INVALID_ENUM_VALUE_State = 0;
            State_INIT = 1;
            State_BACKUP = 2;
            State_MASTER = 3;
         };
         State state = 19 [json_name = "state"];
         enum Causation {
            INVALID_ENUM_VALUE_Causation = 0;
            Causation_PRIORITYX_CHANGE = 1;
            Causation_TIMEOUT = 2;
            Causation_BFDX_DOWN = 3;
            Causation_PEERX_TIMEOUT = 4;
            Causation_PEERX_BFDX_DOWN = 5;
            Causation_INITX_ALLX_MEMBERX_DOWN = 6;
            Causation_INIT = 7;
            Causation_PEERX_NODEX_DOWN = 8;
         };
         Causation causation = 20 [json_name = "causation"];
         uint64 recv_pkts = 21 [json_name = "recv-pkts"];
         uint64 send_pkts = 22 [json_name = "send-pkts"];
         uint64 recv_drop_pkts = 23 [json_name = "recv-drop-pkts"];
         uint64 send_drop_pkts = 24 [json_name = "send-drop-pkts"];
         uint32 peer_priority = 25 [json_name = "peer-priority"];
         string peer_sys_id = 26 [json_name = "peer-sys-id"];
         uint32 peer_fail_time = 27 [json_name = "peer-fail-time"];
         message PktsStatistics {
            uint64 priority_err_pkts = 1 [json_name = "priority-err-pkts"];
            uint64 fail_time_pkts = 2 [json_name = "fail-time-pkts"];
            uint64 state_err_pkts = 3 [json_name = "state-err-pkts"];
            uint64 reason_err_pkts = 4 [json_name = "reason-err-pkts"];
            uint64 peer_err_pkts = 5 [json_name = "peer-err-pkts"];
            uint64 auth_err_pkts = 6 [json_name = "auth-err-pkts"];
            uint64 tlv_err_pkts = 7 [json_name = "tlv-err-pkts"];
            uint64 sysid_err_pkts = 8 [json_name = "sysid-err-pkts"];
            uint64 bfd_err_pkts = 9 [json_name = "bfd-err-pkts"];
            uint64 seq_err_pkts = 10 [json_name = "seq-err-pkts"];
         }
         PktsStatistics pkts_statistics = 28 [json_name = "pkts-statistics"];
         message BfdSession_StaticBfd {
            string bfd_session_name = 1 [json_name = "bfd-session-name"];
         }
         message BfdSession_DynBfd {
            message ETrunkbfd {
               bool bfd_enable = 1 [json_name = "bfd-enable"];
               uint32 detect_multi = 2 [json_name = "detect-multi"];
               uint32 min_rx_interval = 3 [json_name = "min-rx-interval"];
               uint32 min_tx_interval = 4 [json_name = "min-tx-interval"];
               string if_name = 5 [json_name = "if-name"];
               enum BfdState {
                  BfdState_UNKNOWN = 0;
                  BfdState_DOWN = 1;
                  BfdState_UP = 2;
               };
               BfdState bfd_state = 6 [json_name = "bfd-state"];
            }
            ETrunkbfd e_trunkbfd = 1 [json_name = "e-trunkbfd"];
         }
         oneof BfdSession {
            BfdSession_StaticBfd bfd_session_static_bfd = 29 [json_name = "static-bfd"];
            BfdSession_DynBfd bfd_session_dyn_bfd = 30 [json_name = "dyn-bfd"];
         }
         uint32 dfs_groupid = 31 [json_name = "dfs-groupid"];
         uint32 local_nick_name = 32 [json_name = "local-nick-name"];
         uint32 peer_nick_name = 33 [json_name = "peer-nick-name"];
         message RbsBackupPort {
            uint32 port_num = 1 [json_name = "port-num"];
         }
         RbsBackupPort rbs_backup_port = 34 [json_name = "rbs-backup-port"];
         message Rbs {
            message RbsBackupPort {
               uint32 port_num = 1 [json_name = "port-num"];
            }
            RbsBackupPort rbs_backup_port = 1 [json_name = "rbs-backup-port"];
         }
         Rbs rbs = 35 [json_name = "rbs"];
      }
      repeated Instance instance = 1 [json_name = "instance"];
   }
   Instances instances = 2 [json_name = "instances"];
}

