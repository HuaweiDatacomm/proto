syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2022-04-25 17:22:00
// ProtoYang-version 1
// module huawei-syslog
// revision 2022-04-25
// revision 2022-02-16
// revision 2021-05-26
// revision 2021-03-17
// revision 2020-07-21
// revision 2020-07-10
// revision 2020-06-02
// revision 2020-05-22
// revision 2020-02-24
// revision 2020-02-19
// revision 2020-02-11
// revision 2020-01-20
// revision 2019-09-24
// namespace urn:huawei:yang:huawei-syslog

package huawei_syslog;

message Syslog {
   message Servers {
      message Server {
         enum IpType {
            INVALID_ENUM_VALUE_IpType = 0;
            IpType_IPV4 = 1;
            IpType_IPV6 = 2;
         };
         IpType ip_type = 1 [json_name = "ip-type"];
         string ipaddress = 2 [json_name = "ipaddress"];
         bool is_default_vpn = 3 [json_name = "is-default-vpn"];
         string vrf_name = 4 [json_name = "vrf-name"];
         enum Level {
            Level_EMERGENCIES = 0;
            Level_ALERT = 1;
            Level_CRITICAL = 2;
            Level_ERROR = 3;
            Level_WARNING = 4;
            Level_NOTIFICATION = 5;
            Level_INFORMATIONAL = 6;
            Level_DEBUGGING = 7;
         };
         Level level = 5 [json_name = "level"];
         uint32 port = 6 [json_name = "port"];
         enum Facility {
            INVALID_ENUM_VALUE_Facility = 0;
            Facility_LOCAL0 = 16;
            Facility_LOCAL1 = 17;
            Facility_LOCAL2 = 18;
            Facility_LOCAL3 = 19;
            Facility_LOCAL4 = 20;
            Facility_LOCAL5 = 21;
            Facility_LOCAL6 = 22;
            Facility_LOCAL7 = 23;
         };
         Facility facility = 7 [json_name = "facility"];
         uint32 channel_id = 8 [json_name = "channel-id"];
         string channel_name = 9 [json_name = "channel-name"];
         enum Timestamp {
            Timestamp_UTC = 0;
            Timestamp_LOCALTIME = 1;
         };
         Timestamp timestamp = 10 [json_name = "timestamp"];
         enum TransportMode {
            INVALID_ENUM_VALUE_TransportMode = 0;
            TransportMode_TCP = 1;
            TransportMode_UDP = 2;
         };
         TransportMode transport_mode = 11 [json_name = "transport-mode"];
         string ssl_policy_name = 12 [json_name = "ssl-policy-name"];
         string source_ip = 13 [json_name = "source-ip"];
         string dns_identifier_name = 14 [json_name = "dns-identifier-name"];
         bool is_security_only = 15 [json_name = "is-security-only"];
         string host_name = 16 [json_name = "host-name"];
         bool is_activated = 17 [json_name = "is-activated"];
         bool is_brief_format = 18 [json_name = "is-brief-format"];
         enum FacilityMask {
            FacilityMask_LOCAL0 = 0;
            FacilityMask_LOCAL1 = 1;
            FacilityMask_LOCAL2 = 2;
            FacilityMask_LOCAL3 = 3;
            FacilityMask_LOCAL4 = 4;
            FacilityMask_LOCAL5 = 5;
            FacilityMask_LOCAL6 = 6;
            FacilityMask_LOCAL7 = 7;
         };
         repeated FacilityMask facility_mask = 19 [json_name = "facility-mask"];
         enum SeverityMask {
            SeverityMask_EMERGENCY = 0;
            SeverityMask_ALERT = 1;
            SeverityMask_CRITICAL = 2;
            SeverityMask_ERROR = 3;
            SeverityMask_WARNING = 4;
            SeverityMask_NOTICE = 5;
            SeverityMask_INFORMATIONAL = 6;
            SeverityMask_DEBUG = 7;
         };
         repeated SeverityMask severity_mask = 20 [json_name = "severity-mask"];
      }
      repeated Server server = 1 [json_name = "server"];
   }
   Servers servers = 1 [json_name = "servers"];
   message GlobalParameter {
      bool info_center_enable = 1 [json_name = "info-center-enable"];
      int32 buffer_size = 2 [json_name = "buffer-size"];
      bool suppress_enable = 3 [json_name = "suppress-enable"];
      enum LogTimestamp {
         INVALID_ENUM_VALUE_LogTimestamp = 0;
         LogTimestamp_DATEX_BOOT = 11;
         LogTimestamp_DATEX_SECOND = 12;
         LogTimestamp_DATEX_TENTHSECOND = 13;
         LogTimestamp_DATEX_MILLISECOND = 14;
         LogTimestamp_SHORTDATEX_SECOND = 15;
         LogTimestamp_SHORTDATEX_TENTHSECOND = 16;
         LogTimestamp_SHORTDATEX_MILLISECOND = 17;
         LogTimestamp_FORMATDATEX_SECOND = 18;
         LogTimestamp_FORMATDATEX_TENTHSECOND = 19;
         LogTimestamp_FORMATDATEX_MILLISECOND = 20;
         LogTimestamp_RFC3339X_SECOND = 29;
         LogTimestamp_RFC3339X_TENTHSECOND = 31;
         LogTimestamp_RFC3339X_MILLISECOND = 33;
      };
      LogTimestamp log_timestamp = 4 [json_name = "log-timestamp"];
      enum TrapTimestamp {
         INVALID_ENUM_VALUE_TrapTimestamp = 0;
         TrapTimestamp_DATEX_BOOT = 11;
         TrapTimestamp_DATEX_SECOND = 12;
         TrapTimestamp_DATEX_TENTHSECOND = 13;
         TrapTimestamp_DATEX_MILLISECOND = 14;
         TrapTimestamp_SHORTDATEX_SECOND = 15;
         TrapTimestamp_SHORTDATEX_TENTHSECOND = 16;
         TrapTimestamp_SHORTDATEX_MILLISECOND = 17;
         TrapTimestamp_FORMATDATEX_SECOND = 18;
         TrapTimestamp_FORMATDATEX_TENTHSECOND = 19;
         TrapTimestamp_FORMATDATEX_MILLISECOND = 20;
         TrapTimestamp_RFC3339X_SECOND = 29;
         TrapTimestamp_RFC3339X_TENTHSECOND = 31;
         TrapTimestamp_RFC3339X_MILLISECOND = 33;
      };
      TrapTimestamp trap_timestamp = 5 [json_name = "trap-timestamp"];
      enum DebugTimestamp {
         INVALID_ENUM_VALUE_DebugTimestamp = 0;
         DebugTimestamp_DATEX_BOOT = 11;
         DebugTimestamp_DATEX_SECOND = 12;
         DebugTimestamp_DATEX_TENTHSECOND = 13;
         DebugTimestamp_DATEX_MILLISECOND = 14;
         DebugTimestamp_SHORTDATEX_SECOND = 15;
         DebugTimestamp_SHORTDATEX_TENTHSECOND = 16;
         DebugTimestamp_SHORTDATEX_MILLISECOND = 17;
         DebugTimestamp_FORMATDATEX_SECOND = 18;
         DebugTimestamp_FORMATDATEX_TENTHSECOND = 19;
         DebugTimestamp_FORMATDATEX_MILLISECOND = 20;
         DebugTimestamp_RFC3339X_SECOND = 29;
         DebugTimestamp_RFC3339X_TENTHSECOND = 31;
         DebugTimestamp_RFC3339X_MILLISECOND = 33;
      };
      DebugTimestamp debug_timestamp = 6 [json_name = "debug-timestamp"];
      string interface_name = 7 [json_name = "interface-name"];
      bool logbuffer_enable = 8 [json_name = "logbuffer-enable"];
      bool trapbuffer_enable = 9 [json_name = "trapbuffer-enable"];
      int32 trapbuffer_size = 10 [json_name = "trapbuffer-size"];
      int32 packet_priority = 11 [json_name = "packet-priority"];
      uint32 source_port = 12 [json_name = "source-port"];
      bool log_none_timezone = 13 [json_name = "log-none-timezone"];
      bool trap_none_timezone = 14 [json_name = "trap-none-timezone"];
      bool debug_none_timezone = 15 [json_name = "debug-none-timezone"];
      bool delay_suppress_enable = 16 [json_name = "delay-suppress-enable"];
      bool event_logging_all = 17 [json_name = "event-logging-all"];
      enum CharacterSet {
         INVALID_ENUM_VALUE_CharacterSet = 0;
         CharacterSet_UTFX_8 = 1;
         CharacterSet_ISO8859X_1 = 2;
         CharacterSet_GBK = 3;
      };
      CharacterSet character_set = 18 [json_name = "character-set"];
   }
   GlobalParameter global_parameter = 2 [json_name = "global-parameter"];
   message InfoCenterChannels {
      message InfoCenterChannel {
         uint32 channel_id = 1 [json_name = "channel-id"];
         string channel_default_name = 2 [json_name = "channel-default-name"];
         string channel_name = 3 [json_name = "channel-name"];
      }
      repeated InfoCenterChannel info_center_channel = 1 [json_name = "info-center-channel"];
   }
   InfoCenterChannels info_center_channels = 3 [json_name = "info-center-channels"];
   message InfoCenterSources {
      message InfoCenterSource {
         string module_name = 1 [json_name = "module-name"];
         uint32 channel_id = 2 [json_name = "channel-id"];
         string channel_name = 3 [json_name = "channel-name"];
         bool enable_log = 4 [json_name = "enable-log"];
         enum EnableLogLevel {
            EnableLogLevel_EMERGENCIES = 0;
            EnableLogLevel_ALERT = 1;
            EnableLogLevel_CRITICAL = 2;
            EnableLogLevel_ERROR = 3;
            EnableLogLevel_WARNING = 4;
            EnableLogLevel_NOTIFICATION = 5;
            EnableLogLevel_INFORMATIONAL = 6;
            EnableLogLevel_DEBUGGING = 7;
         };
         EnableLogLevel enable_log_level = 5 [json_name = "enable-log-level"];
         bool enable_trap = 6 [json_name = "enable-trap"];
         enum EnableTrapLevel {
            EnableTrapLevel_EMERGENCIES = 0;
            EnableTrapLevel_ALERT = 1;
            EnableTrapLevel_CRITICAL = 2;
            EnableTrapLevel_ERROR = 3;
            EnableTrapLevel_WARNING = 4;
            EnableTrapLevel_NOTIFICATION = 5;
            EnableTrapLevel_INFORMATIONAL = 6;
            EnableTrapLevel_DEBUGGING = 7;
         };
         EnableTrapLevel enable_trap_level = 7 [json_name = "enable-trap-level"];
         bool enable_debug = 8 [json_name = "enable-debug"];
         enum EnableDebugLevel {
            EnableDebugLevel_EMERGENCIES = 0;
            EnableDebugLevel_ALERT = 1;
            EnableDebugLevel_CRITICAL = 2;
            EnableDebugLevel_ERROR = 3;
            EnableDebugLevel_WARNING = 4;
            EnableDebugLevel_NOTIFICATION = 5;
            EnableDebugLevel_INFORMATIONAL = 6;
            EnableDebugLevel_DEBUGGING = 7;
         };
         EnableDebugLevel enable_debug_level = 9 [json_name = "enable-debug-level"];
      }
      repeated InfoCenterSource info_center_source = 1 [json_name = "info-center-source"];
   }
   InfoCenterSources info_center_sources = 4 [json_name = "info-center-sources"];
   message LogSwitchList {
      message LogSwitch {
         string feature_name = 1 [json_name = "feature-name"];
         string log_name = 2 [json_name = "log-name"];
         enum LogLevel {
            LogLevel_EMERGENCIES = 0;
            LogLevel_ALERT = 1;
            LogLevel_CRITICAL = 2;
            LogLevel_ERROR = 3;
            LogLevel_WARNING = 4;
            LogLevel_NOTIFICATION = 5;
            LogLevel_INFORMATIONAL = 6;
            LogLevel_DEBUGGING = 7;
         };
         LogLevel log_level = 3 [json_name = "log-level"];
         bool security_log_flag = 4 [json_name = "security-log-flag"];
         enum LogType {
            INVALID_ENUM_VALUE_LogType = 0;
            LogType_OPERLOG = 1;
            LogType_EVENTLOG = 2;
            LogType_DIAGLOG = 4;
            LogType_ALARMLOG = 5;
            LogType_NOTIFICATIONLOG = 10;
            LogType_MAINTAINLOG = 11;
            LogType_SERVICELOG = 18;
            LogType_HIGHPRECISIONLOG = 20;
            LogType_LIFECYCLELOG = 22;
         };
         LogType log_type = 5 [json_name = "log-type"];
         bool suppress = 6 [json_name = "suppress"];
      }
      repeated LogSwitch log_switch = 1 [json_name = "log-switch"];
   }
   LogSwitchList log_switch_list = 5 [json_name = "log-switch-list"];
   message InfoCenterFilters {
      message InfoCenterFilter {
         string feature_name = 1 [json_name = "feature-name"];
         string filter_log_name = 2 [json_name = "filter-log-name"];
      }
      repeated InfoCenterFilter info_center_filter = 1 [json_name = "info-center-filter"];
   }
   InfoCenterFilters info_center_filters = 6 [json_name = "info-center-filters"];
   message DomainServers {
      message DomainServer {
         string server_domain = 1 [json_name = "server-domain"];
         bool is_default_vpn = 2 [json_name = "is-default-vpn"];
         string vrf_name = 3 [json_name = "vrf-name"];
         enum Level {
            Level_EMERGENCIES = 0;
            Level_ALERT = 1;
            Level_CRITICAL = 2;
            Level_ERROR = 3;
            Level_WARNING = 4;
            Level_NOTIFICATION = 5;
            Level_INFORMATIONAL = 6;
            Level_DEBUGGING = 7;
         };
         Level level = 4 [json_name = "level"];
         uint32 server_port = 5 [json_name = "server-port"];
         enum Facility {
            INVALID_ENUM_VALUE_Facility = 0;
            Facility_LOCAL0 = 16;
            Facility_LOCAL1 = 17;
            Facility_LOCAL2 = 18;
            Facility_LOCAL3 = 19;
            Facility_LOCAL4 = 20;
            Facility_LOCAL5 = 21;
            Facility_LOCAL6 = 22;
            Facility_LOCAL7 = 23;
         };
         Facility facility = 6 [json_name = "facility"];
         uint32 channel_id = 7 [json_name = "channel-id"];
         string channel_name = 8 [json_name = "channel-name"];
         enum Timestamp {
            Timestamp_UTC = 0;
            Timestamp_LOCALTIME = 1;
         };
         Timestamp timestamp = 9 [json_name = "timestamp"];
         enum TransportMode {
            INVALID_ENUM_VALUE_TransportMode = 0;
            TransportMode_TCP = 1;
            TransportMode_UDP = 2;
         };
         TransportMode transport_mode = 10 [json_name = "transport-mode"];
         string ssl_policy_name = 11 [json_name = "ssl-policy-name"];
         bool is_brief_format = 12 [json_name = "is-brief-format"];
         bool is_security_only = 13 [json_name = "is-security-only"];
         string source_ip = 14 [json_name = "source-ip"];
         string dns_identifier_name = 15 [json_name = "dns-identifier-name"];
      }
      repeated DomainServer domain_server = 1 [json_name = "domain-server"];
   }
   DomainServers domain_servers = 7 [json_name = "domain-servers"];
   message Logfiles {
      message Logfile {
         enum LogfileType {
            INVALID_ENUM_VALUE_LogfileType = 0;
            LogfileType_LOG = 1;
            LogfileType_DIAGNOSE = 2;
            LogfileType_SECURITY = 3;
            LogfileType_OPERATION = 4;
            LogfileType_DEBUG = 6;
         };
         LogfileType logfile_type = 1 [json_name = "logfile-type"];
         uint32 max_file_num = 2 [json_name = "max-file-num"];
         uint32 max_file_size = 3 [json_name = "max-file-size"];
         message LatestLogs {
            message LatestLog {
               uint32 sequence = 1 [json_name = "sequence"];
               string content = 2 [json_name = "content"];
            }
            repeated LatestLog latest_log = 1 [json_name = "latest-log"];
         }
         LatestLogs latest_logs = 4 [json_name = "latest-logs"];
      }
      repeated Logfile logfile = 1 [json_name = "logfile"];
   }
   Logfiles logfiles = 8 [json_name = "logfiles"];
   message DirectionChannels {
      message DirectionChannel {
         string output_direction = 1 [json_name = "output-direction"];
         uint32 default_channel_id = 2 [json_name = "default-channel-id"];
         uint32 channel_id = 3 [json_name = "channel-id"];
         string channel_name = 4 [json_name = "channel-name"];
      }
      repeated DirectionChannel direction_channel = 1 [json_name = "direction-channel"];
   }
   DirectionChannels direction_channels = 9 [json_name = "direction-channels"];
   message InfoCenterStatistics {
      message InfoCenterStatistic {
         string module_name = 1 [json_name = "module-name"];
         uint32 receive_log = 2 [json_name = "receive-log"];
         uint32 drop_log = 3 [json_name = "drop-log"];
         uint32 receive_diaglog = 4 [json_name = "receive-diaglog"];
         uint32 drop_diaglog = 5 [json_name = "drop-diaglog"];
         uint32 receive_eventtrap = 6 [json_name = "receive-eventtrap"];
         uint32 drop_eventtrap = 7 [json_name = "drop-eventtrap"];
         uint32 receive_debug = 8 [json_name = "receive-debug"];
         uint32 drop_debug = 9 [json_name = "drop-debug"];
      }
      repeated InfoCenterStatistic info_center_statistic = 1 [json_name = "info-center-statistic"];
   }
   InfoCenterStatistics info_center_statistics = 10 [json_name = "info-center-statistics"];
   message InfoCenterBuffers {
      message InfoCenterBuffer {
         string buffer_name = 1 [json_name = "buffer-name"];
         bool enable_flag = 2 [json_name = "enable-flag"];
         uint32 max_buffer_size = 3 [json_name = "max-buffer-size"];
         uint32 cur_buffer_size = 4 [json_name = "cur-buffer-size"];
         uint32 current_message = 5 [json_name = "current-message"];
         uint32 dropped_message = 6 [json_name = "dropped-message"];
         uint32 overwrite_message = 7 [json_name = "overwrite-message"];
         uint32 channel_id = 8 [json_name = "channel-id"];
         string channel_name = 9 [json_name = "channel-name"];
      }
      repeated InfoCenterBuffer info_center_buffer = 1 [json_name = "info-center-buffer"];
   }
   InfoCenterBuffers info_center_buffers = 11 [json_name = "info-center-buffers"];
   message Modules {
      message Module {
         string module_name = 1 [json_name = "module-name"];
      }
      repeated Module module = 1 [json_name = "module"];
   }
   Modules modules = 12 [json_name = "modules"];
   message Logbuffers {
      message Logbuffer {
         int32 sequence = 1 [json_name = "sequence"];
         string starttime = 2 [json_name = "starttime"];
         string endtime = 3 [json_name = "endtime"];
         enum Level {
            Level_EMERGENCIES = 0;
            Level_ALERT = 1;
            Level_CRITICAL = 2;
            Level_ERROR = 3;
            Level_WARNING = 4;
            Level_NOTIFICATION = 5;
            Level_INFORMATIONAL = 6;
            Level_DEBUGGING = 7;
         };
         Level level = 4 [json_name = "level"];
         string log_content = 5 [json_name = "log-content"];
      }
      repeated Logbuffer logbuffer = 1 [json_name = "logbuffer"];
   }
   Logbuffers logbuffers = 13 [json_name = "logbuffers"];
   message Trapbuffers {
      message Trapbuffer {
         int32 sequence = 1 [json_name = "sequence"];
         string trap_content = 2 [json_name = "trap-content"];
      }
      repeated Trapbuffer trapbuffer = 1 [json_name = "trapbuffer"];
   }
   Trapbuffers trapbuffers = 14 [json_name = "trapbuffers"];
   message Securitybuffers {
      message Securitybuffer {
         int32 sequence = 1 [json_name = "sequence"];
         string starttime = 2 [json_name = "starttime"];
         string endtime = 3 [json_name = "endtime"];
         enum Level {
            Level_EMERGENCIES = 0;
            Level_ALERT = 1;
            Level_CRITICAL = 2;
            Level_ERROR = 3;
            Level_WARNING = 4;
            Level_NOTIFICATION = 5;
            Level_INFORMATIONAL = 6;
            Level_DEBUGGING = 7;
         };
         Level level = 4 [json_name = "level"];
         string log_content = 5 [json_name = "log-content"];
      }
      repeated Securitybuffer securitybuffer = 1 [json_name = "securitybuffer"];
   }
   Securitybuffers securitybuffers = 15 [json_name = "securitybuffers"];
   message LogfilePrefixs {
      message LogfilePrefix {
         enum Type {
            INVALID_ENUM_VALUE_Type = 0;
            Type_DEBUG = 6;
         };
         Type type = 1 [json_name = "type"];
         string name = 2 [json_name = "name"];
      }
      repeated LogfilePrefix logfile_prefix = 1 [json_name = "logfile-prefix"];
   }
   LogfilePrefixs logfile_prefixs = 16 [json_name = "logfile-prefixs"];
   message CollectLogProcess {
      enum State {
         INVALID_ENUM_VALUE_State = 0;
         State_NOTX_STARTED = 1;
         State_COLLECTING = 2;
         State_TRANSFERING = 3;
         State_FINISHED = 4;
         State_DEVICEX_FULL = 5;
         State_COLLECTX_ERROR = 6;
         State_TRANSFERX_ERROR = 7;
      };
      State state = 1 [json_name = "state"];
      uint32 operate_progress = 2 [json_name = "operate-progress"];
   }
   CollectLogProcess collect_log_process = 17 [json_name = "collect-log-process"];
   message LogStorageTime {
      uint32 storage_time = 1 [json_name = "storage-time"];
   }
   LogStorageTime log_storage_time = 18 [json_name = "log-storage-time"];
   message Loginfos {
      message Loginfo {
         string feature_name = 1 [json_name = "feature-name"];
         enum LogType {
            INVALID_ENUM_VALUE_LogType = 0;
            LogType_EVENTLOG = 1;
            LogType_OPERLOG = 2;
            LogType_ALARMLOG = 5;
            LogType_HIGHPRECISIONLOG = 20;
            LogType_SECURITYLOG = 100;
         };
         LogType log_type = 2 [json_name = "log-type"];
         uint32 sequence = 3 [json_name = "sequence"];
         uint32 log_id = 4 [json_name = "log-id"];
         string log_content = 5 [json_name = "log-content"];
      }
      repeated Loginfo loginfo = 1 [json_name = "loginfo"];
   }
   Loginfos loginfos = 19 [json_name = "loginfos"];
   message LogfileServers {
      message LogfileServer {
         string host_address = 1 [json_name = "host-address"];
         enum VpnType {
            VpnType_NONE = 0;
            VpnType_VPNX_INSTANCE = 2;
         };
         VpnType vpn_type = 2 [json_name = "vpn-type"];
         string vpn_name = 3 [json_name = "vpn-name"];
         enum TransferProtocol {
            INVALID_ENUM_VALUE_TransferProtocol = 0;
            TransferProtocol_SFTP = 3;
         };
         TransferProtocol transfer_protocol = 4 [json_name = "transfer-protocol"];
         int32 port = 5 [json_name = "port"];
         string user_name = 6 [json_name = "user-name"];
         string password = 7 [json_name = "password"];
         string dest_path = 8 [json_name = "dest-path"];
         enum FileType {
            FileType_OS = 0;
         };
         FileType file_type = 9 [json_name = "file-type"];
      }
      repeated LogfileServer logfile_server = 1 [json_name = "logfile-server"];
   }
   LogfileServers logfile_servers = 20 [json_name = "logfile-servers"];
}

