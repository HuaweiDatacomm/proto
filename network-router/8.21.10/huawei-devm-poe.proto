syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2022-03-07 14:23:20
// ProtoYang-version 1
// module huawei-devm-poe
// revision 2022-02-25
// revision 2021-01-21
// revision 2019-04-01
// namespace urn:huawei:yang:huawei-devm-poe

package huawei_devm_poe;

message DevmPoe {
   message Poes {
      message Poe {
         string position = 1 [json_name = "position"];
         uint32 reserved_power = 2 [json_name = "reserved-power"];
         uint32 threshold_power = 3 [json_name = "threshold-power"];
         uint32 max_power = 4 [json_name = "max-power"];
         uint32 entity_index = 5 [json_name = "entity-index"];
         uint32 supply_power = 6 [json_name = "supply-power"];
         uint32 available_power = 7 [json_name = "available-power"];
         uint32 consumption_power = 8 [json_name = "consumption-power"];
         uint32 peak_power = 9 [json_name = "peak-power"];
         uint32 reference_power = 10 [json_name = "reference-power"];
         bool support_flag = 11 [json_name = "support-flag"];
         message Ports {
            message Port {
               string interface_name = 1 [json_name = "interface-name"];
               enum PowerMode {
                  PowerMode_AFX_INRUSH = 0;
                  PowerMode_ATX_INRUSH = 1;
                  PowerMode_PREX_BTX_INRUSH = 2;
                  PowerMode_BTX_INRUSH = 3;
               };
               PowerMode power_mode = 2 [json_name = "power-mode"];
               bool fast_on_enable = 3 [json_name = "fast-on-enable"];
               bool legacy_enable = 4 [json_name = "legacy-enable"];
               string power_off_time_range = 5 [json_name = "power-off-time-range"];
               enum ManualPowerSetting {
                  ManualPowerSetting_ON = 0;
                  ManualPowerSetting_OFF = 1;
               };
               ManualPowerSetting manual_power_setting = 6 [json_name = "manual-power-setting"];
               bool power_enable = 7 [json_name = "power-enable"];
               uint32 port_max_power = 8 [json_name = "port-max-power"];
               enum PowerPriority {
                  PowerPriority_LOW = 0;
                  PowerPriority_HIGH = 1;
                  PowerPriority_CRITICAL = 2;
               };
               PowerPriority power_priority = 9 [json_name = "power-priority"];
               uint32 power_on_delay = 10 [json_name = "power-on-delay"];
               bool auto_neg_enable = 11 [json_name = "auto-neg-enable"];
               enum PowerStatus {
                  PowerStatus_DETECTING = 0;
                  PowerStatus_DISABLED = 1;
                  PowerStatus_POWERED = 2;
                  PowerStatus_OVERLOADED = 3;
                  PowerStatus_POWERX_READY = 4;
                  PowerStatus_UNSTABLEX_VOLTAGE = 5;
                  PowerStatus_POWERX_DENY = 6;
                  PowerStatus_CLASSIFICATIONX_OVERCURRENT = 7;
                  PowerStatus_UNKNOWNX_CLASS = 8;
                  PowerStatus_POWERX_OVERCURRENT = 9;
                  PowerStatus_POWERONX_FAIL = 10;
                  PowerStatus_POWERING = 11;
                  PowerStatus_TIMEX_RANGEX_POWEROFF = 12;
                  PowerStatus_TESTX_MODE = 13;
                  PowerStatus_LEGACYX_DISABLE = 14;
                  PowerStatus_CLASSX_MISMATCH = 15;
                  PowerStatus_CHIPX_FAULT = 16;
                  PowerStatus_HIGHX_TEMPERATURE = 17;
                  PowerStatus_MOSX_FAULT = 18;
               };
               PowerStatus power_status = 12 [json_name = "power-status"];
               string interface_description = 13 [json_name = "interface-description"];
               uint32 pd_class = 14 [json_name = "pd-class"];
               uint32 pd_reference_power = 15 [json_name = "pd-reference-power"];
               uint32 port_current = 16 [json_name = "port-current"];
               uint32 port_voltage = 17 [json_name = "port-voltage"];
               uint32 port_power = 18 [json_name = "port-power"];
               uint32 port_peak_power = 19 [json_name = "port-peak-power"];
               uint32 port_average_power = 20 [json_name = "port-average-power"];
               string pd_power_mode = 21 [json_name = "pd-power-mode"];
               string pd_support_mode = 22 [json_name = "pd-support-mode"];
               string power_state = 23 [json_name = "power-state"];
               bool single_class_enable = 24 [json_name = "single-class-enable"];
            }
            repeated Port port = 1 [json_name = "port"];
         }
         Ports ports = 12 [json_name = "ports"];
      }
      repeated Poe poe = 1 [json_name = "poe"];
   }
   Poes poes = 1 [json_name = "poes"];
   message ChassisPoes {
      message ChassisPoe {
         string position = 1 [json_name = "position"];
         uint32 reserved_power = 2 [json_name = "reserved-power"];
         uint32 threshold_power = 3 [json_name = "threshold-power"];
         uint32 entity_index = 4 [json_name = "entity-index"];
         uint32 supply_power = 5 [json_name = "supply-power"];
         uint32 available_power = 6 [json_name = "available-power"];
         uint32 consumption_power = 7 [json_name = "consumption-power"];
         uint32 peak_power = 8 [json_name = "peak-power"];
      }
      repeated ChassisPoe chassis_poe = 1 [json_name = "chassis-poe"];
   }
   ChassisPoes chassis_poes = 2 [json_name = "chassis-poes"];
}

