syntax = "proto3";
// Automatically generated by ProtoYang
// ProtoYang-version 1
// module huawei-snmp
// revision 2020-04-13
// revision 2020-03-27
// revision 2020-03-16
// revision 2020-03-10
// revision 2020-02-07
// revision 2019-12-26
// revision 2019-11-29
// revision 2019-10-26
// revision 2019-04-23
// namespace urn:huawei:yang:huawei-snmp

package huawei_snmp;

message Snmp {
   message AgentCfg {
      bool agentEnable = 1;
   }
   AgentCfg agentCfg = 1;
   message BlackListCfg {
      bool blockIpEnable = 1;
      bool blockUserEnable = 2;
      uint32 blockUserFailureCount = 3;
      uint32 blockUserPeriod = 4;
      uint32 blockUserReactiveTime = 5;
   }
   BlackListCfg blackListCfg = 2;
   message Communitys {
      message Community {
         enum AccessRight {
            AccessRight_READ = 0;
            AccessRight_WRITE = 1;
         };
         AccessRight access_right = 1 [json_name = "access-right"];
         string aclNumber = 2;
         string alias_name = 3 [json_name = "alias-name"];
         string communityName = 4;
         string mibViewName = 5;
         string name = 6 [json_name = "name"];
         string view_name = 7 [json_name = "view-name"];
         string acl = 8 [json_name = "acl"];
      }
      repeated Community community = 1 [json_name = "community"];
   }
   Communitys communitys = 3 [json_name = "communitys"];
   message Engine {
      string engineID = 1;
      int32 engineMaxMessageSize = 2;
      enum Version {
         Version_NONE = 0;
         Version_V1 = 1;
         Version_V2C = 2;
         Version_V1V2C = 3;
         Version_V3 = 4;
         Version_V1V3 = 5;
         Version_V2CV3 = 6;
         Version_ALL = 7;
      };
      Version version = 3 [json_name = "version"];
      string id = 4 [json_name = "id"];
      int32 max_msg_size = 5 [json_name = "max-msg-size"];
   }
   Engine engine = 4 [json_name = "engine"];
   message LocalUsers {
      message LocalUser {
         string active_status = 1 [json_name = "active-status"];
         string auth_key = 2 [json_name = "auth-key"];
         enum AuthProtocol {
            INVALID_ENUM_VALUE_AuthProtocol = 0;
            AuthProtocol_MD5 = 1;
            AuthProtocol_SHA = 2;
            AuthProtocol_SHA2X_224 = 5;
            AuthProtocol_SHA2X_256 = 6;
            AuthProtocol_SHA2X_384 = 7;
            AuthProtocol_SHA2X_512 = 8;
         };
         AuthProtocol auth_protocol = 3 [json_name = "auth-protocol"];
         uint32 left_lock_time = 4 [json_name = "left-lock-time"];
         string priv_key = 5 [json_name = "priv-key"];
         enum PrivProtocol {
            INVALID_ENUM_VALUE_PrivProtocol = 0;
            PrivProtocol_DES56 = 1;
            PrivProtocol_AES128 = 2;
            PrivProtocol_AES192 = 3;
            PrivProtocol_AES256 = 4;
            PrivProtocol_X_3DES168 = 5;
         };
         PrivProtocol priv_protocol = 6 [json_name = "priv-protocol"];
         string userName = 7;
         string name = 8 [json_name = "name"];
      }
      repeated LocalUser local_user = 1 [json_name = "local-user"];
   }
   LocalUsers local_users = 5 [json_name = "local-users"];
   message MibViews {
      message MibView {
         string sub_tree = 1 [json_name = "sub-tree"];
         enum Type {
            INVALID_ENUM_VALUE_Type = 0;
            Type_INCLUDED = 1;
            Type_EXCLUDED = 2;
         };
         Type type = 2 [json_name = "type"];
         string view_name = 3 [json_name = "view-name"];
      }
      repeated MibView mib_view = 1 [json_name = "mib-view"];
   }
   MibViews mib_views = 6 [json_name = "mib-views"];
   message MpdStats {
      uint32 invalidMsgs = 1;
      uint32 unknownPDUHandl = 2;
      uint32 unknown_sec_model = 3 [json_name = "unknown-sec-model"];
      uint32 inval_msgs = 4 [json_name = "inval-msgs"];
      uint32 unknown_pduhandle = 5 [json_name = "unknown-pduhandle"];
   }
   MpdStats mpd_stats = 7 [json_name = "mpd-stats"];
   message NotificationCfg {
      uint32 notificationGlobalAgeOut = 1;
      uint32 notificationGlobalLimit = 2;
      bool notificationLogEnable = 3;
   }
   NotificationCfg notificationCfg = 8;
   message NotificationStats {
      uint32 totalLogEntries = 1;
      uint32 totalNotificationsBumped = 2;
      uint32 totalNotificationsLogged = 3;
   }
   NotificationStats notificationStats = 9;
   message NotifyFltrPrs {
      message NotifyFltrPr {
         string profileName = 1;
         string subtree = 2;
         enum Type {
            Type_EXCLUDED = 0;
            Type_INCLUDED = 1;
         };
         Type type = 3;
      }
      repeated NotifyFltrPr notifyFltrPr = 1;
   }
   NotifyFltrPrs notifyFltrPrs = 10;
   message Proxy {
      message Communitys {
         message Community {
            string acl = 1 [json_name = "acl"];
            string alias_name = 2 [json_name = "alias-name"];
            string communityName = 3;
            string remoteEngineID = 4;
            string name = 5 [json_name = "name"];
            string engine_id = 6 [json_name = "engine-id"];
         }
         repeated Community community = 1 [json_name = "community"];
      }
      Communitys communitys = 1 [json_name = "communitys"];
      message Rules {
         message Rule {
            string proxyName = 1;
            string remoteEngineID = 2;
            enum SecurityLevel {
               INVALID_ENUM_VALUE_SecurityLevel = 0;
               SecurityLevel_NOAUTHNOPRIV = 1;
               SecurityLevel_AUTHENTICATION = 2;
               SecurityLevel_PRIVACY = 3;
            };
            SecurityLevel security_level = 3 [json_name = "security-level"];
            enum SecurityModel {
               SecurityModel_V1 = 0;
               SecurityModel_V2C = 1;
               SecurityModel_V3 = 2;
            };
            SecurityModel security_model = 4 [json_name = "security-model"];
            string security_name = 5 [json_name = "security-name"];
            string securityNameV3 = 6;
            string targetHostName = 7;
            enum Type {
               INVALID_ENUM_VALUE_Type = 0;
               Type_READ = 1;
               Type_WRITE = 2;
               Type_TRAP = 3;
               Type_INFORM = 4;
            };
            Type type = 8 [json_name = "type"];
            string name = 9 [json_name = "name"];
            string engine_id = 10 [json_name = "engine-id"];
            string host_name = 11 [json_name = "host-name"];
            string security_v3_name = 12 [json_name = "security-v3-name"];
         }
         repeated Rule rule = 1 [json_name = "rule"];
      }
      Rules rules = 2 [json_name = "rules"];
      message TargetHosts {
         message TargetHost {
            string address = 1 [json_name = "address"];
            enum Domain {
               INVALID_ENUM_VALUE_Domain = 0;
               Domain_SNMPUDPDOMAIN = 1;
            };
            Domain domain = 2 [json_name = "domain"];
            string interface_name = 3 [json_name = "interface-name"];
            bool isPublicNet = 4;
            uint32 portNumber = 5;
            enum SecurityLevel {
               SecurityLevel_AUTHENTICATION = 0;
               SecurityLevel_NOAUTHNOPRIV = 1;
               SecurityLevel_PRIVACY = 2;
            };
            SecurityLevel securityLevel = 6;
            enum SecurityModel {
               SecurityModel_V1 = 0;
               SecurityModel_V2C = 1;
               SecurityModel_V3 = 2;
            };
            SecurityModel securityModel = 7;
            string securityName = 8;
            string securityNameV3 = 9;
            string targetName = 10;
            int32 timeout = 11 [json_name = "timeout"];
            string vpnInstanceName = 12;
            string name = 13 [json_name = "name"];
            string vpn = 14 [json_name = "vpn"];
            uint32 port_num = 15 [json_name = "port-num"];
            bool public_net = 16 [json_name = "public-net"];
            message Params_V1 {
               string security_name_v1 = 1 [json_name = "security-name-v1"];
            }
            message Params_V2C {
               string security_name_v2c = 1 [json_name = "security-name-v2c"];
            }
            message Params_Usm {
               string usm_name = 1 [json_name = "usm-name"];
               enum SecurityLevel {
                  INVALID_ENUM_VALUE_SecurityLevel = 0;
                  SecurityLevel_NOAUTHNOPRIV = 1;
                  SecurityLevel_AUTHENTICATION = 2;
                  SecurityLevel_PRIVACY = 3;
               };
               SecurityLevel security_level = 2 [json_name = "security-level"];
            }
            oneof Params {
               Params_V1 params_v1 = 17 [json_name = "v1"];
               Params_V2C params_v2c = 18 [json_name = "v2c"];
               Params_Usm params_usm = 19 [json_name = "usm"];
            }
         }
         repeated TargetHost target_host = 1 [json_name = "target-host"];
      }
      TargetHosts target_hosts = 3 [json_name = "target-hosts"];
      message StandardCommunitys {
         message StandardCommunity {
            string alias_name = 1 [json_name = "alias-name"];
            string name = 2 [json_name = "name"];
            string engine_id = 3 [json_name = "engine-id"];
            string acl = 4 [json_name = "acl"];
         }
         repeated StandardCommunity standard_community = 1 [json_name = "standard-community"];
      }
      StandardCommunitys standard_communitys = 4 [json_name = "standard-communitys"];
      message UsmUsers {
         string engine_id = 1 [json_name = "engine-id"];
         message UsmUser {
            string user_name = 1 [json_name = "user-name"];
            string group_name = 2 [json_name = "group-name"];
            bool is_auth_localized = 3 [json_name = "is-auth-localized"];
            enum AuthProtocol {
               AuthProtocol_NOAUTH = 0;
               AuthProtocol_MD5 = 1;
               AuthProtocol_SHA = 2;
               AuthProtocol_SHA2X_224 = 5;
               AuthProtocol_SHA2X_256 = 6;
               AuthProtocol_SHA2X_384 = 7;
               AuthProtocol_SHA2X_512 = 8;
            };
            AuthProtocol auth_protocol = 4 [json_name = "auth-protocol"];
            string auth_key = 5 [json_name = "auth-key"];
            bool is_priv_localized = 6 [json_name = "is-priv-localized"];
            enum PrivProtocol {
               PrivProtocol_NOPRIV = 0;
               PrivProtocol_DES56 = 1;
               PrivProtocol_AES128 = 2;
               PrivProtocol_AES192 = 3;
               PrivProtocol_AES256 = 4;
               PrivProtocol_X_3DES168 = 5;
            };
            PrivProtocol priv_protocol = 7 [json_name = "priv-protocol"];
            string priv_key = 8 [json_name = "priv-key"];
            string acl_number = 9 [json_name = "acl-number"];
            string active_status = 10 [json_name = "active-status"];
            uint32 left_lock_time = 11 [json_name = "left-lock-time"];
         }
         repeated UsmUser usm_user = 2 [json_name = "usm-user"];
      }
      repeated UsmUsers usm_users = 5 [json_name = "usm-users"];
      message SourceInterfaces {
         message SourceInterface {
            string interface_name = 1 [json_name = "interface-name"];
         }
         repeated SourceInterface source_interface = 1 [json_name = "source-interface"];
      }
      SourceInterfaces source_interfaces = 6 [json_name = "source-interfaces"];
      message IsolateSourceInterfaces {
         message IsolateSourceInterface {
            string interface_name = 1 [json_name = "interface-name"];
            string src_ipv4_address = 2 [json_name = "src-ipv4-address"];
         }
         repeated IsolateSourceInterface isolate_source_interface = 1 [json_name = "isolate-source-interface"];
      }
      IsolateSourceInterfaces isolate_source_interfaces = 7 [json_name = "isolate-source-interfaces"];
      message Ipv6Sources {
         message Ipv6Source {
            string src_ipv6_address = 1 [json_name = "src-ipv6-address"];
            string vpn_name = 2 [json_name = "vpn-name"];
         }
         repeated Ipv6Source ipv6_source = 1 [json_name = "ipv6-source"];
      }
      Ipv6Sources ipv6_sources = 8 [json_name = "ipv6-sources"];
      message IsolateIpv6Sources {
         message IsolateIpv6Source {
            string interface_name = 1 [json_name = "interface-name"];
            string src_ipv6_address = 2 [json_name = "src-ipv6-address"];
         }
         repeated IsolateIpv6Source isolate_ipv6_source = 1 [json_name = "isolate-ipv6-source"];
      }
      IsolateIpv6Sources isolate_ipv6_sources = 9 [json_name = "isolate-ipv6-sources"];
      message AllInterface {
         bool all_ipv4_interface = 1 [json_name = "all-ipv4-interface"];
         bool all_ipv6_interface = 2 [json_name = "all-ipv6-interface"];
      }
      AllInterface all_interface = 10 [json_name = "all-interface"];
   }
   Proxy proxy = 11 [json_name = "proxy"];
   message SnmpStats {
      uint32 inASNParseErrs = 1;
      uint32 inBadCommuintyNames = 2;
      uint32 inBadCommunityUsesr = 3;
      uint32 inBadValues = 4;
      uint32 inBadVersions = 5;
      uint32 inGenErrs = 6;
      uint32 inGetBulks = 7;
      uint32 inGetNexts = 8;
      uint32 inGetRequests = 9;
      uint32 inGetResponses = 10;
      uint32 inInforms = 11;
      uint32 inNoSuchNames = 12;
      uint32 inPkts = 13;
      uint32 inProxyPkts = 14;
      uint32 inReadOnlys = 15;
      uint32 inSetRequests = 16;
      uint32 inTooBigs = 17;
      uint32 inTotalReqVars = 18;
      uint32 inTotalSetVars = 19;
      uint32 inTraps = 20;
      uint32 outBadValues = 21;
      uint32 outGenErrs = 22;
      uint32 outGetBulks = 23;
      uint32 outGetNexts = 24;
      uint32 outGetRequests = 25;
      uint32 outGetResponses = 26;
      uint32 outNoSuchNames = 27;
      uint32 outPkts = 28;
      uint32 outSetRequests = 29;
      uint32 outTooBigs = 30;
      uint32 outTraps = 31;
      uint32 proxyDrops = 32;
      uint32 silentDrops = 33;
   }
   SnmpStats snmpStats = 12;
   message Snmpv3Groups {
      message Snmpv3Group {
         string aclNumber = 1;
         string groupName = 2;
         string notifyViewName = 3;
         string readViewName = 4;
         enum SecurityLevel {
            SecurityLevel_AUTHENTICATION = 0;
            SecurityLevel_NOAUTHNOPRIV = 1;
            SecurityLevel_PRIVACY = 2;
         };
         SecurityLevel securityLevel = 5;
         string writeViewName = 6;
      }
      repeated Snmpv3Group snmpv3Group = 1;
   }
   Snmpv3Groups snmpv3Groups = 13;
   message SystemCfg {
      string acl = 1;
      bool communityComplexityCheck = 2;
      bool ctxEngineIdCheckEnable = 3;
      bool extErrCodeEnable = 4;
      uint32 getbulkTimeout = 5;
      uint32 informPendNumber = 6;
      uint32 informResendTimes = 7;
      uint32 informTimeout = 8;
      bool ipv4ListenDisable = 9;
      bool ipv6ListenDisable = 10;
      string ipv6VpnInstanceName = 11;
      bool isIPv6PublicNet = 12;
      bool isPublicNet = 13;
      bool localUserComplexityCheck = 14;
      uint32 passwordMinLength = 15;
      string protocolSourceIPv6Address = 16;
      string protocolSourceInterfaceName = 17;
      bool setCacheEnable = 18;
      uint32 snmpListenPort = 19;
      uint32 snmpPacketPriority = 20;
      string sourceIpv4Address = 21;
      uint32 trapListenPort = 22;
      uint32 trapPacketPriority = 23;
      string trapSourceInterfaceName = 24;
      bool usmUserComplexityCheck = 25;
      string vpnInstanceName = 26;
   }
   SystemCfg systemCfg = 14;
   message TargetHosts {
      message TargetHost {
         string address = 1 [json_name = "address"];
         uint32 confirmed_num = 2 [json_name = "confirmed-num"];
         enum Domain {
            INVALID_ENUM_VALUE_Domain = 0;
            Domain_SNMPUDPDOMAIN = 1;
         };
         Domain domain = 3 [json_name = "domain"];
         uint32 dropped_num = 4 [json_name = "dropped-num"];
         bool ext_vb = 5 [json_name = "ext-vb"];
         uint32 failed_num = 6 [json_name = "failed-num"];
         uint32 heart_beat_time = 7 [json_name = "heart-beat-time"];
         string interface_name = 8 [json_name = "interface-name"];
         bool is_need_heart_beat = 9 [json_name = "is-need-heart-beat"];
         bool is_public_net = 10 [json_name = "is-public-net"];
         string nms_name = 11 [json_name = "nms-name"];
         string notifyFltrPrName = 12;
         enum NotifyType {
            INVALID_ENUM_VALUE_NotifyType = 0;
            NotifyType_TRAP = 1;
            NotifyType_INFORM = 2;
         };
         NotifyType notify_type = 13 [json_name = "notify-type"];
         uint32 pending_num = 14 [json_name = "pending-num"];
         uint32 port_number = 15 [json_name = "port-number"];
         bool private_netmanager = 16 [json_name = "private-netmanager"];
         uint32 retries_num = 17 [json_name = "retries-num"];
         enum SecurityLevel {
            SecurityLevel_AUTHENTICATION = 0;
            SecurityLevel_NOAUTHNOPRIV = 1;
            SecurityLevel_PRIVACY = 2;
         };
         SecurityLevel securityLevel = 18;
         enum SecurityModel {
            SecurityModel_V1 = 0;
            SecurityModel_V2C = 1;
            SecurityModel_V3 = 2;
         };
         SecurityModel securityModel = 19;
         string securityName = 20;
         string securityNameV3 = 21;
         uint32 sent_num = 22 [json_name = "sent-num"];
         bool status = 23 [json_name = "status"];
         int32 target_inform_resend_times = 24 [json_name = "target-inform-resend-times"];
         int32 target_inform_timeout = 25 [json_name = "target-inform-timeout"];
         string vpn_instance_name = 26 [json_name = "vpn-instance-name"];
         string notify_fltr_profile_name = 27 [json_name = "notify-fltr-profile-name"];
         message HostAlarm {
            enum EnableAlarm {
               INVALID_ENUM_VALUE_EnableAlarm = 0;
               EnableAlarm_TRUE = 1;
               EnableAlarm_FALSE = 2;
            };
            EnableAlarm enable_alarm = 1 [json_name = "enable-alarm"];
         }
         HostAlarm host_alarm = 28 [json_name = "host-alarm"];
         message Params_V1 {
            string security_name_v1 = 1 [json_name = "security-name-v1"];
         }
         message Params_V2C {
            string security_name_v2c = 1 [json_name = "security-name-v2c"];
         }
         message Params_Usm {
            string usm_name = 1 [json_name = "usm-name"];
            enum SecurityLevel {
               INVALID_ENUM_VALUE_SecurityLevel = 0;
               SecurityLevel_NOAUTHNOPRIV = 1;
               SecurityLevel_AUTHENTICATION = 2;
               SecurityLevel_PRIVACY = 3;
            };
            SecurityLevel security_level = 2 [json_name = "security-level"];
         }
         oneof Params {
            Params_V1 params_v1 = 29 [json_name = "v1"];
            Params_V2C params_v2c = 30 [json_name = "v2c"];
            Params_Usm params_usm = 31 [json_name = "usm"];
         }
      }
      repeated TargetHost target_host = 1 [json_name = "target-host"];
   }
   TargetHosts target_hosts = 15 [json_name = "target-hosts"];
   message TargetStats {
      uint32 unAvailContexts = 1;
      uint32 unknownContexts = 2;
   }
   TargetStats targetStats = 16;
   message UsmStats {
      uint32 decryptionErrorss = 1;
      uint32 notInTmWindows = 2;
      uint32 unknown_engine_ids = 3 [json_name = "unknown-engine-ids"];
      uint32 unknownUserName = 4;
      uint32 unsupportSecLevels = 5;
      uint32 wrong_digests = 6 [json_name = "wrong-digests"];
      uint32 unknown_user_mame = 7 [json_name = "unknown-user-mame"];
      uint32 unsuppt_sec_levs = 8 [json_name = "unsuppt-sec-levs"];
      uint32 out_tm_windows = 9 [json_name = "out-tm-windows"];
      uint32 decryption_errs = 10 [json_name = "decryption-errs"];
   }
   UsmStats usm_stats = 17 [json_name = "usm-stats"];
   message UsmUsers {
      message UsmUser {
         string acl_number = 1 [json_name = "acl-number"];
         string active_status = 2 [json_name = "active-status"];
         string auth_key = 3 [json_name = "auth-key"];
         enum AuthProtocol {
            AuthProtocol_NOAUTH = 0;
            AuthProtocol_MD5 = 1;
            AuthProtocol_SHA = 2;
            AuthProtocol_SHA2X_224 = 5;
            AuthProtocol_SHA2X_256 = 6;
            AuthProtocol_SHA2X_384 = 7;
            AuthProtocol_SHA2X_512 = 8;
         };
         AuthProtocol auth_protocol = 4 [json_name = "auth-protocol"];
         string engineID = 5;
         string group_name = 6 [json_name = "group-name"];
         bool is_auth_localized = 7 [json_name = "is-auth-localized"];
         bool is_priv_localized = 8 [json_name = "is-priv-localized"];
         uint32 left_lock_time = 9 [json_name = "left-lock-time"];
         string priv_key = 10 [json_name = "priv-key"];
         enum PrivProtocol {
            PrivProtocol_NOPRIV = 0;
            PrivProtocol_DES56 = 1;
            PrivProtocol_AES128 = 2;
            PrivProtocol_AES192 = 3;
            PrivProtocol_AES256 = 4;
            PrivProtocol_X_3DES168 = 5;
         };
         PrivProtocol priv_protocol = 11 [json_name = "priv-protocol"];
         bool remoteEngineID = 12;
         string user_name = 13 [json_name = "user-name"];
      }
      repeated UsmUser usm_user = 1 [json_name = "usm-user"];
   }
   UsmUsers usm_users = 18 [json_name = "usm-users"];
   message CcuInit {
      string ccuEngineId = 1;
      string ccuIPAddress = 2;
      string ccuTargetHost = 3;
      string emsTargetHost = 4;
      string localIPAddress = 5;
      string proxyReadRule = 6;
      string proxySecurityName = 7;
      string proxyTrapRule = 8;
      string proxyWriteRule = 9;
      string version = 10;
      string vpnInstance = 11;
   }
   CcuInit ccuInit = 19;
   message AgentFlag {
      bool agent_enable = 1 [json_name = "agent-enable"];
   }
   AgentFlag agent_flag = 20 [json_name = "agent-flag"];
   message System {
      string trap_source_interface_name = 1 [json_name = "trap-source-interface-name"];
      string trap_source_ipv4_address = 2 [json_name = "trap-source-ipv4-address"];
      uint32 inform_timeout = 3 [json_name = "inform-timeout"];
      uint32 inform_resend_times = 4 [json_name = "inform-resend-times"];
      uint32 inform_pend_number = 5 [json_name = "inform-pend-number"];
      uint32 packet_priority = 6 [json_name = "packet-priority"];
      uint32 trap_packet_priority = 7 [json_name = "trap-packet-priority"];
      uint32 listen_port = 8 [json_name = "listen-port"];
      uint32 trap_listen_port = 9 [json_name = "trap-listen-port"];
      string acl = 10 [json_name = "acl"];
      bool community_cmplx_check = 11 [json_name = "community-cmplx-check"];
      bool usm_user_cmplx_check = 12 [json_name = "usm-user-cmplx-check"];
      bool ext_err_code_enable = 13 [json_name = "ext-err-code-enable"];
      bool set_cache_enable = 14 [json_name = "set-cache-enable"];
      bool local_user_cmplx_check = 15 [json_name = "local-user-cmplx-check"];
      string protocol_source_interface_name = 16 [json_name = "protocol-source-interface-name"];
      uint32 password_min_length = 17 [json_name = "password-min-length"];
      uint32 getbulk_timeout = 18 [json_name = "getbulk-timeout"];
      string protocol_source_ipv6_address = 19 [json_name = "protocol-source-ipv6-address"];
      string vpn_instance_name = 20 [json_name = "vpn-instance-name"];
      string ipv6_vpn_instance_name = 21 [json_name = "ipv6-vpn-instance-name"];
      bool is_public_net = 22 [json_name = "is-public-net"];
      bool is_ipv6_public_net = 23 [json_name = "is-ipv6-public-net"];
      bool ctx_engineid_check_enable = 24 [json_name = "ctx-engineid-check-enable"];
      bool ipv4_listen_disable = 25 [json_name = "ipv4-listen-disable"];
      bool ipv6_listen_disable = 26 [json_name = "ipv6-listen-disable"];
      string ipv6_trap_source_ip = 27 [json_name = "ipv6-trap-source-ip"];
      string ipv6_trap_source_vpn = 28 [json_name = "ipv6-trap-source-vpn"];
   }
   System system = 21 [json_name = "system"];
   message SourceInterfaces {
      message SourceInterface {
         string interface_name = 1 [json_name = "interface-name"];
      }
      repeated SourceInterface source_interface = 1 [json_name = "source-interface"];
   }
   SourceInterfaces source_interfaces = 22 [json_name = "source-interfaces"];
   message IsolateSourceInterfaces {
      message IsolateSourceInterface {
         string interface_name = 1 [json_name = "interface-name"];
         string src_ipv4_address = 2 [json_name = "src-ipv4-address"];
      }
      repeated IsolateSourceInterface isolate_source_interface = 1 [json_name = "isolate-source-interface"];
   }
   IsolateSourceInterfaces isolate_source_interfaces = 23 [json_name = "isolate-source-interfaces"];
   message Ipv6Sources {
      message Ipv6Source {
         string src_ipv6_address = 1 [json_name = "src-ipv6-address"];
         string vpn_name = 2 [json_name = "vpn-name"];
      }
      repeated Ipv6Source ipv6_source = 1 [json_name = "ipv6-source"];
   }
   Ipv6Sources ipv6_sources = 24 [json_name = "ipv6-sources"];
   message IsolateIpv6Sources {
      message IsolateIpv6Source {
         string interface_name = 1 [json_name = "interface-name"];
         string src_ipv6_address = 2 [json_name = "src-ipv6-address"];
      }
      repeated IsolateIpv6Source isolate_ipv6_source = 1 [json_name = "isolate-ipv6-source"];
   }
   IsolateIpv6Sources isolate_ipv6_sources = 25 [json_name = "isolate-ipv6-sources"];
   message AllInterface {
      bool all_ipv4_interface = 1 [json_name = "all-ipv4-interface"];
      bool all_ipv6_interface = 2 [json_name = "all-ipv6-interface"];
   }
   AllInterface all_interface = 26 [json_name = "all-interface"];
   message V3Groups {
      message V3Group {
         string group_name = 1 [json_name = "group-name"];
         enum SecurityLevel {
            INVALID_ENUM_VALUE_SecurityLevel = 0;
            SecurityLevel_NOAUTHNOPRIV = 1;
            SecurityLevel_AUTHENTICATION = 2;
            SecurityLevel_PRIVACY = 3;
         };
         SecurityLevel security_level = 2 [json_name = "security-level"];
         string read_view_name = 3 [json_name = "read-view-name"];
         string write_view_name = 4 [json_name = "write-view-name"];
         string notify_view_name = 5 [json_name = "notify-view-name"];
         string acl_number = 6 [json_name = "acl-number"];
      }
      repeated V3Group v3_group = 1 [json_name = "v3-group"];
   }
   V3Groups v3_groups = 27 [json_name = "v3-groups"];
   message StandardCommunitys {
      message StandardCommunity {
         string alias_name = 1 [json_name = "alias-name"];
         string name = 2 [json_name = "name"];
         enum AccessRight {
            AccessRight_READ = 0;
            AccessRight_WRITE = 1;
         };
         AccessRight access_right = 3 [json_name = "access-right"];
         string view_name = 4 [json_name = "view-name"];
         string acl = 5 [json_name = "acl"];
      }
      repeated StandardCommunity standard_community = 1 [json_name = "standard-community"];
   }
   StandardCommunitys standard_communitys = 28 [json_name = "standard-communitys"];
   message BlackList {
      bool ip_disable = 1 [json_name = "ip-disable"];
      bool user_disable = 2 [json_name = "user-disable"];
      uint32 user_fail_count = 3 [json_name = "user-fail-count"];
      uint32 user_period = 4 [json_name = "user-period"];
      uint32 user_reactive_time = 5 [json_name = "user-reactive-time"];
   }
   BlackList black_list = 29 [json_name = "black-list"];
   message Notification {
      bool notif_log_enable = 1 [json_name = "notif-log-enable"];
      uint32 notif_global_ageout = 2 [json_name = "notif-global-ageout"];
      uint32 notif_global_limit = 3 [json_name = "notif-global-limit"];
   }
   Notification notification = 30 [json_name = "notification"];
   message NtfyFltrPrfs {
      message NtfyFltrPrf {
         string name = 1 [json_name = "name"];
         string subtree = 2 [json_name = "subtree"];
         enum Type {
            INVALID_ENUM_VALUE_Type = 0;
            Type_INCLUDED = 1;
            Type_EXCLUDED = 2;
         };
         Type type = 3 [json_name = "type"];
      }
      repeated NtfyFltrPrf ntfy_fltr_prf = 1 [json_name = "ntfy-fltr-prf"];
   }
   NtfyFltrPrfs ntfy_fltr_prfs = 31 [json_name = "ntfy-fltr-prfs"];
   message GlbalStats {
      uint32 in_pkts = 1 [json_name = "in-pkts"];
      uint32 out_pkts = 2 [json_name = "out-pkts"];
      uint32 in_bad_versions = 3 [json_name = "in-bad-versions"];
      uint32 in_bad_cmmty_names = 4 [json_name = "in-bad-cmmty-names"];
      uint32 in_bad_cmmty_users = 5 [json_name = "in-bad-cmmty-users"];
      uint32 in_asn_parse_errs = 6 [json_name = "in-asn-parse-errs"];
      uint32 in_too_bigs = 7 [json_name = "in-too-bigs"];
      uint32 in_nosuch_names = 8 [json_name = "in-nosuch-names"];
      uint32 in_bad_values = 9 [json_name = "in-bad-values"];
      uint32 in_read_onlys = 10 [json_name = "in-read-onlys"];
      uint32 in_gen_errs = 11 [json_name = "in-gen-errs"];
      uint32 in_total_req_vars = 12 [json_name = "in-total-req-vars"];
      uint32 in_total_set_vars = 13 [json_name = "in-total-set-vars"];
      uint32 in_get_reqs = 14 [json_name = "in-get-reqs"];
      uint32 in_get_nexts = 15 [json_name = "in-get-nexts"];
      uint32 in_set_reqs = 16 [json_name = "in-set-reqs"];
      uint32 in_get_resps = 17 [json_name = "in-get-resps"];
      uint32 in_traps = 18 [json_name = "in-traps"];
      uint32 out_too_bigs = 19 [json_name = "out-too-bigs"];
      uint32 out_nosuch_names = 20 [json_name = "out-nosuch-names"];
      uint32 out_bad_values = 21 [json_name = "out-bad-values"];
      uint32 out_gen_errs = 22 [json_name = "out-gen-errs"];
      uint32 out_get_reqs = 23 [json_name = "out-get-reqs"];
      uint32 out_get_nexts = 24 [json_name = "out-get-nexts"];
      uint32 out_set_reqs = 25 [json_name = "out-set-reqs"];
      uint32 out_get_resps = 26 [json_name = "out-get-resps"];
      uint32 out_traps = 27 [json_name = "out-traps"];
      uint32 silent_drops = 28 [json_name = "silent-drops"];
      uint32 in_get_bulks = 29 [json_name = "in-get-bulks"];
      uint32 out_get_bulks = 30 [json_name = "out-get-bulks"];
      uint32 in_informs = 31 [json_name = "in-informs"];
      uint32 in_proxy_pkts = 32 [json_name = "in-proxy-pkts"];
      uint32 proxy_drops = 33 [json_name = "proxy-drops"];
   }
   GlbalStats glbal_stats = 32 [json_name = "glbal-stats"];
   message NtfcationStats {
      uint32 total_ntfs_logged = 1 [json_name = "total-ntfs-logged"];
      uint32 total_ntfs_bumped = 2 [json_name = "total-ntfs-bumped"];
      uint32 total_log_entrs = 3 [json_name = "total-log-entrs"];
   }
   NtfcationStats ntfcation_stats = 33 [json_name = "ntfcation-stats"];
}
message AUTHENTICATIONFAILURE {
   string IPAddress = 1;
   string ReasonInfo = 2;
}
message COLDSTART {
   string oid = 1;
}
message NMSHEARTBEAT {
}
message NMSPingTrap {
}
message SNMPRESET {
}
message WARMSTART {
   string oid = 1;
}

