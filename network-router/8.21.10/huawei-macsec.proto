syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-08-03 16:01:26
// ProtoYang-version 1
// module huawei-macsec
// revision 2020-06-01
// revision 2020-04-01
// revision 2020-02-27
// revision 2019-11-06
// namespace urn:huawei:yang:huawei-macsec

package huawei_macsec;

message Macsec {
   message IfCipherSuiteCfgs {
      message IfCipherSuiteCfg {
         enum CipherSuite {
            CipherSuite_GCMX_AESX_128 = 0;
            CipherSuite_GCMX_AESX_XPNX_128 = 1;
         };
         CipherSuite cipher_suite = 1;
         string ifname = 2;
      }
      repeated IfCipherSuiteCfg if_cipher_suite_cfg = 1;
   }
   IfCipherSuiteCfgs if_cipher_suite_cfgs = 1;
   message IfCknCakCfgs {
      message IfCknCakCfg {
         string cak = 1;
         enum CakType {
            CakType_CIPHER = 0;
            CakType_SIMPLE = 1;
         };
         CakType cak_type = 2;
         string ckn = 3;
         enum CknType {
            CknType_STATIC = 0;
         };
         CknType ckn_type = 4;
         string ifname = 5;
      }
      repeated IfCknCakCfg if_ckn_cak_cfg = 1;
   }
   IfCknCakCfgs if_ckn_cak_cfgs = 2;
   message IfConfidentialityOffsetCfgs {
      message IfConfidentialityOffsetCfg {
         string ifname = 1;
         uint32 offset_value = 2;
      }
      repeated IfConfidentialityOffsetCfg if_confidentiality_offset_cfg = 1;
   }
   IfConfidentialityOffsetCfgs if_confidentiality_offset_cfgs = 3;
   message IfKeyserverPriorityCfgs {
      message IfKeyserverPriorityCfg {
         string ifname = 1;
         uint32 priority = 2;
      }
      repeated IfKeyserverPriorityCfg if_keyserver_priority_cfg = 1;
   }
   IfKeyserverPriorityCfgs if_keyserver_priority_cfgs = 4;
   message IfMacsecStatsOpers {
      message IfMacsecStatsOper {
         uint64 badtag_packets = 1;
         uint64 decrypted_bytes = 2;
         uint64 encrypted_bytes = 3;
         uint64 encrypted_packets = 4;
         string ifname = 5;
         uint64 late_packets = 6;
         uint64 notvalid_packets = 7;
         uint64 nousingsa_packets = 8;
         uint64 protected_bytes = 9;
         uint64 protected_bytes_in = 10;
         uint64 protected_packets = 11;
         uint64 valid_packets = 12;
      }
      repeated IfMacsecStatsOper if_macsec_stats_oper = 1;
   }
   IfMacsecStatsOpers if_macsec_stats_opers = 5;
   message IfMkaStatsOpers {
      message IfMkaStatsOper {
         string ckn = 1;
         string cknb = 2;
         uint32 drop_mka_packets = 3;
         string ifname = 4;
         string keyserver = 5;
         uint32 keyserver_priority = 6;
         string keyserverb = 7;
         string latest_sak_an = 8;
         string latest_sak_anb = 9;
         string latest_sak_ki = 10;
         string latest_sak_kib = 11;
         string latest_sak_kn = 12;
         string latest_sak_knb = 13;
         string latest_sak_reason = 14;
         string latest_sak_status = 15;
         string latest_sak_statusb = 16;
         uint32 live_peers = 17;
         uint32 live_peersb = 18;
         string lpl_capability = 19;
         string lpl_capabilityb = 20;
         string lpl_mi = 21;
         string lpl_mib = 22;
         string lpl_mn = 23;
         string lpl_mnb = 24;
         string lpl_priority = 25;
         string lpl_priorityb = 26;
         string lpl_rx_sci = 27;
         string lpl_rx_scib = 28;
         string lpl_ssci = 29;
         string lpl_sscib = 30;
         uint32 macsec_capability = 31;
         string macsec_cipher_suite = 32;
         uint32 macsec_confidentiality_offset = 33;
         string macsec_frame_validation = 34;
         string macsec_include_sci = 35;
         string macsec_mode = 36;
         string macsec_replay_protection = 37;
         uint32 macsec_replay_window = 38;
         string mi = 39;
         string mib = 40;
         string mka_cipher_suite = 41;
         uint32 mka_lifetime = 42;
         string mka_status = 43;
         string mka_statusb = 44;
         uint32 mka_trans_intvl = 45;
         uint32 mn = 46;
         uint32 mnb = 47;
         string old_sak_an = 48;
         string old_sak_anb = 49;
         string old_sak_ki = 50;
         string old_sak_kib = 51;
         string old_sak_kn = 52;
         string old_sak_knb = 53;
         string old_sak_status = 54;
         string old_sak_statusb = 55;
         uint32 potential_peers = 56;
         uint32 potential_peersb = 57;
         string ppl_capability = 58;
         string ppl_capabilityb = 59;
         string ppl_mi = 60;
         string ppl_mib = 61;
         string ppl_mn = 62;
         string ppl_mnb = 63;
         string ppl_priority = 64;
         string ppl_priorityb = 65;
         string ppl_rx_sci = 66;
         string ppl_rx_scib = 67;
         string ppl_ssci = 68;
         string ppl_sscib = 69;
         string principal_actor = 70;
         string principal_actorb = 71;
         uint32 rx_mka_packets = 72;
         uint32 sak_delete_times = 73;
         uint32 sak_install_times = 74;
         string sak_lifetime = 75;
         uint32 sak_swap_times = 76;
         string transmit_sci = 77;
         string transmit_ssci = 78;
         string transmit_sscib = 79;
         uint32 tx_mka_packets = 80;
         uint32 wrong_ckn_num = 81;
         uint32 wrong_icv_num = 82;
      }
      repeated IfMkaStatsOper if_mka_stats_oper = 1;
   }
   IfMkaStatsOpers if_mka_stats_opers = 6;
   message IfSakLifetimeCfgs {
      message IfSakLifetimeCfg {
         string ifname = 1;
         uint32 lifetime = 2;
      }
      repeated IfSakLifetimeCfg if_sak_lifetime_cfg = 1;
   }
   IfSakLifetimeCfgs if_sak_lifetime_cfgs = 7;
   message IfSecModeCfgs {
      message IfSecModeCfg {
         string ifname = 1;
         enum SecurityMode {
            SecurityMode_INTEGRITYX_ONLY = 0;
            SecurityMode_NORMAL = 1;
         };
         SecurityMode security_mode = 2;
      }
      repeated IfSecModeCfg if_sec_mode_cfg = 1;
   }
   IfSecModeCfgs if_sec_mode_cfgs = 8;
   message IfWindowSizeCfgs {
      message IfWindowSizeCfg {
         string ifname = 1;
         uint32 window_size = 2;
      }
      repeated IfWindowSizeCfg if_window_size_cfg = 1;
   }
   IfWindowSizeCfgs if_window_size_cfgs = 9;
   message Statistics {
      message InterfaceMacsecs {
         message InterfaceMacsec {
            string interface_name = 1 [json_name = "interface-name"];
            uint64 valid_packets = 2 [json_name = "valid-packets"];
            uint64 input_protected_bytes = 3 [json_name = "input-protected-bytes"];
            uint64 decrypted_bytes = 4 [json_name = "decrypted-bytes"];
            uint64 late_packets = 5 [json_name = "late-packets"];
            uint64 not_valid_packets = 6 [json_name = "not-valid-packets"];
            uint64 badtag_packets = 7 [json_name = "badtag-packets"];
            uint64 no_using_sa_packets = 8 [json_name = "no-using-sa-packets"];
            uint64 protected_packets = 9 [json_name = "protected-packets"];
            uint64 output_protected_bytes = 10 [json_name = "output-protected-bytes"];
            uint64 encrypted_packets = 11 [json_name = "encrypted-packets"];
            uint64 encrypted_bytes = 12 [json_name = "encrypted-bytes"];
         }
         repeated InterfaceMacsec interface_macsec = 1 [json_name = "interface-macsec"];
      }
      InterfaceMacsecs interface_macsecs = 1 [json_name = "interface-macsecs"];
      message InterfaceMkas {
         message InterfaceMka {
            string interface_name = 1 [json_name = "interface-name"];
            string ckn1 = 2 [json_name = "ckn1"];
            string mka_status1 = 3 [json_name = "mka-status1"];
            string member_identifier1 = 4 [json_name = "member-identifier1"];
            uint32 message_sequence_number1 = 5 [json_name = "message-sequence-number1"];
            string key_server1 = 6 [json_name = "key-server1"];
            string principal_actor1 = 7 [json_name = "principal-actor1"];
            uint32 live_peers1 = 8 [json_name = "live-peers1"];
            uint32 potential_peers1 = 9 [json_name = "potential-peers1"];
            string latest_sak_status1 = 10 [json_name = "latest-sak-status1"];
            string latest_sak_association1 = 11 [json_name = "latest-sak-association1"];
            string latest_sak_key_identifier1 = 12 [json_name = "latest-sak-key-identifier1"];
            string latest_sak_key_number1 = 13 [json_name = "latest-sak-key-number1"];
            string old_sak_status1 = 14 [json_name = "old-sak-status1"];
            string old_sak_association1 = 15 [json_name = "old-sak-association1"];
            string old_sak_key_identifier1 = 16 [json_name = "old-sak-key-identifier1"];
            string old_sak_key_number1 = 17 [json_name = "old-sak-key-number1"];
            string transmit_short_sci1 = 18 [json_name = "transmit-short-sci1"];
            string lpl_member_identifier1 = 19 [json_name = "lpl-member-identifier1"];
            string lpl_message_sequence_number1 = 20 [json_name = "lpl-message-sequence-number1"];
            string lpl_priority1 = 21 [json_name = "lpl-priority1"];
            string lpl_capability1 = 22 [json_name = "lpl-capability1"];
            string lpl_receive_sci1 = 23 [json_name = "lpl-receive-sci1"];
            string lpl_short_sci1 = 24 [json_name = "lpl-short-sci1"];
            string ppl_member_identifier1 = 25 [json_name = "ppl-member-identifier1"];
            string ppl_message_sequence_number1 = 26 [json_name = "ppl-message-sequence-number1"];
            string ppl_priority1 = 27 [json_name = "ppl-priority1"];
            string ppl_capability1 = 28 [json_name = "ppl-capability1"];
            string ppl_receive_sci1 = 29 [json_name = "ppl-receive-sci1"];
            string ppl_short_sci1 = 30 [json_name = "ppl-short-sci1"];
            string ckn2 = 31 [json_name = "ckn2"];
            string mka_status2 = 32 [json_name = "mka-status2"];
            string member_identifier2 = 33 [json_name = "member-identifier2"];
            uint32 message_sequence_number2 = 34 [json_name = "message-sequence-number2"];
            string key_server2 = 35 [json_name = "key-server2"];
            string principal_actor2 = 36 [json_name = "principal-actor2"];
            uint32 live_peers2 = 37 [json_name = "live-peers2"];
            uint32 potential_peers2 = 38 [json_name = "potential-peers2"];
            string latest_sak_status2 = 39 [json_name = "latest-sak-status2"];
            string latest_sak_association2 = 40 [json_name = "latest-sak-association2"];
            string latest_sak_key_identifier2 = 41 [json_name = "latest-sak-key-identifier2"];
            string latest_sak_key_number2 = 42 [json_name = "latest-sak-key-number2"];
            string old_sak_status2 = 43 [json_name = "old-sak-status2"];
            string old_sak_association2 = 44 [json_name = "old-sak-association2"];
            string old_sak_key_identifier2 = 45 [json_name = "old-sak-key-identifier2"];
            string old_sak_key_number2 = 46 [json_name = "old-sak-key-number2"];
            string transmit_short_sci2 = 47 [json_name = "transmit-short-sci2"];
            string lpl_member_identifier2 = 48 [json_name = "lpl-member-identifier2"];
            string lpl_message_sequence_number2 = 49 [json_name = "lpl-message-sequence-number2"];
            string lpl_priority2 = 50 [json_name = "lpl-priority2"];
            string lpl_capability2 = 51 [json_name = "lpl-capability2"];
            string lpl_receive_sci2 = 52 [json_name = "lpl-receive-sci2"];
            string lpl_short_sci2 = 53 [json_name = "lpl-short-sci2"];
            string ppl_member_identifier2 = 54 [json_name = "ppl-member-identifier2"];
            string ppl_message_sequence_number2 = 55 [json_name = "ppl-message-sequence-number2"];
            string ppl_priority2 = 56 [json_name = "ppl-priority2"];
            string ppl_capability2 = 57 [json_name = "ppl-capability2"];
            string ppl_receive_sci2 = 58 [json_name = "ppl-receive-sci2"];
            string ppl_short_sci2 = 59 [json_name = "ppl-short-sci2"];
            uint32 mka_transmit_interval = 60 [json_name = "mka-transmit-interval"];
            uint32 mka_life_time = 61 [json_name = "mka-life-time"];
            string sak_life_time = 62 [json_name = "sak-life-time"];
            uint32 capability = 63 [json_name = "capability"];
            string mode = 64 [json_name = "mode"];
            string frame_validation = 65 [json_name = "frame-validation"];
            string replay_protection = 66 [json_name = "replay-protection"];
            uint32 replay_window = 67 [json_name = "replay-window"];
            uint32 confidentiality_offset = 68 [json_name = "confidentiality-offset"];
            string include_sci = 69 [json_name = "include-sci"];
            string mka_cipher_suite = 70 [json_name = "mka-cipher-suite"];
            string macsec_cipher_suite = 71 [json_name = "macsec-cipher-suite"];
            uint32 key_server_priority = 72 [json_name = "key-server-priority"];
            string transmit_sci = 73 [json_name = "transmit-sci"];
            uint32 rx_mka_packets = 74 [json_name = "rx-mka-packets"];
            uint32 tx_mka_packets = 75 [json_name = "tx-mka-packets"];
            uint32 drop_mka_packets = 76 [json_name = "drop-mka-packets"];
            uint32 wrong_ckn_num = 77 [json_name = "wrong-ckn-num"];
            uint32 wrong_icv_num = 78 [json_name = "wrong-icv-num"];
            uint32 sak_install_times = 79 [json_name = "sak-install-times"];
            uint32 sak_delete_times = 80 [json_name = "sak-delete-times"];
            uint32 sak_swap_times = 81 [json_name = "sak-swap-times"];
            string latest_sak_reason = 82 [json_name = "latest-sak-reason"];
            string protocol = 83 [json_name = "protocol"];
            string pe_vlan = 84 [json_name = "pe-vlan"];
            string ce_vlan = 85 [json_name = "ce-vlan"];
            string cfi = 86 [json_name = "cfi"];
            string priority = 87 [json_name = "priority"];
         }
         repeated InterfaceMka interface_mka = 1 [json_name = "interface-mka"];
      }
      InterfaceMkas interface_mkas = 2 [json_name = "interface-mkas"];
   }
   Statistics statistics = 10 [json_name = "statistics"];
   message MacsecProfiles {
      message MacsecProfile {
         string name = 1 [json_name = "name"];
         enum Policy {
            Policy_MUSTX_SECURE = 0;
            Policy_SHOULDX_SECURE = 1;
         };
         Policy policy = 2 [json_name = "policy"];
         uint32 replay_window = 3 [json_name = "replay-window"];
         bool include_sci = 4 [json_name = "include-sci"];
         uint32 sak_life = 5 [json_name = "sak-life"];
         uint32 mka_life = 6 [json_name = "mka-life"];
         uint32 keyserver_priority = 7 [json_name = "keyserver-priority"];
         enum CryptographicAlgorithm {
            CryptographicAlgorithm_AESX_CMACX_128 = 0;
            CryptographicAlgorithm_AESX_CMACX_256 = 1;
         };
         CryptographicAlgorithm cryptographic_algorithm = 8 [json_name = "cryptographic-algorithm"];
         uint32 confident_offset = 9 [json_name = "confident-offset"];
         enum Mode {
            Mode_NONE = 0;
            Mode_NORMAL = 1;
            Mode_INTEGRITYX_ONLY = 2;
         };
         Mode mode = 10 [json_name = "mode"];
         enum CipherSuite {
            CipherSuite_GCMX_AESX_128 = 0;
            CipherSuite_GCMX_AESX_256 = 1;
            CipherSuite_GCMX_AESX_XPNX_128 = 2;
            CipherSuite_GCMX_AESX_XPNX_256 = 3;
         };
         repeated CipherSuite cipher_suite = 11 [json_name = "cipher-suite"];
      }
      repeated MacsecProfile macsec_profile = 1 [json_name = "macsec-profile"];
   }
   MacsecProfiles macsec_profiles = 11 [json_name = "macsec-profiles"];
}
message HwMacsecCknSwitchFail {
   string FailReason = 1;
   uint64 IfIndex = 2;
   string LocalPort = 3;
   string NewCKN = 4;
   string OldCKN = 5;
   uint64 Role = 6;
   string SwitchReason = 7;
}
message HwMacsecRcvRspTimeout {
   uint64 IfIndex = 1;
   string LocalPort = 2;
   uint64 Role = 3;
}
message HwMacsecRcvRspTimeoutResume {
   uint64 IfIndex = 1;
   string LocalPort = 2;
   uint64 Role = 3;
}

