syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-08-03 16:01:26
// ProtoYang-version 1
// module huawei-msdp
// revision 2021-03-04
// revision 2020-07-17
// revision 2020-03-16
// revision 2019-03-30
// namespace urn:huawei:yang:huawei-msdp

package huawei_msdp;

message Msdp {
   message MsdpControlMsgTbls {
      message MsdpControlMsgTbl {
         uint32 dataInvalidNumber = 1;
         uint32 dataReceiveNumber = 2;
         uint32 dataSendNumber = 3;
         uint32 keepAliveInvalidNumber = 4;
         uint32 keepAliveReceiveNumber = 5;
         uint32 keepAliveSendNumber = 6;
         uint32 notificationInvalidNumber = 7;
         uint32 notificationReceiveNumber = 8;
         uint32 notificationSendNumber = 9;
         string peerAddr = 10;
         uint32 saInvalidNumber = 11;
         uint32 saReceiveNumber = 12;
         uint32 saRequestInvalidNumber = 13;
         uint32 saRequestReceiveNumber = 14;
         uint32 saRequestSendNumber = 15;
         uint32 saResponseInvalidNumber = 16;
         uint32 saResponseReceiveNumber = 17;
         uint32 saResponseSendNumber = 18;
         uint32 saSendNumber = 19;
         uint32 traceReplyInvalidNumber = 20;
         uint32 traceReplyReceiveNumber = 21;
         uint32 traceReplySendNumber = 22;
         uint32 traceRequestInvalidNumber = 23;
         uint32 traceRequestReceiveNumber = 24;
         uint32 traceRequestSendNumber = 25;
         uint32 unknownInvalidNumber = 26;
         uint32 unknownReceiveNumber = 27;
         uint32 unknownSendNumber = 28;
         string vrfName = 29;
      }
      repeated MsdpControlMsgTbl msdpControlMsgTbl = 1;
   }
   MsdpControlMsgTbls msdpControlMsgTbls = 1;
   message MsdpDefaultInterfaceParameter {
      uint32 minimumTtl = 1;
   }
   MsdpDefaultInterfaceParameter msdpDefaultInterfaceParameter = 2;
   message MsdpDefaultSystemParameter {
      uint32 connectRetryPeriod = 1;
      string encapDataEnable = 2;
      uint32 msdpDescription = 3;
      string requestSaEnable = 4;
      string saCacheEnable = 5;
      string saPolicy = 6;
      string saRequestPolicy = 7;
   }
   MsdpDefaultSystemParameter msdpDefaultSystemParameter = 3;
   message MsdpInvPacketSchms {
      message MsdpInvPacketSchm {
         string interfaceName = 1;
         string invalidType = 2;
         uint32 messageLength = 3;
         string packetContent = 4;
         uint32 packetIndex = 5;
         string time = 6;
         string timeZone = 7;
      }
      repeated MsdpInvPacketSchm msdpInvPacketSchm = 1;
   }
   MsdpInvPacketSchms msdpInvPacketSchms = 4;
   message MsdpPeerInfoTbls {
      message MsdpPeerInfoTbl {
         string asNum = 1;
         uint32 connectAttempts = 2;
         string connectIntfAddr = 3;
         uint32 discardMsgNum = 4;
         string elapsedTime = 5;
         enum EncapType {
            EncapType_ENCAPNONE = 0;
            EncapType_ENCAPTCP = 1;
         };
         EncapType encapType = 6;
         string fsmEstabTime = 7;
         uint32 fsmEstabTrans = 8;
         string inMsgTime = 9;
         uint32 inputQSize = 10;
         int32 localPort = 11;
         uint32 outputQSize = 12;
         string peerAddr = 13;
         enum PeerState {
            PeerState_CONNECT = 0;
            PeerState_DOWN = 1;
            PeerState_LISTEN = 2;
            PeerState_SHUTDOWN = 3;
            PeerState_UP = 4;
         };
         PeerState peerState = 14;
         uint32 recvDataCount = 15;
         uint32 recvMsgNum = 16;
         uint32 recvSaCount = 17;
         uint32 recvSaReqCount = 18;
         uint32 recvSaRspCount = 19;
         uint32 remotePort = 20;
         uint32 resetCount = 21;
         uint32 rpfFailNum = 22;
         uint32 saLearnedNum = 23;
         uint32 saMaxCache = 24;
         uint32 sendDataCount = 25;
         uint32 sendMsgNum = 26;
         uint32 sendSaCount = 27;
         uint32 sendSaReqCount = 28;
         uint32 sendSaRspCount = 29;
         string upDownTime = 30;
         string vrfName = 31;
      }
      repeated MsdpPeerInfoTbl msdpPeerInfoTbl = 1;
   }
   MsdpPeerInfoTbls msdpPeerInfoTbls = 5;
   message MsdpPeerInvPacketCntSchms {
      message MsdpPeerInvPacketCntSchm {
         message InvKeepAliveCnt {
            uint32 keepAliveFaultLength = 1;
         }
         InvKeepAliveCnt invKeepAliveCnt = 1;
         message InvNotificationCnt {
            uint32 notificationFaultLength = 1;
         }
         InvNotificationCnt invNotificationCnt = 2;
         message InvSaCnt {
            uint32 saBadEncapData = 1;
            uint32 saBadLengthX = 2;
            uint32 saBadSprefix = 3;
            uint32 saFaultLength = 4;
            uint32 saIllegalRPAddr = 5;
            uint32 saInvalidMulticastGroup = 6;
            uint32 saInvalidMulticastSource = 7;
            uint32 saRPLoop = 8;
         }
         InvSaCnt invSaCnt = 3;
         message InvSaRequestCnt {
            uint32 saRequestFaultLength = 1;
            uint32 saRequestInvalidMulticastGroup = 2;
         }
         InvSaRequestCnt invSaRequestCnt = 4;
         message InvSaResponseCnt {
            uint32 saResponseBadLengthX = 1;
            uint32 saResponseBadSprefix = 2;
            uint32 saResponseFaultLength = 3;
            uint32 saResponseIllegalRPAddr = 4;
            uint32 saResponseInvalidMulticastGrp = 5;
            uint32 saResponseInvalidMulticastSrc = 6;
            uint32 saResponseRPLoop = 7;
         }
         InvSaResponseCnt invSaResponseCnt = 5;
         string peerAddr = 6;
         string vrfName = 7;
      }
      repeated MsdpPeerInvPacketCntSchm msdpPeerInvPacketCntSchm = 1;
   }
   MsdpPeerInvPacketCntSchms msdpPeerInvPacketCntSchms = 6;
   message MsdpSaCacheTbls {
      message MsdpSaCacheTbl {
         string asNum = 1;
         string expireTime = 2;
         string grpAddr = 3;
         uint32 inDataPackets = 4;
         uint32 inSAs = 5;
         string origRpAddr = 6;
         string peerLearnedFrom = 7;
         enum ProtocolNum {
            ProtocolNum_BGP = 0;
            ProtocolNum_MBGP = 1;
            ProtocolNum_UNKNOWN = 2;
         };
         ProtocolNum protocolNum = 8;
         string rpfPeerAddr = 9;
         string srcAddr = 10;
         string upTime = 11;
         string vrfName = 12;
      }
      repeated MsdpSaCacheTbl msdpSaCacheTbl = 1;
   }
   MsdpSaCacheTbls msdpSaCacheTbls = 7;
   message MsdpSiteCfgs {
      message MsdpSiteCfg {
         bool cacheSaEnable = 1;
         bool encapDataEnable = 2;
         bool imptSrcEnable = 3;
         string imptSrcPlcName = 4;
         message MsdpPeerCfgs {
            message MsdpPeerCfg {
               string connectIfName = 1;
               uint32 holdtime = 2;
               bool isShutDown = 3;
               uint32 keepaliveinterval = 4;
               bool keychainEnable = 5;
               string keychainName = 6;
               uint32 maxSaCache = 7;
               bool md5Enable = 8;
               string meshGrpName = 9;
               uint32 minTtl = 10;
               string password = 11;
               string peerAddr = 12;
               string peerDescription = 13;
               bool reqSaEnable = 14;
               bool saPlcyExptEnable = 15;
               string saPlcyExptName = 16;
               bool saPlcyImptEnable = 17;
               string saPlcyImptName = 18;
               bool saReqPlcyEnable = 19;
               string saReqPlcyName = 20;
               enum SimpleFlag {
                  SimpleFlag_CIPER = 0;
                  SimpleFlag_SIMPLE = 1;
               };
               SimpleFlag simpleFlag = 21;
               bool stRpfEnable = 22;
               string stRpfIpPreName = 23;
            }
            repeated MsdpPeerCfg msdpPeerCfg = 1;
         }
         MsdpPeerCfgs msdpPeerCfgs = 5;
         string origRpIfName = 6;
         uint32 retryInterval = 7;
         string vrfName = 8;
      }
      repeated MsdpSiteCfg msdpSiteCfg = 1;
   }
   MsdpSiteCfgs msdpSiteCfgs = 8;
   message MsdpVrfInvPacketCntSchms {
      message MsdpVrfInvPacketCntSchm {
         message InvKeepAliveCnt {
            uint32 keepAliveFaultLength = 1;
         }
         InvKeepAliveCnt invKeepAliveCnt = 1;
         message InvNotificationCnt {
            uint32 notificationFaultLength = 1;
         }
         InvNotificationCnt invNotificationCnt = 2;
         message InvSaCnt {
            uint32 saBadEncapData = 1;
            uint32 saBadLengthX = 2;
            uint32 saBadSprefix = 3;
            uint32 saFaultLength = 4;
            uint32 saIllegalRPAddr = 5;
            uint32 saInvalidMulticastGroup = 6;
            uint32 saInvalidMulticastSource = 7;
            uint32 saRPLoop = 8;
         }
         InvSaCnt invSaCnt = 3;
         message InvSaRequestCnt {
            uint32 saRequestFaultLength = 1;
            uint32 saRequestInvalidMulticastGroup = 2;
         }
         InvSaRequestCnt invSaRequestCnt = 4;
         message InvSaResponseCnt {
            uint32 saResponseBadLengthX = 1;
            uint32 saResponseBadSprefix = 2;
            uint32 saResponseFaultLength = 3;
            uint32 saResponseIllegalRPAddr = 4;
            uint32 saResponseInvalidMulticastGrp = 5;
            uint32 saResponseInvalidMulticastSrc = 6;
            uint32 saResponseRPLoop = 7;
         }
         InvSaResponseCnt invSaResponseCnt = 5;
         string vrfName = 6;
      }
      repeated MsdpVrfInvPacketCntSchm msdpVrfInvPacketCntSchm = 1;
   }
   MsdpVrfInvPacketCntSchms msdpVrfInvPacketCntSchms = 9;
}
message Backward {
   uint32 EstablishedTransitons = 1;
   bytes ExitReason = 2;
   string InstanceName = 3;
   uint32 PeerState = 4;
   string RemoteAddr = 5;
}
message Establish {
   uint32 EstablishedTransitons = 1;
   bytes ExitReason = 2;
   string InstanceName = 3;
   uint32 PeerState = 4;
   string RemoteAddr = 5;
}

