syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2022-04-26 20:02:06
// ProtoYang-version 1
// module huawei-bras-ipv4-address-manage
// revision 2022-04-11
// revision 2020-02-22
// revision 2020-01-19
// revision 2020-01-10
// revision 2019-12-26
// revision 2019-12-11
// revision 2019-12-07
// revision 2019-11-09
// revision 2019-10-17
// revision 2019-04-09
// namespace urn:huawei:yang:huawei-bras-ipv4-address-manage

package huawei_bras_ipv4_address_manage;

message BrasIpv4AddressManage {
   message Ipv4Pools {
      message Ipv4Pool {
         string name = 1 [json_name = "name"];
         enum Type {
            Type_LOCAL = 0;
            Type_REMOTE = 1;
            Type_DYNAMIC = 2;
         };
         Type type = 2 [json_name = "type"];
         bool rui_slave = 3 [json_name = "rui-slave"];
         message Local {
            message OccupiedPolicy {
               message OccupiedPolicy6_UpId {
                  uint32 up_id = 1 [json_name = "up-id"];
               }
               message OccupiedPolicy6_UpBackupProfile {
                  string up_backup_profile = 1 [json_name = "up-backup-profile"];
               }
               message OccupiedPolicy6_HotStandbyUpGroup {
                  uint32 master_up = 1 [json_name = "master-up"];
                  uint32 slave_up = 2 [json_name = "slave-up"];
               }
               message OccupiedPolicy6_UpGroup {
                  uint32 master_up_id = 1 [json_name = "master-up-id"];
                  uint32 slave_up_id = 2 [json_name = "slave-up-id"];
               }
               oneof OccupiedPolicy6 {
                  OccupiedPolicy6_UpId occupied_policy_up_id = 1 [json_name = "up-id"];
                  OccupiedPolicy6_UpBackupProfile occupied_policy_up_backup_profile = 2 [json_name = "up-backup-profile"];
                  OccupiedPolicy6_HotStandbyUpGroup occupied_policy_hot_standby_up_group = 3 [json_name = "hot-standby-up-group"];
                  OccupiedPolicy6_UpGroup occupied_policy_up_group = 4 [json_name = "up-group"];
               }
            }
            OccupiedPolicy occupied_policy = 1 [json_name = "occupied-policy"];
            message VpnInstance {
               string name = 1 [json_name = "name"];
            }
            VpnInstance vpn_instance = 2 [json_name = "vpn-instance"];
            message Gateway {
               string gate_ip = 1 [json_name = "gate-ip"];
               string gate_mask = 2 [json_name = "gate-mask"];
            }
            Gateway gateway = 3 [json_name = "gateway"];
            message Sections {
               message Section {
                  uint32 number7 = 1 [json_name = "number"];
                  string start_ip_address = 2 [json_name = "start-ip-address"];
                  string end_ip_address = 3 [json_name = "end-ip-address"];
                  message ExcludedIpAddresss {
                     message ExcludedIpAddress {
                        string start_ip_address = 1 [json_name = "start-ip-address"];
                        string end_ip_address = 2 [json_name = "end-ip-address"];
                     }
                     repeated ExcludedIpAddress excluded_ip_address = 1 [json_name = "excluded-ip-address"];
                  }
                  ExcludedIpAddresss excluded_ip_addresss = 4 [json_name = "excluded-ip-addresss"];
                  message Statistic {
                     uint32 total_number = 1 [json_name = "total-number"];
                     uint32 used_number = 2 [json_name = "used-number"];
                     uint32 idle_number = 3 [json_name = "idle-number"];
                     uint32 conflict_number = 4 [json_name = "conflict-number"];
                     uint32 disable_number = 5 [json_name = "disable-number"];
                     uint32 reserved_number = 6 [json_name = "reserved-number"];
                     uint32 static_bind_number = 7 [json_name = "static-bind-number"];
                     uint32 delayed_number = 8 [json_name = "delayed-number"];
                  }
                  Statistic statistic = 5 [json_name = "statistic"];
                  message StaticBinds {
                     message StaticBind {
                        string ip_address = 1 [json_name = "ip-address"];
                        string mac_address = 2 [json_name = "mac-address"];
                     }
                     repeated StaticBind static_bind = 1 [json_name = "static-bind"];
                  }
                  StaticBinds static_binds = 7 [json_name = "static-binds"];
                  message AddressInfos {
                     message AddressInfo {
                        string ip = 1 [json_name = "ip"];
                        enum Status {
                           Status_IDLE = 0;
                           Status_USED = 1;
                           Status_DISABLE = 2;
                           Status_CONFLICTEDX_DECLINE = 3;
                           Status_STATICX_ONLINE = 4;
                           Status_GATEWAY = 5;
                           Status_RESERVED = 6;
                           Status_STATICX_BIND = 7;
                           Status_CONFLICTEDX_RADIUS = 8;
                           Status_CONFLICTEDX_INNER = 9;
                           Status_CONFLICTEDX_ALL = 10;
                           Status_ISOLATE = 11;
                           Status_DELAYED = 12;
                           Status_NETWORK = 13;
                           Status_BROADCAST = 14;
                           Status_GATEWAYX_CANX_ALLOC = 15;
                        };
                        Status status = 2 [json_name = "status"];
                        uint32 index = 3 [json_name = "index"];
                        string mac = 4 [json_name = "mac"];
                        uint32 user_id = 5 [json_name = "user-id"];
                        uint32 lease = 6 [json_name = "lease"];
                        string interface_name = 7 [json_name = "interface-name"];
                        uint32 pevlan = 8 [json_name = "pevlan"];
                        uint32 cevlan = 9 [json_name = "cevlan"];
                     }
                     repeated AddressInfo address_info = 1 [json_name = "address-info"];
                  }
                  AddressInfos address_infos = 8 [json_name = "address-infos"];
               }
               repeated Section section = 1 [json_name = "section"];
            }
            Sections sections = 4 [json_name = "sections"];
            message DhcpServerGroup {
               string name = 1 [json_name = "name"];
            }
            DhcpServerGroup dhcp_server_group = 5 [json_name = "dhcp-server-group"];
            message ExportRoute {
               bool enable = 1 [json_name = "enable"];
            }
            ExportRoute export_route = 6 [json_name = "export-route"];
            message UnrTag {
               uint32 value = 1 [json_name = "value"];
            }
            UnrTag unr_tag = 7 [json_name = "unr-tag"];
            message DnsServer {
               repeated string ip_address = 1 [json_name = "ip-address"];
            }
            DnsServer dns_server = 8 [json_name = "dns-server"];
            message Lease {
               uint32 day = 1 [json_name = "day"];
               uint32 hour = 2 [json_name = "hour"];
               uint32 minute = 3 [json_name = "minute"];
            }
            Lease lease = 9 [json_name = "lease"];
            message ReservedIpAddress {
               enum Type {
                  INVALID_ENUM_VALUE_Type = 0;
                  Type_LEASE = 1;
                  Type_MAC = 2;
               };
               Type type = 1 [json_name = "type"];
            }
            ReservedIpAddress reserved_ip_address = 10 [json_name = "reserved-ip-address"];
            message LeaseManagement {
               bool enable = 1 [json_name = "enable"];
            }
            LeaseManagement lease_management = 11 [json_name = "lease-management"];
            message Lock {
               bool drain = 1 [json_name = "drain"];
            }
            Lock lock = 12 [json_name = "lock"];
            message ConstantIndex {
               uint32 value = 1 [json_name = "value"];
            }
            ConstantIndex constant_index = 13 [json_name = "constant-index"];
            message WarningExhaust {
               bool exhaust = 1 [json_name = "exhaust"];
            }
            WarningExhaust warning_exhaust = 14 [json_name = "warning-exhaust"];
            message DelayedRelease {
               bool enable = 1 [json_name = "enable"];
            }
            DelayedRelease delayed_release = 15 [json_name = "delayed-release"];
            message LeaseRebindTime {
               uint32 day = 1 [json_name = "day"];
               uint32 hour = 2 [json_name = "hour"];
               uint32 minute = 3 [json_name = "minute"];
            }
            LeaseRebindTime lease_rebind_time = 16 [json_name = "lease-rebind-time"];
            message LeaseRenewTime {
               uint32 day = 1 [json_name = "day"];
               uint32 hour = 2 [json_name = "hour"];
               uint32 minute = 3 [json_name = "minute"];
            }
            LeaseRenewTime lease_renew_time = 17 [json_name = "lease-renew-time"];
            message ImportVpnInstance {
               repeated string name = 1 [json_name = "name"];
            }
            ImportVpnInstance import_vpn_instance = 18 [json_name = "import-vpn-instance"];
            message IpAttributePublic {
               bool enable = 1 [json_name = "enable"];
            }
            IpAttributePublic ip_attribute_public = 19 [json_name = "ip-attribute-public"];
            message WarningThreshold {
               uint32 threshold_value = 1 [json_name = "threshold-value"];
            }
            WarningThreshold warning_threshold = 20 [json_name = "warning-threshold"];
            message GatewayUnnumbered {
               string interface_name = 1 [json_name = "interface-name"];
            }
            GatewayUnnumbered gateway_unnumbered = 21 [json_name = "gateway-unnumbered"];
            message NetbiosNameServer {
               repeated string ip_address = 1 [json_name = "ip-address"];
            }
            NetbiosNameServer netbios_name_server = 22 [json_name = "netbios-name-server"];
            message NetbiosType {
               enum Code {
                  INVALID_ENUM_VALUE_Code = 0;
                  Code_BX_NODE = 1;
                  Code_PX_NODE = 2;
                  Code_MX_NODE = 4;
                  Code_HX_NODE = 8;
               };
               Code code = 1 [json_name = "code"];
            }
            NetbiosType netbios_type = 23 [json_name = "netbios-type"];
            message SipServer {
               message SipServer6_IpAddress {
                  string ip_address1 = 1 [json_name = "ip-address1"];
                  string ip_address2 = 2 [json_name = "ip-address2"];
               }
               message SipServer6_Name {
                  string name1 = 1 [json_name = "name1"];
                  string name2 = 2 [json_name = "name2"];
               }
               oneof SipServer6 {
                  SipServer6_IpAddress sip_server_ip_address = 1 [json_name = "ip-address"];
                  SipServer6_Name sip_server_name = 2 [json_name = "name"];
               }
            }
            SipServer sip_server = 24 [json_name = "sip-server"];
            message UserDefinedOptions {
               message UserDefinedOption {
                  uint32 main_code = 1 [json_name = "main-code"];
                  message OptionType_MainIp {
                     repeated string ip_address = 1 [json_name = "ip-address"];
                  }
                  message OptionType_MainInfoString {
                     string info_string = 1 [json_name = "info-string"];
                  }
                  message OptionType_MainHex {
                     string hex = 1 [json_name = "hex"];
                  }
                  message OptionType_SubOption {
                     message SubOptions {
                        message SubOption9 {
                           uint32 code = 1 [json_name = "code"];
                           message InfoType_Ip {
                              string ip_address = 1 [json_name = "ip-address"];
                           }
                           message InfoType_InfoString {
                              string info_string = 1 [json_name = "info-string"];
                           }
                           oneof InfoType {
                              InfoType_Ip info_type_ip = 2 [json_name = "ip"];
                              InfoType_InfoString info_type_info_string = 3 [json_name = "info-string"];
                           }
                        }
                        repeated SubOption9 sub_option = 1 [json_name = "sub-option"];
                     }
                     SubOptions sub_options = 1 [json_name = "sub-options"];
                  }
                  oneof OptionType {
                     OptionType_MainIp option_type_main_ip = 2 [json_name = "main-ip"];
                     OptionType_MainInfoString option_type_main_info_string = 3 [json_name = "main-info-string"];
                     OptionType_MainHex option_type_main_hex = 4 [json_name = "main-hex"];
                     OptionType_SubOption option_type_sub_option = 5 [json_name = "sub-option"];
                  }
               }
               repeated UserDefinedOption user_defined_option = 1 [json_name = "user-defined-option"];
            }
            UserDefinedOptions user_defined_options = 25 [json_name = "user-defined-options"];
         }
         Local local = 4 [json_name = "local"];
         message Remote {
            message OccupiedPolicy {
               message OccupiedPolicy6_UpId {
                  uint32 up_id = 1 [json_name = "up-id"];
               }
               message OccupiedPolicy6_UpBackupProfile {
                  string up_backup_profile = 1 [json_name = "up-backup-profile"];
               }
               message OccupiedPolicy6_HotStandbyUpGroup {
                  uint32 master_up = 1 [json_name = "master-up"];
                  uint32 slave_up = 2 [json_name = "slave-up"];
               }
               message OccupiedPolicy6_UpGroup {
                  uint32 master_up_id = 1 [json_name = "master-up-id"];
                  uint32 slave_up_id = 2 [json_name = "slave-up-id"];
               }
               oneof OccupiedPolicy6 {
                  OccupiedPolicy6_UpId occupied_policy_up_id = 1 [json_name = "up-id"];
                  OccupiedPolicy6_UpBackupProfile occupied_policy_up_backup_profile = 2 [json_name = "up-backup-profile"];
                  OccupiedPolicy6_HotStandbyUpGroup occupied_policy_hot_standby_up_group = 3 [json_name = "hot-standby-up-group"];
                  OccupiedPolicy6_UpGroup occupied_policy_up_group = 4 [json_name = "up-group"];
               }
            }
            OccupiedPolicy occupied_policy = 1 [json_name = "occupied-policy"];
            message VpnInstance {
               string name = 1 [json_name = "name"];
            }
            VpnInstance vpn_instance = 2 [json_name = "vpn-instance"];
            message Gateway {
               string gate_ip = 1 [json_name = "gate-ip"];
               string gate_mask = 2 [json_name = "gate-mask"];
            }
            Gateway gateway = 3 [json_name = "gateway"];
            message ExcludedIpAddresss {
               message ExcludedIpAddress {
                  string start_ip_address = 1 [json_name = "start-ip-address"];
                  string end_ip_address = 2 [json_name = "end-ip-address"];
               }
               repeated ExcludedIpAddress excluded_ip_address = 1 [json_name = "excluded-ip-address"];
            }
            ExcludedIpAddresss excluded_ip_addresss = 4 [json_name = "excluded-ip-addresss"];
            message DhcpServerGroup {
               string name = 1 [json_name = "name"];
            }
            DhcpServerGroup dhcp_server_group = 5 [json_name = "dhcp-server-group"];
            message IpLooseCheck {
               bool enable = 1 [json_name = "enable"];
            }
            IpLooseCheck ip_loose_check = 6 [json_name = "ip-loose-check"];
            message LeaseManagement {
               bool enable = 1 [json_name = "enable"];
            }
            LeaseManagement lease_management = 7 [json_name = "lease-management"];
            message ExportRoute {
               bool enable = 1 [json_name = "enable"];
            }
            ExportRoute export_route = 8 [json_name = "export-route"];
            message UnrTag {
               uint32 value = 1 [json_name = "value"];
            }
            UnrTag unr_tag = 9 [json_name = "unr-tag"];
            message DnsServer {
               repeated string ip_address = 1 [json_name = "ip-address"];
            }
            DnsServer dns_server = 10 [json_name = "dns-server"];
            message ReservedIpAddress {
               enum Type {
                  INVALID_ENUM_VALUE_Type = 0;
                  Type_LEASE = 1;
               };
               Type type = 1 [json_name = "type"];
            }
            ReservedIpAddress reserved_ip_address = 11 [json_name = "reserved-ip-address"];
            message Lock {
               bool drain = 1 [json_name = "drain"];
            }
            Lock lock = 12 [json_name = "lock"];
            message ConstantIndex {
               uint32 value = 1 [json_name = "value"];
            }
            ConstantIndex constant_index = 13 [json_name = "constant-index"];
            message WarningExhaust {
               bool exhaust = 1 [json_name = "exhaust"];
            }
            WarningExhaust warning_exhaust = 14 [json_name = "warning-exhaust"];
            message ImportVpnInstance {
               repeated string name = 1 [json_name = "name"];
            }
            ImportVpnInstance import_vpn_instance = 15 [json_name = "import-vpn-instance"];
            message IpAttributePublic {
               bool enable = 1 [json_name = "enable"];
            }
            IpAttributePublic ip_attribute_public = 16 [json_name = "ip-attribute-public"];
            message WarningThreshold {
               uint32 threshold_value = 1 [json_name = "threshold-value"];
            }
            WarningThreshold warning_threshold = 17 [json_name = "warning-threshold"];
            message NetbiosNameServer {
               repeated string ip_address = 1 [json_name = "ip-address"];
            }
            NetbiosNameServer netbios_name_server = 18 [json_name = "netbios-name-server"];
            message NetbiosType {
               enum Code {
                  INVALID_ENUM_VALUE_Code = 0;
                  Code_BX_NODE = 1;
                  Code_PX_NODE = 2;
                  Code_MX_NODE = 4;
                  Code_HX_NODE = 8;
               };
               Code code = 1 [json_name = "code"];
            }
            NetbiosType netbios_type = 19 [json_name = "netbios-type"];
         }
         Remote remote = 5 [json_name = "remote"];
         message Dynamic {
            message VpnInstance {
               string name = 1 [json_name = "name"];
            }
            VpnInstance vpn_instance = 1 [json_name = "vpn-instance"];
            message ExportRoute {
               bool enable = 1 [json_name = "enable"];
            }
            ExportRoute export_route = 2 [json_name = "export-route"];
            message UnrTag {
               uint32 value = 1 [json_name = "value"];
            }
            UnrTag unr_tag = 3 [json_name = "unr-tag"];
            message DnsServer {
               repeated string ip_address = 1 [json_name = "ip-address"];
            }
            DnsServer dns_server = 4 [json_name = "dns-server"];
            message Lease {
               uint32 day = 1 [json_name = "day"];
               uint32 hour = 2 [json_name = "hour"];
               uint32 minute = 3 [json_name = "minute"];
            }
            Lease lease = 5 [json_name = "lease"];
            message DetectInterval {
               uint32 retransmit_times = 1 [json_name = "retransmit-times"];
               uint32 day = 2 [json_name = "day"];
               uint32 hour = 3 [json_name = "hour"];
               uint32 minute = 4 [json_name = "minute"];
            }
            DetectInterval detect_interval = 6 [json_name = "detect-interval"];
            message BindRadiusServerGroup {
               string name = 1 [json_name = "name"];
            }
            BindRadiusServerGroup bind_radius_server_group = 7 [json_name = "bind-radius-server-group"];
            message LeaseManagement {
               bool enable = 1 [json_name = "enable"];
            }
            LeaseManagement lease_management = 8 [json_name = "lease-management"];
            message UsedThreshold {
               uint32 upper_limit = 1 [json_name = "upper-limit"];
               uint32 lower_limit = 2 [json_name = "lower-limit"];
            }
            UsedThreshold used_threshold = 9 [json_name = "used-threshold"];
            message Authentication {
               string name = 1 [json_name = "name"];
               string password = 2 [json_name = "password"];
            }
            Authentication authentication = 10 [json_name = "authentication"];
            message SubnetSegments {
               message SubnetSegment {
                  uint32 subnet_index = 1 [json_name = "subnet-index"];
                  string start_ip_address = 2 [json_name = "start-ip-address"];
                  string end_ip_address = 3 [json_name = "end-ip-address"];
                  string subnet = 4 [json_name = "subnet"];
                  string mask = 5 [json_name = "mask"];
                  message OccupiedPolicy_UpId {
                     uint32 up_id = 1 [json_name = "up-id"];
                  }
                  message OccupiedPolicy_StandbyGroup {
                     uint32 master_up_id = 1 [json_name = "master-up-id"];
                     uint32 slave_up_id = 2 [json_name = "slave-up-id"];
                  }
                  message OccupiedPolicy_UpBackupProfile {
                     uint32 up_backup_profile = 1 [json_name = "up-backup-profile"];
                  }
                  oneof OccupiedPolicy {
                     OccupiedPolicy_UpId occupied_policy_up_id = 6 [json_name = "up-id"];
                     OccupiedPolicy_StandbyGroup occupied_policy_standby_group = 7 [json_name = "standby-group"];
                     OccupiedPolicy_UpBackupProfile occupied_policy_up_backup_profile = 8 [json_name = "up-backup-profile"];
                  }
                  uint32 total = 9 [json_name = "total"];
                  uint32 used = 10 [json_name = "used"];
                  uint32 idle = 11 [json_name = "idle"];
                  uint32 conflict = 12 [json_name = "conflict"];
                  string status = 13 [json_name = "status"];
                  string acct_session_id = 14 [json_name = "acct-session-id"];
                  message AddressInfos {
                     message AddressInfo {
                        string ip = 1 [json_name = "ip"];
                        enum Status {
                           Status_IDLE = 0;
                           Status_USED = 1;
                           Status_DISABLE = 2;
                           Status_CONFLICTEDX_DECLINE = 3;
                           Status_STATICX_ONLINE = 4;
                           Status_GATEWAY = 5;
                           Status_RESERVED = 6;
                           Status_STATICX_BIND = 7;
                           Status_CONFLICTEDX_RADIUS = 8;
                           Status_CONFLICTEDX_INNER = 9;
                           Status_CONFLICTEDX_ALL = 10;
                           Status_ISOLATE = 11;
                           Status_DELAYED = 12;
                           Status_NETWORK = 13;
                           Status_BROADCAST = 14;
                           Status_GATEWAYX_CANX_ALLOC = 15;
                        };
                        Status status = 2 [json_name = "status"];
                        uint32 index = 3 [json_name = "index"];
                        string mac = 4 [json_name = "mac"];
                        uint32 user_id = 5 [json_name = "user-id"];
                        uint32 lease = 6 [json_name = "lease"];
                     }
                     repeated AddressInfo address_info = 1 [json_name = "address-info"];
                  }
                  AddressInfos address_infos = 15 [json_name = "address-infos"];
                  uint32 lease = 16 [json_name = "lease"];
               }
               repeated SubnetSegment subnet_segment = 1 [json_name = "subnet-segment"];
            }
            SubnetSegments subnet_segments = 11 [json_name = "subnet-segments"];
            message DapServer {
               string name = 1 [json_name = "name"];
            }
            DapServer dap_server = 12 [json_name = "dap-server"];
            message SubnetLength {
               uint32 initial = 1 [json_name = "initial"];
               uint32 extend = 2 [json_name = "extend"];
            }
            SubnetLength subnet_length = 13 [json_name = "subnet-length"];
            message Lock {
               bool drain = 1 [json_name = "drain"];
            }
            Lock lock = 14 [json_name = "lock"];
            message ConstantIndex {
               uint32 value = 1 [json_name = "value"];
            }
            ConstantIndex constant_index = 15 [json_name = "constant-index"];
            message WarningExhaust {
               bool exhaust = 1 [json_name = "exhaust"];
            }
            WarningExhaust warning_exhaust = 16 [json_name = "warning-exhaust"];
            message DelayedRelease {
               bool enable = 1 [json_name = "enable"];
            }
            DelayedRelease delayed_release = 17 [json_name = "delayed-release"];
            message LeaseRebindTime {
               uint32 day = 1 [json_name = "day"];
               uint32 hour = 2 [json_name = "hour"];
               uint32 minute = 3 [json_name = "minute"];
            }
            LeaseRebindTime lease_rebind_time = 18 [json_name = "lease-rebind-time"];
            message LeaseRenewTime {
               uint32 day = 1 [json_name = "day"];
               uint32 hour = 2 [json_name = "hour"];
               uint32 minute = 3 [json_name = "minute"];
            }
            LeaseRenewTime lease_renew_time = 19 [json_name = "lease-renew-time"];
            message ImportVpnInstance {
               repeated string name = 1 [json_name = "name"];
            }
            ImportVpnInstance import_vpn_instance = 20 [json_name = "import-vpn-instance"];
            message BindUpAuthorizationGroup {
               string name = 1 [json_name = "name"];
            }
            BindUpAuthorizationGroup bind_up_authorization_group = 21 [json_name = "bind-up-authorization-group"];
            message CuPoolStatistics {
               message CuPoolStatistic {
                  uint32 upmng_instance = 1 [json_name = "upmng-instance"];
                  uint32 pool_index = 2 [json_name = "pool-index"];
                  string status = 3 [json_name = "status"];
                  uint32 ratio = 4 [json_name = "ratio"];
                  uint32 total_ip_number = 5 [json_name = "total-ip-number"];
                  uint32 total_idle_number = 6 [json_name = "total-idle-number"];
                  uint32 used_ip_number = 7 [json_name = "used-ip-number"];
                  uint32 conflict_ip_number = 8 [json_name = "conflict-ip-number"];
                  uint32 disable_ip_number = 9 [json_name = "disable-ip-number"];
                  uint32 designated_ip_number = 10 [json_name = "designated-ip-number"];
                  uint32 delayed_ip_number = 11 [json_name = "delayed-ip-number"];
                  uint32 gateway_ip_number = 12 [json_name = "gateway-ip-number"];
                  uint32 isolated_ip_number = 13 [json_name = "isolated-ip-number"];
                  uint32 time_out_count = 14 [json_name = "time-out-count"];
                  uint32 option_number = 15 [json_name = "option-number"];
                  uint32 sub_option_number = 16 [json_name = "sub-option-number"];
                  uint32 blocked_time = 17 [json_name = "blocked-time"];
                  uint32 ip_allocation_failures = 18 [json_name = "ip-allocation-failures"];
                  uint32 force_reply_count = 19 [json_name = "force-reply-count"];
               }
               repeated CuPoolStatistic cu_pool_statistic = 1 [json_name = "cu-pool-statistic"];
            }
            CuPoolStatistics cu_pool_statistics = 22 [json_name = "cu-pool-statistics"];
            message NetbiosNameServer {
               repeated string ip_address = 1 [json_name = "ip-address"];
            }
            NetbiosNameServer netbios_name_server = 23 [json_name = "netbios-name-server"];
            message NetbiosType {
               enum Code {
                  INVALID_ENUM_VALUE_Code = 0;
                  Code_BX_NODE = 1;
                  Code_PX_NODE = 2;
                  Code_MX_NODE = 4;
                  Code_HX_NODE = 8;
               };
               Code code = 1 [json_name = "code"];
            }
            NetbiosType netbios_type = 24 [json_name = "netbios-type"];
            message SipServer {
               message SipServer6_IpAddress {
                  string ip_address1 = 1 [json_name = "ip-address1"];
                  string ip_address2 = 2 [json_name = "ip-address2"];
               }
               message SipServer6_Name {
                  string name1 = 1 [json_name = "name1"];
                  string name2 = 2 [json_name = "name2"];
               }
               oneof SipServer6 {
                  SipServer6_IpAddress sip_server_ip_address = 1 [json_name = "ip-address"];
                  SipServer6_Name sip_server_name = 2 [json_name = "name"];
               }
            }
            SipServer sip_server = 25 [json_name = "sip-server"];
            message UserDefinedOptions {
               message UserDefinedOption {
                  uint32 main_code = 1 [json_name = "main-code"];
                  message OptionType_MainIp {
                     repeated string ip_address = 1 [json_name = "ip-address"];
                  }
                  message OptionType_MainInfoString {
                     string info_string = 1 [json_name = "info-string"];
                  }
                  message OptionType_MainHex {
                     string hex = 1 [json_name = "hex"];
                  }
                  message OptionType_SubOption {
                     message SubOptions {
                        message SubOption9 {
                           uint32 code = 1 [json_name = "code"];
                           message InfoType_Ip {
                              string ip_address = 1 [json_name = "ip-address"];
                           }
                           message InfoType_InfoString {
                              string info_string = 1 [json_name = "info-string"];
                           }
                           oneof InfoType {
                              InfoType_Ip info_type_ip = 2 [json_name = "ip"];
                              InfoType_InfoString info_type_info_string = 3 [json_name = "info-string"];
                           }
                        }
                        repeated SubOption9 sub_option = 1 [json_name = "sub-option"];
                     }
                     SubOptions sub_options = 1 [json_name = "sub-options"];
                  }
                  oneof OptionType {
                     OptionType_MainIp option_type_main_ip = 2 [json_name = "main-ip"];
                     OptionType_MainInfoString option_type_main_info_string = 3 [json_name = "main-info-string"];
                     OptionType_MainHex option_type_main_hex = 4 [json_name = "main-hex"];
                     OptionType_SubOption option_type_sub_option = 5 [json_name = "sub-option"];
                  }
               }
               repeated UserDefinedOption user_defined_option = 1 [json_name = "user-defined-option"];
            }
            UserDefinedOptions user_defined_options = 26 [json_name = "user-defined-options"];
         }
         Dynamic dynamic = 6 [json_name = "dynamic"];
         message PoolStatistic {
            uint32 pool_index = 1 [json_name = "pool-index"];
            uint32 total_idle_number = 2 [json_name = "total-idle-number"];
            uint32 time_out_count = 3 [json_name = "time-out-count"];
            uint32 option_number = 4 [json_name = "option-number"];
            uint32 sub_option_number = 5 [json_name = "sub-option-number"];
            uint32 blocked_time = 6 [json_name = "blocked-time"];
            string status = 7 [json_name = "status"];
            uint32 ratio = 8 [json_name = "ratio"];
            uint32 total_ip_number = 9 [json_name = "total-ip-number"];
            uint32 used_ip_number = 10 [json_name = "used-ip-number"];
            uint32 conflict_ip_number = 11 [json_name = "conflict-ip-number"];
            uint32 disable_ip_number = 12 [json_name = "disable-ip-number"];
            uint32 designated_ip_number = 13 [json_name = "designated-ip-number"];
            uint32 delayed_ip_number = 14 [json_name = "delayed-ip-number"];
            uint32 gateway_ip_number = 15 [json_name = "gateway-ip-number"];
            uint32 isolated_ip_number = 16 [json_name = "isolated-ip-number"];
            uint32 ip_allocation_failures = 17 [json_name = "ip-allocation-failures"];
            uint32 force_reply_count = 18 [json_name = "force-reply-count"];
         }
         PoolStatistic pool_statistic = 7 [json_name = "pool-statistic"];
         message CuPoolUsages {
            message CuPoolUsage {
               string upmng_instance = 1 [json_name = "upmng-instance"];
               string vpn_name = 2 [json_name = "vpn-name"];
               uint32 total_num = 3 [json_name = "total-num"];
               uint32 used_num = 4 [json_name = "used-num"];
               uint32 ratio = 5 [json_name = "ratio"];
            }
            repeated CuPoolUsage cu_pool_usage = 1 [json_name = "cu-pool-usage"];
         }
         CuPoolUsages cu_pool_usages = 8 [json_name = "cu-pool-usages"];
      }
      repeated Ipv4Pool ipv4_pool = 1 [json_name = "ipv4-pool"];
   }
   Ipv4Pools ipv4_pools = 1 [json_name = "ipv4-pools"];
   message PoolGroups {
      message PoolGroup {
         string name = 1 [json_name = "name"];
         message VpnInstance {
            string name = 1 [json_name = "name"];
         }
         VpnInstance vpn_instance = 2 [json_name = "vpn-instance"];
         message BindPools {
            repeated string pool_name = 1 [json_name = "pool-name"];
         }
         BindPools bind_pools = 3 [json_name = "bind-pools"];
         message IpAttributePublic {
            bool enable = 1 [json_name = "enable"];
         }
         IpAttributePublic ip_attribute_public = 4 [json_name = "ip-attribute-public"];
         message WarningThreshold {
            uint32 threshold_value = 1 [json_name = "threshold-value"];
         }
         WarningThreshold warning_threshold = 5 [json_name = "warning-threshold"];
         message WarningExhaust {
            bool exhaust = 1 [json_name = "exhaust"];
         }
         WarningExhaust warning_exhaust = 6 [json_name = "warning-exhaust"];
      }
      repeated PoolGroup pool_group = 1 [json_name = "pool-group"];
   }
   PoolGroups pool_groups = 2 [json_name = "pool-groups"];
   message AutoRefresh {
      bool enable = 1 [json_name = "enable"];
   }
   AutoRefresh auto_refresh = 3 [json_name = "auto-refresh"];
   message IpUnrRouteTag {
      uint32 local_pool_tag = 1 [json_name = "local-pool-tag"];
      uint32 framed_route_tag = 2 [json_name = "framed-route-tag"];
      uint32 framed_ip_netmask_tag = 3 [json_name = "framed-ip-netmask-tag"];
      uint32 framed_ip_address_tag = 4 [json_name = "framed-ip-address-tag"];
      uint32 remote_pool_tag = 5 [json_name = "remote-pool-tag"];
      uint32 dynamic_pool_tag = 6 [json_name = "dynamic-pool-tag"];
   }
   IpUnrRouteTag ip_unr_route_tag = 4 [json_name = "ip-unr-route-tag"];
   message PoolSelectAlgorithm {
      bool local_round_robin = 1 [json_name = "local-round-robin"];
      message RemoteAlgorithm_RemoteRoundRobin {
         bool remote_round_robin = 1 [json_name = "remote-round-robin"];
      }
      message RemoteAlgorithm_RemoteLoadingShare {
         message RemoteLoadingShare4 {
            uint32 restrain_period = 1 [json_name = "restrain-period"];
            uint32 timeout_threshold = 2 [json_name = "timeout-threshold"];
         }
         RemoteLoadingShare4 remote_loading_share = 1 [json_name = "remote-loading-share"];
      }
      oneof RemoteAlgorithm {
         RemoteAlgorithm_RemoteRoundRobin remote_algorithm_remote_round_robin = 2 [json_name = "remote-round-robin"];
         RemoteAlgorithm_RemoteLoadingShare remote_algorithm_remote_loading_share = 3 [json_name = "remote-loading-share"];
      }
   }
   PoolSelectAlgorithm pool_select_algorithm = 5 [json_name = "pool-select-algorithm"];
   message DhcpDecline {
      enum IpAddressStatus {
         INVALID_ENUM_VALUE_IpAddressStatus = 0;
         IpAddressStatus_CONFLICT = 1;
         IpAddressStatus_IDLE = 2;
      };
      IpAddressStatus ip_address_status = 1 [json_name = "ip-address-status"];
   }
   DhcpDecline dhcp_decline = 6 [json_name = "dhcp-decline"];
   message ConstantIndex {
      bool enable = 1 [json_name = "enable"];
   }
   ConstantIndex constant_index = 7 [json_name = "constant-index"];
   message RemoteIdStrip {
      bool enable = 1 [json_name = "enable"];
   }
   RemoteIdStrip remote_id_strip = 8 [json_name = "remote-id-strip"];
   message FrameIpReplyOption82 {
      bool enable = 1 [json_name = "enable"];
   }
   FrameIpReplyOption82 frame_ip_reply_option82 = 9 [json_name = "frame-ip-reply-option82"];
   message AutoBlock {
      bool enable = 1 [json_name = "enable"];
      bool slave_switch = 2 [json_name = "slave-switch"];
   }
   AutoBlock auto_block = 10 [json_name = "auto-block"];
   message PoolUsageStatistics {
      message PoolUsageStatistic {
         string pool_name = 1 [json_name = "pool-name"];
         string vpn_name = 2 [json_name = "vpn-name"];
         uint32 total_num = 3 [json_name = "total-num"];
         uint32 used_num = 4 [json_name = "used-num"];
         uint32 ratio = 5 [json_name = "ratio"];
      }
      repeated PoolUsageStatistic pool_usage_statistic = 1 [json_name = "pool-usage-statistic"];
   }
   PoolUsageStatistics pool_usage_statistics = 11 [json_name = "pool-usage-statistics"];
   message GlobalStatistic {
      uint32 pool_number = 1 [json_name = "pool-number"];
      uint32 idle_number = 2 [json_name = "idle-number"];
      uint32 used_number = 3 [json_name = "used-number"];
      uint32 conflict_number = 4 [json_name = "conflict-number"];
      uint32 exclude_number = 5 [json_name = "exclude-number"];
      uint32 total_number = 6 [json_name = "total-number"];
      uint32 used_percent = 7 [json_name = "used-percent"];
      uint32 local_pool_number = 8 [json_name = "local-pool-number"];
      uint32 remote_pool_number = 9 [json_name = "remote-pool-number"];
      uint32 dynamic_pool_number = 10 [json_name = "dynamic-pool-number"];
      uint32 designated_ip_number = 11 [json_name = "designated-ip-number"];
      uint32 gateway_ip_number = 12 [json_name = "gateway-ip-number"];
      uint32 delayed_ip_number = 13 [json_name = "delayed-ip-number"];
      uint32 isolated_ip_number = 14 [json_name = "isolated-ip-number"];
   }
   GlobalStatistic global_statistic = 12 [json_name = "global-statistic"];
   message StatisticsByDomains {
      message StatisticsByDomain {
         string domain_name = 1 [json_name = "domain-name"];
         message Usages {
            message UpidStatistics {
               message UpidStatistic {
                  uint32 up_id = 1 [json_name = "up-id"];
                  uint32 total_number = 2 [json_name = "total-number"];
                  uint32 used_number = 3 [json_name = "used-number"];
                  uint32 ratio = 4 [json_name = "ratio"];
               }
               repeated UpidStatistic upid_statistic = 1 [json_name = "upid-statistic"];
            }
            UpidStatistics upid_statistics = 1 [json_name = "upid-statistics"];
         }
         Usages usages = 2 [json_name = "usages"];
         message MaxUsage {
            uint32 total_number = 1 [json_name = "total-number"];
            uint32 used_number = 2 [json_name = "used-number"];
            string time = 3 [json_name = "time"];
         }
         MaxUsage max_usage = 3 [json_name = "max-usage"];
         message CuMaxUsages {
            message CuMaxUsage {
               uint32 up_group_id = 1 [json_name = "up-group-id"];
               uint32 total_number = 2 [json_name = "total-number"];
               uint32 used_number = 3 [json_name = "used-number"];
               string time = 4 [json_name = "time"];
            }
            repeated CuMaxUsage cu_max_usage = 1 [json_name = "cu-max-usage"];
         }
         CuMaxUsages cu_max_usages = 4 [json_name = "cu-max-usages"];
         message UsageStatus {
            uint32 total_number = 1 [json_name = "total-number"];
            uint32 used_number = 2 [json_name = "used-number"];
            uint32 ratio = 3 [json_name = "ratio"];
            uint32 pool_status = 4 [json_name = "pool-status"];
         }
         UsageStatus usage_status = 5 [json_name = "usage-status"];
         message CuUsageStatuss {
            message CuUsageStatus {
               uint32 up_group_id = 1 [json_name = "up-group-id"];
               uint32 total_number = 2 [json_name = "total-number"];
               uint32 used_number = 3 [json_name = "used-number"];
               uint32 ratio = 4 [json_name = "ratio"];
               uint32 pool_status = 5 [json_name = "pool-status"];
            }
            repeated CuUsageStatus cu_usage_status = 1 [json_name = "cu-usage-status"];
         }
         CuUsageStatuss cu_usage_statuss = 6 [json_name = "cu-usage-statuss"];
         message RatioInfo {
            uint32 current_ratio = 1 [json_name = "current-ratio"];
            uint32 max_ratio = 2 [json_name = "max-ratio"];
            string max_ratio_time = 3 [json_name = "max-ratio-time"];
         }
         RatioInfo ratio_info = 7 [json_name = "ratio-info"];
         message UsageThreshold {
            enum ThresholdType {
               INVALID_ENUM_VALUE_ThresholdType = 0;
               ThresholdType_UPPER = 1;
               ThresholdType_LOWER = 2;
            };
            ThresholdType threshold_type = 1 [json_name = "threshold-type"];
            uint32 total_number = 2 [json_name = "total-number"];
            uint32 used_number = 3 [json_name = "used-number"];
            uint32 ratio = 4 [json_name = "ratio"];
         }
         UsageThreshold usage_threshold = 8 [json_name = "usage-threshold"];
      }
      repeated StatisticsByDomain statistics_by_domain = 1 [json_name = "statistics-by-domain"];
   }
   StatisticsByDomains statistics_by_domains = 13 [json_name = "statistics-by-domains"];
   message DelayRelease {
      uint32 time = 1 [json_name = "time"];
   }
   DelayRelease delay_release = 14 [json_name = "delay-release"];
   message ImportRibs {
      message ImportRib {
         string source_vpn_instance = 1 [json_name = "source-vpn-instance"];
         string destination_vpn_instance = 2 [json_name = "destination-vpn-instance"];
         bool net_route = 3 [json_name = "net-route"];
         bool adv_host_route = 4 [json_name = "adv-host-route"];
         bool framed_route = 5 [json_name = "framed-route"];
         bool radius_download_route = 6 [json_name = "radius-download-route"];
      }
      repeated ImportRib import_rib = 1 [json_name = "import-rib"];
   }
   ImportRibs import_ribs = 15 [json_name = "import-ribs"];
   message ImportNoAdvertiseUnr {
      bool enable = 1 [json_name = "enable"];
   }
   ImportNoAdvertiseUnr import_no_advertise_unr = 16 [json_name = "import-no-advertise-unr"];
   message CuGlobalStatistics {
      message CuGlobalStatistic {
         uint32 upmng_instance = 1 [json_name = "upmng-instance"];
         uint32 pool_number = 2 [json_name = "pool-number"];
         uint32 local_pool_number = 3 [json_name = "local-pool-number"];
         uint32 remote_pool_number = 4 [json_name = "remote-pool-number"];
         uint32 dynamic_pool_number = 5 [json_name = "dynamic-pool-number"];
         uint32 total_number = 6 [json_name = "total-number"];
         uint32 idle_number = 7 [json_name = "idle-number"];
         uint32 used_number = 8 [json_name = "used-number"];
         uint32 conflict_number = 9 [json_name = "conflict-number"];
         uint32 exclude_number = 10 [json_name = "exclude-number"];
         uint32 designated_ip_number = 11 [json_name = "designated-ip-number"];
         uint32 gateway_ip_number = 12 [json_name = "gateway-ip-number"];
         uint32 delayed_ip_number = 13 [json_name = "delayed-ip-number"];
         uint32 isolated_ip_number = 14 [json_name = "isolated-ip-number"];
         uint32 used_percent = 15 [json_name = "used-percent"];
      }
      repeated CuGlobalStatistic cu_global_statistic = 1 [json_name = "cu-global-statistic"];
   }
   CuGlobalStatistics cu_global_statistics = 17 [json_name = "cu-global-statistics"];
   message StatisticsByVpnInstance {
      message Statistics {
         message Statistic {
            string vpn_instance = 1 [json_name = "vpn-instance"];
            message UsageWarningThreshold {
               uint32 total_number = 1 [json_name = "total-number"];
               uint32 used_number = 2 [json_name = "used-number"];
               uint32 idle_number = 3 [json_name = "idle-number"];
               uint32 conflict_number = 4 [json_name = "conflict-number"];
               uint32 disable_number = 5 [json_name = "disable-number"];
               uint32 reserved_number = 6 [json_name = "reserved-number"];
               uint32 static_bind_number = 7 [json_name = "static-bind-number"];
               uint32 ratio = 8 [json_name = "ratio"];
            }
            UsageWarningThreshold usage_warning_threshold = 2 [json_name = "usage-warning-threshold"];
         }
         repeated Statistic statistic = 1 [json_name = "statistic"];
      }
      Statistics statistics = 1 [json_name = "statistics"];
   }
   StatisticsByVpnInstance statistics_by_vpn_instance = 18 [json_name = "statistics-by-vpn-instance"];
}

