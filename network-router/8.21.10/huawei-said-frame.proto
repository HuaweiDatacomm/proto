syntax = "proto3";
// Automatically generated by ProtoYang
// ProtoYang-version 1
// module huawei-said-frame
// revision 2020-03-10
// namespace urn:huawei:yang:huawei-said-frame

package huawei_said_frame;

message SaidFrame {
   message GlobalSwitch {
      enum Disable {
         Disable_UNDODISABLE = 0;
         Disable_DISABLE = 1;
      };
      Disable disable = 1 [json_name = "disable"];
   }
   GlobalSwitch global_switch = 1 [json_name = "global-switch"];
   message LpuNodes {
      message LpuNode {
         enum SaidName {
            INVALID_ENUM_VALUE_SaidName = 0;
            SaidName_PING = 2;
            SaidName_PINGX_TRUNK = 3;
            SaidName_TRAFFICX_FAIL = 4;
            SaidName_SEUX_IGP = 5;
            SaidName_AAA = 8;
            SaidName_SEUX_TRUNK = 20;
            SaidName_SEULOOP = 22;
            SaidName_RESETX_BOARD = 25;
            SaidName_CFC = 26;
            SaidName_IPNICE = 28;
         };
         SaidName said_name = 1 [json_name = "said-name"];
         string slot_id = 2 [json_name = "slot-id"];
         enum Operate {
            Operate_COMMON = 0;
            Operate_PREVENTION = 1;
         };
         Operate operate = 3 [json_name = "operate"];
         enum State {
            State_INIT = 0;
            State_DETECTING = 1;
            State_DIAGNOSING = 2;
            State_INVALIDX_DIAGNOSE = 3;
            State_RECOVERING = 4;
            State_JUDGING = 5;
            State_EXPX_JUDGING = 6;
         };
         State state = 4 [json_name = "state"];
         uint32 cycle = 5 [json_name = "cycle"];
         enum Enable {
            Enable_DISABLE = 0;
            Enable_ENABLE = 1;
         };
         Enable enable = 6 [json_name = "enable"];
      }
      repeated LpuNode lpu_node = 1 [json_name = "lpu-node"];
   }
   LpuNodes lpu_nodes = 2 [json_name = "lpu-nodes"];
   message Lpunodecfgs {
      message Lpunodecfg {
         enum SaidName {
            INVALID_ENUM_VALUE_SaidName = 0;
            SaidName_PING = 2;
            SaidName_PINGX_TRUNK = 3;
            SaidName_TRAFFICX_FAIL = 4;
            SaidName_SEUX_IGP = 5;
            SaidName_AAA = 8;
            SaidName_SEUX_TRUNK = 20;
            SaidName_SEULOOP = 22;
            SaidName_RESETX_BOARD = 25;
            SaidName_CFC = 26;
            SaidName_IPNICE = 28;
         };
         SaidName said_name = 1 [json_name = "said-name"];
         string slot_id = 2 [json_name = "slot-id"];
         enum Disable {
            Disable_UNDODISABLE = 0;
            Disable_DISABLE = 1;
         };
         Disable disable = 3 [json_name = "disable"];
      }
      repeated Lpunodecfg lpunodecfg = 1 [json_name = "lpunodecfg"];
   }
   Lpunodecfgs lpunodecfgs = 3 [json_name = "lpunodecfgs"];
   message MpuNodes {
      message MpuNode {
         enum SaidName {
            INVALID_ENUM_VALUE_SaidName = 0;
            SaidName_PING = 2;
            SaidName_PINGX_TRUNK = 3;
            SaidName_TRAFFICX_FAIL = 4;
            SaidName_SEUX_IGP = 5;
            SaidName_AAA = 8;
            SaidName_SEUX_TRUNK = 20;
            SaidName_SEULOOP = 22;
            SaidName_RESETX_BOARD = 25;
            SaidName_CFC = 26;
            SaidName_IPNICE = 28;
         };
         SaidName said_name = 1 [json_name = "said-name"];
         string slot_id = 2 [json_name = "slot-id"];
         enum Operate {
            Operate_COMMON = 0;
            Operate_PREVENTION = 1;
         };
         Operate operate = 3 [json_name = "operate"];
         enum State {
            State_INIT = 0;
            State_DETECTING = 1;
            State_DIAGNOSING = 2;
            State_INVALIDX_DIAGNOSE = 3;
            State_RECOVERING = 4;
            State_JUDGING = 5;
            State_EXPX_JUDGING = 6;
         };
         State state = 4 [json_name = "state"];
         uint32 cycle = 5 [json_name = "cycle"];
         enum Enable {
            Enable_DISABLE = 0;
            Enable_ENABLE = 1;
         };
         Enable enable = 6 [json_name = "enable"];
      }
      repeated MpuNode mpu_node = 1 [json_name = "mpu-node"];
   }
   MpuNodes mpu_nodes = 4 [json_name = "mpu-nodes"];
   message Mpunodecfgs {
      message Mpunodecfg {
         enum SaidName {
            INVALID_ENUM_VALUE_SaidName = 0;
            SaidName_PING = 2;
            SaidName_PINGX_TRUNK = 3;
            SaidName_TRAFFICX_FAIL = 4;
            SaidName_SEUX_IGP = 5;
            SaidName_AAA = 8;
            SaidName_SEUX_TRUNK = 20;
            SaidName_SEULOOP = 22;
            SaidName_RESETX_BOARD = 25;
            SaidName_CFC = 26;
            SaidName_IPNICE = 28;
         };
         SaidName said_name = 1 [json_name = "said-name"];
         enum Disable {
            Disable_UNDODISABLE = 0;
            Disable_DISABLE = 1;
         };
         Disable disable = 2 [json_name = "disable"];
      }
      repeated Mpunodecfg mpunodecfg = 1 [json_name = "mpunodecfg"];
   }
   Mpunodecfgs mpunodecfgs = 5 [json_name = "mpunodecfgs"];
   message IpNices {
      message IpNice {
         string source_ip = 1 [json_name = "source-ip"];
         string dest_ip = 2 [json_name = "dest-ip"];
         string vpn_name = 3 [json_name = "vpn-name"];
      }
      repeated IpNice ip_nice = 1 [json_name = "ip-nice"];
   }
   IpNices ip_nices = 6 [json_name = "ip-nices"];
   message GlobalUcAttribute {
      bool ipv4_route_recovery_enable = 1 [json_name = "ipv4-route-recovery-enable"];
   }
   GlobalUcAttribute global_uc_attribute = 7 [json_name = "global-uc-attribute"];
}

