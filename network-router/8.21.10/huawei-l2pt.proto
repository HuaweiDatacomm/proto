syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2022-01-27 14:17:39
// ProtoYang-version 1
// module huawei-l2pt
// revision 2022-01-25
// revision 2020-03-13
// revision 2020-02-06
// revision 2019-11-06
// revision 2019-04-23
// namespace urn:huawei:yang:huawei-l2pt

package huawei_l2pt;

message L2Pt {
   message BpduAttribute {
      enum BridgeRole {
         BridgeRole_CUSTOMER = 0;
         BridgeRole_PROVIDER = 1;
      };
      BridgeRole bridge_role = 1 [json_name = "bridge-role"];
      string group_mac = 2 [json_name = "group-mac"];
      bool tagged_packet_enable = 3 [json_name = "tagged-packet-enable"];
   }
   BpduAttribute bpdu_attribute = 1 [json_name = "bpdu-attribute"];
   message WellKnownProtocol {
      message Protocols {
         message Protocol {
            enum ProtocolType {
               INVALID_ENUM_VALUE_ProtocolType = 0;
               ProtocolType_EOAM3AH = 1;
               ProtocolType_LLDP = 2;
               ProtocolType_GMRP = 3;
               ProtocolType_GVRP = 4;
               ProtocolType_DLDP = 5;
               ProtocolType_HGMP = 6;
               ProtocolType_VTP = 7;
               ProtocolType_DTP = 8;
               ProtocolType_CDP = 9;
               ProtocolType_UDLD = 10;
               ProtocolType_PAGP = 11;
               ProtocolType_PVSTX_PLUS = 12;
               ProtocolType_STP = 13;
               ProtocolType_LACP = 14;
               ProtocolType_MVRP = 15;
               ProtocolType_MMRP = 16;
               ProtocolType_EX_LMI = 17;
               ProtocolType_X_802X_1X = 18;
               ProtocolType_SSTP = 19;
            };
            ProtocolType protocol_type = 1 [json_name = "protocol-type"];
            string group_mac = 2 [json_name = "group-mac"];
            string protocol_mac = 3 [json_name = "protocol-mac"];
            enum EncapsulationType {
               INVALID_ENUM_VALUE_EncapsulationType = 0;
               EncapsulationType_ETHERNETII = 1;
               EncapsulationType_LLC = 2;
               EncapsulationType_SNAP = 3;
            };
            EncapsulationType encapsulation_type = 4 [json_name = "encapsulation-type"];
            string ethernet_type = 5 [json_name = "ethernet-type"];
            string snap_type = 6 [json_name = "snap-type"];
            string dsap_value = 7 [json_name = "dsap-value"];
            string ssap_value = 8 [json_name = "ssap-value"];
         }
         repeated Protocol protocol = 1 [json_name = "protocol"];
      }
      Protocols protocols = 1 [json_name = "protocols"];
      message GroupMacs {
         message GroupMac {
            enum ProtocolType {
               INVALID_ENUM_VALUE_ProtocolType = 0;
               ProtocolType_EOAM3AH = 1;
               ProtocolType_LLDP = 2;
               ProtocolType_GMRP = 3;
               ProtocolType_GVRP = 4;
               ProtocolType_DLDP = 5;
               ProtocolType_HGMP = 6;
               ProtocolType_VTP = 7;
               ProtocolType_DTP = 8;
               ProtocolType_CDP = 9;
               ProtocolType_UDLD = 10;
               ProtocolType_PAGP = 11;
               ProtocolType_PVSTX_PLUS = 12;
               ProtocolType_STP = 13;
               ProtocolType_LACP = 14;
               ProtocolType_MVRP = 15;
               ProtocolType_MMRP = 16;
               ProtocolType_EX_LMI = 17;
               ProtocolType_X_802X_1X = 18;
               ProtocolType_SSTP = 19;
            };
            ProtocolType protocol_type = 1 [json_name = "protocol-type"];
            string group_mac = 2 [json_name = "group-mac"];
         }
         repeated GroupMac group_mac = 1 [json_name = "group-mac"];
      }
      GroupMacs group_macs = 2 [json_name = "group-macs"];
      message Statistics {
         message Statistic {
            string interface_name = 1 [json_name = "interface-name"];
            enum ProtocolType {
               INVALID_ENUM_VALUE_ProtocolType = 0;
               ProtocolType_EOAM3AH = 1;
               ProtocolType_LLDP = 2;
               ProtocolType_GMRP = 3;
               ProtocolType_GVRP = 4;
               ProtocolType_DLDP = 5;
               ProtocolType_HGMP = 6;
               ProtocolType_VTP = 7;
               ProtocolType_DTP = 8;
               ProtocolType_CDP = 9;
               ProtocolType_UDLD = 10;
               ProtocolType_PAGP = 11;
               ProtocolType_PVSTX_PLUS = 12;
               ProtocolType_STP = 13;
               ProtocolType_LACP = 14;
               ProtocolType_MVRP = 15;
               ProtocolType_MMRP = 16;
               ProtocolType_EX_LMI = 17;
               ProtocolType_X_802X_1X = 18;
               ProtocolType_SSTP = 19;
            };
            ProtocolType protocol_type = 2 [json_name = "protocol-type"];
            uint64 input_packets = 3 [json_name = "input-packets"];
            uint64 output_packets = 4 [json_name = "output-packets"];
            uint64 drop_packets = 5 [json_name = "drop-packets"];
            uint32 drop_threshold = 6 [json_name = "drop-threshold"];
         }
         repeated Statistic statistic = 1 [json_name = "statistic"];
      }
      Statistics statistics = 3 [json_name = "statistics"];
   }
   WellKnownProtocol well_known_protocol = 2 [json_name = "well-known-protocol"];
   message UserDefinedProtocols {
      message UserDefinedProtocol {
         string protocol_name = 1 [json_name = "protocol-name"];
         string protocol_mac = 2 [json_name = "protocol-mac"];
         string group_mac = 3 [json_name = "group-mac"];
         message EncapsulationType_Llc {
            string dsap = 1 [json_name = "dsap"];
            string ssap = 2 [json_name = "ssap"];
         }
         message EncapsulationType_Ethernetii {
            string ethernetii_protocol_type = 1 [json_name = "ethernetii-protocol-type"];
         }
         message EncapsulationType_Snap {
            string snap_protocol_type = 1 [json_name = "snap-protocol-type"];
         }
         oneof EncapsulationType {
            EncapsulationType_Llc encapsulation_type_llc = 4 [json_name = "llc"];
            EncapsulationType_Ethernetii encapsulation_type_ethernetii = 5 [json_name = "ethernetii"];
            EncapsulationType_Snap encapsulation_type_snap = 6 [json_name = "snap"];
         }
      }
      repeated UserDefinedProtocol user_defined_protocol = 1 [json_name = "user-defined-protocol"];
   }
   UserDefinedProtocols user_defined_protocols = 3 [json_name = "user-defined-protocols"];
}

