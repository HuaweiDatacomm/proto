syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2022-04-14 11:13:02
// ProtoYang-version 1
// module huawei-clocksync-phy
// revision 2022-04-08
// revision 2022-03-24
// revision 2020-03-17
// revision 2020-03-14
// revision 2020-03-04
// revision 2019-11-11
// revision 2019-03-01
// namespace urn:huawei:yang:huawei-clocksync-phy

package huawei_clocksync_phy;

message ClocksyncPhy {
   message Common {
      enum SystemClockRunMode {
         SystemClockRunMode_NORMAL = 0;
         SystemClockRunMode_HOLD = 1;
         SystemClockRunMode_FREE = 2;
      };
      SystemClockRunMode system_clock_run_mode = 1 [json_name = "system-clock-run-mode"];
      bool ssm_control_on = 2 [json_name = "ssm-control-on"];
      bool ext_ssm_control_on = 3 [json_name = "ext-ssm-control-on"];
      uint32 internal_clock_id = 4 [json_name = "internal-clock-id"];
      enum InternalClockSsm {
         InternalClockSsm_UNK = 0;
         InternalClockSsm_PRC = 2;
         InternalClockSsm_SSUA = 4;
         InternalClockSsm_SSUB = 8;
         InternalClockSsm_SEC = 11;
         InternalClockSsm_DNU = 15;
         InternalClockSsm_NONE = 16;
         InternalClockSsm_PRTC = 8194;
         InternalClockSsm_EPRTC = 8450;
         InternalClockSsm_ESEC = 8715;
         InternalClockSsm_EPRC = 8962;
      };
      InternalClockSsm internal_clock_ssm = 5 [json_name = "internal-clock-ssm"];
      bool freq_check_enable = 6 [json_name = "freq-check-enable"];
      enum SsmRecoveryMode {
         SsmRecoveryMode_REVERTIVE = 0;
         SsmRecoveryMode_NONX_REVERTIVE = 1;
      };
      SsmRecoveryMode ssm_recovery_mode = 7 [json_name = "ssm-recovery-mode"];
      uint32 wtr_time = 8 [json_name = "wtr-time"];
      bool freq_switch_enable = 9 [json_name = "freq-switch-enable"];
      uint32 holdoff_time = 10 [json_name = "holdoff-time"];
      enum SsmUnkMap {
         SsmUnkMap_UNK = 0;
         SsmUnkMap_PRC = 2;
         SsmUnkMap_SSUA = 4;
         SsmUnkMap_SSUB = 8;
         SsmUnkMap_SEC = 11;
         SsmUnkMap_DNU = 15;
         SsmUnkMap_NONE = 16;
         SsmUnkMap_PRTC = 8194;
         SsmUnkMap_EPRTC = 8450;
         SsmUnkMap_ESEC = 8715;
         SsmUnkMap_EPRC = 8962;
      };
      SsmUnkMap ssm_unk_map = 11 [json_name = "ssm-unk-map"];
      enum MinOutSsmBits {
         MinOutSsmBits_UNK = 0;
         MinOutSsmBits_PRC = 2;
         MinOutSsmBits_SSUA = 4;
         MinOutSsmBits_SSUB = 8;
         MinOutSsmBits_SEC = 11;
         MinOutSsmBits_DNU = 15;
         MinOutSsmBits_NONE = 16;
         MinOutSsmBits_PRTC = 8194;
         MinOutSsmBits_EPRTC = 8450;
         MinOutSsmBits_ESEC = 8715;
         MinOutSsmBits_EPRC = 8962;
      };
      MinOutSsmBits min_out_ssm_bits = 12 [json_name = "min-out-ssm-bits"];
      enum MaxOutSsmSystem {
         MaxOutSsmSystem_UNK = 0;
         MaxOutSsmSystem_PRC = 2;
         MaxOutSsmSystem_SSUA = 4;
         MaxOutSsmSystem_SSUB = 8;
         MaxOutSsmSystem_SEC = 11;
         MaxOutSsmSystem_DNU = 15;
         MaxOutSsmSystem_NONE = 16;
         MaxOutSsmSystem_PRTC = 8194;
         MaxOutSsmSystem_EPRTC = 8450;
         MaxOutSsmSystem_ESEC = 8715;
         MaxOutSsmSystem_EPRC = 8962;
      };
      MaxOutSsmSystem max_out_ssm_system = 13 [json_name = "max-out-ssm-system"];
      enum MaxOutSsm2M1 {
         MaxOutSsm2M1_UNK = 0;
         MaxOutSsm2M1_PRC = 2;
         MaxOutSsm2M1_SSUA = 4;
         MaxOutSsm2M1_SSUB = 8;
         MaxOutSsm2M1_SEC = 11;
         MaxOutSsm2M1_DNU = 15;
         MaxOutSsm2M1_NONE = 16;
         MaxOutSsm2M1_PRTC = 8194;
         MaxOutSsm2M1_EPRTC = 8450;
         MaxOutSsm2M1_ESEC = 8715;
         MaxOutSsm2M1_EPRC = 8962;
      };
      MaxOutSsm2M1 max_out_ssm_2m1 = 14 [json_name = "max-out-ssm-2m1"];
      enum MaxOutSsm2M2 {
         MaxOutSsm2M2_UNK = 0;
         MaxOutSsm2M2_PRC = 2;
         MaxOutSsm2M2_SSUA = 4;
         MaxOutSsm2M2_SSUB = 8;
         MaxOutSsm2M2_SEC = 11;
         MaxOutSsm2M2_DNU = 15;
         MaxOutSsm2M2_NONE = 16;
         MaxOutSsm2M2_PRTC = 8194;
         MaxOutSsm2M2_EPRTC = 8450;
         MaxOutSsm2M2_ESEC = 8715;
         MaxOutSsm2M2_EPRC = 8962;
      };
      MaxOutSsm2M2 max_out_ssm_2m2 = 15 [json_name = "max-out-ssm-2m2"];
      enum ClockOamProfile {
         ClockOamProfile_NONE = 0;
         ClockOamProfile_CCSA = 1;
      };
      ClockOamProfile clock_oam_profile = 16 [json_name = "clock-oam-profile"];
      uint32 freq_offset_alarm_threshold = 17 [json_name = "freq-offset-alarm-threshold"];
      enum InputSsmAlarmThreshold {
         InputSsmAlarmThreshold_UNK = 0;
         InputSsmAlarmThreshold_PRC = 2;
         InputSsmAlarmThreshold_SSUA = 4;
         InputSsmAlarmThreshold_SSUB = 8;
         InputSsmAlarmThreshold_SEC = 11;
         InputSsmAlarmThreshold_DNU = 15;
         InputSsmAlarmThreshold_NONE = 16;
         InputSsmAlarmThreshold_PRTC = 8194;
         InputSsmAlarmThreshold_EPRTC = 8450;
         InputSsmAlarmThreshold_ESEC = 8715;
         InputSsmAlarmThreshold_EPRC = 8962;
      };
      InputSsmAlarmThreshold input_ssm_alarm_threshold = 18 [json_name = "input-ssm-alarm-threshold"];
      enum DeviceClkLevel {
         DeviceClkLevel_SEC = 0;
         DeviceClkLevel_ESEC = 1;
      };
      DeviceClkLevel device_clk_level = 19 [json_name = "device-clk-level"];
      bool enh_ssm_control_on = 20 [json_name = "enh-ssm-control-on"];
   }
   Common common = 1 [json_name = "common"];
   message SelectionSources {
      message Selection {
         enum SourceType {
            SourceType_SYSTEM = 0;
            SourceType_SYNC2MX_1 = 1;
            SourceType_SYNC2MX_2 = 2;
         };
         SourceType source_type = 1 [json_name = "source-type"];
         string source_name = 2 [json_name = "source-name"];
         enum Mode {
            Mode_AUTO = 0;
            Mode_MANUAL = 1;
            Mode_FORCE = 2;
         };
         Mode mode = 3 [json_name = "mode"];
         string trace_source_name = 4 [json_name = "trace-source-name"];
         enum CurrentMode {
            CurrentMode_AUTO = 0;
            CurrentMode_MANUAL = 1;
            CurrentMode_FORCE = 2;
         };
         CurrentMode current_mode = 5 [json_name = "current-mode"];
      }
      repeated Selection selection = 1 [json_name = "selection"];
   }
   SelectionSources selection_sources = 2 [json_name = "selection-sources"];
   message ExternalClockSources {
      message Source {
         string name = 1 [json_name = "name"];
         enum State {
            State_INITIAL = 0;
            State_NORMAL = 1;
            State_ABNORMAL = 2;
            State_WAITWTR = 3;
            State_HOLDOFF = 4;
         };
         State state = 2 [json_name = "state"];
         bool sync_enable = 3 [json_name = "sync-enable"];
         bool reference_enable = 4 [json_name = "reference-enable"];
         enum PhyState {
            PhyState_DOWN = 0;
            PhyState_UP = 1;
            PhyState_NA = 2;
         };
         PhyState phy_state = 5 [json_name = "phy-state"];
         int32 system_priority = 6 [json_name = "system-priority"];
         message SsmClass {
            enum SsmConfigured {
               SsmConfigured_UNK = 0;
               SsmConfigured_PRC = 2;
               SsmConfigured_SSUA = 4;
               SsmConfigured_SSUB = 8;
               SsmConfigured_SEC = 11;
               SsmConfigured_DNU = 15;
               SsmConfigured_NONE = 16;
               SsmConfigured_PRTC = 8194;
               SsmConfigured_EPRTC = 8450;
               SsmConfigured_ESEC = 8715;
               SsmConfigured_EPRC = 8962;
            };
            SsmConfigured ssm_configured = 1 [json_name = "ssm-configured"];
            enum SsmLearn {
               SsmLearn_UNK = 0;
               SsmLearn_PRC = 2;
               SsmLearn_SSUA = 4;
               SsmLearn_SSUB = 8;
               SsmLearn_SEC = 11;
               SsmLearn_DNU = 15;
               SsmLearn_NONE = 16;
               SsmLearn_PRTC = 8194;
               SsmLearn_EPRTC = 8450;
               SsmLearn_ESEC = 8715;
               SsmLearn_EPRC = 8962;
            };
            SsmLearn ssm_learn = 2 [json_name = "ssm-learn"];
            enum SsmOutput {
               SsmOutput_UNK = 0;
               SsmOutput_PRC = 2;
               SsmOutput_SSUA = 4;
               SsmOutput_SSUB = 8;
               SsmOutput_SEC = 11;
               SsmOutput_DNU = 15;
               SsmOutput_NONE = 16;
               SsmOutput_PRTC = 8194;
               SsmOutput_EPRTC = 8450;
               SsmOutput_ESEC = 8715;
               SsmOutput_EPRC = 8962;
            };
            SsmOutput ssm_output = 3 [json_name = "ssm-output"];
         }
         SsmClass ssm_class = 7 [json_name = "ssm-class"];
         message ClockId {
            uint32 clock_id_configured = 1 [json_name = "clock-id-configured"];
            uint32 clock_id_learn = 2 [json_name = "clock-id-learn"];
            uint32 clock_id_out = 3 [json_name = "clock-id-out"];
         }
         ClockId clock_id = 8 [json_name = "clock-id"];
         message BitsSources {
            enum Sabit {
               INVALID_ENUM_VALUE_Sabit = 0;
               Sabit_SA4 = 4;
               Sabit_SA5 = 5;
               Sabit_SA6 = 6;
               Sabit_SA7 = 7;
               Sabit_SA8 = 8;
            };
            Sabit sabit = 1 [json_name = "sabit"];
            enum SignalType {
               SignalType_X_2MBPS = 0;
               SignalType_X_2MHZ = 1;
               SignalType_DCLS = 2;
               SignalType_X_1PPS = 3;
               SignalType_NONE = 255;
            };
            SignalType signal_type = 2 [json_name = "signal-type"];
            enum InvalidAct {
               InvalidAct_SHUTDOWN = 0;
               InvalidAct_TXDNU = 1;
               InvalidAct_TXAIS = 2;
            };
            InvalidAct invalid_act = 3 [json_name = "invalid-act"];
            bool force_cutoff_enable = 4 [json_name = "force-cutoff-enable"];
         }
         BitsSources bits_sources = 9 [json_name = "bits-sources"];
      }
      repeated Source source = 1 [json_name = "source"];
   }
   ExternalClockSources external_clock_sources = 3 [json_name = "external-clock-sources"];
   message Detections {
      message Detection {
         string source_name = 1 [json_name = "source-name"];
         string freq_value = 2 [json_name = "freq-value"];
      }
      repeated Detection detection = 1 [json_name = "detection"];
   }
   Detections detections = 4 [json_name = "detections"];
}

