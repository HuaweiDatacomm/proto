syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-08-03 16:01:26
// ProtoYang-version 1
// module huawei-itrace
// revision 2020-03-27
// namespace urn:huawei:yang:huawei-itrace

package huawei_itrace;

message Itrace {
   message Global {
      bool enable = 1 [json_name = "enable"];
      uint32 age_time = 2 [json_name = "age-time"];
   }
   Global global = 1 [json_name = "global"];
   message Profiles {
      message Profile {
         uint32 profile_id = 1 [json_name = "profile-id"];
         string description = 2 [json_name = "description"];
         message ProfileNodes {
            message ProfileNode {
               string source_ip = 1 [json_name = "source-ip"];
               string destination_ip = 2 [json_name = "destination-ip"];
               uint32 src_port = 3 [json_name = "src-port"];
               uint32 dst_port = 4 [json_name = "dst-port"];
               string source_mac = 5 [json_name = "source-mac"];
               string destination_mac = 6 [json_name = "destination-mac"];
               uint32 vlan = 7 [json_name = "vlan"];
               uint32 dscp = 8 [json_name = "dscp"];
               uint32 dst_port_icr_cnt = 9 [json_name = "dst-port-icr-cnt"];
               string vpn_instance = 10 [json_name = "vpn-instance"];
            }
            repeated ProfileNode profile_node = 1 [json_name = "profile-node"];
            message ExecutionPolicy_Start {
               bool start_now = 1 [json_name = "start-now"];
               message StartNowEndType_At {
                  string start_now_end_time = 1 [json_name = "start-now-end-time"];
                  string start_now_end_date = 2 [json_name = "start-now-end-date"];
               }
               message StartNowEndType_Delay {
                  message StartNowEndDelayType_EndDelayTime {
                     string start_now_end_delay_time = 1 [json_name = "start-now-end-delay-time"];
                  }
                  message StartNowEndDelayType_EndDelaySeconds {
                     uint32 start_now_end_delay_seconds = 1 [json_name = "start-now-end-delay-seconds"];
                  }
                  oneof StartNowEndDelayType {
                     StartNowEndDelayType_EndDelayTime start_now_end_delay_type_end_delay_time = 1 [json_name = "end-delay-time"];
                     StartNowEndDelayType_EndDelaySeconds start_now_end_delay_type_end_delay_seconds = 2 [json_name = "end-delay-seconds"];
                  }
               }
               oneof StartNowEndType {
                  StartNowEndType_At start_now_end_type_at = 2 [json_name = "at"];
                  StartNowEndType_Delay start_now_end_type_delay = 3 [json_name = "delay"];
               }
            }
            message ExecutionPolicy_Stop {
               bool stop6 = 1 [json_name = "stop"];
            }
            oneof ExecutionPolicy {
               ExecutionPolicy_Start execution_policy_start = 2 [json_name = "start"];
               ExecutionPolicy_Stop execution_policy_stop = 3 [json_name = "stop"];
            }
         }
         ProfileNodes profile_nodes = 3 [json_name = "profile-nodes"];
      }
      repeated Profile profile = 1 [json_name = "profile"];
   }
   Profiles profiles = 2 [json_name = "profiles"];
   message FlowCaches {
      message FlowCache {
         string source_ip = 1 [json_name = "source-ip"];
         string destination_ip = 2 [json_name = "destination-ip"];
         uint32 protocol_id = 3 [json_name = "protocol-id"];
         uint32 source_port = 4 [json_name = "source-port"];
         uint32 destination_port = 5 [json_name = "destination-port"];
         uint32 node_number = 6 [json_name = "node-number"];
         message NodeFlowCaches {
            message NodeFlowCache {
               uint32 node_id = 1 [json_name = "node-id"];
               uint32 device_id = 2 [json_name = "device-id"];
               string direction = 3 [json_name = "direction"];
               string in_interface = 4 [json_name = "in-interface"];
               string out_interface = 5 [json_name = "out-interface"];
               uint32 delay = 6 [json_name = "delay"];
               uint32 ttl = 7 [json_name = "ttl"];
               string timestamp = 8 [json_name = "timestamp"];
               uint32 queue_depth = 9 [json_name = "queue-depth"];
            }
            repeated NodeFlowCache node_flow_cache = 1 [json_name = "node-flow-cache"];
         }
         NodeFlowCaches node_flow_caches = 7 [json_name = "node-flow-caches"];
      }
      repeated FlowCache flow_cache = 1 [json_name = "flow-cache"];
   }
   FlowCaches flow_caches = 3 [json_name = "flow-caches"];
}

