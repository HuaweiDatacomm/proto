syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-10-08 14:24:09
// ProtoYang-version 1
// module huawei-eai-service
// revision 2020-05-12
// namespace urn:huawei:yang:huawei-eai-service

package huawei_eai_service;

message EaiService {
   message Global {
      bool anomaly_detection_enable = 1 [json_name = "anomaly-detection-enable"];
      bool anomaly_identify_enable = 2 [json_name = "anomaly-identify-enable"];
      bool resource_prediction_enable = 3 [json_name = "resource-prediction-enable"];
      bool logrecord_detection_enable = 4 [json_name = "logrecord-detection-enable"];
   }
   Global global = 1 [json_name = "global"];
   message AnomalyIdentifyDatas {
      message AnomalyIdentifyData {
         enum Class {
            Class_CONTROLX_PLANE = 0;
            Class_FORWARDINGX_PLANE = 1;
            Class_PROTOCOL = 2;
            Class_BASICX_NETWORKX_SERVICES = 3;
            Class_SYSTEMX_MANAGEMENT = 4;
            Class_SECURITY = 5;
            Class_QOS = 6;
            Class_BASICX_CONFIGURATION = 7;
            Class_SYSTEMX_MONITOR = 8;
            Class_SERVICE = 9;
         };
         Class class = 1 [json_name = "class"];
         enum SubClass {
            SubClass_DEVICEX_CONTROLX_PLANE = 0;
            SubClass_TRAFFICX_MANAGEMENT = 1;
            SubClass_NETWORKX_PROCESSOR = 2;
            SubClass_IPX_ROUTING = 3;
            SubClass_MPLS = 4;
            SubClass_IPX_MULTICAST = 5;
            SubClass_IPX_SERVICES = 6;
            SubClass_DEVICEX_MANAGEMENT = 7;
            SubClass_WANX_ACCESS = 8;
            SubClass_URPF = 9;
            SubClass_TRAFFICX_POLICING = 10;
            SubClass_NETWORKX_RELIABILITY = 11;
            SubClass_VPN = 12;
            SubClass_IPSEC = 13;
            SubClass_USERX_ACCESS = 14;
            SubClass_INTERFACEX_ANDX_DATAX_LINK = 15;
            SubClass_QPPB = 16;
            SubClass_MIRRORING = 17;
            SubClass_MFX_CLASSIFICATION = 18;
            SubClass_LANX_ACCESSX_ANDX_MANX_ACCESS = 19;
            SubClass_DCN = 20;
            SubClass_SYSTEMX_MANAGEMENT = 21;
            SubClass_FILEX_SYSTEMX_MANAGEMENT = 22;
            SubClass_TELNET = 23;
            SubClass_USERX_MANAGEMENT = 24;
            SubClass_SEGMENTX_ROUTING = 25;
            SubClass_ARPX_SECURITY = 26;
            SubClass_DEVICEX_SECURITY = 27;
            SubClass_MPLSX_DIFFSERVX_MODE = 28;
            SubClass_CONGESTIONX_AVOIDANCE = 29;
            SubClass_BGPX_FLOWX_SPECIFICATION = 30;
            SubClass_HQOS = 31;
            SubClass_CLOCKX_SYNCHRONIZATION = 32;
            SubClass_SMA = 33;
            SubClass_SOC = 34;
            SubClass_GTSM = 35;
            SubClass_IPX_HARDX_PIPE = 36;
            SubClass_VPNX_QOS = 37;
            SubClass_DHCPX_SNOOPING = 38;
            SubClass_SYSTEMX_MONITOR = 39;
            SubClass_LOOPX_DETECTION = 40;
            SubClass_NETSTREAM = 41;
            SubClass_LLDP = 42;
            SubClass_MACSEC = 43;
            SubClass_CGN = 44;
            SubClass_TRAFFIC = 45;
            SubClass_FABRICX_INTERFACEX_CONTROLLER = 46;
            SubClass_SUBCARD = 47;
         };
         SubClass sub_class = 2 [json_name = "sub-class"];
         uint32 module_id = 3 [json_name = "module-id"];
         uint32 chassis_id = 4 [json_name = "chassis-id"];
         uint32 slot_id = 5 [json_name = "slot-id"];
         string object_id = 6 [json_name = "object-id"];
         string attribute_id = 7 [json_name = "attribute-id"];
         uint32 sequence_id = 8 [json_name = "sequence-id"];
         enum State {
            State_ABNORMAL = 0;
            State_ABNORMALX_DURATION = 1;
            State_NORMAL = 2;
            State_NORMALX_DURATION = 3;
         };
         State state = 9 [json_name = "state"];
         uint32 upload_time = 10 [json_name = "upload-time"];
         uint32 collect_interval = 11 [json_name = "collect-interval"];
         uint32 fault_point_count = 12 [json_name = "fault-point-count"];
         uint32 abnormal_degree = 13 [json_name = "abnormal-degree"];
      }
      repeated AnomalyIdentifyData anomaly_identify_data = 1 [json_name = "anomaly-identify-data"];
   }
   AnomalyIdentifyDatas anomaly_identify_datas = 2 [json_name = "anomaly-identify-datas"];
   message ResourcePredictionDatas {
      message ResourcePredictionData {
         enum Class {
            Class_CONTROLX_PLANE = 0;
            Class_FORWARDINGX_PLANE = 1;
            Class_PROTOCOL = 2;
            Class_BASICX_NETWORKX_SERVICES = 3;
            Class_SYSTEMX_MANAGEMENT = 4;
            Class_SECURITY = 5;
            Class_QOS = 6;
            Class_BASICX_CONFIGURATION = 7;
            Class_SYSTEMX_MONITOR = 8;
            Class_SERVICE = 9;
         };
         Class class = 1 [json_name = "class"];
         enum SubClass {
            SubClass_DEVICEX_CONTROLX_PLANE = 0;
            SubClass_TRAFFICX_MANAGEMENT = 1;
            SubClass_NETWORKX_PROCESSOR = 2;
            SubClass_IPX_ROUTING = 3;
            SubClass_MPLS = 4;
            SubClass_IPX_MULTICAST = 5;
            SubClass_IPX_SERVICES = 6;
            SubClass_DEVICEX_MANAGEMENT = 7;
            SubClass_WANX_ACCESS = 8;
            SubClass_URPF = 9;
            SubClass_TRAFFICX_POLICING = 10;
            SubClass_NETWORKX_RELIABILITY = 11;
            SubClass_VPN = 12;
            SubClass_IPSEC = 13;
            SubClass_USERX_ACCESS = 14;
            SubClass_INTERFACEX_ANDX_DATAX_LINK = 15;
            SubClass_QPPB = 16;
            SubClass_MIRRORING = 17;
            SubClass_MFX_CLASSIFICATION = 18;
            SubClass_LANX_ACCESSX_ANDX_MANX_ACCESS = 19;
            SubClass_DCN = 20;
            SubClass_SYSTEMX_MANAGEMENT = 21;
            SubClass_FILEX_SYSTEMX_MANAGEMENT = 22;
            SubClass_TELNET = 23;
            SubClass_USERX_MANAGEMENT = 24;
            SubClass_SEGMENTX_ROUTING = 25;
            SubClass_ARPX_SECURITY = 26;
            SubClass_DEVICEX_SECURITY = 27;
            SubClass_MPLSX_DIFFSERVX_MODE = 28;
            SubClass_CONGESTIONX_AVOIDANCE = 29;
            SubClass_BGPX_FLOWX_SPECIFICATION = 30;
            SubClass_HQOS = 31;
            SubClass_CLOCKX_SYNCHRONIZATION = 32;
            SubClass_SMA = 33;
            SubClass_SOC = 34;
            SubClass_GTSM = 35;
            SubClass_IPX_HARDX_PIPE = 36;
            SubClass_VPNX_QOS = 37;
            SubClass_DHCPX_SNOOPING = 38;
            SubClass_SYSTEMX_MONITOR = 39;
            SubClass_LOOPX_DETECTION = 40;
            SubClass_NETSTREAM = 41;
            SubClass_LLDP = 42;
            SubClass_MACSEC = 43;
            SubClass_CGN = 44;
            SubClass_TRAFFIC = 45;
            SubClass_FABRICX_INTERFACEX_CONTROLLER = 46;
            SubClass_SUBCARD = 47;
         };
         SubClass sub_class = 2 [json_name = "sub-class"];
         uint32 module_id = 3 [json_name = "module-id"];
         uint32 chassis_id = 4 [json_name = "chassis-id"];
         uint32 slot_id = 5 [json_name = "slot-id"];
         string object_id = 6 [json_name = "object-id"];
         string attribute_id = 7 [json_name = "attribute-id"];
         uint32 sequence_id = 8 [json_name = "sequence-id"];
         enum State {
            State_ABNORMAL = 0;
            State_ABNORMALX_DURATION = 1;
            State_NORMAL = 2;
            State_NORMALX_DURATION = 3;
         };
         State state = 9 [json_name = "state"];
         uint32 upload_time = 10 [json_name = "upload-time"];
         uint32 collect_interval = 11 [json_name = "collect-interval"];
         uint32 over_threshold_days = 12 [json_name = "over-threshold-days"];
         uint32 period = 13 [json_name = "period"];
         enum ValueType {
            ValueType_PERCENTAGE = 0;
            ValueType_ORIGINAL = 1;
         };
         ValueType value_type = 14 [json_name = "value-type"];
         uint64 threshold = 15 [json_name = "threshold"];
         uint32 predict_num = 16 [json_name = "predict-num"];
         string predict_value = 17 [json_name = "predict-value"];
         string predict_std_value = 18 [json_name = "predict-std-value"];
         string history_value = 19 [json_name = "history-value"];
      }
      repeated ResourcePredictionData resource_prediction_data = 1 [json_name = "resource-prediction-data"];
   }
   ResourcePredictionDatas resource_prediction_datas = 3 [json_name = "resource-prediction-datas"];
   message LogrecordDetectionRecommendDatas {
      message LogrecordDetectionRecommendData {
         uint32 log_type = 1 [json_name = "log-type"];
         string class = 2 [json_name = "class"];
         string sub_class = 3 [json_name = "sub-class"];
         string chassis = 4 [json_name = "chassis"];
         string slot = 5 [json_name = "slot"];
         string card = 6 [json_name = "card"];
         string interface_name = 7 [json_name = "interface-name"];
         uint32 interface_index = 8 [json_name = "interface-index"];
         string log_content = 9 [json_name = "log-content"];
      }
      repeated LogrecordDetectionRecommendData logrecord_detection_recommend_data = 1 [json_name = "logrecord-detection-recommend-data"];
   }
   LogrecordDetectionRecommendDatas logrecord_detection_recommend_datas = 4 [json_name = "logrecord-detection-recommend-datas"];
}

