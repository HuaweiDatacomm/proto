syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-08-03 16:01:26
// ProtoYang-version 1
// module huawei-aaa-service
// revision 2020-03-02
// namespace urn:huawei:yang:huawei-aaa-service

package huawei_aaa_service;

message AaaService {
   message ServiceSchemes {
      message ServiceScheme {
         string name = 1 [json_name = "name"];
         uint32 admin_user_privilege_level = 2 [json_name = "admin-user-privilege-level"];
         string dhcp_group = 3 [json_name = "dhcp-group"];
         uint32 vlan = 4 [json_name = "vlan"];
         bool voice_vlan_enable = 5 [json_name = "voice-vlan-enable"];
         string qos_profile = 6 [json_name = "qos-profile"];
         string ucl_group = 7 [json_name = "ucl-group"];
         uint32 priority = 8 [json_name = "priority"];
         uint32 user_name_access_max_num = 9 [json_name = "user-name-access-max-num"];
         repeated string ip_pool = 10 [json_name = "ip-pool"];
         repeated string acl = 11 [json_name = "acl"];
         repeated string acl_ipv6 = 12 [json_name = "acl-ipv6"];
         message Dns {
            string primary_ip_address = 1 [json_name = "primary-ip-address"];
            string secondary_ip_address = 2 [json_name = "secondary-ip-address"];
            string dns_name = 3 [json_name = "dns-name"];
         }
         Dns dns = 13 [json_name = "dns"];
         message Wins {
            string primary_ip_address = 1 [json_name = "primary-ip-address"];
            string secondary_ip_address = 2 [json_name = "secondary-ip-address"];
         }
         Wins wins = 14 [json_name = "wins"];
         message IdleCutFunction {
            uint32 idle_time = 1 [json_name = "idle-time"];
            message IdleFlow {
               uint32 flow_value = 1 [json_name = "flow-value"];
               enum FlowDirection {
                  FlowDirection_INBOUND = 0;
                  FlowDirection_OUTBOUND = 1;
               };
               FlowDirection flow_direction = 2 [json_name = "flow-direction"];
            }
            IdleFlow idle_flow = 2 [json_name = "idle-flow"];
         }
         IdleCutFunction idle_cut_function = 15 [json_name = "idle-cut-function"];
         message Daas {
            message Daa {
               uint32 traffic_level = 1 [json_name = "traffic-level"];
               bool accounting_on = 2 [json_name = "accounting-on"];
               string qos_profile = 3 [json_name = "qos-profile"];
            }
            repeated Daa daa = 1 [json_name = "daa"];
         }
         Daas daas = 16 [json_name = "daas"];
         message PolicyRoute {
            string next_hop = 1 [json_name = "next-hop"];
            uint32 vlan = 2 [json_name = "vlan"];
         }
         PolicyRoute policy_route = 17 [json_name = "policy-route"];
         message RedirectAcl {
            string acl = 1 [json_name = "acl"];
         }
         RedirectAcl redirect_acl = 18 [json_name = "redirect-acl"];
         message RedirectAclIpv6 {
            string acl = 1 [json_name = "acl"];
         }
         RedirectAclIpv6 redirect_acl_ipv6 = 19 [json_name = "redirect-acl-ipv6"];
         message AutoUpdateUrl {
            string url = 1 [json_name = "url"];
            string password = 2 [json_name = "password"];
            uint32 version = 3 [json_name = "version"];
         }
         AutoUpdateUrl auto_update_url = 20 [json_name = "auto-update-url"];
         message RouteSet {
            string acl_id = 1 [json_name = "acl-id"];
            bool set_interface_enable = 2 [json_name = "set-interface-enable"];
         }
         RouteSet route_set = 21 [json_name = "route-set"];
         message RemoteAuthorize {
            enum AuthorizeParameters {
               AuthorizeParameters_ACL = 0;
               AuthorizeParameters_CAR = 1;
               AuthorizeParameters_UCLX_GROUP = 2;
            };
            repeated AuthorizeParameters authorize_parameters = 1 [json_name = "authorize-parameters"];
         }
         RemoteAuthorize remote_authorize = 22 [json_name = "remote-authorize"];
         message LocalAuthorize {
            message ParametersType_None {
               bool none6 = 1 [json_name = "none"];
            }
            message ParametersType_Parameters {
               enum AuthorizeParameters {
                  AuthorizeParameters_ACL = 0;
                  AuthorizeParameters_CAR = 1;
                  AuthorizeParameters_UCLX_GROUP = 2;
                  AuthorizeParameters_PRIORITY = 3;
                  AuthorizeParameters_VLAN = 4;
               };
               repeated AuthorizeParameters authorize_parameters = 1 [json_name = "authorize-parameters"];
            }
            oneof ParametersType {
               ParametersType_None parameters_type_none = 1 [json_name = "none"];
               ParametersType_Parameters parameters_type_parameters = 2 [json_name = "parameters"];
            }
         }
         LocalAuthorize local_authorize = 23 [json_name = "local-authorize"];
      }
      repeated ServiceScheme service_scheme = 1 [json_name = "service-scheme"];
   }
   ServiceSchemes service_schemes = 1 [json_name = "service-schemes"];
}

