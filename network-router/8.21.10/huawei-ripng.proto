syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-08-03 16:01:26
// ProtoYang-version 1
// module huawei-ripng
// revision 2021-01-11
// revision 2020-06-17
// revision 2020-03-13
// revision 2020-03-03
// revision 2020-01-14
// revision 2020-01-03
// revision 2019-12-23
// revision 2019-11-25
// namespace urn:huawei:yang:huawei-ripng

package huawei_ripng;

message Ripng {
   message Interfaces {
      message Interface {
         uint32 defaultRtCost = 1;
         uint32 defaultRtTag = 2;
         enum DefaultRtType {
            DefaultRtType_NONE = 0;
            DefaultRtType_ONLY = 1;
            DefaultRtType_ORIGINATE = 2;
         };
         DefaultRtType defaultRtType = 3;
         string interfaceName = 4;
         message Interfaceauthentication {
            enum AuthenticationType {
               AuthenticationType_IPSEC = 0;
               AuthenticationType_NONE = 1;
            };
            AuthenticationType authenticationType = 1;
            string ipsecSa = 2;
         }
         Interfaceauthentication interfaceauthentication = 5;
         message IntfStatisticss {
            message IntfStatistics {
               uint32 authenticationFailed = 1;
               string interfaceIPAddress = 2;
               uint32 packetSendFailed = 3;
               uint32 packetsSent = 4;
               uint32 processId = 5;
               uint32 receivedBadPackets = 6;
               uint32 receivedBadRoutes = 7;
               uint32 receivedRespose = 8;
               uint32 receivedRoutes = 9;
               uint32 requestIgnored = 10;
               uint32 requestPacketSent = 11;
               uint32 requestReceived = 12;
               uint32 responseIgnored = 13;
               uint32 responsePacketSent = 14;
               uint32 routesSent = 15;
               uint32 updatesSent = 16;
            }
            repeated IntfStatistics intfStatistics = 1;
         }
         IntfStatisticss intfStatisticss = 6;
         message Metric {
            string aclName = 1;
            uint32 aclNumber = 2;
            string ipPrefixName = 3;
            uint32 metricIn = 4;
            uint32 metricOut = 5;
            enum MetricOutFltr {
               MetricOutFltr_ACL = 0;
               MetricOutFltr_IP_PREFIX = 1;
               MetricOutFltr_NONE = 2;
            };
            MetricOutFltr metricOutFltr = 6;
         }
         Metric metric = 7;
         uint32 poisonReverse = 8;
         uint32 processId = 9;
         uint32 splitHorizon = 10;
         message SummInfos {
            message SummInfo {
               uint32 avoidFeedback = 1;
               uint32 summMaskLen = 2;
               enum SummState {
                  SummState_ACTIVE = 0;
                  SummState_STALE = 1;
               };
               SummState summState = 3;
               string summaryAddress6 = 4;
            }
            repeated SummInfo summInfo = 1;
         }
         SummInfos summInfos = 11;
         message Summarys {
            message Summary {
               uint32 avoidFeedback = 1;
               uint32 maskLen = 2;
               string summaryAddress6 = 3;
            }
            repeated Summary summary = 1;
         }
         Summarys summarys = 12;
      }
      repeated Interface interface = 1;
   }
   Interfaces interfaces = 1;
   message Processs {
      message Process {
         enum CheckZero {
            CheckZero_DISABLE = 0;
            CheckZero_ENABLE = 1;
         };
         CheckZero checkZero = 1;
         uint32 defaultCost = 2;
         string description = 3;
         uint32 ecmp = 4;
         message ImportRoutes {
            message ImportRoute {
               uint32 cost = 1;
               enum ImpRoutePolicy {
                  ImpRoutePolicy_NONE = 0;
                  ImpRoutePolicy_ROUTE_FILTER = 1;
                  ImpRoutePolicy_ROUTE_POLICY = 2;
               };
               ImpRoutePolicy impRoutePolicy = 2;
               enum ImportProtocol {
                  ImportProtocol_BGP_ID = 0;
                  ImportProtocol_DIRECT_ID = 1;
                  ImportProtocol_ISIS_ID = 2;
                  ImportProtocol_OSPFV3_ID = 3;
                  ImportProtocol_RIPNG_ID = 4;
                  ImportProtocol_STATIC_ID = 5;
                  ImportProtocol_UNR_ID = 6;
               };
               ImportProtocol importProtocol = 3;
               enum InheritCost {
                  InheritCost_DISABLE = 0;
                  InheritCost_ENABLE = 1;
               };
               InheritCost inheritCost = 4;
               enum PermitIBGP {
                  PermitIBGP_DISABLE = 0;
                  PermitIBGP_ENABLE = 1;
               };
               PermitIBGP permitIBGP = 5;
               uint32 protocolProcessId = 6;
               string routeFilter = 7;
               string routePolicy = 8;
            }
            repeated ImportRoute importRoute = 1;
         }
         ImportRoutes importRoutes = 5;
         message Peers {
            message Peer {
               string interfaceName = 1;
               uint32 lastRecSeqNo = 2;
               string nbrIPAddr = 3;
               uint32 noOfGBGRoutes = 4;
               uint32 noOfHldRoutes = 5;
               uint32 noOfRIPRoutes = 6;
            }
            repeated Peer peer = 1;
         }
         Peers peers = 6;
         message Preference {
            string preferenceFilter = 1;
            string preferencePolicy = 2;
            enum PreferenceType {
               PreferenceType_NONE = 0;
               PreferenceType_ROUTE_FILTER = 1;
               PreferenceType_ROUTE_POLICY = 2;
            };
            PreferenceType preferenceType = 3;
            uint32 preferenceValue = 4;
         }
         Preference preference = 7;
         uint32 processId = 8;
         message Processauthentication {
            enum AuthenticationType {
               AuthenticationType_IPSEC = 0;
               AuthenticationType_NONE = 1;
            };
            AuthenticationType authenticationType = 1;
            string ipsecSa = 2;
         }
         Processauthentication processauthentication = 9;
         message Routes {
            message Route {
               uint32 cost = 1;
               string destinationAddress = 2;
               string interfaceName = 3;
               string nexthop = 4;
               string pathType = 5;
               string peerAddress = 6;
               uint32 prefixLength = 7;
               uint32 tag = 8;
            }
            repeated Route route = 1;
         }
         Routes routes = 10;
         message Statistics {
            uint32 numOfIntfEnabled = 1;
            uint32 numOfPeriodicUpdSent = 2;
            uint32 numOfRoutesInDB = 3;
            string numOfRtSentInLPU = 4;
            uint32 numOfTriggeredUpdSent = 5;
            uint32 numofRtSndableInPU = 6;
         }
         Statistics statistics = 11;
         message Timer {
            uint32 age = 1;
            uint32 garbage = 2;
            uint32 periodic = 3;
            uint32 suppress = 4;
         }
         Timer timer = 12;
         string vpnName = 13;
      }
      repeated Process process = 1;
   }
   Processs processs = 2;
}

