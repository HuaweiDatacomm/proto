syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2022-01-30 09:55:32
// ProtoYang-version 1
// module huawei-cgn-nat444
// revision 2022-01-29
// revision 2021-11-05
// revision 2021-10-11
// revision 2021-07-31
// namespace urn:huawei:yang:huawei-cgn-nat444

package huawei_cgn_nat444;

message CgnNat444 {
   message NatInstances {
      message NatInstance {
         string instance_name = 1 [json_name = "instance-name"];
         uint32 instance_id = 2 [json_name = "instance-id"];
         message Algs {
            message Alg {
               enum Protocol {
                  INVALID_ENUM_VALUE_Protocol = 0;
                  Protocol_FTP = 1;
                  Protocol_RTSP = 2;
                  Protocol_PPTP = 4;
                  Protocol_SIP = 8;
                  Protocol_DNS = 16;
               };
               Protocol protocol = 1 [json_name = "protocol"];
               uint32 rate_threshold = 2 [json_name = "rate-threshold"];
               bool separate_translation = 3 [json_name = "separate-translation"];
            }
            repeated Alg alg = 1 [json_name = "alg"];
         }
         Algs algs = 3 [json_name = "algs"];
         message Log {
            message Hosts {
               message Host {
                  string host_ip = 1 [json_name = "host-ip"];
                  uint32 host_port = 2 [json_name = "host-port"];
                  string vpn_name = 3 [json_name = "vpn-name"];
                  string source_ip = 4 [json_name = "source-ip"];
                  uint32 source_port = 5 [json_name = "source-port"];
                  string inside_vpn_name = 6 [json_name = "inside-vpn-name"];
                  string host_name = 7 [json_name = "host-name"];
                  bool secondary = 8 [json_name = "secondary"];
               }
               repeated Host host = 1 [json_name = "host"];
            }
            Hosts hosts = 1 [json_name = "hosts"];
            message SendMode {
               enum Mode {
                  Mode_POLLING = 0;
                  Mode_CONCURRENT = 1;
               };
               Mode mode = 1 [json_name = "mode"];
            }
            SendMode send_mode = 2 [json_name = "send-mode"];
         }
         Log log = 4 [json_name = "log"];
         message BindServiceInstanceGroup {
            string name = 1 [json_name = "name"];
         }
         BindServiceInstanceGroup bind_service_instance_group = 5 [json_name = "bind-service-instance-group"];
         message NatServer {
            message Attribute {
               bool using_address_group_ip = 1 [json_name = "using-address-group-ip"];
            }
            Attribute attribute = 1 [json_name = "attribute"];
         }
         NatServer nat_server = 6 [json_name = "nat-server"];
         message PortRange {
            uint32 initial_number = 1 [json_name = "initial-number"];
            uint32 extended_number = 2 [json_name = "extended-number"];
            uint32 extended_times = 3 [json_name = "extended-times"];
         }
         PortRange port_range = 7 [json_name = "port-range"];
         message FilterMode {
            enum Mode {
               Mode_SYMMETRIC = 0;
               Mode_FULLX_CONE = 1;
            };
            Mode mode = 1 [json_name = "mode"];
         }
         FilterMode filter_mode = 8 [json_name = "filter-mode"];
         message InterChassisDistributing {
            string ip_address = 1 [json_name = "ip-address"];
            uint32 mask_length = 2 [json_name = "mask-length"];
            string vpn_name = 3 [json_name = "vpn-name"];
         }
         InterChassisDistributing inter_chassis_distributing = 9 [json_name = "inter-chassis-distributing"];
      }
      repeated NatInstance nat_instance = 1 [json_name = "nat-instance"];
   }
   NatInstances nat_instances = 1 [json_name = "nat-instances"];
}

