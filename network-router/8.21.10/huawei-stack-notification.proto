syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-08-03 16:01:26
// ProtoYang-version 1
// module huawei-stack-notification
// revision 2021-05-15
// namespace urn:huawei:yang:huawei-stack-notification

package huawei_stack_notification;

message StackLinkUp {
   string port_name = 1 [json_name = "port-name"];
   uint32 member_id = 2 [json_name = "member-id"];
   uint32 port_id = 3 [json_name = "port-id"];
   enum PortStatus {
      INVALID_ENUM_VALUE_PortStatus = 0;
      PortStatus_UP = 1;
      PortStatus_DOWN = 2;
   };
   PortStatus port_status = 4 [json_name = "port-status"];
}
message StackLinkDown {
   string port_name = 1 [json_name = "port-name"];
   uint32 member_id = 2 [json_name = "member-id"];
   uint32 port_id = 3 [json_name = "port-id"];
   enum PortStatus {
      INVALID_ENUM_VALUE_PortStatus = 0;
      PortStatus_UP = 1;
      PortStatus_DOWN = 2;
   };
   PortStatus port_status = 4 [json_name = "port-status"];
}
message StackPortLinkErr {
   string local_port_name = 1 [json_name = "local-port-name"];
   string peer_port_name = 2 [json_name = "peer-port-name"];
   string reason = 3 [json_name = "reason"];
}
message StackPortLinkErrResume {
   string local_port_name = 1 [json_name = "local-port-name"];
   string peer_port_name = 2 [json_name = "peer-port-name"];
   string reason = 3 [json_name = "reason"];
}
message PhyStackPortUp {
   string if_name = 1 [json_name = "if-name"];
}
message PhyStackPortDown {
   string if_name = 1 [json_name = "if-name"];
}
message StackMemberAdd {
   uint32 member_id_index = 1 [json_name = "member-id-index"];
   uint32 member_id = 2 [json_name = "member-id"];
   string mac_address = 3 [json_name = "mac-address"];
}
message StackMemberLeave {
   uint32 member_id_index = 1 [json_name = "member-id-index"];
   uint32 member_id = 2 [json_name = "member-id"];
   string mac_address = 3 [json_name = "mac-address"];
}
message StackPortProtocolDown {
   string if_name = 1 [json_name = "if-name"];
}
message StackPortProtocolDownResume {
   string if_name = 1 [json_name = "if-name"];
}
message DadConflictDetect {
}
message DadConflictDetectResume {
}
message StackMemberInfo {
   message StackMemberInfos {
      message StackMemberInfo3 {
         uint32 member_id = 1 [json_name = "member-id"];
         bool enable = 2 [json_name = "enable"];
         enum Role {
            INVALID_ENUM_VALUE_Role = 0;
            Role_MASTER = 1;
            Role_STANDBY = 2;
            Role_SLAVE = 3;
         };
         Role role = 3 [json_name = "role"];
         string mac = 4 [json_name = "mac"];
         uint32 priority = 5 [json_name = "priority"];
         uint32 domain_id = 6 [json_name = "domain-id"];
         string esn = 7 [json_name = "esn"];
         string model = 8 [json_name = "model"];
         enum Event {
            INVALID_ENUM_VALUE_Event = 0;
            Event_ONLINE = 1;
            Event_OFFLINE = 2;
            Event_REGISTERED = 3;
            Event_UNKONW = 4;
         };
         Event event = 9 [json_name = "event"];
      }
      repeated StackMemberInfo3 stack_member_info = 1 [json_name = "stack-member-info"];
   }
   StackMemberInfos stack_member_infos = 1 [json_name = "stack-member-infos"];
}
message StackRoleChange {
   message StackMemberInfos {
      message StackMemberInfo {
         uint32 member_id = 1 [json_name = "member-id"];
         enum Role {
            INVALID_ENUM_VALUE_Role = 0;
            Role_MASTER = 1;
            Role_STANDBY = 2;
            Role_SLAVE = 3;
         };
         Role role = 2 [json_name = "role"];
         string esn = 3 [json_name = "esn"];
      }
      repeated StackMemberInfo stack_member_info = 1 [json_name = "stack-member-info"];
   }
   StackMemberInfos stack_member_infos = 1 [json_name = "stack-member-infos"];
}

