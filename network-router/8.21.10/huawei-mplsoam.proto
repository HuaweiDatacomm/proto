syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-09-01 20:16:01
// ProtoYang-version 1
// module huawei-mplsoam
// revision 2019-04-18
// namespace urn:huawei:yang:huawei-mplsoam

package huawei_mplsoam;

message Mplsoam {
   message Global {
      bool fdi_enable = 1 [json_name = "fdi-enable"];
      bool itu_mode = 2 [json_name = "itu-mode"];
      bool oam_enable = 3 [json_name = "oam-enable"];
      uint32 oam_num = 4 [json_name = "oam-num"];
   }
   Global global = 1 [json_name = "global"];
   message Pws {
      message Pw {
         uint32 autoModeOverTime = 1;
         enum AvailableState {
            AvailableState_AVAILABLE = 0;
            AvailableState_UNAVAILABLE = 1;
         };
         AvailableState availableState = 2;
         enum BdiDefectState {
            BdiDefectState_INX_DEFECT = 0;
            BdiDefectState_NONX_DEFECT = 1;
         };
         BdiDefectState bdiDefectState = 3;
         string bdiDefectType = 4;
         enum BdiFrequence {
            BdiFrequence_DETECTX_FREQ = 0;
            BdiFrequence_PERX_SECOND = 1;
         };
         BdiFrequence bdiFrequence = 5;
         uint32 ccExp = 6;
         enum CompatibilityMode {
            CompatibilityMode_PTNX_MODE = 0;
            CompatibilityMode_ROUTEX_MODE = 1;
         };
         CompatibilityMode compatibilityMode = 7;
         string defectType = 8;
         enum DetectFrequence {
            DetectFrequence_INTERVAL100MS = 0;
            DetectFrequence_INTERVAL10MS = 1;
            DetectFrequence_INTERVAL1S = 2;
            DetectFrequence_INTERVAL200MS = 3;
            DetectFrequence_INTERVAL20MS = 4;
            DetectFrequence_INTERVAL3MS = 5;
            DetectFrequence_INTERVAL500MS = 6;
            DetectFrequence_INTERVAL50MS = 7;
         };
         DetectFrequence detectFrequence = 9;
         enum DetectMode {
            DetectMode_AUTO = 0;
            DetectMode_MANUAL = 1;
         };
         DetectMode detectMode = 10;
         enum DetectPktType {
            DetectPktType_CV = 0;
            DetectPktType_FFD = 1;
         };
         DetectPktType detectPktType = 11;
         string localDefectLocation = 12;
         enum LocalDefectType {
            LocalDefectType_DEXCESS = 0;
            LocalDefectType_DLOCV = 1;
            LocalDefectType_DPEERME = 2;
            LocalDefectType_DSERVER = 3;
            LocalDefectType_DTTSI_MISMATCH = 4;
            LocalDefectType_DTTSI_MISMERGE = 5;
            LocalDefectType_DUNKNOWN = 6;
         };
         LocalDefectType localDefectType = 13;
         enum LocalDetectStatus {
            LocalDetectStatus_INIT = 0;
            LocalDetectStatus_LOCALDEFECTINVALID = 1;
            LocalDetectStatus_LOCALDEFECTVALID = 2;
            LocalDetectStatus_LOCALINVALID = 3;
            LocalDetectStatus_LOCALVALID = 4;
            LocalDetectStatus_REMOTEDEFECTINVALID = 5;
            LocalDetectStatus_REMOTEDEFECTVALID = 6;
            LocalDetectStatus_REMOTEINVALID = 7;
            LocalDetectStatus_REMOTEVALID = 8;
         };
         LocalDetectStatus localDetectStatus = 14;
         uint32 localInvalidTime = 15;
         enum OamActiveState {
            OamActiveState_ACTIVE = 0;
            OamActiveState_DEACTIVE = 1;
         };
         OamActiveState oamActiveState = 16;
         uint32 oamLossSd = 17;
         uint32 oamLossSf = 18;
         string peerIp = 19;
         enum PwType {
            PwType_VLL = 0;
            PwType_VPLS = 1;
         };
         PwType pwType = 20;
         bool receiveEnable = 21;
         string remoteDefectLocation = 22;
         enum RemoteDefectType {
            RemoteDefectType_DEXCESS = 0;
            RemoteDefectType_DLOCV = 1;
            RemoteDefectType_DPEERME = 2;
            RemoteDefectType_DSERVER = 3;
            RemoteDefectType_DTTSI_MISMATCH = 4;
            RemoteDefectType_DTTSI_MISMERGE = 5;
            RemoteDefectType_DUNKNOWN = 6;
         };
         RemoteDefectType remoteDefectType = 23;
         enum RemoteDetectStatus {
            RemoteDetectStatus_INIT = 0;
            RemoteDetectStatus_LOCALDEFECTINVALID = 1;
            RemoteDetectStatus_LOCALDEFECTVALID = 2;
            RemoteDetectStatus_LOCALINVALID = 3;
            RemoteDetectStatus_LOCALVALID = 4;
            RemoteDetectStatus_REMOTEDEFECTINVALID = 5;
            RemoteDetectStatus_REMOTEDEFECTVALID = 6;
            RemoteDetectStatus_REMOTEINVALID = 7;
            RemoteDetectStatus_REMOTEVALID = 8;
         };
         RemoteDetectStatus remoteDetectStatus = 24;
         uint32 remoteInvalidTime = 25;
         string remoteLsrId = 26;
         uint32 remoteVcId = 27;
         enum RemoteVcType {
            RemoteVcType_ATMX_1TO1X_VCC = 0;
            RemoteVcType_ATMX_1TO1X_VPC = 1;
            RemoteVcType_ATMX_AAL5X_PDU = 2;
            RemoteVcType_ATMX_AAL5X_SDU = 3;
            RemoteVcType_ATMX_NTO1X_VCC = 4;
            RemoteVcType_ATMX_NTO1X_VPC = 5;
            RemoteVcType_ATMX_TRANSX_CELL = 6;
            RemoteVcType_CEP = 7;
            RemoteVcType_CESOPSNX_BASIC = 8;
            RemoteVcType_ETHERNET = 9;
            RemoteVcType_FR = 10;
            RemoteVcType_HDLC = 11;
            RemoteVcType_IPX_INTERWORKING = 12;
            RemoteVcType_IPX_LAYER2 = 13;
            RemoteVcType_PPP = 14;
            RemoteVcType_SATOPX_E1 = 15;
            RemoteVcType_SATOPX_E3 = 16;
            RemoteVcType_SATOPX_T1 = 17;
            RemoteVcType_VLAN = 18;
         };
         RemoteVcType remoteVcType = 28;
         bool sendEnable = 29;
         bool slmSendEnable = 30;
         uint32 slmThreshold1 = 31;
         uint32 slmThreshold2 = 32;
         uint32 twoDmExp = 33;
         uint32 twoDmPacketSize = 34;
         enum TwoDmPadValue {
            TwoDmPadValue_PADDINGVALUE0 = 0;
            TwoDmPadValue_PADDINGVALUE1 = 1;
         };
         TwoDmPadValue twoDmPadValue = 35;
         bool twoDmSendEnable = 36;
         uint32 vcId = 37;
         enum VcType {
            VcType_ATMX_1TO1X_VCC = 0;
            VcType_ATMX_1TO1X_VPC = 1;
            VcType_ATMX_AAL5X_PDU = 2;
            VcType_ATMX_AAL5X_SDU = 3;
            VcType_ATMX_NTO1X_VCC = 4;
            VcType_ATMX_NTO1X_VPC = 5;
            VcType_ATMX_TRANSX_CELL = 6;
            VcType_CEP = 7;
            VcType_CESOPSNX_BASIC = 8;
            VcType_ETHERNET = 9;
            VcType_FR = 10;
            VcType_HDLC = 11;
            VcType_IPX_INTERWORKING = 12;
            VcType_IPX_LAYER2 = 13;
            VcType_PPP = 14;
            VcType_SATOPX_E1 = 15;
            VcType_SATOPX_E3 = 16;
            VcType_SATOPX_T1 = 17;
            VcType_VLAN = 18;
         };
         VcType vcType = 38;
      }
      repeated Pw pw = 1;
   }
   Pws pws = 2;
   message Rings {
      message Ring {
         enum BdiFrequence {
            BdiFrequence_INTERVAL100MS = 0;
            BdiFrequence_INTERVAL10MS = 1;
            BdiFrequence_INTERVAL1S = 2;
            BdiFrequence_INTERVAL200MS = 3;
            BdiFrequence_INTERVAL20MS = 4;
            BdiFrequence_INTERVAL3MS = 5;
            BdiFrequence_INTERVAL500MS = 6;
            BdiFrequence_INTERVAL50MS = 7;
         };
         BdiFrequence bdiFrequence = 1;
         uint32 ccExp = 2;
         enum DetectFrequence {
            DetectFrequence_INTERVAL100MS = 0;
            DetectFrequence_INTERVAL10MS = 1;
            DetectFrequence_INTERVAL1S = 2;
            DetectFrequence_INTERVAL200MS = 3;
            DetectFrequence_INTERVAL20MS = 4;
            DetectFrequence_INTERVAL3MS = 5;
            DetectFrequence_INTERVAL500MS = 6;
            DetectFrequence_INTERVAL50MS = 7;
         };
         DetectFrequence detectFrequence = 3;
         enum DetectMode {
            DetectMode_AUTO = 0;
            DetectMode_MANUAL = 1;
         };
         DetectMode detectMode = 4;
         enum DetectPktType {
            DetectPktType_CV = 0;
            DetectPktType_FFD = 1;
         };
         DetectPktType detectPktType = 5;
         string localDefectLocation = 6;
         enum LocalDefectType {
            LocalDefectType_DEXCESS = 0;
            LocalDefectType_DLOCV = 1;
            LocalDefectType_DPEERME = 2;
            LocalDefectType_DSERVER = 3;
            LocalDefectType_DTTSI_MISMATCH = 4;
            LocalDefectType_DTTSI_MISMERGE = 5;
            LocalDefectType_DUNKNOWN = 6;
         };
         LocalDefectType localDefectType = 7;
         enum LocalDetectStatus {
            LocalDetectStatus_INIT = 0;
            LocalDetectStatus_LOCALDEFECTINVALID = 1;
            LocalDetectStatus_LOCALDEFECTVALID = 2;
            LocalDetectStatus_LOCALINVALID = 3;
            LocalDetectStatus_LOCALVALID = 4;
            LocalDetectStatus_REMOTEDEFECTINVALID = 5;
            LocalDetectStatus_REMOTEDEFECTVALID = 6;
            LocalDetectStatus_REMOTEINVALID = 7;
            LocalDetectStatus_REMOTEVALID = 8;
         };
         LocalDetectStatus localDetectStatus = 8;
         uint32 localInvalidTime = 9;
         enum OamActiveState {
            OamActiveState_ACTIVE = 0;
            OamActiveState_DEACTIVE = 1;
         };
         OamActiveState oamActiveState = 10;
         uint32 oamLossSd = 11;
         uint32 oamLossSf = 12;
         bool receiveEnable = 13;
         string remoteDefectLocation = 14;
         enum RemoteDefectType {
            RemoteDefectType_DEXCESS = 0;
            RemoteDefectType_DLOCV = 1;
            RemoteDefectType_DPEERME = 2;
            RemoteDefectType_DSERVER = 3;
            RemoteDefectType_DTTSI_MISMATCH = 4;
            RemoteDefectType_DTTSI_MISMERGE = 5;
            RemoteDefectType_DUNKNOWN = 6;
         };
         RemoteDefectType remoteDefectType = 15;
         enum RemoteDetectStatus {
            RemoteDetectStatus_INIT = 0;
            RemoteDetectStatus_LOCALDEFECTINVALID = 1;
            RemoteDetectStatus_LOCALDEFECTVALID = 2;
            RemoteDetectStatus_LOCALINVALID = 3;
            RemoteDetectStatus_LOCALVALID = 4;
            RemoteDetectStatus_REMOTEDEFECTINVALID = 5;
            RemoteDetectStatus_REMOTEDEFECTVALID = 6;
            RemoteDetectStatus_REMOTEINVALID = 7;
            RemoteDetectStatus_REMOTEVALID = 8;
         };
         RemoteDetectStatus remoteDetectStatus = 16;
         uint32 remoteInvalidTime = 17;
         enum RingDirection {
            RingDirection_EAST = 0;
            RingDirection_WEST = 1;
         };
         RingDirection ringDirection = 18;
         uint32 ringId = 19;
         string ringName = 20;
         bool sendEnable = 21;
      }
      repeated Ring ring = 1;
   }
   Rings rings = 3;
   message TunnelExts {
      message TunnelExt {
         uint32 autoModeOverTime = 1;
         enum AvailableState {
            AvailableState_AVAILABLE = 0;
            AvailableState_UNAVAILABLE = 1;
         };
         AvailableState availableState = 2;
         enum BdiDefectState {
            BdiDefectState_INX_DEFECT = 0;
            BdiDefectState_NONX_DEFECT = 1;
         };
         BdiDefectState bdiDefectState = 3;
         string bdiDefectType = 4;
         enum BdiFrequence {
            BdiFrequence_DETECTX_FREQ = 0;
            BdiFrequence_PERX_SECOND = 1;
         };
         BdiFrequence bdiFrequence = 5;
         uint32 ccExp = 6;
         enum CompatibilityMode {
            CompatibilityMode_PTNX_MODE = 0;
            CompatibilityMode_ROUTEX_MODE = 1;
         };
         CompatibilityMode compatibilityMode = 7;
         string defectType = 8;
         enum DetectFrequence {
            DetectFrequence_INTERVAL100MS = 0;
            DetectFrequence_INTERVAL10MS = 1;
            DetectFrequence_INTERVAL1S = 2;
            DetectFrequence_INTERVAL200MS = 3;
            DetectFrequence_INTERVAL20MS = 4;
            DetectFrequence_INTERVAL3MS = 5;
            DetectFrequence_INTERVAL500MS = 6;
            DetectFrequence_INTERVAL50MS = 7;
         };
         DetectFrequence detectFrequence = 9;
         enum DetectMode {
            DetectMode_AUTO = 0;
            DetectMode_MANUAL = 1;
         };
         DetectMode detectMode = 10;
         enum DetectPktType {
            DetectPktType_CV = 0;
            DetectPktType_FFD = 1;
         };
         DetectPktType detectPktType = 11;
         string ingressLsrId = 12;
         string localDefectLocation = 13;
         enum LocalDefectType {
            LocalDefectType_DEXCESS = 0;
            LocalDefectType_DLOCV = 1;
            LocalDefectType_DPEERME = 2;
            LocalDefectType_DSERVER = 3;
            LocalDefectType_DTTSI_MISMATCH = 4;
            LocalDefectType_DTTSI_MISMERGE = 5;
            LocalDefectType_DUNKNOWN = 6;
         };
         LocalDefectType localDefectType = 14;
         enum LocalDetectStatus {
            LocalDetectStatus_INIT = 0;
            LocalDetectStatus_LOCALDEFECTINVALID = 1;
            LocalDetectStatus_LOCALDEFECTVALID = 2;
            LocalDetectStatus_LOCALINVALID = 3;
            LocalDetectStatus_LOCALVALID = 4;
            LocalDetectStatus_REMOTEDEFECTINVALID = 5;
            LocalDetectStatus_REMOTEDEFECTVALID = 6;
            LocalDetectStatus_REMOTEINVALID = 7;
            LocalDetectStatus_REMOTEVALID = 8;
         };
         LocalDetectStatus localDetectStatus = 15;
         uint32 localInvalidTime = 16;
         enum LspType {
            LspType_RSVPX_LSP = 0;
            LspType_STATICX_CRX_LSP = 1;
         };
         LspType lspType = 17;
         enum OamActiveState {
            OamActiveState_ACTIVE = 0;
            OamActiveState_DEACTIVE = 1;
         };
         OamActiveState oamActiveState = 18;
         uint32 oamLossSd = 19;
         uint32 oamLossSf = 20;
         bool receiveEnable = 21;
         string remoteDefectLocation = 22;
         enum RemoteDefectType {
            RemoteDefectType_DEXCESS = 0;
            RemoteDefectType_DLOCV = 1;
            RemoteDefectType_DPEERME = 2;
            RemoteDefectType_DSERVER = 3;
            RemoteDefectType_DTTSI_MISMATCH = 4;
            RemoteDefectType_DTTSI_MISMERGE = 5;
            RemoteDefectType_DUNKNOWN = 6;
         };
         RemoteDefectType remoteDefectType = 23;
         enum RemoteDetectStatus {
            RemoteDetectStatus_INIT = 0;
            RemoteDetectStatus_LOCALDEFECTINVALID = 1;
            RemoteDetectStatus_LOCALDEFECTVALID = 2;
            RemoteDetectStatus_LOCALINVALID = 3;
            RemoteDetectStatus_LOCALVALID = 4;
            RemoteDetectStatus_REMOTEDEFECTINVALID = 5;
            RemoteDetectStatus_REMOTEDEFECTVALID = 6;
            RemoteDetectStatus_REMOTEINVALID = 7;
            RemoteDetectStatus_REMOTEVALID = 8;
         };
         RemoteDetectStatus remoteDetectStatus = 24;
         uint32 remoteInvalidTime = 25;
         string reverseIngrLsrId = 26;
         enum ReverseMode {
            ReverseMode_PRIVATE = 0;
            ReverseMode_SHARE = 1;
         };
         ReverseMode reverseMode = 27;
         uint32 reverseTunnelId = 28;
         string reverseTunnelName = 29;
         bool sendEnable = 30;
         enum ServiceType {
            ServiceType_EGRESSX_LSPNAME = 0;
            ServiceType_EGRESSX_TTSI = 1;
            ServiceType_INGRESS = 2;
            ServiceType_TEX_CRLSP = 3;
         };
         ServiceType serviceType = 31;
         bool slmSendEnable = 32;
         uint32 slmThreshold1 = 33;
         uint32 slmThreshold2 = 34;
         string tunnelDescription = 35;
         enum TunnelDirection {
            TunnelDirection_BIDIRECTIONAL = 0;
            TunnelDirection_UNIDRECTIONAL = 1;
         };
         TunnelDirection tunnelDirection = 36;
         uint32 tunnelId = 37;
         string tunnelName = 38;
         enum TunnelType {
            TunnelType_BIDIRECTIONAL = 0;
            TunnelType_EGRESS = 1;
            TunnelType_INGRESS = 2;
         };
         TunnelType tunnelType = 39;
         uint32 twoDmPacketSize = 40;
         enum TwoDmPadValue {
            TwoDmPadValue_PADDINGVALUE0 = 0;
            TwoDmPadValue_PADDINGVALUE1 = 1;
         };
         TwoDmPadValue twoDmPadValue = 41;
         bool twoDmSendEnable = 42;
      }
      repeated TunnelExt tunnelExt = 1;
   }
   TunnelExts tunnelExts = 4;
   message Tunnels {
      message Tunnel {
         enum BdiFrequence {
            BdiFrequence_INTERVAL100MS = 0;
            BdiFrequence_INTERVAL10MS = 1;
            BdiFrequence_INTERVAL1S = 2;
            BdiFrequence_INTERVAL200MS = 3;
            BdiFrequence_INTERVAL20MS = 4;
            BdiFrequence_INTERVAL3MS = 5;
            BdiFrequence_INTERVAL500MS = 6;
            BdiFrequence_INTERVAL50MS = 7;
         };
         BdiFrequence bdiFrequence = 1;
         enum DetectFrequence {
            DetectFrequence_INTERVAL100MS = 0;
            DetectFrequence_INTERVAL10MS = 1;
            DetectFrequence_INTERVAL1S = 2;
            DetectFrequence_INTERVAL200MS = 3;
            DetectFrequence_INTERVAL20MS = 4;
            DetectFrequence_INTERVAL3MS = 5;
            DetectFrequence_INTERVAL500MS = 6;
            DetectFrequence_INTERVAL50MS = 7;
         };
         DetectFrequence detectFrequence = 2;
         enum DetectMode {
            DetectMode_AUTO = 0;
            DetectMode_MANUAL = 1;
         };
         DetectMode detectMode = 3;
         enum DetectPktType {
            DetectPktType_CV = 0;
            DetectPktType_FFD = 1;
         };
         DetectPktType detectPktType = 4;
         string localDefectLocation = 5;
         enum LocalDefectType {
            LocalDefectType_DEXCESS = 0;
            LocalDefectType_DLOCV = 1;
            LocalDefectType_DPEERME = 2;
            LocalDefectType_DSERVER = 3;
            LocalDefectType_DTTSI_MISMATCH = 4;
            LocalDefectType_DTTSI_MISMERGE = 5;
            LocalDefectType_DUNKNOWN = 6;
         };
         LocalDefectType localDefectType = 6;
         enum LocalDetectStatus {
            LocalDetectStatus_INIT = 0;
            LocalDetectStatus_LOCALDEFECTINVALID = 1;
            LocalDetectStatus_LOCALDEFECTVALID = 2;
            LocalDetectStatus_LOCALINVALID = 3;
            LocalDetectStatus_LOCALVALID = 4;
            LocalDetectStatus_REMOTEDEFECTINVALID = 5;
            LocalDetectStatus_REMOTEDEFECTVALID = 6;
            LocalDetectStatus_REMOTEINVALID = 7;
            LocalDetectStatus_REMOTEVALID = 8;
         };
         LocalDetectStatus localDetectStatus = 7;
         uint32 localInvalidTime = 8;
         string lspName = 9;
         enum OamActiveState {
            OamActiveState_ACTIVE = 0;
            OamActiveState_DEACTIVE = 1;
         };
         OamActiveState oamActiveState = 10;
         uint32 oamLossSd = 11;
         uint32 oamLossSf = 12;
         bool receiveEnable = 13;
         string remoteDefectLocation = 14;
         enum RemoteDefectType {
            RemoteDefectType_DEXCESS = 0;
            RemoteDefectType_DLOCV = 1;
            RemoteDefectType_DPEERME = 2;
            RemoteDefectType_DSERVER = 3;
            RemoteDefectType_DTTSI_MISMATCH = 4;
            RemoteDefectType_DTTSI_MISMERGE = 5;
            RemoteDefectType_DUNKNOWN = 6;
         };
         RemoteDefectType remoteDefectType = 15;
         enum RemoteDetectStatus {
            RemoteDetectStatus_INIT = 0;
            RemoteDetectStatus_LOCALDEFECTINVALID = 1;
            RemoteDetectStatus_LOCALDEFECTVALID = 2;
            RemoteDetectStatus_LOCALINVALID = 3;
            RemoteDetectStatus_LOCALVALID = 4;
            RemoteDetectStatus_REMOTEDEFECTINVALID = 5;
            RemoteDetectStatus_REMOTEDEFECTVALID = 6;
            RemoteDetectStatus_REMOTEINVALID = 7;
            RemoteDetectStatus_REMOTEVALID = 8;
         };
         RemoteDetectStatus remoteDetectStatus = 16;
         uint32 remoteInvalidTime = 17;
         bool sendEnable = 18;
         bool slmSendEnable = 19;
         uint32 slmThreshold1 = 20;
         uint32 slmThreshold2 = 21;
         string tunnelDescription = 22;
         enum TunnelDirection {
            TunnelDirection_BIDIRECTIONAL = 0;
            TunnelDirection_UNIDRECTIONAL = 1;
         };
         TunnelDirection tunnelDirection = 23;
         string tunnelName = 24;
         enum TunnelType {
            TunnelType_BIDIRECTIONAL = 0;
            TunnelType_EGRESS = 1;
            TunnelType_INGRESS = 2;
         };
         TunnelType tunnelType = 25;
         uint32 twoDmPacketSize = 26;
         enum TwoDmPadValue {
            TwoDmPadValue_PADDINGVALUE0 = 0;
            TwoDmPadValue_PADDINGVALUE1 = 1;
         };
         TwoDmPadValue twoDmPadValue = 27;
         bool twoDmSendEnable = 28;
      }
      repeated Tunnel tunnel = 1;
      message EgressIdTunnels {
         message EgressIdTunnel {
            uint32 id = 1 [json_name = "id"];
            string ingress_lsr_id = 2 [json_name = "ingress-lsr-id"];
            string reverse_name = 3 [json_name = "reverse-name"];
            enum ReverseMode {
               INVALID_ENUM_VALUE_ReverseMode = 0;
               ReverseMode_SHARE = 1;
               ReverseMode_PRIVATE = 2;
            };
            ReverseMode reverse_mode = 4 [json_name = "reverse-mode"];
            uint32 oam_loss_sd = 5 [json_name = "oam-loss-sd"];
            uint32 oam_loss_sf = 6 [json_name = "oam-loss-sf"];
            uint32 slm_threshold1 = 7 [json_name = "slm-threshold1"];
            uint32 slm_threshold2 = 8 [json_name = "slm-threshold2"];
            enum DetectMode {
               DetectMode_MANUAL = 0;
               DetectMode_AUTO = 1;
            };
            DetectMode detect_mode = 9 [json_name = "detect-mode"];
            uint32 auto_mode_over_time = 10 [json_name = "auto-mode-over-time"];
            enum DetectPktType {
               DetectPktType_CV = 0;
               DetectPktType_FFD = 1;
            };
            DetectPktType detect_pkt_type = 11 [json_name = "detect-pkt-type"];
            enum DetectFrequence {
               INVALID_ENUM_VALUE_DetectFrequence = 0;
               DetectFrequence_X_3MS = 1;
               DetectFrequence_X_10MS = 2;
               DetectFrequence_X_20MS = 3;
               DetectFrequence_X_50MS = 4;
               DetectFrequence_X_100MS = 5;
               DetectFrequence_X_200MS = 6;
               DetectFrequence_X_500MS = 7;
               DetectFrequence_X_1000MS = 8;
            };
            DetectFrequence detect_frequence = 12 [json_name = "detect-frequence"];
            enum BdiFrequence {
               INVALID_ENUM_VALUE_BdiFrequence = 0;
               BdiFrequence_PERX_SECOND = 1;
               BdiFrequence_DETECTX_FREQ = 2;
            };
            BdiFrequence bdi_frequence = 13 [json_name = "bdi-frequence"];
            bool receive_enable = 14 [json_name = "receive-enable"];
            enum OamActiveStatus {
               OamActiveStatus_DEACTIVE = 0;
               OamActiveStatus_ACTIVE = 1;
            };
            OamActiveStatus oam_active_status = 15 [json_name = "oam-active-status"];
            string description = 16 [json_name = "description"];
            enum LspType {
               LspType_RSVPX_LSP = 0;
               LspType_STATICX_CRX_LSP = 1;
            };
            LspType lsp_type = 17 [json_name = "lsp-type"];
            enum BdiDefectStatus {
               BdiDefectStatus_NONX_DEFECT = 0;
               BdiDefectStatus_INX_DEFECT = 1;
            };
            BdiDefectStatus bdi_defect_status = 18 [json_name = "bdi-defect-status"];
            string bdi_defect_type = 19 [json_name = "bdi-defect-type"];
            enum AvailableStatus {
               AvailableStatus_AVAILABLE = 0;
               AvailableStatus_UNAVAILABLE = 1;
            };
            AvailableStatus available_status = 20 [json_name = "available-status"];
            string defect_type = 21 [json_name = "defect-type"];
            enum LocalDetectStatus {
               LocalDetectStatus_INIT = 0;
               LocalDetectStatus_LOCALX_VALID = 1;
               LocalDetectStatus_LOCALX_DEFECTX_VALID = 2;
               LocalDetectStatus_LOCALX_DEFECTX_INVALID = 3;
               LocalDetectStatus_LOCALX_INVALID = 4;
               LocalDetectStatus_REMOTEX_VALID = 5;
               LocalDetectStatus_REMOTEX_DEFECTX_VALID = 6;
               LocalDetectStatus_REMOTEX_DEFECTX_INVALID = 7;
               LocalDetectStatus_REMOTEX_INVALID = 8;
            };
            LocalDetectStatus local_detect_status = 22 [json_name = "local-detect-status"];
            uint32 local_invalid_time = 23 [json_name = "local-invalid-time"];
            string local_defect_location = 24 [json_name = "local-defect-location"];
            enum LocalDefectType {
               LocalDefectType_SERVER = 0;
               LocalDefectType_PEERX_ME = 1;
               LocalDefectType_LOCV = 2;
               LocalDefectType_TTSIX_MISMATCH = 3;
               LocalDefectType_TTSIX_MISMERGE = 4;
               LocalDefectType_EXCESS = 5;
               LocalDefectType_UNKNOWN = 6;
            };
            LocalDefectType local_defect_type = 25 [json_name = "local-defect-type"];
            enum RemoteDetectStatus {
               RemoteDetectStatus_INIT = 0;
               RemoteDetectStatus_LOCALX_VALID = 1;
               RemoteDetectStatus_LOCALX_DEFECTX_VALID = 2;
               RemoteDetectStatus_LOCALX_DEFECTX_INVALID = 3;
               RemoteDetectStatus_LOCALX_INVALID = 4;
               RemoteDetectStatus_REMOTEX_VALID = 5;
               RemoteDetectStatus_REMOTEX_DEFECTX_VALID = 6;
               RemoteDetectStatus_REMOTEX_DEFECTX_INVALID = 7;
               RemoteDetectStatus_REMOTEX_INVALID = 8;
            };
            RemoteDetectStatus remote_detect_status = 26 [json_name = "remote-detect-status"];
            uint32 remote_invalid_time = 27 [json_name = "remote-invalid-time"];
            string remote_defect_location = 28 [json_name = "remote-defect-location"];
            enum RemoteDefectType {
               RemoteDefectType_SERVER = 0;
               RemoteDefectType_PEERX_ME = 1;
               RemoteDefectType_LOCV = 2;
               RemoteDefectType_TTSIX_MISMATCH = 3;
               RemoteDefectType_TTSIX_MISMERGE = 4;
               RemoteDefectType_EXCESS = 5;
               RemoteDefectType_UNKNOWN = 6;
            };
            RemoteDefectType remote_defect_type = 29 [json_name = "remote-defect-type"];
         }
         repeated EgressIdTunnel egress_id_tunnel = 1 [json_name = "egress-id-tunnel"];
      }
      EgressIdTunnels egress_id_tunnels = 2 [json_name = "egress-id-tunnels"];
      message EgressNameTunnels {
         message EgressNameTunnel {
            string name = 1 [json_name = "name"];
            string reverse_name = 2 [json_name = "reverse-name"];
            enum ReverseMode {
               INVALID_ENUM_VALUE_ReverseMode = 0;
               ReverseMode_SHARE = 1;
               ReverseMode_PRIVATE = 2;
            };
            ReverseMode reverse_mode = 3 [json_name = "reverse-mode"];
            uint32 oam_loss_sd = 4 [json_name = "oam-loss-sd"];
            uint32 oam_loss_sf = 5 [json_name = "oam-loss-sf"];
            uint32 slm_threshold1 = 6 [json_name = "slm-threshold1"];
            uint32 slm_threshold2 = 7 [json_name = "slm-threshold2"];
            enum DetectMode {
               DetectMode_MANUAL = 0;
               DetectMode_AUTO = 1;
            };
            DetectMode detect_mode = 8 [json_name = "detect-mode"];
            uint32 auto_mode_over_time = 9 [json_name = "auto-mode-over-time"];
            enum DetectPktType {
               DetectPktType_CV = 0;
               DetectPktType_FFD = 1;
            };
            DetectPktType detect_pkt_type = 10 [json_name = "detect-pkt-type"];
            enum DetectFrequence {
               INVALID_ENUM_VALUE_DetectFrequence = 0;
               DetectFrequence_X_3MS = 1;
               DetectFrequence_X_10MS = 2;
               DetectFrequence_X_20MS = 3;
               DetectFrequence_X_50MS = 4;
               DetectFrequence_X_100MS = 5;
               DetectFrequence_X_200MS = 6;
               DetectFrequence_X_500MS = 7;
               DetectFrequence_X_1000MS = 8;
            };
            DetectFrequence detect_frequence = 11 [json_name = "detect-frequence"];
            enum BdiFrequence {
               INVALID_ENUM_VALUE_BdiFrequence = 0;
               BdiFrequence_PERX_SECOND = 1;
               BdiFrequence_DETECTX_FREQ = 2;
            };
            BdiFrequence bdi_frequence = 12 [json_name = "bdi-frequence"];
            bool receive_enable = 13 [json_name = "receive-enable"];
            enum OamActiveStatus {
               OamActiveStatus_DEACTIVE = 0;
               OamActiveStatus_ACTIVE = 1;
            };
            OamActiveStatus oam_active_status = 14 [json_name = "oam-active-status"];
            string description = 15 [json_name = "description"];
            enum LspType {
               LspType_RSVPX_LSP = 0;
               LspType_STATICX_CRX_LSP = 1;
            };
            LspType lsp_type = 16 [json_name = "lsp-type"];
            enum BdiDefectStatus {
               BdiDefectStatus_NONX_DEFECT = 0;
               BdiDefectStatus_INX_DEFECT = 1;
            };
            BdiDefectStatus bdi_defect_status = 17 [json_name = "bdi-defect-status"];
            string bdi_defect_type = 18 [json_name = "bdi-defect-type"];
            enum AvailableStatus {
               AvailableStatus_AVAILABLE = 0;
               AvailableStatus_UNAVAILABLE = 1;
            };
            AvailableStatus available_status = 19 [json_name = "available-status"];
            string defect_type = 20 [json_name = "defect-type"];
            enum LocalDetectStatus {
               LocalDetectStatus_INIT = 0;
               LocalDetectStatus_LOCALX_VALID = 1;
               LocalDetectStatus_LOCALX_DEFECTX_VALID = 2;
               LocalDetectStatus_LOCALX_DEFECTX_INVALID = 3;
               LocalDetectStatus_LOCALX_INVALID = 4;
               LocalDetectStatus_REMOTEX_VALID = 5;
               LocalDetectStatus_REMOTEX_DEFECTX_VALID = 6;
               LocalDetectStatus_REMOTEX_DEFECTX_INVALID = 7;
               LocalDetectStatus_REMOTEX_INVALID = 8;
            };
            LocalDetectStatus local_detect_status = 21 [json_name = "local-detect-status"];
            uint32 local_invalid_time = 22 [json_name = "local-invalid-time"];
            string local_defect_location = 23 [json_name = "local-defect-location"];
            enum LocalDefectType {
               LocalDefectType_SERVER = 0;
               LocalDefectType_PEERX_ME = 1;
               LocalDefectType_LOCV = 2;
               LocalDefectType_TTSIX_MISMATCH = 3;
               LocalDefectType_TTSIX_MISMERGE = 4;
               LocalDefectType_EXCESS = 5;
               LocalDefectType_UNKNOWN = 6;
            };
            LocalDefectType local_defect_type = 24 [json_name = "local-defect-type"];
            enum RemoteDetectStatus {
               RemoteDetectStatus_INIT = 0;
               RemoteDetectStatus_LOCALX_VALID = 1;
               RemoteDetectStatus_LOCALX_DEFECTX_VALID = 2;
               RemoteDetectStatus_LOCALX_DEFECTX_INVALID = 3;
               RemoteDetectStatus_LOCALX_INVALID = 4;
               RemoteDetectStatus_REMOTEX_VALID = 5;
               RemoteDetectStatus_REMOTEX_DEFECTX_VALID = 6;
               RemoteDetectStatus_REMOTEX_DEFECTX_INVALID = 7;
               RemoteDetectStatus_REMOTEX_INVALID = 8;
            };
            RemoteDetectStatus remote_detect_status = 25 [json_name = "remote-detect-status"];
            uint32 remote_invalid_time = 26 [json_name = "remote-invalid-time"];
            string remote_defect_location = 27 [json_name = "remote-defect-location"];
            enum RemoteDefectType {
               RemoteDefectType_SERVER = 0;
               RemoteDefectType_PEERX_ME = 1;
               RemoteDefectType_LOCV = 2;
               RemoteDefectType_TTSIX_MISMATCH = 3;
               RemoteDefectType_TTSIX_MISMERGE = 4;
               RemoteDefectType_EXCESS = 5;
               RemoteDefectType_UNKNOWN = 6;
            };
            RemoteDefectType remote_defect_type = 28 [json_name = "remote-defect-type"];
         }
         repeated EgressNameTunnel egress_name_tunnel = 1 [json_name = "egress-name-tunnel"];
      }
      EgressNameTunnels egress_name_tunnels = 3 [json_name = "egress-name-tunnels"];
      message IngressTunnels {
         message IngressTunnel {
            string name = 1 [json_name = "name"];
            enum ReverseMode {
               ReverseMode_SHARE = 0;
               ReverseMode_PRIVATE = 1;
            };
            ReverseMode reverse_mode = 2 [json_name = "reverse-mode"];
            uint32 oam_loss_sd = 3 [json_name = "oam-loss-sd"];
            uint32 oam_loss_sf = 4 [json_name = "oam-loss-sf"];
            bool slm_send_enable = 5 [json_name = "slm-send-enable"];
            uint32 slm_threshold1 = 6 [json_name = "slm-threshold1"];
            uint32 slm_threshold2 = 7 [json_name = "slm-threshold2"];
            enum DetectPktType {
               DetectPktType_CV = 0;
               DetectPktType_FFD = 1;
            };
            DetectPktType detect_pkt_type = 8 [json_name = "detect-pkt-type"];
            enum DetectFrequence {
               INVALID_ENUM_VALUE_DetectFrequence = 0;
               DetectFrequence_X_3MS = 1;
               DetectFrequence_X_10MS = 2;
               DetectFrequence_X_20MS = 3;
               DetectFrequence_X_50MS = 4;
               DetectFrequence_X_100MS = 5;
               DetectFrequence_X_200MS = 6;
               DetectFrequence_X_500MS = 7;
               DetectFrequence_X_1000MS = 8;
            };
            DetectFrequence detect_frequence = 9 [json_name = "detect-frequence"];
            enum BdiFrequence {
               INVALID_ENUM_VALUE_BdiFrequence = 0;
               BdiFrequence_PERX_SECOND = 1;
               BdiFrequence_DETECTX_FREQ = 2;
            };
            BdiFrequence bdi_frequence = 10 [json_name = "bdi-frequence"];
            enum CompatibilityMode {
               CompatibilityMode_ROUTEX_MODE = 0;
               CompatibilityMode_PTNX_MODE = 1;
            };
            CompatibilityMode compatibility_mode = 11 [json_name = "compatibility-mode"];
            bool send_enable = 12 [json_name = "send-enable"];
            uint32 cc_exp = 13 [json_name = "cc-exp"];
            enum OamActiveStatus {
               OamActiveStatus_DEACTIVE = 0;
               OamActiveStatus_ACTIVE = 1;
            };
            OamActiveStatus oam_active_status = 14 [json_name = "oam-active-status"];
            bool two_dm_send_enable = 15 [json_name = "two-dm-send-enable"];
            uint32 two_dm_packet_size = 16 [json_name = "two-dm-packet-size"];
            enum TwoDmPadValue {
               TwoDmPadValue_X_0 = 0;
               TwoDmPadValue_X_1 = 1;
            };
            TwoDmPadValue two_dm_pad_value = 17 [json_name = "two-dm-pad-value"];
            string description = 18 [json_name = "description"];
            enum LspType {
               LspType_RSVPX_LSP = 0;
               LspType_STATICX_CRX_LSP = 1;
            };
            LspType lsp_type = 19 [json_name = "lsp-type"];
            enum BdiDefectStatus {
               BdiDefectStatus_NONX_DEFECT = 0;
               BdiDefectStatus_INX_DEFECT = 1;
            };
            BdiDefectStatus bdi_defect_status = 20 [json_name = "bdi-defect-status"];
            string bdi_defect_type = 21 [json_name = "bdi-defect-type"];
            enum AvailableStatus {
               AvailableStatus_AVAILABLE = 0;
               AvailableStatus_UNAVAILABLE = 1;
            };
            AvailableStatus available_status = 22 [json_name = "available-status"];
            string defect_type = 23 [json_name = "defect-type"];
            enum LocalDetectStatus {
               LocalDetectStatus_INIT = 0;
               LocalDetectStatus_LOCALX_VALID = 1;
               LocalDetectStatus_LOCALX_DEFECTX_VALID = 2;
               LocalDetectStatus_LOCALX_DEFECTX_INVALID = 3;
               LocalDetectStatus_LOCALX_INVALID = 4;
               LocalDetectStatus_REMOTEX_VALID = 5;
               LocalDetectStatus_REMOTEX_DEFECTX_VALID = 6;
               LocalDetectStatus_REMOTEX_DEFECTX_INVALID = 7;
               LocalDetectStatus_REMOTEX_INVALID = 8;
            };
            LocalDetectStatus local_detect_status = 24 [json_name = "local-detect-status"];
            uint32 local_invalid_time = 25 [json_name = "local-invalid-time"];
            string local_defect_location = 26 [json_name = "local-defect-location"];
            enum LocalDefectType {
               LocalDefectType_SERVER = 0;
               LocalDefectType_PEERX_ME = 1;
               LocalDefectType_LOCV = 2;
               LocalDefectType_TTSIX_MISMATCH = 3;
               LocalDefectType_TTSIX_MISMERGE = 4;
               LocalDefectType_EXCESS = 5;
               LocalDefectType_UNKNOWN = 6;
            };
            LocalDefectType local_defect_type = 27 [json_name = "local-defect-type"];
            enum RemoteDetectStatus {
               RemoteDetectStatus_INIT = 0;
               RemoteDetectStatus_LOCALX_VALID = 1;
               RemoteDetectStatus_LOCALX_DEFECTX_VALID = 2;
               RemoteDetectStatus_LOCALX_DEFECTX_INVALID = 3;
               RemoteDetectStatus_LOCALX_INVALID = 4;
               RemoteDetectStatus_REMOTEX_VALID = 5;
               RemoteDetectStatus_REMOTEX_DEFECTX_VALID = 6;
               RemoteDetectStatus_REMOTEX_DEFECTX_INVALID = 7;
               RemoteDetectStatus_REMOTEX_INVALID = 8;
            };
            RemoteDetectStatus remote_detect_status = 28 [json_name = "remote-detect-status"];
            uint32 remote_invalid_time = 29 [json_name = "remote-invalid-time"];
            string remote_defect_location = 30 [json_name = "remote-defect-location"];
            enum RemoteDefectType {
               RemoteDefectType_SERVER = 0;
               RemoteDefectType_PEERX_ME = 1;
               RemoteDefectType_LOCV = 2;
               RemoteDefectType_TTSIX_MISMATCH = 3;
               RemoteDefectType_TTSIX_MISMERGE = 4;
               RemoteDefectType_EXCESS = 5;
               RemoteDefectType_UNKNOWN = 6;
            };
            RemoteDefectType remote_defect_type = 31 [json_name = "remote-defect-type"];
            message ReverseLspNameOrId_ShareMode {
               bool share = 1 [json_name = "share"];
            }
            message ReverseLspNameOrId_LspName {
               string reverse_name = 1 [json_name = "reverse-name"];
            }
            message ReverseLspNameOrId_LspId {
               uint32 reverse_id = 1 [json_name = "reverse-id"];
               string reverse_lsr_id = 2 [json_name = "reverse-lsr-id"];
            }
            oneof ReverseLspNameOrId {
               ReverseLspNameOrId_ShareMode reverse_lsp_name_or_id_share_mode = 32 [json_name = "share-mode"];
               ReverseLspNameOrId_LspName reverse_lsp_name_or_id_lsp_name = 33 [json_name = "lsp-name"];
               ReverseLspNameOrId_LspId reverse_lsp_name_or_id_lsp_id = 34 [json_name = "lsp-id"];
            }
            uint32 slm_exp = 35 [json_name = "slm-exp"];
            uint32 two_dm_exp = 36 [json_name = "two-dm-exp"];
         }
         repeated IngressTunnel ingress_tunnel = 1 [json_name = "ingress-tunnel"];
      }
      IngressTunnels ingress_tunnels = 4 [json_name = "ingress-tunnels"];
      message CoRouteTunnels {
         message CoRouteTunnel {
            string name = 1 [json_name = "name"];
            uint32 oam_loss_sd = 2 [json_name = "oam-loss-sd"];
            uint32 oam_loss_sf = 3 [json_name = "oam-loss-sf"];
            bool slm_send_enable = 4 [json_name = "slm-send-enable"];
            uint32 slm_threshold1 = 5 [json_name = "slm-threshold1"];
            uint32 slm_threshold2 = 6 [json_name = "slm-threshold2"];
            enum DetectMode {
               DetectMode_MANUAL = 0;
               DetectMode_AUTO = 1;
            };
            DetectMode detect_mode = 7 [json_name = "detect-mode"];
            uint32 auto_mode_over_time = 8 [json_name = "auto-mode-over-time"];
            enum DetectPktType {
               DetectPktType_CV = 0;
               DetectPktType_FFD = 1;
            };
            DetectPktType detect_pkt_type = 9 [json_name = "detect-pkt-type"];
            enum DetectFrequence {
               INVALID_ENUM_VALUE_DetectFrequence = 0;
               DetectFrequence_X_3MS = 1;
               DetectFrequence_X_10MS = 2;
               DetectFrequence_X_20MS = 3;
               DetectFrequence_X_50MS = 4;
               DetectFrequence_X_100MS = 5;
               DetectFrequence_X_200MS = 6;
               DetectFrequence_X_500MS = 7;
               DetectFrequence_X_1000MS = 8;
            };
            DetectFrequence detect_frequence = 10 [json_name = "detect-frequence"];
            enum BdiFrequence {
               INVALID_ENUM_VALUE_BdiFrequence = 0;
               BdiFrequence_PERX_SECOND = 1;
               BdiFrequence_DETECTX_FREQ = 2;
            };
            BdiFrequence bdi_frequence = 11 [json_name = "bdi-frequence"];
            enum CompatibilityMode {
               CompatibilityMode_ROUTEX_MODE = 0;
               CompatibilityMode_PTNX_MODE = 1;
            };
            CompatibilityMode compatibility_mode = 12 [json_name = "compatibility-mode"];
            bool send_enable = 13 [json_name = "send-enable"];
            bool receive_enable = 14 [json_name = "receive-enable"];
            uint32 cc_exp = 15 [json_name = "cc-exp"];
            string description = 16 [json_name = "description"];
            enum OamActiveStatus {
               OamActiveStatus_DEACTIVE = 0;
               OamActiveStatus_ACTIVE = 1;
            };
            OamActiveStatus oam_active_status = 17 [json_name = "oam-active-status"];
            bool two_dm_send_enable = 18 [json_name = "two-dm-send-enable"];
            uint32 two_dm_packet_size = 19 [json_name = "two-dm-packet-size"];
            enum TwoDmPadValue {
               TwoDmPadValue_X_0 = 0;
               TwoDmPadValue_X_1 = 1;
            };
            TwoDmPadValue two_dm_pad_value = 20 [json_name = "two-dm-pad-value"];
            enum LspType {
               LspType_RSVPX_LSP = 0;
               LspType_STATICX_CRX_LSP = 1;
            };
            LspType lsp_type = 21 [json_name = "lsp-type"];
            enum BdiDefectStatus {
               BdiDefectStatus_NONX_DEFECT = 0;
               BdiDefectStatus_INX_DEFECT = 1;
            };
            BdiDefectStatus bdi_defect_status = 22 [json_name = "bdi-defect-status"];
            string bdi_defect_type = 23 [json_name = "bdi-defect-type"];
            enum AvailableStatus {
               AvailableStatus_AVAILABLE = 0;
               AvailableStatus_UNAVAILABLE = 1;
            };
            AvailableStatus available_status = 24 [json_name = "available-status"];
            string defect_type = 25 [json_name = "defect-type"];
            enum LocalDetectStatus {
               LocalDetectStatus_INIT = 0;
               LocalDetectStatus_LOCALX_VALID = 1;
               LocalDetectStatus_LOCALX_DEFECTX_VALID = 2;
               LocalDetectStatus_LOCALX_DEFECTX_INVALID = 3;
               LocalDetectStatus_LOCALX_INVALID = 4;
               LocalDetectStatus_REMOTEX_VALID = 5;
               LocalDetectStatus_REMOTEX_DEFECTX_VALID = 6;
               LocalDetectStatus_REMOTEX_DEFECTX_INVALID = 7;
               LocalDetectStatus_REMOTEX_INVALID = 8;
            };
            LocalDetectStatus local_detect_status = 26 [json_name = "local-detect-status"];
            uint32 local_invalid_time = 27 [json_name = "local-invalid-time"];
            string local_defect_location = 28 [json_name = "local-defect-location"];
            enum LocalDefectType {
               LocalDefectType_SERVER = 0;
               LocalDefectType_PEERX_ME = 1;
               LocalDefectType_LOCV = 2;
               LocalDefectType_TTSIX_MISMATCH = 3;
               LocalDefectType_TTSIX_MISMERGE = 4;
               LocalDefectType_EXCESS = 5;
               LocalDefectType_UNKNOWN = 6;
            };
            LocalDefectType local_defect_type = 29 [json_name = "local-defect-type"];
            enum RemoteDetectStatus {
               RemoteDetectStatus_INIT = 0;
               RemoteDetectStatus_LOCALX_VALID = 1;
               RemoteDetectStatus_LOCALX_DEFECTX_VALID = 2;
               RemoteDetectStatus_LOCALX_DEFECTX_INVALID = 3;
               RemoteDetectStatus_LOCALX_INVALID = 4;
               RemoteDetectStatus_REMOTEX_VALID = 5;
               RemoteDetectStatus_REMOTEX_DEFECTX_VALID = 6;
               RemoteDetectStatus_REMOTEX_DEFECTX_INVALID = 7;
               RemoteDetectStatus_REMOTEX_INVALID = 8;
            };
            RemoteDetectStatus remote_detect_status = 30 [json_name = "remote-detect-status"];
            uint32 remote_invalid_time = 31 [json_name = "remote-invalid-time"];
            string remote_defect_location = 32 [json_name = "remote-defect-location"];
            enum RemoteDefectType {
               RemoteDefectType_SERVER = 0;
               RemoteDefectType_PEERX_ME = 1;
               RemoteDefectType_LOCV = 2;
               RemoteDefectType_TTSIX_MISMATCH = 3;
               RemoteDefectType_TTSIX_MISMERGE = 4;
               RemoteDefectType_EXCESS = 5;
               RemoteDefectType_UNKNOWN = 6;
            };
            RemoteDefectType remote_defect_type = 33 [json_name = "remote-defect-type"];
            uint32 slm_exp = 34 [json_name = "slm-exp"];
            uint32 two_dm_exp = 35 [json_name = "two-dm-exp"];
         }
         repeated CoRouteTunnel co_route_tunnel = 1 [json_name = "co-route-tunnel"];
      }
      CoRouteTunnels co_route_tunnels = 5 [json_name = "co-route-tunnels"];
   }
   Tunnels tunnels = 5 [json_name = "tunnels"];
   message VllPws {
      message VllPw {
         string l2vpn_name = 1 [json_name = "l2vpn-name"];
         enum L2VpnType {
            INVALID_ENUM_VALUE_L2VpnType = 0;
            L2VpnType_VPWSX_LOCALX_CCC = 1;
            L2VpnType_VPWSX_REMOTEX_CCC = 2;
            L2VpnType_VPWSX_SVC = 3;
            L2VpnType_VPWSX_LDP = 4;
            L2VpnType_VPWSX_SWITCH = 5;
            L2VpnType_VPLS = 6;
            L2VpnType_VPWSX_BGP = 8;
            L2VpnType_VPWSX_SINGLEX_CCC = 9;
         };
         L2VpnType l2vpn_type = 2 [json_name = "l2vpn-type"];
         enum L2VpnRole {
            INVALID_ENUM_VALUE_L2VpnRole = 0;
            L2VpnRole_PRIMARY = 1;
            L2VpnRole_BACKUP = 2;
            L2VpnRole_BYPASS = 3;
            L2VpnRole_ACX_BYPASS = 7;
            L2VpnRole_PWX_BYPASS = 8;
         };
         L2VpnRole l2vpn_role = 3 [json_name = "l2vpn-role"];
         string remote_lsr_id = 4 [json_name = "remote-lsr-id"];
         uint32 remote_vc_id = 5 [json_name = "remote-vc-id"];
         enum RemoteVcType {
            INVALID_ENUM_VALUE_RemoteVcType = 0;
            RemoteVcType_FR = 1;
            RemoteVcType_ATMX_AAL5X_SDU = 2;
            RemoteVcType_ATMX_TRANSX_CELL = 3;
            RemoteVcType_VLAN = 4;
            RemoteVcType_ETHERNET = 5;
            RemoteVcType_HDLC = 6;
            RemoteVcType_PPP = 7;
            RemoteVcType_ATMX_NTO1X_VCC = 9;
            RemoteVcType_ATMX_NTO1X_VPC = 10;
            RemoteVcType_IPX_LAYER2 = 11;
            RemoteVcType_ATMX_1TO1X_VCC = 12;
            RemoteVcType_ATMX_1TO1X_VPC = 13;
            RemoteVcType_ATMX_AAL5X_PDU = 14;
            RemoteVcType_CEP = 16;
            RemoteVcType_SATOPX_E1 = 17;
            RemoteVcType_SATOPX_T1 = 18;
            RemoteVcType_SATOPX_E3 = 19;
            RemoteVcType_CESOPSNX_BASIC = 21;
            RemoteVcType_IPX_INTERWORKING = 64;
         };
         RemoteVcType remote_vc_type = 6 [json_name = "remote-vc-type"];
         enum DetectPktType {
            DetectPktType_CV = 0;
            DetectPktType_FFD = 1;
         };
         DetectPktType detect_pkt_type = 7 [json_name = "detect-pkt-type"];
         enum DetectMode {
            DetectMode_MANUAL = 0;
            DetectMode_AUTO = 1;
         };
         DetectMode detect_mode = 8 [json_name = "detect-mode"];
         uint32 auto_mode_over_time = 9 [json_name = "auto-mode-over-time"];
         enum DetectFrequence {
            INVALID_ENUM_VALUE_DetectFrequence = 0;
            DetectFrequence_X_3MS = 1;
            DetectFrequence_X_10MS = 2;
            DetectFrequence_X_20MS = 3;
            DetectFrequence_X_50MS = 4;
            DetectFrequence_X_100MS = 5;
            DetectFrequence_X_200MS = 6;
            DetectFrequence_X_500MS = 7;
            DetectFrequence_X_1000MS = 8;
         };
         DetectFrequence detect_frequence = 10 [json_name = "detect-frequence"];
         enum BdiFrequence {
            INVALID_ENUM_VALUE_BdiFrequence = 0;
            BdiFrequence_PERX_SECOND = 1;
            BdiFrequence_DETECTX_FREQ = 2;
         };
         BdiFrequence bdi_frequence = 11 [json_name = "bdi-frequence"];
         enum CompatibilityMode {
            CompatibilityMode_ROUTEX_MODE = 0;
            CompatibilityMode_PTNX_MODE = 1;
         };
         CompatibilityMode compatibility_mode = 12 [json_name = "compatibility-mode"];
         enum OamActiveStatus {
            OamActiveStatus_DEACTIVE = 0;
            OamActiveStatus_ACTIVE = 1;
         };
         OamActiveStatus oam_active_status = 13 [json_name = "oam-active-status"];
         bool send_enable = 14 [json_name = "send-enable"];
         bool receive_enable = 15 [json_name = "receive-enable"];
         uint32 oam_loss_sd = 16 [json_name = "oam-loss-sd"];
         uint32 oam_loss_sf = 17 [json_name = "oam-loss-sf"];
         bool slm_send_enable = 18 [json_name = "slm-send-enable"];
         uint32 slm_threshold1 = 19 [json_name = "slm-threshold1"];
         uint32 slm_threshold2 = 20 [json_name = "slm-threshold2"];
         bool two_dm_send_enable = 21 [json_name = "two-dm-send-enable"];
         uint32 two_dm_exp = 22 [json_name = "two-dm-exp"];
         uint32 two_dm_packet_size = 23 [json_name = "two-dm-packet-size"];
         enum TwoDmPadValue {
            TwoDmPadValue_X_0 = 0;
            TwoDmPadValue_X_1 = 1;
         };
         TwoDmPadValue two_dm_pad_value = 24 [json_name = "two-dm-pad-value"];
         uint32 cc_exp = 25 [json_name = "cc-exp"];
         enum BdiDefectStatus {
            BdiDefectStatus_NONX_DEFECT = 0;
            BdiDefectStatus_INX_DEFECT = 1;
         };
         BdiDefectStatus bdi_defect_status = 26 [json_name = "bdi-defect-status"];
         string bdi_defect_type = 27 [json_name = "bdi-defect-type"];
         enum AvailableStatus {
            AvailableStatus_AVAILABLE = 0;
            AvailableStatus_UNAVAILABLE = 1;
         };
         AvailableStatus available_status = 28 [json_name = "available-status"];
         string defect_type = 29 [json_name = "defect-type"];
         enum LocalDetectStatus {
            LocalDetectStatus_INIT = 0;
            LocalDetectStatus_LOCALX_VALID = 1;
            LocalDetectStatus_LOCALX_DEFECTX_VALID = 2;
            LocalDetectStatus_LOCALX_DEFECTX_INVALID = 3;
            LocalDetectStatus_LOCALX_INVALID = 4;
            LocalDetectStatus_REMOTEX_VALID = 5;
            LocalDetectStatus_REMOTEX_DEFECTX_VALID = 6;
            LocalDetectStatus_REMOTEX_DEFECTX_INVALID = 7;
            LocalDetectStatus_REMOTEX_INVALID = 8;
         };
         LocalDetectStatus local_detect_status = 30 [json_name = "local-detect-status"];
         uint32 local_invalid_time = 31 [json_name = "local-invalid-time"];
         string local_defect_location = 32 [json_name = "local-defect-location"];
         enum LocalDefectType {
            LocalDefectType_SERVER = 0;
            LocalDefectType_PEERX_ME = 1;
            LocalDefectType_LOCV = 2;
            LocalDefectType_TTSIX_MISMATCH = 3;
            LocalDefectType_TTSIX_MISMERGE = 4;
            LocalDefectType_EXCESS = 5;
            LocalDefectType_UNKNOWN = 6;
         };
         LocalDefectType local_defect_type = 33 [json_name = "local-defect-type"];
         enum RemoteDetectStatus {
            RemoteDetectStatus_INIT = 0;
            RemoteDetectStatus_LOCALX_VALID = 1;
            RemoteDetectStatus_LOCALX_DEFECTX_VALID = 2;
            RemoteDetectStatus_LOCALX_DEFECTX_INVALID = 3;
            RemoteDetectStatus_LOCALX_INVALID = 4;
            RemoteDetectStatus_REMOTEX_VALID = 5;
            RemoteDetectStatus_REMOTEX_DEFECTX_VALID = 6;
            RemoteDetectStatus_REMOTEX_DEFECTX_INVALID = 7;
            RemoteDetectStatus_REMOTEX_INVALID = 8;
         };
         RemoteDetectStatus remote_detect_status = 34 [json_name = "remote-detect-status"];
         uint32 remote_invalid_time = 35 [json_name = "remote-invalid-time"];
         string remote_defect_location = 36 [json_name = "remote-defect-location"];
         enum RemoteDefectType {
            RemoteDefectType_SERVER = 0;
            RemoteDefectType_PEERX_ME = 1;
            RemoteDefectType_LOCV = 2;
            RemoteDefectType_TTSIX_MISMATCH = 3;
            RemoteDefectType_TTSIX_MISMERGE = 4;
            RemoteDefectType_EXCESS = 5;
            RemoteDefectType_UNKNOWN = 6;
         };
         RemoteDefectType remote_defect_type = 37 [json_name = "remote-defect-type"];
         uint32 slm_exp = 38 [json_name = "slm-exp"];
      }
      repeated VllPw vll_pw = 1 [json_name = "vll-pw"];
   }
   VllPws vll_pws = 6 [json_name = "vll-pws"];
   message VsiPws {
      message VsiPw {
         string peer_ip = 1 [json_name = "peer-ip"];
         uint32 vc_id = 2 [json_name = "vc-id"];
         enum VcType {
            INVALID_ENUM_VALUE_VcType = 0;
            VcType_VLAN = 4;
            VcType_ETHERNET = 5;
         };
         VcType vc_type = 3 [json_name = "vc-type"];
         string remote_lsr_id = 4 [json_name = "remote-lsr-id"];
         uint32 remote_vc_id = 5 [json_name = "remote-vc-id"];
         enum RemoteVcType {
            INVALID_ENUM_VALUE_RemoteVcType = 0;
            RemoteVcType_FR = 1;
            RemoteVcType_ATMX_AAL5X_SDU = 2;
            RemoteVcType_ATMX_TRANSX_CELL = 3;
            RemoteVcType_VLAN = 4;
            RemoteVcType_ETHERNET = 5;
            RemoteVcType_HDLC = 6;
            RemoteVcType_PPP = 7;
            RemoteVcType_ATMX_NTO1X_VCC = 9;
            RemoteVcType_ATMX_NTO1X_VPC = 10;
            RemoteVcType_IPX_LAYER2 = 11;
            RemoteVcType_ATMX_1TO1X_VCC = 12;
            RemoteVcType_ATMX_1TO1X_VPC = 13;
            RemoteVcType_ATMX_AAL5X_PDU = 14;
            RemoteVcType_CEP = 16;
            RemoteVcType_SATOPX_E1 = 17;
            RemoteVcType_SATOPX_T1 = 18;
            RemoteVcType_SATOPX_E3 = 19;
            RemoteVcType_CESOPSNX_BASIC = 21;
            RemoteVcType_IPX_INTERWORKING = 64;
         };
         RemoteVcType remote_vc_type = 6 [json_name = "remote-vc-type"];
         enum DetectPktType {
            DetectPktType_CV = 0;
            DetectPktType_FFD = 1;
         };
         DetectPktType detect_pkt_type = 7 [json_name = "detect-pkt-type"];
         enum DetectMode {
            DetectMode_MANUAL = 0;
            DetectMode_AUTO = 1;
         };
         DetectMode detect_mode = 8 [json_name = "detect-mode"];
         uint32 auto_mode_over_time = 9 [json_name = "auto-mode-over-time"];
         enum DetectFrequence {
            INVALID_ENUM_VALUE_DetectFrequence = 0;
            DetectFrequence_X_3MS = 1;
            DetectFrequence_X_10MS = 2;
            DetectFrequence_X_20MS = 3;
            DetectFrequence_X_50MS = 4;
            DetectFrequence_X_100MS = 5;
            DetectFrequence_X_200MS = 6;
            DetectFrequence_X_500MS = 7;
            DetectFrequence_X_1000MS = 8;
         };
         DetectFrequence detect_frequence = 10 [json_name = "detect-frequence"];
         enum BdiFrequence {
            INVALID_ENUM_VALUE_BdiFrequence = 0;
            BdiFrequence_PERX_SECOND = 1;
            BdiFrequence_DETECTX_FREQ = 2;
         };
         BdiFrequence bdi_frequence = 11 [json_name = "bdi-frequence"];
         enum CompatibilityMode {
            CompatibilityMode_ROUTEX_MODE = 0;
            CompatibilityMode_PTNX_MODE = 1;
         };
         CompatibilityMode compatibility_mode = 12 [json_name = "compatibility-mode"];
         enum OamActiveStatus {
            OamActiveStatus_DEACTIVE = 0;
            OamActiveStatus_ACTIVE = 1;
         };
         OamActiveStatus oam_active_status = 13 [json_name = "oam-active-status"];
         bool send_enable = 14 [json_name = "send-enable"];
         bool receive_enable = 15 [json_name = "receive-enable"];
         uint32 oam_loss_sd = 16 [json_name = "oam-loss-sd"];
         uint32 oam_loss_sf = 17 [json_name = "oam-loss-sf"];
         bool slm_send_enable = 18 [json_name = "slm-send-enable"];
         uint32 slm_threshold1 = 19 [json_name = "slm-threshold1"];
         uint32 slm_threshold2 = 20 [json_name = "slm-threshold2"];
         bool two_dm_send_enable = 21 [json_name = "two-dm-send-enable"];
         uint32 two_dm_exp = 22 [json_name = "two-dm-exp"];
         uint32 two_dm_packet_size = 23 [json_name = "two-dm-packet-size"];
         enum TwoDmPadValue {
            TwoDmPadValue_X_0 = 0;
            TwoDmPadValue_X_1 = 1;
         };
         TwoDmPadValue two_dm_pad_value = 24 [json_name = "two-dm-pad-value"];
         uint32 cc_exp = 25 [json_name = "cc-exp"];
         enum BdiDefectStatus {
            BdiDefectStatus_NONX_DEFECT = 0;
            BdiDefectStatus_INX_DEFECT = 1;
         };
         BdiDefectStatus bdi_defect_status = 26 [json_name = "bdi-defect-status"];
         string bdi_defect_type = 27 [json_name = "bdi-defect-type"];
         enum AvailableStatus {
            AvailableStatus_AVAILABLE = 0;
            AvailableStatus_UNAVAILABLE = 1;
         };
         AvailableStatus available_status = 28 [json_name = "available-status"];
         string defect_type = 29 [json_name = "defect-type"];
         enum LocalDetectStatus {
            LocalDetectStatus_INIT = 0;
            LocalDetectStatus_LOCALX_VALID = 1;
            LocalDetectStatus_LOCALX_DEFECTX_VALID = 2;
            LocalDetectStatus_LOCALX_DEFECTX_INVALID = 3;
            LocalDetectStatus_LOCALX_INVALID = 4;
            LocalDetectStatus_REMOTEX_VALID = 5;
            LocalDetectStatus_REMOTEX_DEFECTX_VALID = 6;
            LocalDetectStatus_REMOTEX_DEFECTX_INVALID = 7;
            LocalDetectStatus_REMOTEX_INVALID = 8;
         };
         LocalDetectStatus local_detect_status = 30 [json_name = "local-detect-status"];
         uint32 local_invalid_time = 31 [json_name = "local-invalid-time"];
         string local_defect_location = 32 [json_name = "local-defect-location"];
         enum LocalDefectType {
            LocalDefectType_SERVER = 0;
            LocalDefectType_PEERX_ME = 1;
            LocalDefectType_LOCV = 2;
            LocalDefectType_TTSIX_MISMATCH = 3;
            LocalDefectType_TTSIX_MISMERGE = 4;
            LocalDefectType_EXCESS = 5;
            LocalDefectType_UNKNOWN = 6;
         };
         LocalDefectType local_defect_type = 33 [json_name = "local-defect-type"];
         enum RemoteDetectStatus {
            RemoteDetectStatus_INIT = 0;
            RemoteDetectStatus_LOCALX_VALID = 1;
            RemoteDetectStatus_LOCALX_DEFECTX_VALID = 2;
            RemoteDetectStatus_LOCALX_DEFECTX_INVALID = 3;
            RemoteDetectStatus_LOCALX_INVALID = 4;
            RemoteDetectStatus_REMOTEX_VALID = 5;
            RemoteDetectStatus_REMOTEX_DEFECTX_VALID = 6;
            RemoteDetectStatus_REMOTEX_DEFECTX_INVALID = 7;
            RemoteDetectStatus_REMOTEX_INVALID = 8;
         };
         RemoteDetectStatus remote_detect_status = 34 [json_name = "remote-detect-status"];
         uint32 remote_invalid_time = 35 [json_name = "remote-invalid-time"];
         string remote_defect_location = 36 [json_name = "remote-defect-location"];
         enum RemoteDefectType {
            RemoteDefectType_SERVER = 0;
            RemoteDefectType_PEERX_ME = 1;
            RemoteDefectType_LOCV = 2;
            RemoteDefectType_TTSIX_MISMATCH = 3;
            RemoteDefectType_TTSIX_MISMERGE = 4;
            RemoteDefectType_EXCESS = 5;
            RemoteDefectType_UNKNOWN = 6;
         };
         RemoteDefectType remote_defect_type = 37 [json_name = "remote-defect-type"];
         uint32 slm_exp = 38 [json_name = "slm-exp"];
      }
      repeated VsiPw vsi_pw = 1 [json_name = "vsi-pw"];
   }
   VsiPws vsi_pws = 7 [json_name = "vsi-pws"];
}
message HwMplsOamBidirectionalTunnelInDefect {
   uint32 AvailableState = 1;
   uint32 BdiDefectType = 2;
   uint32 DefectType = 3;
   uint32 TunnelIndex = 4;
}
message HwMplsOamBidirectionalTunnelOutDefect {
   uint32 AvailableState = 1;
   uint32 BdiDefectType = 2;
   uint32 DefectType = 3;
   uint32 TunnelIndex = 4;
}
message HwMplsOamBidirectionalTunnelUnAva {
   uint32 AvailableState = 1;
   uint32 BdiDefectType = 2;
   uint32 DefectType = 3;
   uint32 TunnelIndex = 4;
}
message HwMplsOamEgrLSPAva {
   uint32 AvailableState = 1;
   uint32 DefectType = 2;
   string LspName = 3;
   string LsrId = 4;
   uint32 TunnelId = 5;
}
message HwMplsOamEgrLSPInDefect {
   uint32 AvailableState = 1;
   uint32 DefectType = 2;
   string LspName = 3;
   string LsrId = 4;
   uint32 TunnelId = 5;
}
message HwMplsOamEgrLSPOutDefect {
   uint32 AvailableState = 1;
   uint32 DefectType = 2;
   string LspName = 3;
   string LsrId = 4;
   uint32 TunnelId = 5;
}
message HwMplsOamEgrLSPUnAva {
   uint32 AvailableState = 1;
   uint32 DefectType = 2;
   string LspName = 3;
   string LsrId = 4;
   uint32 TunnelId = 5;
}
message HwMplsOamIgrLSPAva {
   uint32 AvailableState = 1;
   uint32 DefectType = 2;
   uint32 IfIndex = 3;
   string TunnelName = 4;
}
message HwMplsOamIgrLSPInDefect {
   uint32 AvailableState = 1;
   uint32 DefectType = 2;
   uint32 IfIndex = 3;
   string TunnelName = 4;
}
message HwMplsOamIgrLSPOutDefect {
   uint32 AvailableState = 1;
   uint32 DefectType = 2;
   uint32 IfIndex = 3;
   string TunnelName = 4;
}
message HwMplsOamIgrLSPUnAva {
   uint32 AvailableState = 1;
   uint32 DefectType = 2;
   uint32 IfIndex = 3;
   string TunnelName = 4;
}
message HwMplsOamL2VcAva {
   uint32 AvailableState = 1;
   uint32 BdiDefectType = 2;
   uint32 DefectType = 3;
   string PeerIp = 4;
   uint32 VCID = 5;
   uint32 VCType = 6;
}
message HwMplsOamL2VcInDefect {
   uint32 AvailableState = 1;
   uint32 BdiDefectType = 2;
   uint32 DefectType = 3;
   string PeerIp = 4;
   uint32 VCID = 5;
   uint32 VCType = 6;
}
message HwMplsOamL2VcOutDefect {
   uint32 AvailableState = 1;
   uint32 BdiDefectType = 2;
   uint32 DefectType = 3;
   string PeerIp = 4;
   uint32 VCID = 5;
   uint32 VCType = 6;
}
message HwMplsOamL2VcUnAva {
   uint32 AvailableState = 1;
   uint32 BdiDefectType = 2;
   uint32 DefectType = 3;
   string PeerIp = 4;
   uint32 VCID = 5;
   uint32 VCType = 6;
}

