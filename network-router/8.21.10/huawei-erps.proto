syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-09-16 20:54:11
// ProtoYang-version 1
// module huawei-erps
// revision 2020-05-26
// namespace urn:huawei:yang:huawei-erps

package huawei_erps;

message Erps {
   message Ports {
      message Port {
         string ifName = 1;
         enum PortVplsEnable {
            PortVplsEnable_DISABLE = 0;
            PortVplsEnable_ENABLE = 1;
         };
         PortVplsEnable portVplsEnable = 2;
      }
      repeated Port port = 1;
   }
   Ports ports = 1;
   message Rings {
      message Ring {
         uint32 controlVlanID = 1;
         string curNodeMac = 2;
         string description = 3 [json_name = "description"];
         string destMac = 4;
         string eastIfName = 5;
         message ErpsPduStatics {
            message ErpsPduStatic {
               string ifName = 1;
               uint32 rxRapsEVENTPkts = 2;
               uint32 rxRapsFSPkts = 3;
               uint32 rxRapsMSPkts = 4;
               uint32 rxRapsNrPkts = 5;
               uint32 rxRapsNrRbPkts = 6;
               uint32 rxRapsSfPkts = 7;
               uint32 txRapsEVENTPkts = 8;
               uint32 txRapsFSPkts = 9;
               uint32 txRapsMSPkts = 10;
               uint32 txRapsNrPkts = 11;
               uint32 txRapsNrRbPkts = 12;
               uint32 txRapsSfPkts = 13;
            }
            repeated ErpsPduStatic erpsPduStatic = 1;
         }
         ErpsPduStatics erpsPduStatics = 6;
         message ErpsRingInfo {
            enum DnfState {
               DnfState_DNF = 0;
               DnfState_NODNF = 1;
            };
            DnfState dnfState = 1;
            enum EastPortFwdStatus {
               EastPortFwdStatus_DISCARDING = 0;
               EastPortFwdStatus_FORWARDING = 1;
               EastPortFwdStatus_UNKNOWN = 2;
            };
            EastPortFwdStatus eastPortFwdStatus = 2;
            uint32 guardTimer = 3;
            uint32 holdoffTimer = 4;
            uint32 interval = 5;
            enum LastSwitchRequest {
               LastSwitchRequest_CLEAR = 0;
               LastSwitchRequest_FS = 1;
               LastSwitchRequest_INITIALREQUEST = 2;
               LastSwitchRequest_LOCALCLEARSF = 3;
               LastSwitchRequest_LOCALSF = 4;
               LastSwitchRequest_MS = 5;
               LastSwitchRequest_RAPSFS = 6;
               LastSwitchRequest_RAPSMS = 7;
               LastSwitchRequest_RAPSNR = 8;
               LastSwitchRequest_RAPSNRRB = 9;
               LastSwitchRequest_RAPSSF = 10;
               LastSwitchRequest_WTBEXPIRED = 11;
               LastSwitchRequest_WTBRUNNING = 12;
               LastSwitchRequest_WTREXPIRED = 13;
               LastSwitchRequest_WTRRUNNING = 14;
            };
            LastSwitchRequest lastSwitchRequest = 6;
            string messageSourceMac = 7;
            uint32 rapsMel = 8;
            enum RbState {
               RbState_NORB = 0;
               RbState_RB = 1;
            };
            RbState rbState = 9;
            enum RunningMachineState {
               RunningMachineState_FORCEDSWITCH = 0;
               RunningMachineState_IDLE = 1;
               RunningMachineState_MANUALSWITCH = 2;
               RunningMachineState_PENDING = 3;
               RunningMachineState_PROTECTION = 4;
            };
            RunningMachineState runningMachineState = 10;
            enum WestPortFwdStatus {
               WestPortFwdStatus_DISCARDING = 0;
               WestPortFwdStatus_FORWARDING = 1;
               WestPortFwdStatus_UNKNOWN = 2;
            };
            WestPortFwdStatus westPortFwdStatus = 11;
            uint32 wtrTimer = 12;
         }
         ErpsRingInfo erpsRingInfo = 7;
         message ErpsV2 {
            bool isVirtualChannelEnable = 1;
            string rapsTcRing = 2;
            enum RingRole {
               RingRole_MAIN = 0;
               RingRole_SUB = 1;
            };
            RingRole ringRole = 3;
         }
         ErpsV2 erpsV2 = 8;
         enum EthType {
            EthType_STANDARD = 0;
            EthType_TRANSMIT = 1;
         };
         EthType ethType = 9;
         message ExchangeVlans {
            message ExchangeVlan {
               uint32 exChangeVlan = 1;
               uint32 mainRingId = 2;
               uint32 subRingId = 3;
               uint32 virtChanlVlan = 4;
            }
            repeated ExchangeVlan exchangeVlan = 1;
         }
         ExchangeVlans exchangeVlans = 10;
         uint32 guard_timer = 11 [json_name = "guard-timer"];
         uint32 holdoff_timer = 12 [json_name = "holdoff-timer"];
         bool isRevertiveEnable = 13;
         bool isVirtualChannelEnable = 14;
         enum LoopDetect {
            LoopDetect_DISABLE = 0;
            LoopDetect_ENABLE = 1;
         };
         LoopDetect loopDetect = 15;
         uint32 mainRingId = 16;
         message PortInfos {
            message PortInfo {
               enum CfmState {
                  CfmState_FAILED = 0;
                  CfmState_NONX_FAILED = 1;
                  CfmState_UNKNOWN = 2;
               };
               CfmState cfmState = 1;
               string ifName = 2;
               string maName = 3;
               string mdName = 4;
               uint32 mepId = 5;
               enum PhysicalState {
                  PhysicalState_DOWN = 0;
                  PhysicalState_UNKNOWN = 1;
                  PhysicalState_UP = 2;
               };
               PhysicalState physicalState = 6;
               enum PortFwdStatus {
                  PortFwdStatus_DISCARDING = 0;
                  PortFwdStatus_FORWARDING = 1;
                  PortFwdStatus_UNKNOWN = 2;
               };
               PortFwdStatus portFwdStatus = 7;
               enum PortRole {
                  PortRole_COMMON = 0;
                  PortRole_RPLX_NEIGHBOUR = 1;
                  PortRole_RPLX_NEXTX_NEIGHBOUR = 2;
                  PortRole_RPLX_OWNER = 3;
               };
               PortRole portRole = 8;
               enum PortSignalStatus {
                  PortSignalStatus_FAILED = 0;
                  PortSignalStatus_NONX_FAILED = 1;
                  PortSignalStatus_UNKNOWN = 2;
               };
               PortSignalStatus portSignalStatus = 9;
               uint32 rmepId = 10;
            }
            repeated PortInfo portInfo = 1;
         }
         PortInfos portInfos = 17;
         enum PortRole {
            PortRole_COMMON = 0;
            PortRole_RPLX_NEIGHBOUR = 1;
            PortRole_RPLX_NEXTX_NEIGHBOUR = 2;
            PortRole_RPLX_OWNER = 3;
         };
         PortRole portRole = 18;
         string protected_instance_list = 19 [json_name = "protected-instance-list"];
         uint32 raps_mel = 20 [json_name = "raps-mel"];
         uint32 rapsTcProtInterValue = 21;
         uint32 rapsTcProtThreshold = 22;
         uint32 ringID = 23;
         message RingRunningInfo {
            string fsPort = 1;
            string msPort = 2;
            uint32 runningGuardTimer = 3;
            uint32 runningHoldoffTimer = 4;
            enum RunningMachineState {
               RunningMachineState_FORCEDSWITCH = 0;
               RunningMachineState_IDLE = 1;
               RunningMachineState_MANUALSWITCH = 2;
               RunningMachineState_PENDING = 3;
               RunningMachineState_PROTECTION = 4;
            };
            RunningMachineState runningMachineState = 5;
            uint32 runningWtrTimer = 6;
            string topoLastChangeTime = 7;
         }
         RingRunningInfo ringRunningInfo = 24;
         string rplIfName = 25;
         string serviceVlanIDList = 26;
         enum Version {
            INVALID_ENUM_VALUE_Version = 0;
            Version_V1 = 1;
            Version_V2 = 2;
         };
         Version version = 27 [json_name = "version"];
         string virtChanlVlans = 28;
         string westIfName = 29;
         uint32 wtrTimer = 30;
         uint32 id = 31 [json_name = "id"];
         uint32 control_vlan = 32 [json_name = "control-vlan"];
         uint32 wait_restore_timer = 33 [json_name = "wait-restore-timer"];
         bool revertive_enable = 34 [json_name = "revertive-enable"];
         uint32 tc_protection_interval = 35 [json_name = "tc-protection-interval"];
         uint32 tc_protection_threshold = 36 [json_name = "tc-protection-threshold"];
         message VersionV2 {
            enum RingRole {
               RingRole_MAJOR = 0;
               RingRole_SUB = 1;
            };
            RingRole ring_role = 1 [json_name = "ring-role"];
            bool virtual_channel_enable = 2 [json_name = "virtual-channel-enable"];
            string tc_notify_ring = 3 [json_name = "tc-notify-ring"];
         }
         VersionV2 version_v2 = 37 [json_name = "version-v2"];
         message PortAttributes {
            message PortAttribute {
               string if_name = 1 [json_name = "if-name"];
               enum PortRole {
                  PortRole_COMMON = 0;
                  PortRole_NEIGHBOUR = 1;
                  PortRole_OWNER = 2;
               };
               PortRole port_role = 2 [json_name = "port-role"];
               string md_name = 3 [json_name = "md-name"];
               string ma_name = 4 [json_name = "ma-name"];
               uint32 mep_id = 5 [json_name = "mep-id"];
               uint32 rmep_id = 6 [json_name = "rmep-id"];
               enum VplsEnable {
                  VplsEnable_DISABLE = 0;
                  VplsEnable_ENABLE = 1;
               };
               VplsEnable vpls_enable = 7 [json_name = "vpls-enable"];
               enum BdEnable {
                  BdEnable_DISABLE = 0;
                  BdEnable_ENABLE = 1;
               };
               BdEnable bd_enable = 8 [json_name = "bd-enable"];
            }
            repeated PortAttribute port_attribute = 1 [json_name = "port-attribute"];
         }
         PortAttributes port_attributes = 38 [json_name = "port-attributes"];
         message FastSwitch {
            uint32 force_bc_time = 1 [json_name = "force-bc-time"];
         }
         FastSwitch fast_switch = 39 [json_name = "fast-switch"];
         enum RingRole {
            RingRole_MAJOR = 0;
            RingRole_SUB = 1;
         };
         RingRole ring_role = 40 [json_name = "ring-role"];
         bool virtual_channel_enable = 41 [json_name = "virtual-channel-enable"];
         string tc_notify_ring = 42 [json_name = "tc-notify-ring"];
         message RuningInfo {
            uint32 wtr_timer = 1 [json_name = "wtr-timer"];
            uint32 guard_timer = 2 [json_name = "guard-timer"];
            uint32 holdoff_timer = 3 [json_name = "holdoff-timer"];
            enum RingState {
               RingState_IDLE = 0;
               RingState_PROTECTION = 1;
               RingState_MANUALSWITCH = 2;
               RingState_FORCEDSWITCH = 3;
               RingState_PENDING = 4;
            };
            RingState ring_state = 4 [json_name = "ring-state"];
            string topo_last_change_time = 5 [json_name = "topo-last-change-time"];
            string fsport = 6 [json_name = "fsport"];
            string msport = 7 [json_name = "msport"];
            uint32 wtb_timer = 8 [json_name = "wtb-timer"];
         }
         RuningInfo runing_info = 43 [json_name = "runing-info"];
         message ErpsPortInfos {
            message ErpsPortInfo {
               string interface_name = 1 [json_name = "interface-name"];
               enum PortStatus {
                  PortStatus_UNKNOWN = 0;
                  PortStatus_DISCARDING = 1;
                  PortStatus_FORWARDING = 3;
               };
               PortStatus port_status = 2 [json_name = "port-status"];
               enum SignalStatus {
                  SignalStatus_UNKNOWN = 0;
                  SignalStatus_FAILED = 1;
                  SignalStatus_NONX_FAILED = 2;
               };
               SignalStatus signal_status = 3 [json_name = "signal-status"];
               message ErpsStatics {
                  uint32 rx_sf_pkts = 1 [json_name = "rx-sf-pkts"];
                  uint32 tx_sf_pkts = 2 [json_name = "tx-sf-pkts"];
                  uint32 rx_nr_pkts = 3 [json_name = "rx-nr-pkts"];
                  uint32 tx_nr_pkts = 4 [json_name = "tx-nr-pkts"];
                  uint32 rx_nrrb_pkts = 5 [json_name = "rx-nrrb-pkts"];
                  uint32 tx_nrrb_pkts = 6 [json_name = "tx-nrrb-pkts"];
                  uint32 rx_fs_pkts = 7 [json_name = "rx-fs-pkts"];
                  uint32 tx_fs_pkts = 8 [json_name = "tx-fs-pkts"];
                  uint32 rx_ms_pkts = 9 [json_name = "rx-ms-pkts"];
                  uint32 tx_ms_pkts = 10 [json_name = "tx-ms-pkts"];
                  uint32 rx_event_pkts = 11 [json_name = "rx-event-pkts"];
                  uint32 tx_event_pkts = 12 [json_name = "tx-event-pkts"];
               }
               ErpsStatics erps_statics = 4 [json_name = "erps-statics"];
            }
            repeated ErpsPortInfo erps_port_info = 1 [json_name = "erps-port-info"];
         }
         ErpsPortInfos erps_port_infos = 44 [json_name = "erps-port-infos"];
      }
      repeated Ring ring = 1 [json_name = "ring"];
   }
   Rings rings = 2 [json_name = "rings"];
}
message HwErpsFwStateDiscarding {
   uint32 IfIndex = 1;
   string IfName = 2;
   uint32 RingID = 3;
}
message HwErpsFwStateForwarding {
   uint32 IfIndex = 1;
   string IfName = 2;
   uint32 RingID = 3;
}

