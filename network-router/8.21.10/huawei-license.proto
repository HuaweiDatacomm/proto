syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2022-04-28 09:07:38
// ProtoYang-version 1
// module huawei-license
// revision 2022-04-20
// revision 2022-03-12
// revision 2022-02-24
// revision 2022-02-11
// revision 2022-01-13
// revision 2021-12-08
// revision 2021-11-02
// revision 2021-09-01
// revision 2021-08-26
// namespace urn:huawei:yang:huawei-license

package huawei_license;

message License {
   message GlobalStates {
      message GlobalState {
         string chassis_id = 1 [json_name = "chassis-id"];
         string active_filename = 2 [json_name = "active-filename"];
         enum ActiveState {
            ActiveState_DEFAULT = 0;
            ActiveState_TRIAL = 1;
            ActiveState_NORMAL = 2;
            ActiveState_EMERGENCY = 3;
            ActiveState_DEMO = 4;
         };
         ActiveState active_state = 3 [json_name = "active-state"];
         string revoke_ticket = 4 [json_name = "revoke-ticket"];
         string esn = 5 [json_name = "esn"];
         enum LicenseMode {
            INVALID_ENUM_VALUE_LicenseMode = 0;
            LicenseMode_COMMON = 1;
            LicenseMode_CLOUD = 2;
         };
         LicenseMode license_mode = 6 [json_name = "license-mode"];
         string startup_filename = 7 [json_name = "startup-filename"];
      }
      repeated GlobalState global_state = 1 [json_name = "global-state"];
   }
   GlobalStates global_states = 1 [json_name = "global-states"];
   message LicenseItems {
      message LicenseItem {
         string name = 1 [json_name = "name"];
         string description = 2 [json_name = "description"];
         uint32 default_value = 3 [json_name = "default-value"];
         uint32 maximum_value = 4 [json_name = "maximum-value"];
         uint32 current_value = 5 [json_name = "current-value"];
         uint32 used_value = 6 [json_name = "used-value"];
         enum Status {
            Status_DEFAULT = 0;
            Status_TRIAL = 1;
            Status_NORMAL = 2;
            Status_EMERGENCY = 3;
            Status_DEMO = 4;
            Status_INACTIVE = 5;
            Status_LOCKED = 6;
         };
         Status status = 7 [json_name = "status"];
         string expired_date = 8 [json_name = "expired-date"];
         enum Type {
            Type_RESOURCE = 0;
            Type_FUNCTION = 1;
         };
         Type type = 9 [json_name = "type"];
         enum TrialState {
            TrialState_DISABLE = 0;
            TrialState_ENABLE = 1;
            TrialState_NOTX_SUPPORTED = 2;
         };
         TrialState trial_state = 10 [json_name = "trial-state"];
         uint32 trial_remain_day = 11 [json_name = "trial-remain-day"];
         uint32 trial_remain_times = 12 [json_name = "trial-remain-times"];
         message PortHqoss {
            message PortHqos {
               string position = 1 [json_name = "position"];
               enum ActiveStatus {
                  INVALID_ENUM_VALUE_ActiveStatus = 0;
                  ActiveStatus_ALLOCATED = 1;
                  ActiveStatus_ACTIVATED = 2;
               };
               ActiveStatus active_status = 2 [json_name = "active-status"];
            }
            repeated PortHqos port_hqos = 1 [json_name = "port-hqos"];
         }
         PortHqoss port_hqoss = 13 [json_name = "port-hqoss"];
         message LcsPortEvpns {
            message LcsPortEvpn {
               string position = 1 [json_name = "position"];
            }
            repeated LcsPortEvpn lcs_port_evpn = 1 [json_name = "lcs-port-evpn"];
         }
         LcsPortEvpns lcs_port_evpns = 14 [json_name = "lcs-port-evpns"];
         message LcsPortVxlans {
            message LcsPortVxlan {
               string position = 1 [json_name = "position"];
            }
            repeated LcsPortVxlan lcs_port_vxlan = 1 [json_name = "lcs-port-vxlan"];
         }
         LcsPortVxlans lcs_port_vxlans = 15 [json_name = "lcs-port-vxlans"];
         message PortModeChannels {
            message PortModeChannel {
               string position = 1 [json_name = "position"];
            }
            repeated PortModeChannel port_mode_channel = 1 [json_name = "port-mode-channel"];
         }
         PortModeChannels port_mode_channels = 16 [json_name = "port-mode-channels"];
         message PortSlicings {
            message PortSlicing {
               string position = 1 [json_name = "position"];
            }
            repeated PortSlicing port_slicing = 1 [json_name = "port-slicing"];
         }
         PortSlicings port_slicings = 17 [json_name = "port-slicings"];
         message PortMacsecs {
            message PortMacsec {
               string position = 1 [json_name = "position"];
               enum ActiveStatus {
                  INVALID_ENUM_VALUE_ActiveStatus = 0;
                  ActiveStatus_ALLOCATED = 1;
                  ActiveStatus_ACTIVATED = 2;
               };
               ActiveStatus active_status = 2 [json_name = "active-status"];
            }
            repeated PortMacsec port_macsec = 1 [json_name = "port-macsec"];
         }
         PortMacsecs port_macsecs = 18 [json_name = "port-macsecs"];
         message PortL3Vpns {
            message PortL3Vpn {
               string position = 1 [json_name = "position"];
            }
            repeated PortL3Vpn port_l3vpn = 1 [json_name = "port-l3vpn"];
         }
         PortL3Vpns port_l3vpns = 19 [json_name = "port-l3vpns"];
         message PortL3VpnEvpns {
            message PortL3VpnEvpn {
               string position = 1 [json_name = "position"];
            }
            repeated PortL3VpnEvpn port_l3vpn_evpn = 1 [json_name = "port-l3vpn-evpn"];
         }
         PortL3VpnEvpns port_l3vpn_evpns = 20 [json_name = "port-l3vpn-evpns"];
         message PortServiceEnhances {
            message PortServiceEnhance {
               string position = 1 [json_name = "position"];
            }
            repeated PortServiceEnhance port_service_enhance = 1 [json_name = "port-service-enhance"];
         }
         PortServiceEnhances port_service_enhances = 21 [json_name = "port-service-enhances"];
         message PortAggregations {
            message PortAggregation {
               string position = 1 [json_name = "position"];
            }
            repeated PortAggregation port_aggregation = 1 [json_name = "port-aggregation"];
         }
         PortAggregations port_aggregations = 22 [json_name = "port-aggregations"];
         message PortCoreAggregations {
            message PortCoreAggregation {
               string position = 1 [json_name = "position"];
            }
            repeated PortCoreAggregation port_core_aggregation = 1 [json_name = "port-core-aggregation"];
         }
         PortCoreAggregations port_core_aggregations = 23 [json_name = "port-core-aggregations"];
         message PortPeerings {
            message PortPeering {
               string position = 1 [json_name = "position"];
            }
            repeated PortPeering port_peering = 1 [json_name = "port-peering"];
         }
         PortPeerings port_peerings = 24 [json_name = "port-peerings"];
         message PortSrv6S {
            message PortSrv6 {
               string position = 1 [json_name = "position"];
            }
            repeated PortSrv6 port_srv6 = 1 [json_name = "port-srv6"];
         }
         PortSrv6S port_srv6s = 25 [json_name = "port-srv6s"];
         message LcsPorts {
            message PortBasic {
               string position = 1 [json_name = "position"];
               enum ActiveStatus {
                  ActiveStatus_UNALLOCATED = 0;
                  ActiveStatus_ALLOCATED = 1;
                  ActiveStatus_ACTIVATED = 2;
               };
               ActiveStatus active_status = 2 [json_name = "active-status"];
            }
            repeated PortBasic port_basic = 1 [json_name = "port-basic"];
         }
         LcsPorts lcs_ports = 26 [json_name = "lcs-ports"];
      }
      repeated LicenseItem license_item = 1 [json_name = "license-item"];
   }
   LicenseItems license_items = 2 [json_name = "license-items"];
   message LicenseSaleItems {
      message LicenseSaleItem {
         string name = 1 [json_name = "name"];
         string description = 2 [json_name = "description"];
         uint32 sale_value = 3 [json_name = "sale-value"];
         message LicenseItems {
            message LicenseItem {
               string name = 1 [json_name = "name"];
               string description = 2 [json_name = "description"];
               uint32 default_value = 3 [json_name = "default-value"];
               uint32 maximum_value = 4 [json_name = "maximum-value"];
               uint32 current_value = 5 [json_name = "current-value"];
               uint32 used_value = 6 [json_name = "used-value"];
               enum Status {
                  Status_DEFAULT = 0;
                  Status_TRIAL = 1;
                  Status_NORMAL = 2;
                  Status_EMERGENCY = 3;
                  Status_DEMO = 4;
                  Status_INACTIVE = 5;
                  Status_LOCKED = 6;
               };
               Status status = 7 [json_name = "status"];
               string expired_date = 8 [json_name = "expired-date"];
               enum Type {
                  Type_RESOURCE = 0;
                  Type_FUNCTION = 1;
               };
               Type type = 9 [json_name = "type"];
               enum TrialState {
                  TrialState_DISABLE = 0;
                  TrialState_ENABLE = 1;
                  TrialState_NOTX_SUPPORTED = 2;
               };
               TrialState trial_state = 10 [json_name = "trial-state"];
               uint32 trial_remain_day = 11 [json_name = "trial-remain-day"];
               uint32 trial_remain_times = 12 [json_name = "trial-remain-times"];
            }
            repeated LicenseItem license_item = 1 [json_name = "license-item"];
         }
         LicenseItems license_items = 4 [json_name = "license-items"];
         message SubSaleItems {
            message SubSaleItem {
               string name = 1 [json_name = "name"];
               string description = 2 [json_name = "description"];
               uint32 sale_value = 3 [json_name = "sale-value"];
               message LicenseItems {
                  message LicenseItem {
                     string name = 1 [json_name = "name"];
                     string description = 2 [json_name = "description"];
                     uint32 default_value = 3 [json_name = "default-value"];
                     uint32 maximum_value = 4 [json_name = "maximum-value"];
                     uint32 current_value = 5 [json_name = "current-value"];
                     uint32 used_value = 6 [json_name = "used-value"];
                     enum Status {
                        Status_DEFAULT = 0;
                        Status_TRIAL = 1;
                        Status_NORMAL = 2;
                        Status_EMERGENCY = 3;
                        Status_DEMO = 4;
                        Status_INACTIVE = 5;
                        Status_LOCKED = 6;
                     };
                     Status status = 7 [json_name = "status"];
                     string expired_date = 8 [json_name = "expired-date"];
                     enum Type {
                        Type_RESOURCE = 0;
                        Type_FUNCTION = 1;
                     };
                     Type type = 9 [json_name = "type"];
                     enum TrialState {
                        TrialState_DISABLE = 0;
                        TrialState_ENABLE = 1;
                        TrialState_NOTX_SUPPORTED = 2;
                     };
                     TrialState trial_state = 10 [json_name = "trial-state"];
                     uint32 trial_remain_day = 11 [json_name = "trial-remain-day"];
                     uint32 trial_remain_times = 12 [json_name = "trial-remain-times"];
                  }
                  repeated LicenseItem license_item = 1 [json_name = "license-item"];
               }
               LicenseItems license_items = 4 [json_name = "license-items"];
            }
            repeated SubSaleItem sub_sale_item = 1 [json_name = "sub-sale-item"];
         }
         SubSaleItems sub_sale_items = 5 [json_name = "sub-sale-items"];
      }
      repeated LicenseSaleItem license_sale_item = 1 [json_name = "license-sale-item"];
   }
   LicenseSaleItems license_sale_items = 3 [json_name = "license-sale-items"];
   message StackSaleItems {
      message StackSaleItem {
         string chassis_id = 1 [json_name = "chassis-id"];
         message LicenseSaleItems {
            message LicenseSaleItem {
               string name = 1 [json_name = "name"];
               string description = 2 [json_name = "description"];
               uint32 sale_value = 3 [json_name = "sale-value"];
               message LicenseItems {
                  message LicenseItem {
                     string name = 1 [json_name = "name"];
                     string description = 2 [json_name = "description"];
                     uint32 default_value = 3 [json_name = "default-value"];
                     uint32 maximum_value = 4 [json_name = "maximum-value"];
                     uint32 current_value = 5 [json_name = "current-value"];
                     uint32 used_value = 6 [json_name = "used-value"];
                     enum Status {
                        Status_DEFAULT = 0;
                        Status_TRIAL = 1;
                        Status_NORMAL = 2;
                        Status_EMERGENCY = 3;
                        Status_DEMO = 4;
                        Status_INACTIVE = 5;
                        Status_LOCKED = 6;
                     };
                     Status status = 7 [json_name = "status"];
                     string expired_date = 8 [json_name = "expired-date"];
                     enum Type {
                        Type_RESOURCE = 0;
                        Type_FUNCTION = 1;
                     };
                     Type type = 9 [json_name = "type"];
                     enum TrialState {
                        TrialState_DISABLE = 0;
                        TrialState_ENABLE = 1;
                        TrialState_NOTX_SUPPORTED = 2;
                     };
                     TrialState trial_state = 10 [json_name = "trial-state"];
                     uint32 trial_remain_day = 11 [json_name = "trial-remain-day"];
                     uint32 trial_remain_times = 12 [json_name = "trial-remain-times"];
                  }
                  repeated LicenseItem license_item = 1 [json_name = "license-item"];
               }
               LicenseItems license_items = 4 [json_name = "license-items"];
            }
            repeated LicenseSaleItem license_sale_item = 1 [json_name = "license-sale-item"];
         }
         LicenseSaleItems license_sale_items = 2 [json_name = "license-sale-items"];
      }
      repeated StackSaleItem stack_sale_item = 1 [json_name = "stack-sale-item"];
   }
   StackSaleItems stack_sale_items = 4 [json_name = "stack-sale-items"];
   message SpecItems {
      message SpecItem {
         string name = 1 [json_name = "name"];
         string description = 2 [json_name = "description"];
         uint32 current_value = 3 [json_name = "current-value"];
         enum Type {
            Type_RESOURCE = 0;
            Type_FUNCTION = 1;
            Type_MINIMUM = 2;
            Type_DEFAULT = 3;
            Type_MAXIMUM = 4;
         };
         Type type = 4 [json_name = "type"];
         uint32 default_value = 5 [json_name = "default-value"];
         uint32 minimum_value = 6 [json_name = "minimum-value"];
         uint32 maximum_value = 7 [json_name = "maximum-value"];
      }
      repeated SpecItem spec_item = 1 [json_name = "spec-item"];
   }
   SpecItems spec_items = 5 [json_name = "spec-items"];
   message LicenseFiles {
      message LicenseFile {
         string chassis_id = 1 [json_name = "chassis-id"];
         string filename = 2 [json_name = "filename"];
         uint32 filesize = 3 [json_name = "filesize"];
         message General {
            string serial_number = 1 [json_name = "serial-number"];
            string creator = 2 [json_name = "creator"];
            string created_time = 3 [json_name = "created-time"];
            string country = 4 [json_name = "country"];
            string customer = 5 [json_name = "customer"];
            string office = 6 [json_name = "office"];
            string file_expired_date = 7 [json_name = "file-expired-date"];
         }
         General general = 4 [json_name = "general"];
         message Features {
            message Feature {
               string name = 1 [json_name = "name"];
               string product = 2 [json_name = "product"];
               string esn = 3 [json_name = "esn"];
               enum AuthType {
                  AuthType_DEMO = 0;
                  AuthType_COMMERCIAL = 1;
               };
               AuthType auth_type = 4 [json_name = "auth-type"];
               string running_deadline = 5 [json_name = "running-deadline"];
               uint32 trial_days = 6 [json_name = "trial-days"];
               string software_deadline = 7 [json_name = "software-deadline"];
               string hardware_deadline = 8 [json_name = "hardware-deadline"];
               string upgrate_deadline = 9 [json_name = "upgrate-deadline"];
               message FeatureItems {
                  message FeatureItem {
                     string name = 1 [json_name = "name"];
                     uint32 value = 2 [json_name = "value"];
                  }
                  repeated FeatureItem feature_item = 1 [json_name = "feature-item"];
               }
               FeatureItems feature_items = 10 [json_name = "feature-items"];
            }
            repeated Feature feature = 1 [json_name = "feature"];
         }
         Features features = 5 [json_name = "features"];
      }
      repeated LicenseFile license_file = 1 [json_name = "license-file"];
   }
   LicenseFiles license_files = 6 [json_name = "license-files"];
   message ResourceUsages {
      message ResourceUsage {
         string name = 1 [json_name = "name"];
         uint32 usage = 2 [json_name = "usage"];
         uint32 active_value = 3 [json_name = "active-value"];
         message PortL3Vpns {
            message PortL3Vpn {
               string position = 1 [json_name = "position"];
               enum ActiveStatus {
                  ActiveStatus_UNALLOCATED = 0;
                  ActiveStatus_ALLOCATED = 1;
                  ActiveStatus_ACTIVATED = 2;
               };
               ActiveStatus active_status = 2 [json_name = "active-status"];
            }
            repeated PortL3Vpn port_l3vpn = 1 [json_name = "port-l3vpn"];
         }
         PortL3Vpns port_l3vpns = 4 [json_name = "port-l3vpns"];
         message PortL3VpnEvpns {
            message PortL3VpnEvpn {
               string position = 1 [json_name = "position"];
               enum ActiveStatus {
                  ActiveStatus_UNALLOCATED = 0;
                  ActiveStatus_ALLOCATED = 1;
                  ActiveStatus_ACTIVATED = 2;
               };
               ActiveStatus active_status = 2 [json_name = "active-status"];
            }
            repeated PortL3VpnEvpn port_l3vpn_evpn = 1 [json_name = "port-l3vpn-evpn"];
         }
         PortL3VpnEvpns port_l3vpn_evpns = 5 [json_name = "port-l3vpn-evpns"];
         message PortServiceEnhances {
            message PortServiceEnhance {
               string position = 1 [json_name = "position"];
               enum ActiveStatus {
                  ActiveStatus_UNALLOCATED = 0;
                  ActiveStatus_ALLOCATED = 1;
                  ActiveStatus_ACTIVATED = 2;
               };
               ActiveStatus active_status = 2 [json_name = "active-status"];
            }
            repeated PortServiceEnhance port_service_enhance = 1 [json_name = "port-service-enhance"];
         }
         PortServiceEnhances port_service_enhances = 6 [json_name = "port-service-enhances"];
         message PortAggregations {
            message PortAggregation {
               string position = 1 [json_name = "position"];
               enum ActiveStatus {
                  ActiveStatus_UNALLOCATED = 0;
                  ActiveStatus_ALLOCATED = 1;
                  ActiveStatus_ACTIVATED = 2;
               };
               ActiveStatus active_status = 2 [json_name = "active-status"];
            }
            repeated PortAggregation port_aggregation = 1 [json_name = "port-aggregation"];
         }
         PortAggregations port_aggregations = 7 [json_name = "port-aggregations"];
         message PortCoreAggregations {
            message PortCoreAggregation {
               string position = 1 [json_name = "position"];
               enum ActiveStatus {
                  ActiveStatus_UNALLOCATED = 0;
                  ActiveStatus_ALLOCATED = 1;
                  ActiveStatus_ACTIVATED = 2;
               };
               ActiveStatus active_status = 2 [json_name = "active-status"];
            }
            repeated PortCoreAggregation port_core_aggregation = 1 [json_name = "port-core-aggregation"];
         }
         PortCoreAggregations port_core_aggregations = 8 [json_name = "port-core-aggregations"];
         message PortPeerings {
            message PortPeering {
               string position = 1 [json_name = "position"];
               enum ActiveStatus {
                  ActiveStatus_UNALLOCATED = 0;
                  ActiveStatus_ALLOCATED = 1;
                  ActiveStatus_ACTIVATED = 2;
               };
               ActiveStatus active_status = 2 [json_name = "active-status"];
            }
            repeated PortPeering port_peering = 1 [json_name = "port-peering"];
         }
         PortPeerings port_peerings = 9 [json_name = "port-peerings"];
         message PortSrv6S {
            message PortSrv6 {
               string position = 1 [json_name = "position"];
               enum ActiveStatus {
                  ActiveStatus_UNALLOCATED = 0;
                  ActiveStatus_ALLOCATED = 1;
                  ActiveStatus_ACTIVATED = 2;
               };
               ActiveStatus active_status = 2 [json_name = "active-status"];
            }
            repeated PortSrv6 port_srv6 = 1 [json_name = "port-srv6"];
         }
         PortSrv6S port_srv6s = 10 [json_name = "port-srv6s"];
         message LicenseItems {
            message LicenseItem {
               string name = 1 [json_name = "name"];
               uint32 current_value = 2 [json_name = "current-value"];
               uint32 used_value = 3 [json_name = "used-value"];
            }
            repeated LicenseItem license_item = 1 [json_name = "license-item"];
         }
         LicenseItems license_items = 11 [json_name = "license-items"];
      }
      repeated ResourceUsage resource_usage = 1 [json_name = "resource-usage"];
   }
   ResourceUsages resource_usages = 7 [json_name = "resource-usages"];
   message ResourceThresholds {
      message ResourceThreshold {
         string name = 1 [json_name = "name"];
         uint32 threshold = 2 [json_name = "threshold"];
         uint32 configurable_switch = 3 [json_name = "configurable-switch"];
         string description = 4 [json_name = "description"];
      }
      repeated ResourceThreshold resource_threshold = 1 [json_name = "resource-threshold"];
   }
   ResourceThresholds resource_thresholds = 8 [json_name = "resource-thresholds"];
   message CloudServers {
      message CloudServer {
         string server_ip = 1 [json_name = "server-ip"];
         uint32 server_port = 2 [json_name = "server-port"];
         enum RegisterState {
            INVALID_ENUM_VALUE_RegisterState = 0;
            RegisterState_REGISTER = 1;
            RegisterState_UNREGISTER = 2;
         };
         RegisterState register_state = 3 [json_name = "register-state"];
         string policy_name = 4 [json_name = "policy-name"];
      }
      repeated CloudServer cloud_server = 1 [json_name = "cloud-server"];
   }
   CloudServers cloud_servers = 9 [json_name = "cloud-servers"];
   message LcsPorts {
      message PortBasic {
         string position = 1 [json_name = "position"];
         enum ActiveStatus {
            ActiveStatus_UNALLOCATED = 0;
            ActiveStatus_ALLOCATED = 1;
            ActiveStatus_ACTIVATED = 2;
         };
         ActiveStatus active_status = 2 [json_name = "active-status"];
         enum PortBand {
            INVALID_ENUM_VALUE_PortBand = 0;
            PortBand_X_200G = 1;
            PortBand_X_400G = 2;
         };
         PortBand port_band = 3 [json_name = "port-band"];
      }
      repeated PortBasic port_basic = 1 [json_name = "port-basic"];
   }
   LcsPorts lcs_ports = 10 [json_name = "lcs-ports"];
   message UpgradePorts {
      message PortUpgrade {
         string position = 1 [json_name = "position"];
         enum ActiveStatus {
            ActiveStatus_UNALLOCATED = 0;
            ActiveStatus_ALLOCATED = 1;
            ActiveStatus_ACTIVATED = 2;
         };
         ActiveStatus active_status = 2 [json_name = "active-status"];
      }
      repeated PortUpgrade port_upgrade = 1 [json_name = "port-upgrade"];
   }
   UpgradePorts upgrade_ports = 11 [json_name = "upgrade-ports"];
   message FlexePorts {
      message PortFlexe {
         string position = 1 [json_name = "position"];
         enum ActiveStatus {
            ActiveStatus_UNALLOCATED = 0;
            ActiveStatus_ALLOCATED = 1;
            ActiveStatus_ACTIVATED = 2;
         };
         ActiveStatus active_status = 2 [json_name = "active-status"];
      }
      repeated PortFlexe port_flexe = 1 [json_name = "port-flexe"];
   }
   FlexePorts flexe_ports = 12 [json_name = "flexe-ports"];
   message ExpandPorts {
      message PortExpand {
         string position = 1 [json_name = "position"];
         uint32 active_count = 2 [json_name = "active-count"];
         uint32 used_count = 3 [json_name = "used-count"];
         enum ActiveStatus {
            ActiveStatus_UNALLOCATED = 0;
            ActiveStatus_ALLOCATED = 1;
            ActiveStatus_ACTIVATED = 2;
         };
         ActiveStatus active_status = 4 [json_name = "active-status"];
      }
      repeated PortExpand port_expand = 1 [json_name = "port-expand"];
   }
   ExpandPorts expand_ports = 13 [json_name = "expand-ports"];
   message Rtus {
      message Rtu {
         string position = 1 [json_name = "position"];
         enum ActiveStatus {
            ActiveStatus_UNALLOCATED = 0;
            ActiveStatus_ALLOCATED = 1;
            ActiveStatus_ACTIVATED = 2;
         };
         ActiveStatus active_status = 2 [json_name = "active-status"];
      }
      repeated Rtu rtu = 1 [json_name = "rtu"];
   }
   Rtus rtus = 14 [json_name = "rtus"];
   message RtuExtends {
      message RtuExtend {
         string feature_name = 1 [json_name = "feature-name"];
         message FeatureInfos {
            message FeatureInfo {
               string barcode = 1 [json_name = "barcode"];
               uint32 allocated_count = 2 [json_name = "allocated-count"];
               uint32 activated_count = 3 [json_name = "activated-count"];
               uint32 available_count = 4 [json_name = "available-count"];
               uint32 total_count = 5 [json_name = "total-count"];
               message Ports {
                  message Port {
                     string position = 1 [json_name = "position"];
                     uint32 needed_count = 2 [json_name = "needed-count"];
                     uint32 used_count = 3 [json_name = "used-count"];
                     enum ActiveStatus {
                        ActiveStatus_UNALLOCATED = 0;
                        ActiveStatus_ACTIVATED = 1;
                        ActiveStatus_ALLOCATED = 2;
                     };
                     ActiveStatus active_status = 4 [json_name = "active-status"];
                  }
                  repeated Port port = 1 [json_name = "port"];
               }
               Ports ports = 6 [json_name = "ports"];
            }
            repeated FeatureInfo feature_info = 1 [json_name = "feature-info"];
         }
         FeatureInfos feature_infos = 2 [json_name = "feature-infos"];
      }
      repeated RtuExtend rtu_extend = 1 [json_name = "rtu-extend"];
   }
   RtuExtends rtu_extends = 15 [json_name = "rtu-extends"];
   message LcsPortEvpns {
      message LcsPortEvpn {
         string position = 1 [json_name = "position"];
         enum ActiveStatus {
            ActiveStatus_UNALLOCATED = 0;
            ActiveStatus_ALLOCATED = 1;
            ActiveStatus_ACTIVATED = 2;
         };
         ActiveStatus active_status = 2 [json_name = "active-status"];
      }
      repeated LcsPortEvpn lcs_port_evpn = 1 [json_name = "lcs-port-evpn"];
   }
   LcsPortEvpns lcs_port_evpns = 16 [json_name = "lcs-port-evpns"];
   message LcsPortVxlans {
      message LcsPortVxlan {
         string position = 1 [json_name = "position"];
         enum ActiveStatus {
            ActiveStatus_UNALLOCATED = 0;
            ActiveStatus_ALLOCATED = 1;
            ActiveStatus_ACTIVATED = 2;
         };
         ActiveStatus active_status = 2 [json_name = "active-status"];
      }
      repeated LcsPortVxlan lcs_port_vxlan = 1 [json_name = "lcs-port-vxlan"];
   }
   LcsPortVxlans lcs_port_vxlans = 17 [json_name = "lcs-port-vxlans"];
   message VmBandwidths {
      message VmBandwidth {
         string vnfc_name = 1 [json_name = "vnfc-name"];
         uint32 slot_id = 2 [json_name = "slot-id"];
         enum IsBandwidthLimited {
            IsBandwidthLimited_LIMITED = 0;
            IsBandwidthLimited_UNLIMITED = 1;
         };
         IsBandwidthLimited is_bandwidth_limited = 3 [json_name = "is-bandwidth-limited"];
         uint32 bandwidth = 4 [json_name = "bandwidth"];
         uint32 current_bandwidth = 5 [json_name = "current-bandwidth"];
      }
      repeated VmBandwidth vm_bandwidth = 1 [json_name = "vm-bandwidth"];
   }
   VmBandwidths vm_bandwidths = 18 [json_name = "vm-bandwidths"];
   message LcsBoards {
      message LcsBoard {
         string position = 1 [json_name = "position"];
         enum Capacity {
            INVALID_ENUM_VALUE_Capacity = 0;
            Capacity_X_480G = 480000;
            Capacity_X_800G = 800000;
            Capacity_X_1T2 = 1200000;
            Capacity_X_2T = 2000000;
         };
         Capacity capacity = 2 [json_name = "capacity"];
      }
      repeated LcsBoard lcs_board = 1 [json_name = "lcs-board"];
   }
   LcsBoards lcs_boards = 19 [json_name = "lcs-boards"];
   message LcsUsageBoardCapacitys {
      message LcsUsageBoardCapacity {
         string feature_name = 1 [json_name = "feature-name"];
         string feature_description = 2 [json_name = "feature-description"];
         uint32 offline = 3 [json_name = "offline"];
         uint32 allocated = 4 [json_name = "allocated"];
         uint32 activated = 5 [json_name = "activated"];
         uint32 available = 6 [json_name = "available"];
         uint32 total = 7 [json_name = "total"];
         message Boards {
            message Board {
               string position = 1 [json_name = "position"];
               uint32 needed = 2 [json_name = "needed"];
               uint32 used = 3 [json_name = "used"];
               enum ActiveStatus {
                  ActiveStatus_UNALLOCATED = 0;
                  ActiveStatus_ACTIVATED = 1;
                  ActiveStatus_ALLOCATED = 2;
               };
               ActiveStatus active_status = 4 [json_name = "active-status"];
            }
            repeated Board board = 1 [json_name = "board"];
         }
         Boards boards = 8 [json_name = "boards"];
      }
      repeated LcsUsageBoardCapacity lcs_usage_board_capacity = 1 [json_name = "lcs-usage-board-capacity"];
   }
   LcsUsageBoardCapacitys lcs_usage_board_capacitys = 20 [json_name = "lcs-usage-board-capacitys"];
   message LcsNetworkSlices {
      message LcsNetworkSlice {
         string slot_id = 1 [json_name = "slot-id"];
         enum LicenseType {
            INVALID_ENUM_VALUE_LicenseType = 0;
            LicenseType_DATAX_PLANE = 1;
            LicenseType_FLEXX_CHANNEL = 2;
         };
         LicenseType license_type = 2 [json_name = "license-type"];
         uint32 resource_size = 3 [json_name = "resource-size"];
      }
      repeated LcsNetworkSlice lcs_network_slice = 1 [json_name = "lcs-network-slice"];
   }
   LcsNetworkSlices lcs_network_slices = 21 [json_name = "lcs-network-slices"];
   message LcsUsageSliceItems {
      message LcsUsageSliceItem {
         string feature_name = 1 [json_name = "feature-name"];
         string feature_description = 2 [json_name = "feature-description"];
         uint32 activated_total = 3 [json_name = "activated-total"];
         uint32 available_total = 4 [json_name = "available-total"];
         uint32 total = 5 [json_name = "total"];
         message LcsInfoBoards {
            message LcsInfoBoard {
               string position = 1 [json_name = "position"];
               string barcode = 2 [json_name = "barcode"];
               uint32 usage_on_board = 3 [json_name = "usage-on-board"];
               uint32 available_on_board = 4 [json_name = "available-on-board"];
               uint32 activated_on_board = 5 [json_name = "activated-on-board"];
            }
            repeated LcsInfoBoard lcs_info_board = 1 [json_name = "lcs-info-board"];
         }
         LcsInfoBoards lcs_info_boards = 6 [json_name = "lcs-info-boards"];
      }
      repeated LcsUsageSliceItem lcs_usage_slice_item = 1 [json_name = "lcs-usage-slice-item"];
   }
   LcsUsageSliceItems lcs_usage_slice_items = 22 [json_name = "lcs-usage-slice-items"];
   message BrasLicense {
      message ActiveBasSlots {
         message ActiveBasSlot {
            string slot_id = 1 [json_name = "slot-id"];
         }
         repeated ActiveBasSlot active_bas_slot = 1 [json_name = "active-bas-slot"];
      }
      ActiveBasSlots active_bas_slots = 1 [json_name = "active-bas-slots"];
   }
   BrasLicense bras_license = 23 [json_name = "bras-license"];
   message ActivatedLicensePorts {
      message ActivatedLicensePort {
         string start_port_name = 1 [json_name = "start-port-name"];
         string end_port_name = 2 [json_name = "end-port-name"];
         message ActivatedLicenses {
            message ActivatedLicense {
               enum LicenseType {
                  INVALID_ENUM_VALUE_LicenseType = 0;
                  LicenseType_X_10G = 1;
                  LicenseType_X_25G = 2;
                  LicenseType_X_50G = 3;
                  LicenseType_X_100G = 4;
                  LicenseType_X_200G = 5;
                  LicenseType_X_400G = 6;
                  LicenseType_X_2X_5G = 12;
                  LicenseType_X_5G = 13;
               };
               LicenseType license_type = 1 [json_name = "license-type"];
            }
            repeated ActivatedLicense activated_license = 1 [json_name = "activated-license"];
         }
         ActivatedLicenses activated_licenses = 3 [json_name = "activated-licenses"];
      }
      repeated ActivatedLicensePort activated_license_port = 1 [json_name = "activated-license-port"];
   }
   ActivatedLicensePorts activated_license_ports = 24 [json_name = "activated-license-ports"];
   message ActiveNatSessions {
      message ActiveNatSession {
         string slot = 1 [json_name = "slot"];
         enum Engine {
            Engine_NA = 0;
            Engine_ENGINE0 = 1;
            Engine_ENGINE1 = 2;
            Engine_ENGINE2 = 3;
            Engine_ENGINE3 = 4;
         };
         Engine engine = 2 [json_name = "engine"];
         enum Card {
            Card_NA = 0;
            Card_CARD0 = 1;
            Card_CARD1 = 2;
         };
         Card card = 3 [json_name = "card"];
         uint32 session_number = 4 [json_name = "session-number"];
      }
      repeated ActiveNatSession active_nat_session = 1 [json_name = "active-nat-session"];
   }
   ActiveNatSessions active_nat_sessions = 25 [json_name = "active-nat-sessions"];
   message SessionCapacitys {
      uint32 total_size = 1 [json_name = "total-size"];
      uint32 used_size = 2 [json_name = "used-size"];
      uint32 free_size = 3 [json_name = "free-size"];
   }
   SessionCapacitys session_capacitys = 26 [json_name = "session-capacitys"];
   message ActiveBandwidths {
      message ActiveBandwidth {
         string slot = 1 [json_name = "slot"];
         enum Engine {
            Engine_NA = 0;
            Engine_ENGINE0 = 1;
            Engine_ENGINE1 = 2;
            Engine_ENGINE2 = 3;
            Engine_ENGINE3 = 4;
         };
         Engine engine = 2 [json_name = "engine"];
         enum Card {
            Card_NA = 0;
            Card_CARD0 = 1;
            Card_CARD1 = 2;
         };
         Card card = 3 [json_name = "card"];
         uint32 bandwidth_value = 4 [json_name = "bandwidth-value"];
      }
      repeated ActiveBandwidth active_bandwidth = 1 [json_name = "active-bandwidth"];
   }
   ActiveBandwidths active_bandwidths = 27 [json_name = "active-bandwidths"];
   message BandwidthCapacitys {
      message BandwidthCapacity {
         enum LicenseType {
            LicenseType_BANDWIDTHX_BOARDX_INCREMENT = 0;
            LicenseType_BANDWIDTHX_BOARD = 1;
            LicenseType_BANDWIDTHX_CARD = 2;
         };
         LicenseType license_type = 1 [json_name = "license-type"];
         uint32 total_size = 2 [json_name = "total-size"];
         uint32 total_license_size = 3 [json_name = "total-license-size"];
         uint32 used_license_size = 4 [json_name = "used-license-size"];
         uint32 free_license_size = 5 [json_name = "free-license-size"];
         message VerboseInfos {
            message VerboseInfo {
               string slot = 1 [json_name = "slot"];
               enum Engine {
                  Engine_NA = 0;
                  Engine_ENGINE0 = 1;
                  Engine_ENGINE1 = 2;
                  Engine_ENGINE2 = 3;
                  Engine_ENGINE3 = 4;
               };
               Engine engine = 2 [json_name = "engine"];
               enum Card {
                  Card_NA = 0;
                  Card_CARD0 = 1;
                  Card_CARD1 = 2;
               };
               Card card = 3 [json_name = "card"];
               uint32 basic_bandwidth = 4 [json_name = "basic-bandwidth"];
               uint32 config_bandwidth = 5 [json_name = "config-bandwidth"];
               uint32 total_bandwidth = 6 [json_name = "total-bandwidth"];
               enum ValidFlag {
                  ValidFlag_VALID = 0;
                  ValidFlag_INVALID = 1;
                  ValidFlag_INVALIDX_BOARDX_TYPEX_ERROR = 2;
                  ValidFlag_INVALIDX_BOARDX_UNREGISTERED = 3;
               };
               ValidFlag valid_flag = 7 [json_name = "valid-flag"];
               string barcode = 8 [json_name = "barcode"];
               uint32 active_value = 9 [json_name = "active-value"];
               uint32 usage_value = 10 [json_name = "usage-value"];
            }
            repeated VerboseInfo verbose_info = 1 [json_name = "verbose-info"];
         }
         VerboseInfos verbose_infos = 6 [json_name = "verbose-infos"];
      }
      repeated BandwidthCapacity bandwidth_capacity = 1 [json_name = "bandwidth-capacity"];
   }
   BandwidthCapacitys bandwidth_capacitys = 28 [json_name = "bandwidth-capacitys"];
   message CloudServer2S {
      message CloudServer2 {
         string server_name = 1 [json_name = "server-name"];
         string server_ip = 2 [json_name = "server-ip"];
         uint32 server_port = 3 [json_name = "server-port"];
         enum RegisterState {
            INVALID_ENUM_VALUE_RegisterState = 0;
            RegisterState_REGISTER = 1;
            RegisterState_UNREGISTER = 2;
         };
         RegisterState register_state = 4 [json_name = "register-state"];
         string policy_name = 5 [json_name = "policy-name"];
         enum ConnectionState {
            INVALID_ENUM_VALUE_ConnectionState = 0;
            ConnectionState_ONLINE = 1;
            ConnectionState_OFFLINE = 2;
            ConnectionState_OFFLINEX_LOCKED = 3;
         };
         ConnectionState connection_state = 6 [json_name = "connection-state"];
         uint32 remaining_days = 7 [json_name = "remaining-days"];
      }
      repeated CloudServer2 cloud_server2 = 1 [json_name = "cloud-server2"];
   }
   CloudServer2S cloud_server2s = 29 [json_name = "cloud-server2s"];
   message SupportSparts {
      message SupportSpart {
         string spart_name = 1 [json_name = "spart-name"];
      }
      repeated SupportSpart support_spart = 1 [json_name = "support-spart"];
   }
   SupportSparts support_sparts = 30 [json_name = "support-sparts"];
   message FeatureResources {
      message FeatureResource {
         string feature_name = 1 [json_name = "feature-name"];
         string strategy = 2 [json_name = "strategy"];
         message GlobalItems {
            message GlobalItem {
               string item_name = 1 [json_name = "item-name"];
               string description = 2 [json_name = "description"];
               string unit = 3 [json_name = "unit"];
               string item_num = 4 [json_name = "item-num"];
               string strategy = 5 [json_name = "strategy"];
            }
            repeated GlobalItem global_item = 1 [json_name = "global-item"];
         }
         GlobalItems global_items = 3 [json_name = "global-items"];
         message BoardItems {
            message BoardItem {
               string board = 1 [json_name = "board"];
               string item_name = 2 [json_name = "item-name"];
               string description = 3 [json_name = "description"];
               string unit = 4 [json_name = "unit"];
               string item_num = 5 [json_name = "item-num"];
               string strategy = 6 [json_name = "strategy"];
            }
            repeated BoardItem board_item = 1 [json_name = "board-item"];
         }
         BoardItems board_items = 4 [json_name = "board-items"];
         message PortItems {
            message PortItem {
               string port = 1 [json_name = "port"];
               string item_name = 2 [json_name = "item-name"];
               string description = 3 [json_name = "description"];
               string unit = 4 [json_name = "unit"];
               string item_num = 5 [json_name = "item-num"];
               string strategy = 6 [json_name = "strategy"];
            }
            repeated PortItem port_item = 1 [json_name = "port-item"];
         }
         PortItems port_items = 5 [json_name = "port-items"];
      }
      repeated FeatureResource feature_resource = 1 [json_name = "feature-resource"];
   }
   FeatureResources feature_resources = 31 [json_name = "feature-resources"];
}

