syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-09-02 20:17:02
// ProtoYang-version 1
// module ietf-hardware
// revision 2018-03-13
// namespace urn:ietf:params:xml:ns:yang:ietf-hardware

package ietf_hardware;

message Hardware {
   string last_change = 1 [json_name = "last-change"];
   message Component {
      string name = 1 [json_name = "name"];
      string class = 2 [json_name = "class"];
      int32 physical_index = 3 [json_name = "physical-index"];
      string description = 4 [json_name = "description"];
      string parent = 5 [json_name = "parent"];
      int32 parent_rel_pos = 6 [json_name = "parent-rel-pos"];
      repeated string contains_child = 7 [json_name = "contains-child"];
      string hardware_rev = 8 [json_name = "hardware-rev"];
      string firmware_rev = 9 [json_name = "firmware-rev"];
      string software_rev = 10 [json_name = "software-rev"];
      string serial_num = 11 [json_name = "serial-num"];
      string mfg_name = 12 [json_name = "mfg-name"];
      string model_name = 13 [json_name = "model-name"];
      string alias = 14 [json_name = "alias"];
      string asset_id = 15 [json_name = "asset-id"];
      bool is_fru = 16 [json_name = "is-fru"];
      string mfg_date = 17 [json_name = "mfg-date"];
      repeated string uri = 18 [json_name = "uri"];
      string uuid = 19 [json_name = "uuid"];
      message State {
         string state_last_changed = 1 [json_name = "state-last-changed"];
         enum AdminState {
            INVALID_ENUM_VALUE_AdminState = 0;
            AdminState_UNKNOWN = 1;
            AdminState_LOCKED = 2;
            AdminState_SHUTTINGX_DOWN = 3;
            AdminState_UNLOCKED = 4;
         };
         AdminState admin_state = 2 [json_name = "admin-state"];
         enum OperState {
            INVALID_ENUM_VALUE_OperState = 0;
            OperState_UNKNOWN = 1;
            OperState_DISABLED = 2;
            OperState_ENABLED = 3;
            OperState_TESTING = 4;
         };
         OperState oper_state = 3 [json_name = "oper-state"];
         enum UsageState {
            INVALID_ENUM_VALUE_UsageState = 0;
            UsageState_UNKNOWN = 1;
            UsageState_IDLE = 2;
            UsageState_ACTIVE = 3;
            UsageState_BUSY = 4;
         };
         UsageState usage_state = 4 [json_name = "usage-state"];
         enum AlarmState {
            AlarmState_UNKNOWN = 0;
            AlarmState_UNDERX_REPAIR = 1;
            AlarmState_CRITICAL = 2;
            AlarmState_MAJOR = 3;
            AlarmState_MINOR = 4;
            AlarmState_WARNING = 5;
            AlarmState_INDETERMINATE = 6;
         };
         repeated AlarmState alarm_state = 5 [json_name = "alarm-state"];
         enum StandbyState {
            INVALID_ENUM_VALUE_StandbyState = 0;
            StandbyState_UNKNOWN = 1;
            StandbyState_HOTX_STANDBY = 2;
            StandbyState_COLDX_STANDBY = 3;
            StandbyState_PROVIDINGX_SERVICE = 4;
         };
         StandbyState standby_state = 6 [json_name = "standby-state"];
      }
      State state = 20 [json_name = "state"];
      message SensorData {
         int32 value = 1 [json_name = "value"];
         enum ValueType {
            INVALID_ENUM_VALUE_ValueType = 0;
            ValueType_OTHER = 1;
            ValueType_UNKNOWN = 2;
            ValueType_VOLTSX_AC = 3;
            ValueType_VOLTSX_DC = 4;
            ValueType_AMPERES = 5;
            ValueType_WATTS = 6;
            ValueType_HERTZ = 7;
            ValueType_CELSIUS = 8;
            ValueType_PERCENTX_RH = 9;
            ValueType_RPM = 10;
            ValueType_CMM = 11;
            ValueType_TRUTHX_VALUE = 12;
         };
         ValueType value_type = 2 [json_name = "value-type"];
         enum ValueScale {
            INVALID_ENUM_VALUE_ValueScale = 0;
            ValueScale_YOCTO = 1;
            ValueScale_ZEPTO = 2;
            ValueScale_ATTO = 3;
            ValueScale_FEMTO = 4;
            ValueScale_PICO = 5;
            ValueScale_NANO = 6;
            ValueScale_MICRO = 7;
            ValueScale_MILLI = 8;
            ValueScale_UNITS = 9;
            ValueScale_KILO = 10;
            ValueScale_MEGA = 11;
            ValueScale_GIGA = 12;
            ValueScale_TERA = 13;
            ValueScale_PETA = 14;
            ValueScale_EXA = 15;
            ValueScale_ZETTA = 16;
            ValueScale_YOTTA = 17;
         };
         ValueScale value_scale = 3 [json_name = "value-scale"];
         int32 value_precision = 4 [json_name = "value-precision"];
         enum OperStatus {
            INVALID_ENUM_VALUE_OperStatus = 0;
            OperStatus_OK = 1;
            OperStatus_UNAVAILABLE = 2;
            OperStatus_NONOPERATIONAL = 3;
         };
         OperStatus oper_status = 5 [json_name = "oper-status"];
         string units_display = 6 [json_name = "units-display"];
         string value_timestamp = 7 [json_name = "value-timestamp"];
         uint32 value_update_rate = 8 [json_name = "value-update-rate"];
      }
      SensorData sensor_data = 21 [json_name = "sensor-data"];
      message Transceiver {
         message IdentifiersAndCodes {
            string physical_device = 1 [json_name = "physical-device"];
            enum PhysicalDeviceExtendedIdentifier {
               PhysicalDeviceExtendedIdentifier_NOTX_SPECIFIED = 0;
               PhysicalDeviceExtendedIdentifier_MODX_DEF1 = 1;
               PhysicalDeviceExtendedIdentifier_MODX_DEF2 = 2;
               PhysicalDeviceExtendedIdentifier_MODX_DEF3 = 3;
               PhysicalDeviceExtendedIdentifier_TWOX_WIREX_INTERFACEX_ID = 4;
               PhysicalDeviceExtendedIdentifier_MODX_DEF5 = 5;
               PhysicalDeviceExtendedIdentifier_MODX_DEF6 = 6;
               PhysicalDeviceExtendedIdentifier_MODX_DEF7 = 7;
            };
            PhysicalDeviceExtendedIdentifier physical_device_extended_identifier = 2 [json_name = "physical-device-extended-identifier"];
            string connector = 3 [json_name = "connector"];
            message ComplianceCodes {
               enum TenGigabitEthernet {
                  TenGigabitEthernet_NOTX_APPLICABLE = 0;
                  TenGigabitEthernet_X_10GX_BASEX_ER = 1;
                  TenGigabitEthernet_X_10GX_BASEX_LRM = 2;
                  TenGigabitEthernet_X_10GX_BASEX_LR = 3;
                  TenGigabitEthernet_X_10GX_BASEX_SR = 4;
               };
               TenGigabitEthernet ten_gigabit_ethernet = 1 [json_name = "ten-gigabit-ethernet"];
               enum Infiniband {
                  Infiniband_NOTX_APPLICABLE = 0;
                  Infiniband_X_1XX_SX = 1;
                  Infiniband_X_1XX_LX = 2;
                  Infiniband_X_1XX_COPPERX_ACTIVE = 3;
                  Infiniband_X_1XX_COPPERX_PASSIVE = 4;
               };
               Infiniband infiniband = 2 [json_name = "infiniband"];
               enum Escon {
                  Escon_NOTX_APPLICABLE = 0;
                  Escon_ESCONX_MMF = 1;
                  Escon_ESCONX_SMF = 2;
               };
               Escon escon = 3 [json_name = "escon"];
               enum Sonet {
                  Sonet_NOTX_APPLICABLE = 0;
                  Sonet_OCX_192X_SHORTX_REACH = 1;
                  Sonet_SONETX_REACHX_SPECIFIERX_BIT1 = 2;
                  Sonet_SONETX_REACHX_SPECIFIERX_BIT2 = 3;
                  Sonet_OCX_48X_LONGX_REACH = 4;
                  Sonet_OCX_48X_INTERMEDIATEX_REACH = 5;
                  Sonet_OCX_48X_SHORTX_REACH = 6;
                  Sonet_OCX_12X_SINGLEX_MODEX_LONGX_REACH = 7;
                  Sonet_OCX_12X_SINGLEX_MODEX_INTERMEDIATEX_REACH = 8;
                  Sonet_OCX_12X_SHORTX_REACH = 9;
                  Sonet_OCX_3X_SINGLEX_MODEX_LONGX_REACH = 10;
                  Sonet_OCX_3X_SINGLEX_MODEX_INTERMEDIATEX_REACH = 11;
                  Sonet_OCX_3X_SHORTX_REACH = 12;
               };
               Sonet sonet = 4 [json_name = "sonet"];
               enum Ethernet {
                  Ethernet_NOTX_APPLICABLE = 0;
                  Ethernet_BASEX_PX = 1;
                  Ethernet_BASEX_BX10 = 2;
                  Ethernet_X_100BASEX_FX = 3;
                  Ethernet_X_100BASEX_LXX_ORX_LXX_10 = 4;
                  Ethernet_X_1000BASEX_T = 5;
                  Ethernet_X_1000BASEX_CX = 6;
                  Ethernet_X_1000BASEX_LX = 7;
                  Ethernet_X_1000BASEX_SX = 8;
               };
               Ethernet ethernet = 5 [json_name = "ethernet"];
               enum FibreChannelLinkLength {
                  FibreChannelLinkLength_NOTX_APPLICABLE = 0;
                  FibreChannelLinkLength_VERYX_LONGX_DISTANCE = 1;
                  FibreChannelLinkLength_SHORTX_DISTANCE = 2;
                  FibreChannelLinkLength_INTERMEDIATEX_DISTANCE = 3;
                  FibreChannelLinkLength_LONGX_DISTANCE = 4;
                  FibreChannelLinkLength_MEDIUMX_DISTANCE = 5;
               };
               FibreChannelLinkLength fibre_channel_link_length = 6 [json_name = "fibre-channel-link-length"];
               enum FiberChannelTechnology {
                  FiberChannelTechnology_NOTX_APPLICABLE = 0;
                  FiberChannelTechnology_SHORTWAVEX_LASERX_LINEAR = 1;
                  FiberChannelTechnology_LONGWAVEX_LASERX_LC = 2;
                  FiberChannelTechnology_ELECTRICALX_INTERX_ENCLOSURE = 3;
                  FiberChannelTechnology_ELECTRICALX_INTRAX_ENCLOSURE = 4;
                  FiberChannelTechnology_SHORTWAVEX_LASERX_WITHOUTX_OFC = 5;
                  FiberChannelTechnology_SHORTWAVEX_LASERX_WITHX_OFC = 6;
                  FiberChannelTechnology_LONGWAVEX_LASERX_LL = 7;
               };
               FiberChannelTechnology fiber_channel_technology = 7 [json_name = "fiber-channel-technology"];
               enum SfpPlusCableTechnology {
                  SfpPlusCableTechnology_NOTX_APPLICABLE = 0;
                  SfpPlusCableTechnology_ACTIVEX_CABLE = 1;
                  SfpPlusCableTechnology_PASSIVEX_CABLE = 2;
               };
               SfpPlusCableTechnology sfp_plus_cable_technology = 8 [json_name = "sfp-plus-cable-technology"];
               enum FibreChannelTransmissionMedia {
                  FibreChannelTransmissionMedia_NOTX_APPLICABLE = 0;
                  FibreChannelTransmissionMedia_TWINX_AXIALX_PAIR = 1;
                  FibreChannelTransmissionMedia_TWINX_TWISTEDX_PAIR = 2;
                  FibreChannelTransmissionMedia_MINIATUREX_COAX = 3;
                  FibreChannelTransmissionMedia_VIDEOX_COAX = 4;
                  FibreChannelTransmissionMedia_MULTIMODEX_62X_5UM = 5;
                  FibreChannelTransmissionMedia_MULTIMODEX_50UM = 6;
                  FibreChannelTransmissionMedia_SINGLEX_MODE = 7;
               };
               FibreChannelTransmissionMedia fibre_channel_transmission_media = 9 [json_name = "fibre-channel-transmission-media"];
               enum FibreChannelSpeed {
                  FibreChannelSpeed_NOTX_APPLICABLE = 0;
                  FibreChannelSpeed_X_1200X_MBYTESX_SEC = 1;
                  FibreChannelSpeed_X_800X_MBYTESX_SEC = 2;
                  FibreChannelSpeed_X_1000X_MBYTESX_SEC = 3;
                  FibreChannelSpeed_X_400X_MBYTESX_SEC = 4;
                  FibreChannelSpeed_X_3200X_MBYTESX_SEC = 5;
                  FibreChannelSpeed_X_200X_MBYTESX_SEC = 6;
                  FibreChannelSpeed_X_100X_MBYTESX_SEC = 7;
               };
               FibreChannelSpeed fibre_channel_speed = 10 [json_name = "fibre-channel-speed"];
            }
            ComplianceCodes compliance_codes = 4 [json_name = "compliance-codes"];
            enum Encoding {
               Encoding_UNSPECIFIED = 0;
               Encoding_X_8BX_10B = 1;
               Encoding_X_4BX_5B = 2;
               Encoding_NRZ = 3;
               Encoding_MANCHESTER = 4;
               Encoding_SONETX_SCRAMBLED = 5;
               Encoding_X_64BX_66B = 6;
               Encoding_X_256BX_257B = 7;
               Encoding_PAM4 = 8;
            };
            Encoding encoding = 5 [json_name = "encoding"];
            uint32 nominal_bit_rate = 6 [json_name = "nominal-bit-rate"];
            uint32 maximum_bit_rate = 7 [json_name = "maximum-bit-rate"];
            uint32 minimum_bit_rate = 8 [json_name = "minimum-bit-rate"];
         }
         IdentifiersAndCodes identifiers_and_codes = 1 [json_name = "identifiers-and-codes"];
         message LinkLength {
            uint32 length_single_mode_km = 1 [json_name = "length-single-mode-km"];
            uint32 length_single_mode_100m = 2 [json_name = "length-single-mode-100m"];
            uint32 length_50um_om2 = 3 [json_name = "length-50um-om2"];
            uint32 length_50um_om4 = 5 [json_name = "length-50um-om4"];
            uint32 length_active_cable_or_copper = 6 [json_name = "length-active-cable-or-copper"];
            uint32 length_50um_om3 = 7 [json_name = "length-50um-om3"];
         }
         LinkLength link_length = 2 [json_name = "link-length"];
         message VendorFields {
            string oui = 1 [json_name = "oui"];
            string part_number = 2 [json_name = "part-number"];
         }
         VendorFields vendor_fields = 3 [json_name = "vendor-fields"];
         enum DiagnosticsMonitoringType {
            DiagnosticsMonitoringType_LEGACY = 0;
         };
         repeated DiagnosticsMonitoringType diagnostics_monitoring_type = 4 [json_name = "diagnostics-monitoring-type"];
         enum EnhancedOptions {
            EnhancedOptions_ALARMX_WARNINGX_FLAGS = 0;
            EnhancedOptions_SOFTX_TXX_DISABLE = 1;
            EnhancedOptions_SOFTX_TXX_FAULT = 2;
            EnhancedOptions_SOFTX_RXX_LOS = 3;
            EnhancedOptions_SOFTX_RATEX_SELECT = 4;
            EnhancedOptions_APPLICATIONX_SELECT = 5;
            EnhancedOptions_ALARMX_RATEX_SELECTX_SFFX_8431 = 6;
         };
         repeated EnhancedOptions enhanced_options = 5 [json_name = "enhanced-options"];
         message Diagnostics {
            int32 temperature = 1 [json_name = "temperature"];
            uint32 supply_voltage = 2 [json_name = "supply-voltage"];
            repeated string alarm_flag = 3 [json_name = "alarm-flag"];
            repeated string warning_flag = 4 [json_name = "warning-flag"];
         }
         Diagnostics diagnostics = 6 [json_name = "diagnostics"];
         message Thresholds {
            int32 temperature_high_alarm = 1 [json_name = "temperature-high-alarm"];
            int32 temperature_low_alarm = 2 [json_name = "temperature-low-alarm"];
            int32 temperature_high_warning = 3 [json_name = "temperature-high-warning"];
            int32 temperature_low_warning = 4 [json_name = "temperature-low-warning"];
            uint32 supply_voltage_high_alarm = 5 [json_name = "supply-voltage-high-alarm"];
            uint32 supply_voltage_low_alarm = 6 [json_name = "supply-voltage-low-alarm"];
            uint32 supply_voltage_high_warning = 7 [json_name = "supply-voltage-high-warning"];
            uint32 supply_voltage_low_warning = 8 [json_name = "supply-voltage-low-warning"];
            uint32 tx_bias_high_alarm = 9 [json_name = "tx-bias-high-alarm"];
            uint32 tx_bias_low_alarm = 10 [json_name = "tx-bias-low-alarm"];
            uint32 tx_bias_high_warning = 11 [json_name = "tx-bias-high-warning"];
            uint32 tx_bias_low_warning = 12 [json_name = "tx-bias-low-warning"];
            uint32 tx_power_high_alarm = 13 [json_name = "tx-power-high-alarm"];
            uint32 tx_power_low_alarm = 14 [json_name = "tx-power-low-alarm"];
            uint32 tx_power_high_warning = 15 [json_name = "tx-power-high-warning"];
            uint32 tx_power_low_warning = 16 [json_name = "tx-power-low-warning"];
            uint32 rx_power_high_alarm = 17 [json_name = "rx-power-high-alarm"];
            uint32 rx_power_low_alarm = 18 [json_name = "rx-power-low-alarm"];
            uint32 rx_power_high_warning = 19 [json_name = "rx-power-high-warning"];
            uint32 rx_power_low_warning = 20 [json_name = "rx-power-low-warning"];
            int32 laser_temperature_high_alarm = 21 [json_name = "laser-temperature-high-alarm"];
            int32 laser_temperature_low_alarm = 22 [json_name = "laser-temperature-low-alarm"];
            int32 laser_temperature_high_warning = 23 [json_name = "laser-temperature-high-warning"];
            int32 laser_temperature_low_warning = 24 [json_name = "laser-temperature-low-warning"];
            int32 tec_current_high_alarm = 25 [json_name = "tec-current-high-alarm"];
            int32 tec_current_low_alarm = 26 [json_name = "tec-current-low-alarm"];
            int32 tec_current_high_warning = 27 [json_name = "tec-current-high-warning"];
            int32 tec_current_low_warning = 28 [json_name = "tec-current-low-warning"];
            int32 tx_bias_high_alarm_2p5g = 29 [json_name = "tx-bias-high-alarm-2p5g"];
            int32 tx_bias_low_alarm_2p5g = 30 [json_name = "tx-bias-low-alarm-2p5g"];
            int32 tx_bias_high_warning_2p5g = 31 [json_name = "tx-bias-high-warning-2p5g"];
            int32 tx_bias_low_warning_2p5g = 32 [json_name = "tx-bias-low-warning-2p5g"];
            int32 tx_bias_high_alarm_10g = 33 [json_name = "tx-bias-high-alarm-10g"];
            int32 tx_bias_low_alarm_10g = 34 [json_name = "tx-bias-low-alarm-10g"];
            int32 tx_bias_high_warning_10g = 35 [json_name = "tx-bias-high-warning-10g"];
            int32 tx_bias_low_warning_10g = 36 [json_name = "tx-bias-low-warning-10g"];
            int32 tx_power_high_alarm_2p5g = 37 [json_name = "tx-power-high-alarm-2p5g"];
            int32 tx_power_low_alarm_2p5g = 38 [json_name = "tx-power-low-alarm-2p5g"];
            int32 tx_power_high_warning_2p5g = 39 [json_name = "tx-power-high-warning-2p5g"];
            int32 tx_power_low_warning_2p5g = 40 [json_name = "tx-power-low-warning-2p5g"];
            int32 tx_power_high_alarm_10g = 41 [json_name = "tx-power-high-alarm-10g"];
            int32 tx_power_low_alarm_10g = 42 [json_name = "tx-power-low-alarm-10g"];
            int32 tx_power_high_warning_10g = 43 [json_name = "tx-power-high-warning-10g"];
            int32 tx_power_low_warning_10g = 44 [json_name = "tx-power-low-warning-10g"];
         }
         Thresholds thresholds = 7 [json_name = "thresholds"];
         message EthOpticalModuleInfo {
            enum Identifier {
               Identifier_UNKNOWN = 0;
               Identifier_GBIC = 1;
               Identifier_MODULEX_CONNECTOR = 2;
               Identifier_SFP = 3;
               Identifier_PINX_300X_XBI = 4;
               Identifier_XENPAK = 5;
               Identifier_XFP = 6;
               Identifier_XFF = 7;
               Identifier_XFPE = 8;
               Identifier_XPAK = 9;
               Identifier_X2 = 10;
               Identifier_DWDMX_SFP = 11;
               Identifier_QSFP = 12;
               Identifier_QSFPX_PLUS = 13;
               Identifier_QSFP28 = 17;
            };
            Identifier identifier = 1 [json_name = "identifier"];
            enum Connector {
               INVALID_ENUM_VALUE_Connector = 0;
               Connector_UNKNOWN = 1;
               Connector_SC = 2;
               Connector_COPPERX_CONNECTOR1 = 3;
               Connector_COPPERX_CONNECTOR2 = 4;
               Connector_BNCX_TNC = 5;
               Connector_COAXIALX_HEADERS = 6;
               Connector_FIBERX_JACK = 7;
               Connector_LC = 8;
               Connector_MTRJ = 9;
               Connector_MU = 10;
               Connector_SG = 11;
               Connector_OPTICALX_PIGTAIL = 12;
               Connector_HSSDCX_II = 13;
               Connector_COPPERX_PIGTAIL = 14;
               Connector_VENDERX_SPECIFIC = 15;
               Connector_MPOX_PARALLELX_OPTIC = 16;
               Connector_RJ45 = 17;
               Connector_MPO2X_PARALLELX_OPTIC = 18;
            };
            Connector connector = 2 [json_name = "connector"];
            uint32 cc_base = 3 [json_name = "cc-base"];
            uint32 br_nomimal = 4 [json_name = "br-nomimal"];
            uint32 length_9_um_km = 5 [json_name = "length-9-um-km"];
            uint32 length_9_um = 6 [json_name = "length-9-um"];
            uint32 wave_length = 7 [json_name = "wave-length"];
            enum DiagnosticMonitoringType {
               INVALID_ENUM_VALUE_DiagnosticMonitoringType = 0;
               DiagnosticMonitoringType_INTERNALLYX_CALIBRATE = 1;
               DiagnosticMonitoringType_EXTERNALLYX_CALIBRATE = 2;
               DiagnosticMonitoringType_INVALID = 3;
            };
            DiagnosticMonitoringType diagnostic_monitoring_type = 8 [json_name = "diagnostic-monitoring-type"];
            uint32 cc_ext = 9 [json_name = "cc-ext"];
            enum InfoRemote {
               INVALID_ENUM_VALUE_InfoRemote = 0;
               InfoRemote_REMOTE = 1;
               InfoRemote_INVALID = 2;
            };
            InfoRemote info_remote = 10 [json_name = "info-remote"];
            enum SfpPlusCableTech {
               INVALID_ENUM_VALUE_SfpPlusCableTech = 0;
               SfpPlusCableTech_PASSIVEX_CABLE = 1;
               SfpPlusCableTech_ACTIVEX_CABLE = 2;
               SfpPlusCableTech_INVALID = 3;
            };
            SfpPlusCableTech sfp_plus_cable_tech = 11 [json_name = "sfp-plus-cable-tech"];
            enum WdmClass {
               INVALID_ENUM_VALUE_WdmClass = 0;
               WdmClass_NOX_WDM = 1;
               WdmClass_CWDM = 2;
               WdmClass_DWDM = 3;
               WdmClass_INVALID = 4;
            };
            WdmClass wdm_class = 12 [json_name = "wdm-class"];
            enum DwdmPower {
               INVALID_ENUM_VALUE_DwdmPower = 0;
               DwdmPower_DWDMX_POWERX_LEVEL1 = 1;
               DwdmPower_DWDMX_POWERX_LEVEL2 = 2;
               DwdmPower_DWDMX_POWERX_LEVEL3 = 3;
               DwdmPower_INVALID = 4;
            };
            DwdmPower dwdm_power = 13 [json_name = "dwdm-power"];
            uint32 dwdm_max_temperature = 14 [json_name = "dwdm-max-temperature"];
            int32 dwdm_min_temperature = 15 [json_name = "dwdm-min-temperature"];
            uint32 dwdm_max_supply_current = 16 [json_name = "dwdm-max-supply-current"];
            enum DwdmChannelSpacing {
               INVALID_ENUM_VALUE_DwdmChannelSpacing = 0;
               DwdmChannelSpacing_CHANNELX_SPACINGX_200G = 1;
               DwdmChannelSpacing_CHANNELX_SPACINGX_100G = 2;
               DwdmChannelSpacing_CHANNELX_SPACINGX_50G = 3;
               DwdmChannelSpacing_INVALID = 4;
            };
            DwdmChannelSpacing dwdm_channel_spacing = 17 [json_name = "dwdm-channel-spacing"];
            int32 dwdm_number_of_channels = 18 [json_name = "dwdm-number-of-channels"];
            int32 dwdm_wave_length = 19 [json_name = "dwdm-wave-length"];
            string module_user_eeprom = 20 [json_name = "module-user-eeprom"];
            enum Sff8636Compliance {
               INVALID_ENUM_VALUE_Sff8636Compliance = 0;
               Sff8636Compliance_UNDEFINED = 1;
               Sff8636Compliance_SFF8436X_V480 = 2;
               Sff8636Compliance_SFF8436X_V480X_EX = 3;
               Sff8636Compliance_SFF8636X_V130 = 4;
               Sff8636Compliance_SFF8636X_V14 = 5;
               Sff8636Compliance_SFF8636X_V15 = 6;
               Sff8636Compliance_SFF8636X_V20 = 7;
               Sff8636Compliance_SFF8636X_V25X_TOX_27 = 8;
               Sff8636Compliance_SFF8636X_V28X_ORX_LATER = 9;
            };
            Sff8636Compliance sff8636_compliance = 21 [json_name = "sff8636-compliance"];
            uint32 vendor_oui = 22 [json_name = "vendor-oui"];
            string vendor_specific = 23 [json_name = "vendor-specific"];
            enum ExtId {
               INVALID_ENUM_VALUE_ExtId = 0;
               ExtId_NOTX_SPECIFIEDX_ORX_NOTCOMPLIANT = 1;
               ExtId_MODDEF1 = 2;
               ExtId_MODDEF2 = 3;
               ExtId_MODDEF3 = 4;
               ExtId_SERIALX_IDONLY = 5;
               ExtId_MODDEF5 = 6;
               ExtId_MODDEF6 = 7;
               ExtId_MODDEF7 = 8;
               ExtId_POWERX_CLASS1 = 9;
               ExtId_POWERX_CLASS2 = 10;
               ExtId_POWERX_CLASS3 = 11;
               ExtId_POWERX_CLASS4 = 12;
               ExtId_POWERX_CLASS5 = 13;
               ExtId_POWERX_CLASS6 = 14;
               ExtId_POWERX_CLASS7 = 15;
               ExtId_INVALID = 16;
            };
            ExtId ext_id = 24 [json_name = "ext-id"];
            enum Encoding {
               INVALID_ENUM_VALUE_Encoding = 0;
               Encoding_UNSPECIFIED = 1;
               Encoding_ENCODINGX_METHODX_8B10B = 2;
               Encoding_ENCODINGX_METHODX_4B5B = 3;
               Encoding_NRZ = 4;
               Encoding_MANCHESTER = 5;
               Encoding_ENCODINGX_METHODX_64B66B = 6;
               Encoding_INVALID = 7;
            };
            Encoding encoding = 25 [json_name = "encoding"];
            enum Options {
               INVALID_ENUM_VALUE_Options = 0;
               Options_RATEX_SELECT = 1;
               Options_TXX_DISABLEX_ANDX_SERIALX_OUTPUTX_DISABLED = 2;
               Options_TXX_FAULT = 3;
               Options_SIGNALX_LOSSX_ANDX_INVERTEDFROMSTANDARD = 4;
               Options_SIGNALX_LOSSX_ANDX_ASX_DEFINED = 5;
               Options_TUNABLEX_TRANSMITTERX_TECHNOLOGY = 6;
               Options_RDT = 7;
               Options_INVALID = 8;
            };
            Options options = 26 [json_name = "options"];
            enum EnhancedOptions {
               INVALID_ENUM_VALUE_EnhancedOptions = 0;
               EnhancedOptions_FORX_ALLX_MONITOREDX_QUANTITIES = 1;
               EnhancedOptions_TXX_DISABLED = 2;
               EnhancedOptions_TXX_FAULT = 3;
               EnhancedOptions_RXX_LOS = 4;
               EnhancedOptions_RATEX_SELECT = 5;
               EnhancedOptions_INVALID = 6;
            };
            EnhancedOptions enhanced_options = 27 [json_name = "enhanced-options"];
         }
         EthOpticalModuleInfo eth_optical_module_info = 8 [json_name = "eth-optical-module-info"];
         message Eth10GeOpticalModuleInfo {
            enum Identifier {
               Identifier_UNKNOWN = 0;
               Identifier_GBIC = 1;
               Identifier_MODULEX_CONNECTOR = 2;
               Identifier_SFP = 3;
               Identifier_PINX_300X_XBI = 4;
               Identifier_XENPAK = 5;
               Identifier_XFP = 6;
               Identifier_XFF = 7;
               Identifier_XFPE = 8;
               Identifier_XPAK = 9;
               Identifier_X2 = 10;
               Identifier_DWDMX_SFP = 11;
               Identifier_QSFP = 12;
               Identifier_QSFPX_PLUS = 13;
               Identifier_QSFP28 = 17;
            };
            Identifier identifier = 1 [json_name = "identifier"];
            enum Connector {
               INVALID_ENUM_VALUE_Connector = 0;
               Connector_UNKNOWN = 1;
               Connector_SC = 2;
               Connector_COPPERX_CONNECTOR1 = 3;
               Connector_COPPERX_CONNECTOR2 = 4;
               Connector_BNCX_TNC = 5;
               Connector_COAXIALX_HEADERS = 6;
               Connector_FIBERX_JACK = 7;
               Connector_LC = 8;
               Connector_MTRJ = 9;
               Connector_MU = 10;
               Connector_SG = 11;
               Connector_OPTICALX_PIGTAIL = 12;
               Connector_HSSDCX_II = 13;
               Connector_COPPERX_PIGTAIL = 14;
               Connector_VENDERX_SPECIFIC = 15;
               Connector_MPOX_PARALLELX_OPTIC = 16;
               Connector_RJ45 = 17;
               Connector_MPO2X_PARALLELX_OPTIC = 18;
            };
            Connector connector = 2 [json_name = "connector"];
            uint32 cc_base = 3 [json_name = "cc-base"];
            enum CompliancebaseEw {
               CompliancebaseEw_NONX_ETHX_COMPLIANCEX_BASEX_EW = 0;
               CompliancebaseEw_ETHX_COMPLIANCEX_BASEX_EW = 1;
            };
            CompliancebaseEw compliancebase_ew = 4 [json_name = "compliancebase-ew"];
            enum ComplianceBaseLw {
               ComplianceBaseLw_NONX_ETHX_COMPLIANCEX_BASEX_LW = 0;
               ComplianceBaseLw_ETHX_COMPLIANCEX_BASEX_LW = 1;
            };
            ComplianceBaseLw compliance_base_lw = 5 [json_name = "compliance-base-lw"];
            enum ComplianceBaseSw {
               ComplianceBaseSw_NONX_ETHX_COMPLIANCEX_BASEX_SW = 0;
               ComplianceBaseSw_ETHX_COMPLIANCEX_BASEX_SW = 1;
            };
            ComplianceBaseSw compliance_base_sw = 6 [json_name = "compliance-base-sw"];
            enum ComplianceBaseLrm {
               ComplianceBaseLrm_NONX_ETHX_COMPLIANCEX_BASEX_LRM = 0;
               ComplianceBaseLrm_ETHX_COMPLIANCEX_BASEX_LRM = 1;
            };
            ComplianceBaseLrm compliance_base_lrm = 7 [json_name = "compliance-base-lrm"];
            enum ComplianceBaseEr {
               ComplianceBaseEr_NONX_ETHX_COMPLIANCEX_BASEX_ER = 0;
               ComplianceBaseEr_ETHX_COMPLIANCEX_BASEX_ER = 1;
            };
            ComplianceBaseEr compliance_base_er = 8 [json_name = "compliance-base-er"];
            enum ComplianceBaseLr {
               ComplianceBaseLr_NONX_ETHX_COMPLIANCEX_BASEX_LR = 0;
               ComplianceBaseLr_ETHX_COMPLIANCEX_BASEX_LR = 1;
            };
            ComplianceBaseLr compliance_base_lr = 9 [json_name = "compliance-base-lr"];
            enum ComplianceBaseSr {
               ComplianceBaseSr_NONX_ETHX_COMPLIANCEX_BASEX_SR = 0;
               ComplianceBaseSr_ETHX_COMPLIANCEX_BASEX_SR = 1;
            };
            ComplianceBaseSr compliance_base_sr = 10 [json_name = "compliance-base-sr"];
            enum FibreCompliance {
               INVALID_ENUM_VALUE_FibreCompliance = 0;
               FibreCompliance_INTERX_1300X_FP = 16;
               FibreCompliance_EXTENDEDX_1550 = 32;
               FibreCompliance_SMX_1200 = 64;
               FibreCompliance_MXX_1200 = 128;
               FibreCompliance_INVALID = 129;
            };
            FibreCompliance fibre_compliance = 11 [json_name = "fibre-compliance"];
            enum LowerSpeedLink {
               INVALID_ENUM_VALUE_LowerSpeedLink = 0;
               LowerSpeedLink_OCX_48X_LR = 2;
               LowerSpeedLink_OCX_48X_IR = 4;
               LowerSpeedLink_OCX_48X_SR = 8;
               LowerSpeedLink_FCSMF = 16;
               LowerSpeedLink_FCMMF = 32;
               LowerSpeedLink_LXSMF = 64;
               LowerSpeedLink_SXMMF = 128;
               LowerSpeedLink_INVALID = 129;
            };
            LowerSpeedLink lower_speed_link = 12 [json_name = "lower-speed-link"];
            enum SonetsdhcodesI64Point5 {
               SonetsdhcodesI64Point5_NOTX_SUPPORT = 0;
               SonetsdhcodesI64Point5_SUPPORT = 1;
            };
            SonetsdhcodesI64Point5 sonetsdhcodes_i64point5 = 13 [json_name = "sonetsdhcodes-i64point5"];
            enum SonetsdhcodesI64Point3 {
               SonetsdhcodesI64Point3_NOTX_SUPPORT = 0;
               SonetsdhcodesI64Point3_SUPPORT = 1;
            };
            SonetsdhcodesI64Point3 sonetsdhcodes_i64point3 = 14 [json_name = "sonetsdhcodes-i64point3"];
            enum SonetsdhcodesI64Point2 {
               SonetsdhcodesI64Point2_NOTX_SUPPORT = 0;
               SonetsdhcodesI64Point2_SUPPORT = 1;
            };
            SonetsdhcodesI64Point2 sonetsdhcodes_i64point2 = 15 [json_name = "sonetsdhcodes-i64point2"];
            enum SonetsdhcodesI64Point2R {
               SonetsdhcodesI64Point2R_NOTX_SUPPORT = 0;
               SonetsdhcodesI64Point2R_SUPPORT = 1;
            };
            SonetsdhcodesI64Point2R sonetsdhcodes_i64point2r = 16 [json_name = "sonetsdhcodes-i64point2r"];
            enum SonetsdhcodesI64Point1 {
               SonetsdhcodesI64Point1_NOTX_SUPPORT = 0;
               SonetsdhcodesI64Point1_SUPPORT = 1;
            };
            SonetsdhcodesI64Point1 sonetsdhcodes_i64point1 = 17 [json_name = "sonetsdhcodes-i64point1"];
            enum SonetsdhcodesI64Point1R {
               SonetsdhcodesI64Point1R_NOTX_SUPPORT = 0;
               SonetsdhcodesI64Point1R_SUPPORT = 1;
            };
            SonetsdhcodesI64Point1R sonetsdhcodes_i64point1r = 18 [json_name = "sonetsdhcodes-i64point1r"];
            enum SonetsdhcodesS64Point5B {
               SonetsdhcodesS64Point5B_NOTX_SUPPORT = 0;
               SonetsdhcodesS64Point5B_SUPPORT = 1;
            };
            SonetsdhcodesS64Point5B sonetsdhcodes_s64point5b = 19 [json_name = "sonetsdhcodes-s64point5b"];
            enum SonetsdhcodesS64Point5A {
               SonetsdhcodesS64Point5A_NOTX_SUPPORT = 0;
               SonetsdhcodesS64Point5A_SUPPORT = 1;
            };
            SonetsdhcodesS64Point5A sonetsdhcodes_s64point5a = 20 [json_name = "sonetsdhcodes-s64point5a"];
            enum SonetsdhcodesS64Point3B {
               SonetsdhcodesS64Point3B_NOTX_SUPPORT = 0;
               SonetsdhcodesS64Point3B_SUPPORT = 1;
            };
            SonetsdhcodesS64Point3B sonetsdhcodes_s64point3b = 21 [json_name = "sonetsdhcodes-s64point3b"];
            enum SonetsdhcodesS64Point3A {
               SonetsdhcodesS64Point3A_NOTX_SUPPORT = 0;
               SonetsdhcodesS64Point3A_SUPPORT = 1;
            };
            SonetsdhcodesS64Point3A sonetsdhcodes_s64point3a = 22 [json_name = "sonetsdhcodes-s64point3a"];
            enum SonetsdhcodesS64Point2B {
               SonetsdhcodesS64Point2B_NOTX_SUPPORT = 0;
               SonetsdhcodesS64Point2B_SUPPORT = 1;
            };
            SonetsdhcodesS64Point2B sonetsdhcodes_s64point2b = 23 [json_name = "sonetsdhcodes-s64point2b"];
            enum SonetsdhcodesS64Point2A {
               SonetsdhcodesS64Point2A_NOTX_SUPPORT = 0;
               SonetsdhcodesS64Point2A_SUPPORT = 1;
            };
            SonetsdhcodesS64Point2A sonetsdhcodes_s64point2a = 24 [json_name = "sonetsdhcodes-s64point2a"];
            enum SonetsdhcodesS64Point1 {
               SonetsdhcodesS64Point1_NOTX_SUPPORT = 0;
               SonetsdhcodesS64Point1_SUPPORT = 1;
            };
            SonetsdhcodesS64Point1 sonetsdhcodes_s64point1 = 25 [json_name = "sonetsdhcodes-s64point1"];
            enum SonetsdhcodeSg959P1L1 {
               SonetsdhcodeSg959P1L1_NOTX_SUPPORT = 0;
               SonetsdhcodeSg959P1L1_SUPPORT = 1;
            };
            SonetsdhcodeSg959P1L1 sonetsdhcode_sg959p1l1 = 26 [json_name = "sonetsdhcode-sg959p1l1"];
            enum SonetsdhcodesL64Point3 {
               SonetsdhcodesL64Point3_NOTX_SUPPORT = 0;
               SonetsdhcodesL64Point3_SUPPORT = 1;
            };
            SonetsdhcodesL64Point3 sonetsdhcodes_l64point3 = 27 [json_name = "sonetsdhcodes-l64point3"];
            enum SonetsdhcodesL64Point2C {
               SonetsdhcodesL64Point2C_NOTX_SUPPORT = 0;
               SonetsdhcodesL64Point2C_SUPPORT = 1;
            };
            SonetsdhcodesL64Point2C sonetsdhcodes_l64point2c = 28 [json_name = "sonetsdhcodes-l64point2c"];
            enum SonetsdhcodesL64Point2B {
               SonetsdhcodesL64Point2B_NOTX_SUPPORT = 0;
               SonetsdhcodesL64Point2B_SUPPORT = 1;
            };
            SonetsdhcodesL64Point2B sonetsdhcodes_l64point2b = 29 [json_name = "sonetsdhcodes-l64point2b"];
            enum SonetsdhcodesL64Point2A {
               SonetsdhcodesL64Point2A_NOTX_SUPPORT = 0;
               SonetsdhcodesL64Point2A_SUPPORT = 1;
            };
            SonetsdhcodesL64Point2A sonetsdhcodes_l64point2a = 30 [json_name = "sonetsdhcodes-l64point2a"];
            enum SonetsdhcodesL64Point1 {
               SonetsdhcodesL64Point1_NOTX_SUPPORT = 0;
               SonetsdhcodesL64Point1_SUPPORT = 1;
            };
            SonetsdhcodesL64Point1 sonetsdhcodes_l64point1 = 31 [json_name = "sonetsdhcodes-l64point1"];
            enum SonetsdhcodesV64Point3 {
               SonetsdhcodesV64Point3_NOTX_SUPPORT = 0;
               SonetsdhcodesV64Point3_SUPPORT = 1;
            };
            SonetsdhcodesV64Point3 sonetsdhcodes_v64point3 = 32 [json_name = "sonetsdhcodes-v64point3"];
            enum SonetsdhcodesV64Point2B {
               SonetsdhcodesV64Point2B_NOTX_SUPPORT = 0;
               SonetsdhcodesV64Point2B_SUPPORT = 1;
            };
            SonetsdhcodesV64Point2B sonetsdhcodes_v64point2b = 33 [json_name = "sonetsdhcodes-v64point2b"];
            enum SonetsdhcodesV64Point2A {
               SonetsdhcodesV64Point2A_NOTX_SUPPORT = 0;
               SonetsdhcodesV64Point2A_SUPPORT = 1;
            };
            SonetsdhcodesV64Point2A sonetsdhcodes_v64point2a = 34 [json_name = "sonetsdhcodes-v64point2a"];
            enum EncodingSont {
               EncodingSont_NONX_ENCODINGX_SONT = 0;
               EncodingSont_ENCODINGX_SONT = 1;
            };
            EncodingSont encoding_sont = 35 [json_name = "encoding-sont"];
            uint32 dbrmin = 36 [json_name = "dbrmin"];
            uint32 support_len_smf = 37 [json_name = "support-len-smf"];
            uint32 wavelength = 38 [json_name = "wavelength"];
            uint32 ccext = 39 [json_name = "ccext"];
            enum Detector {
               Detector_NONX_DETECTOR = 0;
               Detector_DETECTOR = 1;
               Detector_INVALID = 2;
            };
            Detector detector = 40 [json_name = "detector"];
         }
         Eth10GeOpticalModuleInfo eth_10ge_optical_module_info = 9 [json_name = "eth-10ge-optical-module-info"];
         string vendor_name = 10 [json_name = "vendor-name"];
         string vendor_rev = 11 [json_name = "vendor-rev"];
         bytes vendor_oui = 12 [json_name = "vendor-oui"];
         string vendor_pn = 13 [json_name = "vendor-pn"];
         string vendor_sn = 14 [json_name = "vendor-sn"];
         string date_code = 15 [json_name = "date-code"];
         bytes vendor_specific = 16 [json_name = "vendor-specific"];
         enum Sff8472Compliance {
            Sff8472Compliance_SFF8472X_V93 = 0;
            Sff8472Compliance_SFF8472X_V95 = 1;
            Sff8472Compliance_SFF8472X_V102 = 2;
            Sff8472Compliance_SFF8472X_V104 = 3;
            Sff8472Compliance_SFF8472X_V110 = 4;
         };
         Sff8472Compliance sff8472_compliance = 17 [json_name = "sff8472-compliance"];
         enum RateIdentifier {
            RateIdentifier_UNSPECIFIED = 0;
            RateIdentifier_RATEX_IDX_4G2G1GX_AS0AS1 = 1;
            RateIdentifier_RATEX_IDX_8G4G2GX_RX = 2;
            RateIdentifier_RATEX_IDX_8G4G2GX_TX = 3;
            RateIdentifier_RATEX_IDX_8G4G2GX_RXX_TX = 4;
            RateIdentifier_RATEX_IDX_16G8G4GX_RX = 5;
            RateIdentifier_RATEX_IDX_16G8G4GX_RXX_TX = 6;
         };
         RateIdentifier rate_identifier = 18 [json_name = "rate-identifier"];
         enum ExtIdentifier {
            ExtIdentifier_NOTX_SPECIFIEDX_ORX_NOTX_COMPLIANT = 0;
            ExtIdentifier_MODDEF1 = 1;
            ExtIdentifier_MODDEF2 = 2;
            ExtIdentifier_MODDEF3 = 3;
            ExtIdentifier_BYX_TWOX_WIREX_ONLY = 4;
            ExtIdentifier_MODDEF5 = 5;
            ExtIdentifier_MODDEF6 = 6;
            ExtIdentifier_MODDEF7 = 7;
         };
         ExtIdentifier ext_identifier = 19 [json_name = "ext-identifier"];
         enum Encoding {
            Encoding_UNSPECIFIED = 0;
            Encoding_ENCODINGX_8B10B = 1;
            Encoding_ENCODINGX_4B5B = 2;
            Encoding_ENCODINGX_NRZ = 3;
            Encoding_ENCODINGX_MANCHESTER = 4;
            Encoding_ENCODINGX_SONETX_SCRAMBLED = 5;
            Encoding_ENCODINGX_64B66B = 6;
         };
         Encoding encoding = 20 [json_name = "encoding"];
         uint32 length_50um = 21 [json_name = "length-50um"];
         uint32 length_62p5um = 22 [json_name = "length-62p5um"];
         uint32 length_copper = 23 [json_name = "length-copper"];
         uint32 length_50um_om3 = 24 [json_name = "length-50um-om3"];
         uint32 br_max = 25 [json_name = "br-max"];
         uint32 br_min = 26 [json_name = "br-min"];
         enum Options {
            Options_COOLEDX_LASERX_TEMP = 0;
            Options_POWERX_LEVELX_REQ = 1;
            Options_LINERX_RCVX_OUTPUT = 2;
            Options_RATEX_SELECT = 3;
            Options_TXX_DISABLE = 4;
            Options_TXX_FAULT = 5;
            Options_SIGNALX_DETECT = 6;
            Options_RXX_LOS = 7;
         };
         repeated Options options = 27 [json_name = "options"];
         enum EnhanceOptions {
            EnhanceOptions_ALARMX_FLAG = 0;
            EnhanceOptions_SOFTX_TXX_DISABLEX_IND = 1;
            EnhanceOptions_SOFTX_TXX_FAULTX_IND = 2;
            EnhanceOptions_SOFTX_RXX_LOSX_IND = 3;
            EnhanceOptions_SOFTX_RATEX_SELECTX_IND = 4;
            EnhanceOptions_APPX_SELX_8079X_IND = 5;
            EnhanceOptions_RATEX_SELX_8431X_IND = 6;
            EnhanceOptions_VPS = 7;
            EnhanceOptions_SOFTX_PX_DOWNX_IND = 8;
            EnhanceOptions_VPSX_LV = 9;
            EnhanceOptions_VPSX_BYX_PASS = 10;
            EnhanceOptions_FECX_IND = 11;
            EnhanceOptions_WTIX_IND = 12;
            EnhanceOptions_CMU = 13;
         };
         repeated EnhanceOptions enhance_options = 28 [json_name = "enhance-options"];
         enum ModuleComboMode {
            ModuleComboMode_WDM = 0;
            ModuleComboMode_TDM = 1;
         };
         ModuleComboMode module_combo_mode = 29 [json_name = "module-combo-mode"];
         enum ModuleType {
            INVALID_ENUM_VALUE_ModuleType = 0;
            ModuleType_GPON = 1;
            ModuleType_EPON = 2;
            ModuleType_X_10GX_EPON = 3;
            ModuleType_XGX_PON = 4;
            ModuleType_XGSX_PON = 9;
            ModuleType_GPONX_ANDX_XGPON = 10;
            ModuleType_GPONX_ANDX_XGSPON = 11;
         };
         ModuleType module_type = 30 [json_name = "module-type"];
         enum ModuleSubType {
            INVALID_ENUM_VALUE_ModuleSubType = 0;
            ModuleSubType_CLASSBPLUS = 1;
            ModuleSubType_CLASSCPLUS = 2;
            ModuleSubType_CLASSB = 3;
            ModuleSubType_CLASSCPLUSPLUS = 4;
            ModuleSubType_CLASSD = 5;
            ModuleSubType_N2A = 33;
            ModuleSubType_N2B = 34;
            ModuleSubType_N1 = 35;
            ModuleSubType_E1 = 36;
            ModuleSubType_E2A = 37;
            ModuleSubType_E2B = 38;
            ModuleSubType_N1X_N2AX_E1X_E2A = 39;
            ModuleSubType_D1 = 40;
            ModuleSubType_D2 = 41;
            ModuleSubType_N2 = 42;
            ModuleSubType_E2 = 43;
            ModuleSubType_CLASSDPLUS = 44;
            ModuleSubType_PX20PLUS = 66;
            ModuleSubType_PX20PLUSPLUS = 67;
            ModuleSubType_PR30 = 97;
            ModuleSubType_PRX30 = 99;
            ModuleSubType_PR40 = 101;
            ModuleSubType_PRX40 = 102;
            ModuleSubType_PR30PLUS = 103;
            ModuleSubType_BPLUSPX20P = 129;
            ModuleSubType_BPX20 = 130;
         };
         ModuleSubType module_sub_type = 31 [json_name = "module-sub-type"];
         enum UsedType {
            INVALID_ENUM_VALUE_UsedType = 0;
            UsedType_OLT = 1;
            UsedType_ONT = 2;
            UsedType_ONU = 3;
            UsedType_ONUX_DQ = 6;
         };
         UsedType used_type = 32 [json_name = "used-type"];
         enum EncapsulationType {
            EncapsulationType_UNKNOWN = 0;
            EncapsulationType_SFF2X5 = 1;
            EncapsulationType_SFF2X10 = 2;
            EncapsulationType_SFP = 3;
            EncapsulationType_XFP = 4;
            EncapsulationType_LXFP = 5;
            EncapsulationType_BOSAX_ONX_BOARD = 6;
            EncapsulationType_SFPX_PLUS = 7;
         };
         EncapsulationType encapsulation_type = 33 [json_name = "encapsulation-type"];
         enum OtdrCapability {
            OtdrCapability_UNSUPPORT = 0;
            OtdrCapability_SUPPORTX_DOWNX_WAVE = 1;
            OtdrCapability_SUPPORTX_DOWNX_UPX_WAVE = 2;
            OtdrCapability_SUPPORTX_INDEPENDENT = 3;
         };
         OtdrCapability otdr_capability = 34 [json_name = "otdr-capability"];
         uint32 max_distance = 35 [json_name = "max-distance"];
         uint32 max_rate = 36 [json_name = "max-rate"];
         enum FiberType {
            FiberType_SINGLEX_MODE = 0;
            FiberType_MULTIX_MODE = 1;
         };
         FiberType fiber_type = 37 [json_name = "fiber-type"];
         enum CcBase {
            CcBase_CORRECT = 0;
            CcBase_INCORRECT = 1;
         };
         CcBase cc_base = 38 [json_name = "cc-base"];
         enum CcExt {
            CcExt_CORRECT = 0;
            CcExt_INCORRECT = 1;
         };
         CcExt cc_ext = 39 [json_name = "cc-ext"];
         int32 olt_rx_power = 40 [json_name = "olt-rx-power"];
         int32 catv_rx_power = 41 [json_name = "catv-rx-power"];
         int32 catv_rx_power_high_alarm_threshold = 42 [json_name = "catv-rx-power-high-alarm-threshold"];
         int32 catv_rx_power_low_alarm_threshold = 43 [json_name = "catv-rx-power-low-alarm-threshold"];
         enum DiagnosticsMonitoring {
            DiagnosticsMonitoring_DIGITALX_DIAGNOSTICX_MONITORING = 0;
            DiagnosticsMonitoring_INTERNALLYX_CALIBRATED = 1;
            DiagnosticsMonitoring_EXTERNALLYX_CALIBRATED = 2;
            DiagnosticsMonitoring_MEASUREMENTX_TYPE = 3;
            DiagnosticsMonitoring_ADDRESSX_CHANGEX_REQUIRED = 4;
         };
         repeated DiagnosticsMonitoring diagnostics_monitoring = 44 [json_name = "diagnostics-monitoring"];
         uint32 wavelength_tolerance = 45 [json_name = "wavelength-tolerance"];
         enum ExtCleiCode {
            ExtCleiCode_NONX_CLEIX_CODE = 0;
            ExtCleiCode_CLEIX_CODE = 1;
         };
         ExtCleiCode ext_clei_code = 46 [json_name = "ext-clei-code"];
         enum ExtTxrefClock {
            ExtTxrefClock_NONX_TXREFX_CLOCK = 0;
            ExtTxrefClock_TXREFX_CLOCK = 1;
         };
         ExtTxrefClock ext_txref_clock = 47 [json_name = "ext-txref-clock"];
         enum ExtCdrfunc {
            ExtCdrfunc_SUPPORT = 0;
            ExtCdrfunc_NOTX_SUPPORT = 1;
         };
         ExtCdrfunc ext_cdrfunc = 48 [json_name = "ext-cdrfunc"];
         enum ExtPowerLevel {
            ExtPowerLevel_POWERX_LEVEL1 = 0;
            ExtPowerLevel_POWERX_LEVEL2 = 1;
            ExtPowerLevel_POWERX_LEVEL3 = 2;
            ExtPowerLevel_POWERX_LEVEL4 = 3;
         };
         ExtPowerLevel ext_power_level = 49 [json_name = "ext-power-level"];
         enum EncodingRz {
            EncodingRz_SUPPORT = 0;
            EncodingRz_NOTX_SUPPORT = 1;
         };
         EncodingRz encoding_rz = 50 [json_name = "encoding-rz"];
         enum EncodingNrz {
            EncodingNrz_SUPPORT = 0;
            EncodingNrz_NOTX_SUPPORT = 1;
         };
         EncodingNrz encoding_nrz = 51 [json_name = "encoding-nrz"];
         enum Encoding8B10B {
            Encoding8B10B_SUPPORT = 0;
            Encoding8B10B_NOTX_SUPPORT = 1;
         };
         Encoding8B10B encoding_8b10b = 52 [json_name = "encoding-8b10b"];
         enum Encoding64B66B {
            Encoding64B66B_SUPPORT = 0;
            Encoding64B66B_NOTX_SUPPORT = 1;
         };
         Encoding64B66B encoding_64b66b = 53 [json_name = "encoding-64b66b"];
         uint32 length_e50um = 54 [json_name = "length-e50um"];
         enum TransmitterTunable {
            TransmitterTunable_TUNABLE = 0;
            TransmitterTunable_NOTX_TUNABLE = 1;
         };
         TransmitterTunable transmitter_tunable = 55 [json_name = "transmitter-tunable"];
         enum Detector {
            Detector_PIN = 0;
            Detector_APD = 1;
         };
         Detector detector = 56 [json_name = "detector"];
         enum WavelengthControl {
            WavelengthControl_SUPPORT = 0;
            WavelengthControl_NOTX_SUPPORT = 1;
         };
         WavelengthControl wavelength_control = 57 [json_name = "wavelength-control"];
         enum CoolTransmitterDevice {
            CoolTransmitterDevice_SUPPORT = 0;
            CoolTransmitterDevice_NOTX_SUPPORT = 1;
         };
         CoolTransmitterDevice cool_transmitter_device = 58 [json_name = "cool-transmitter-device"];
         enum TransmitterTechnology {
            TransmitterTechnology_VCSEL850 = 0;
            TransmitterTechnology_VCSEL1310 = 1;
            TransmitterTechnology_VCSEL1550 = 2;
            TransmitterTechnology_FP1310 = 3;
            TransmitterTechnology_DFB1310 = 4;
            TransmitterTechnology_DFB1550 = 5;
            TransmitterTechnology_EML1310 = 6;
            TransmitterTechnology_EML1550 = 7;
            TransmitterTechnology_COPPER = 8;
         };
         TransmitterTechnology transmitter_technology = 59 [json_name = "transmitter-technology"];
         enum XfiLoopbackModeCap {
            XfiLoopbackModeCap_SUPPORT = 0;
            XfiLoopbackModeCap_NOTX_SUPPORT = 1;
         };
         XfiLoopbackModeCap xfi_loopback_mode_cap = 60 [json_name = "xfi-loopback-mode-cap"];
         enum LineSideLoopbackModeCap {
            LineSideLoopbackModeCap_SUPPORT = 0;
            LineSideLoopbackModeCap_NOTX_SUPPORT = 1;
         };
         LineSideLoopbackModeCap line_side_loopback_mode_cap = 61 [json_name = "line-side-loopback-mode-cap"];
         enum CdrMaxBitrate {
            CdrMaxBitrate_NOTX_SUPPORT = 0;
            CdrMaxBitrate_CDR11P1 = 1;
            CdrMaxBitrate_CDR10P7 = 2;
            CdrMaxBitrate_CDR10P5 = 3;
            CdrMaxBitrate_CDR10P3 = 4;
            CdrMaxBitrate_CDR9P95 = 5;
         };
         CdrMaxBitrate cdr_max_bitrate = 62 [json_name = "cdr-max-bitrate"];
         int32 max_case_temp = 63 [json_name = "max-case-temp"];
         int32 max_power_dissipation = 64 [json_name = "max-power-dissipation"];
         int32 max_power_dissipation_low = 65 [json_name = "max-power-dissipation-low"];
         int32 max_current_5v = 66 [json_name = "max-current-5v"];
         int32 max_current_3p3v = 67 [json_name = "max-current-3p3v"];
         int32 max_current_1p8v = 68 [json_name = "max-current-1p8v"];
         int32 max_current_neg5p2v = 69 [json_name = "max-current-neg5p2v"];
         enum RxPowerMeasureType {
            RxPowerMeasureType_OMA = 0;
            RxPowerMeasureType_AVERAGEX_POWER = 1;
         };
         RxPowerMeasureType rx_power_measure_type = 70 [json_name = "rx-power-measure-type"];
         enum RespondFecBer {
            RespondFecBer_SUPPORT = 0;
            RespondFecBer_NOTX_SUPPORT = 1;
         };
         RespondFecBer respond_fec_ber = 71 [json_name = "respond-fec-ber"];
         enum AuxMonitoring1 {
            AuxMonitoring1_NOTX_IMPLEMENTED = 0;
            AuxMonitoring1_APDX_BIASX_VOLTAGE = 1;
            AuxMonitoring1_TXX_BIASX_CURRENTX_1G = 2;
            AuxMonitoring1_TECX_CURRENT = 3;
            AuxMonitoring1_LASERX_TEMPERATURE = 4;
            AuxMonitoring1_LASERX_WAVELENGTH = 5;
            AuxMonitoring1_SUPPLYX_VOLTAGEX_5V = 6;
            AuxMonitoring1_TXX_POWERX_1G = 7;
            AuxMonitoring1_SUPPLYX_VOLTAGEX_1P8V = 8;
            AuxMonitoring1_SUPPLYX_VOLTAGEX_NEG5P2V = 9;
            AuxMonitoring1_SUPPLYX_CURRENTX_5V = 10;
            AuxMonitoring1_SUPPLYX_CURRENTX_3P3V = 11;
            AuxMonitoring1_SUPPLYX_CURRENTX_1P8V = 12;
            AuxMonitoring1_SUPPLYX_CURRENTX_NEG5P2V = 13;
         };
         AuxMonitoring1 aux_monitoring_1 = 72 [json_name = "aux-monitoring-1"];
         enum AuxMonitoring2 {
            AuxMonitoring2_NOTX_IMPLEMENTED = 0;
            AuxMonitoring2_APDX_BIASX_VOLTAGE = 1;
            AuxMonitoring2_TXX_BIASX_CURRENTX_1G = 2;
            AuxMonitoring2_TECX_CURRENT = 3;
            AuxMonitoring2_LASERX_TEMPERATURE = 4;
            AuxMonitoring2_LASERX_WAVELENGTH = 5;
            AuxMonitoring2_SUPPLYX_VOLTAGEX_5V = 6;
            AuxMonitoring2_TXX_POWERX_1G = 7;
            AuxMonitoring2_SUPPLYX_VOLTAGEX_1P8V = 8;
            AuxMonitoring2_SUPPLYX_VOLTAGEX_NEG5P2V = 9;
            AuxMonitoring2_SUPPLYX_CURRENTX_5V = 10;
            AuxMonitoring2_SUPPLYX_CURRENTX_3P3V = 11;
            AuxMonitoring2_SUPPLYX_CURRENTX_1P8V = 12;
            AuxMonitoring2_SUPPLYX_CURRENTX_NEG5P2V = 13;
         };
         AuxMonitoring2 aux_monitoring_2 = 73 [json_name = "aux-monitoring-2"];
         enum TempLevel {
            TempLevel_UNKNOWN = 0;
            TempLevel_COMMERCIAL = 1;
            TempLevel_INDUSTRIAL = 2;
            TempLevel_EXPANDX_TEMP = 3;
         };
         TempLevel temp_level = 74 [json_name = "temp-level"];
         uint32 opm_precision = 75 [json_name = "opm-precision"];
      }
      Transceiver transceiver = 22 [json_name = "transceiver"];
      message TransceiverLink {
         message WavelengthOrSpecificationCompliance_Unspecified {
            bool unspecified5 = 1 [json_name = "unspecified"];
         }
         message WavelengthOrSpecificationCompliance_Wavelength {
            uint32 wavelength5 = 1 [json_name = "wavelength"];
            uint32 wavelength_1p25g = 2 [json_name = "wavelength-1p25g"];
            uint32 wavelength_2p5g = 3 [json_name = "wavelength-2p5g"];
            uint32 wavelength_10g = 4 [json_name = "wavelength-10g"];
         }
         message WavelengthOrSpecificationCompliance_PassiveCableSpecificationCompliance {
            enum PassiveCableSpecificationCompliance5 {
               PassiveCableSpecificationCompliance5_FCX_PIX_4X_APPENDIXX_H = 0;
               PassiveCableSpecificationCompliance5_SFFX_8431X_APPENDIXX_E = 1;
            };
            PassiveCableSpecificationCompliance5 passive_cable_specification_compliance = 1 [json_name = "passive-cable-specification-compliance"];
         }
         message WavelengthOrSpecificationCompliance_ActiveCableSpecificationCompliance {
            enum ActiveCableSpecificationCompliance5 {
               ActiveCableSpecificationCompliance5_FCX_PIX_4X_LIMITING = 0;
               ActiveCableSpecificationCompliance5_SFFX_8431X_LIMITING = 1;
               ActiveCableSpecificationCompliance5_FCX_PIX_4X_APPENDIXX_H = 2;
               ActiveCableSpecificationCompliance5_SFFX_8431X_APPENDIXX_E = 3;
            };
            ActiveCableSpecificationCompliance5 active_cable_specification_compliance = 1 [json_name = "active-cable-specification-compliance"];
         }
         oneof WavelengthOrSpecificationCompliance {
            WavelengthOrSpecificationCompliance_Unspecified wavelength_or_specification_compliance_unspecified = 1 [json_name = "unspecified"];
            WavelengthOrSpecificationCompliance_Wavelength wavelength_or_specification_compliance_wavelength = 2 [json_name = "wavelength"];
            WavelengthOrSpecificationCompliance_PassiveCableSpecificationCompliance wavelength_or_specification_compliance_passive_cable_specification_compliance = 3 [json_name = "passive-cable-specification-compliance"];
            WavelengthOrSpecificationCompliance_ActiveCableSpecificationCompliance wavelength_or_specification_compliance_active_cable_specification_compliance = 4 [json_name = "active-cable-specification-compliance"];
         }
         message Diagnostics {
            uint32 tx_bias = 1 [json_name = "tx-bias"];
            uint32 tx_power = 2 [json_name = "tx-power"];
            uint32 rx_power = 3 [json_name = "rx-power"];
            int32 laser_temperature = 4 [json_name = "laser-temperature"];
            int32 tec_current = 5 [json_name = "tec-current"];
            repeated string alarm_flag = 6 [json_name = "alarm-flag"];
            repeated string warning_flag = 7 [json_name = "warning-flag"];
            enum ModuleState {
               ModuleState_ONLINE = 0;
               ModuleState_OFFLINE = 1;
            };
            ModuleState module_state = 8 [json_name = "module-state"];
            enum LaserState {
               LaserState_NORMAL = 0;
               LaserState_FAILED = 1;
            };
            LaserState laser_state = 9 [json_name = "laser-state"];
            int32 tx_bias_2p5g = 10 [json_name = "tx-bias-2p5g"];
            int32 tx_bias_10g = 11 [json_name = "tx-bias-10g"];
            int32 tx_power_2p5g = 12 [json_name = "tx-power-2p5g"];
            int32 tx_power_10g = 13 [json_name = "tx-power-10g"];
         }
         Diagnostics diagnostics = 5 [json_name = "diagnostics"];
      }
      TransceiverLink transceiver_link = 23 [json_name = "transceiver-link"];
      string derive_component = 24 [json_name = "derive-component"];
   }
   repeated Component component = 2 [json_name = "component"];
}
message HardwareStateChange {
}
message HardwareStateOperEnabled {
   string name = 1 [json_name = "name"];
   enum AdminState {
      INVALID_ENUM_VALUE_AdminState = 0;
      AdminState_UNKNOWN = 1;
      AdminState_LOCKED = 2;
      AdminState_SHUTTINGX_DOWN = 3;
      AdminState_UNLOCKED = 4;
   };
   AdminState admin_state = 2 [json_name = "admin-state"];
   enum AlarmState {
      AlarmState_UNKNOWN = 0;
      AlarmState_UNDERX_REPAIR = 1;
      AlarmState_CRITICAL = 2;
      AlarmState_MAJOR = 3;
      AlarmState_MINOR = 4;
      AlarmState_WARNING = 5;
      AlarmState_INDETERMINATE = 6;
   };
   AlarmState alarm_state = 3 [json_name = "alarm-state"];
}
message HardwareStateOperDisabled {
   string name = 1 [json_name = "name"];
   enum AdminState {
      INVALID_ENUM_VALUE_AdminState = 0;
      AdminState_UNKNOWN = 1;
      AdminState_LOCKED = 2;
      AdminState_SHUTTINGX_DOWN = 3;
      AdminState_UNLOCKED = 4;
   };
   AdminState admin_state = 2 [json_name = "admin-state"];
   enum AlarmState {
      AlarmState_UNKNOWN = 0;
      AlarmState_UNDERX_REPAIR = 1;
      AlarmState_CRITICAL = 2;
      AlarmState_MAJOR = 3;
      AlarmState_MINOR = 4;
      AlarmState_WARNING = 5;
      AlarmState_INDETERMINATE = 6;
   };
   AlarmState alarm_state = 3 [json_name = "alarm-state"];
}

