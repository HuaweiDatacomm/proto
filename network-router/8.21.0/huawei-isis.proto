syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-09-02 20:17:02
// ProtoYang-version 1
// module huawei-isis
// revision 2021-04-15
// revision 2020-08-10
// revision 2020-08-03
// revision 2020-07-06
// revision 2020-07-01
// revision 2020-06-30
// revision 2020-06-17
// revision 2020-06-03
// revision 2020-04-03
// revision 2020-03-13
// revision 2020-03-09
// revision 2020-03-04
// revision 2020-03-03
// revision 2020-02-25
// revision 2020-02-16
// revision 2020-02-04
// revision 2020-01-03
// revision 2019-12-23
// revision 2019-12-16
// revision 2019-11-22
// revision 2019-11-15
// revision 2019-11-01
// revision 2019-09-21
// revision 2019-04-04
// namespace urn:huawei:yang:huawei-isis

package huawei_isis;

message Isis {
   message Global {
      bool lsp_seq_over_flag = 1 [json_name = "lsp-seq-over-flag"];
      bool sys_id_conflict_flag = 2 [json_name = "sys-id-conflict-flag"];
      bool purge_lsp_protect_enable = 3 [json_name = "purge-lsp-protect-enable"];
      bool purge_source_trace_enable = 4 [json_name = "purge-source-trace-enable"];
      uint32 purge_source_trace_port = 5 [json_name = "purge-source-trace-port"];
      bool suppress_flap_intf_disable = 6 [json_name = "suppress-flap-intf-disable"];
      bool intf_limit_enable = 7 [json_name = "intf-limit-enable"];
      bool cpu_overload_ctrl_enable = 8 [json_name = "cpu-overload-ctrl-enable"];
      bool memory_overload_ctrl_enable = 9 [json_name = "memory-overload-ctrl-enable"];
      bool memory_overload_exception_discard_lsp = 10 [json_name = "memory-overload-exception-discard-lsp"];
      message SessionCar {
         enum SwitchFlag {
            SwitchFlag_ENABLE = 0;
            SwitchFlag_DISABLE = 1;
         };
         SwitchFlag switch_flag = 1 [json_name = "switch-flag"];
         uint32 cir = 2 [json_name = "cir"];
         uint32 cbs = 3 [json_name = "cbs"];
         uint32 pir = 4 [json_name = "pir"];
         uint32 pbs = 5 [json_name = "pbs"];
      }
      SessionCar session_car = 11 [json_name = "session-car"];
      bool route_loop_detect_enable = 12 [json_name = "route-loop-detect-enable"];
      message MicroIsolationCar {
         enum SwitchFlag {
            SwitchFlag_ENABLE = 0;
            SwitchFlag_DISABLE = 1;
         };
         SwitchFlag switch_flag = 1 [json_name = "switch-flag"];
         uint32 cir = 2 [json_name = "cir"];
         uint32 cbs = 3 [json_name = "cbs"];
         uint32 pir = 4 [json_name = "pir"];
         uint32 pbs = 5 [json_name = "pbs"];
      }
      MicroIsolationCar micro_isolation_car = 13 [json_name = "micro-isolation-car"];
   }
   Global global = 1 [json_name = "global"];
   message GlobalStat {
      uint32 node_number = 1 [json_name = "node-number"];
      uint32 peer_number = 2 [json_name = "peer-number"];
   }
   GlobalStat global_stat = 2 [json_name = "global-stat"];
}

