syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-08-03 16:01:26
// ProtoYang-version 1
// module huawei-radius-client
// revision 2019-06-27
// namespace urn:huawei:yang:huawei-radius-client

package huawei_radius_client;

message RadiusClient {
   message Global {
      bool radius_enable = 1 [json_name = "radius-enable"];
      uint32 dead_count = 2 [json_name = "dead-count"];
      uint32 dead_interval = 3 [json_name = "dead-interval"];
      uint32 dead_time = 4 [json_name = "dead-time"];
      uint32 fail_rate = 5 [json_name = "fail-rate"];
      bool recovery_enable = 6 [json_name = "recovery-enable"];
   }
   Global global = 1 [json_name = "global"];
   message RadiusServerGroups {
      message RadiusServerGroup {
         string name = 1 [json_name = "name"];
         int32 retrans_count = 2 [json_name = "retrans-count"];
         int32 retrans_interval = 3 [json_name = "retrans-interval"];
         int32 auth_retrans_count = 4 [json_name = "auth-retrans-count"];
         int32 auth_retrans_interval = 5 [json_name = "auth-retrans-interval"];
         int32 acct_retrans_count = 6 [json_name = "acct-retrans-count"];
         int32 acct_retrans_interval = 7 [json_name = "acct-retrans-interval"];
         string shared_key = 8 [json_name = "shared-key"];
         bool attr_trans_enable = 9 [json_name = "attr-trans-enable"];
         enum GroupMode {
            GroupMode_PRIMARYX_SECONDARY = 0;
            GroupMode_LOADX_BALANCE = 1;
         };
         GroupMode group_mode = 10 [json_name = "group-mode"];
         string nas_ip_address = 11 [json_name = "nas-ip-address"];
         string source_interface_name = 12 [json_name = "source-interface-name"];
         enum DomainMode {
            DomainMode_NO = 0;
            DomainMode_YES = 1;
            DomainMode_ORIGINAL = 2;
         };
         DomainMode domain_mode = 13 [json_name = "domain-mode"];
         message Ipv4Servers {
            message Ipv4Server {
               enum ServerType {
                  ServerType_AUTHENTICATION = 0;
                  ServerType_ACCOUNTING = 1;
               };
               ServerType server_type = 1 [json_name = "server-type"];
               string address = 2 [json_name = "address"];
               int32 port = 3 [json_name = "port"];
               enum ServerMode {
                  ServerMode_SECONDARYX_SERVER = 0;
                  ServerMode_PRIMARYX_SERVER = 1;
               };
               ServerMode server_mode = 4 [json_name = "server-mode"];
               string vpn_name = 5 [json_name = "vpn-name"];
               string source_interface_name = 6 [json_name = "source-interface-name"];
               string shared_key = 7 [json_name = "shared-key"];
               string source_address = 8 [json_name = "source-address"];
            }
            repeated Ipv4Server ipv4_server = 1 [json_name = "ipv4-server"];
         }
         Ipv4Servers ipv4_servers = 14 [json_name = "ipv4-servers"];
         message Ipv6Servers {
            message Ipv6Server {
               enum ServerType {
                  ServerType_AUTHENTICATION = 0;
                  ServerType_ACCOUNTING = 1;
               };
               ServerType server_type = 1 [json_name = "server-type"];
               string address = 2 [json_name = "address"];
               int32 port = 3 [json_name = "port"];
               enum ServerMode {
                  ServerMode_SECONDARYX_SERVER = 0;
                  ServerMode_PRIMARYX_SERVER = 1;
               };
               ServerMode server_mode = 4 [json_name = "server-mode"];
               string shared_key = 5 [json_name = "shared-key"];
            }
            repeated Ipv6Server ipv6_server = 1 [json_name = "ipv6-server"];
         }
         Ipv6Servers ipv6_servers = 15 [json_name = "ipv6-servers"];
      }
      repeated RadiusServerGroup radius_server_group = 1 [json_name = "radius-server-group"];
   }
   RadiusServerGroups radius_server_groups = 2 [json_name = "radius-server-groups"];
}

