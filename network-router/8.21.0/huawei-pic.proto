syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-09-13 21:18:10
// ProtoYang-version 1
// module huawei-pic
// revision 2021-01-06
// revision 2020-09-22
// revision 2020-09-04
// revision 2020-08-04
// revision 2020-06-16
// revision 2020-04-15
// revision 2020-04-13
// revision 2020-03-18
// revision 2020-03-06
// revision 2020-01-13
// revision 2019-12-31
// revision 2019-11-16
// revision 2019-10-22
// revision 2019-06-26
// revision 2019-04-01
// namespace urn:huawei:yang:huawei-pic

package huawei_pic;

message Pic {
   message PortStatistics {
      message Statistic {
         string chassis_id = 1 [json_name = "chassis-id"];
         uint32 board_id = 2 [json_name = "board-id"];
         enum PortType {
            PortType_ATM = 0;
            PortType_C37 = 1;
            PortType_CODIR = 2;
            PortType_CPOS = 3;
            PortType_E1 = 4;
            PortType_E3 = 5;
            PortType_ECMSERIAL = 6;
            PortType_ETH = 7;
            PortType_FLEXEPHY = 8;
            PortType_FLEXE = 9;
            PortType_OTN = 10;
            PortType_POS = 11;
            PortType_VOICE = 12;
         };
         PortType port_type = 3 [json_name = "port-type"];
         uint32 total_port_num = 4 [json_name = "total-port-num"];
         uint32 phy_up_port_num = 5 [json_name = "phy-up-port-num"];
      }
      repeated Statistic statistic = 1 [json_name = "statistic"];
   }
   PortStatistics port_statistics = 1 [json_name = "port-statistics"];
   message PanelSplitPorts {
      message PanelSplitPort {
         string position = 1 [json_name = "position"];
         enum SplitType {
            INVALID_ENUM_VALUE_SplitType = 0;
            SplitType_X_4X10GE = 1;
            SplitType_X_1X40GE = 2;
            SplitType_X_1X100GE = 3;
            SplitType_X_10X10GE = 4;
            SplitType_X_4X25GEX_NULL = 5;
            SplitType_X_4X10GEX_1X40GE = 9;
            SplitType_X_4X10GEX_4X10GE = 10;
            SplitType_NULLX_1X100GE = 12;
            SplitType_X_1X400GE = 13;
            SplitType_NULLX_2X25GE = 15;
            SplitType_X_1X50GEX_NULL = 16;
            SplitType_X_1X25GEX_2X1GE = 17;
            SplitType_X_1X10GEX_2X10GE = 18;
            SplitType_X_1X25GEX_NULL = 19;
            SplitType_X_1X10GEX_1X10GE = 20;
            SplitType_ADAPT = 21;
            SplitType_X_4X25GE = 22;
            SplitType_X_1X50GE = 23;
         };
         SplitType split_type = 2 [json_name = "split-type"];
         message SplitPorts {
            message Port {
               string split_position = 1 [json_name = "split-position"];
               string port_name = 2 [json_name = "port-name"];
               message RelatedPorts {
                  message RelatedPort {
                     string port_name = 1 [json_name = "port-name"];
                  }
                  repeated RelatedPort related_port = 1 [json_name = "related-port"];
               }
               RelatedPorts related_ports = 3 [json_name = "related-ports"];
            }
            repeated Port port = 1 [json_name = "port"];
         }
         SplitPorts split_ports = 3 [json_name = "split-ports"];
         message RelatedPorts {
            message RelatedPort {
               string port_name = 1 [json_name = "port-name"];
            }
            repeated RelatedPort related_port = 1 [json_name = "related-port"];
         }
         RelatedPorts related_ports = 4 [json_name = "related-ports"];
      }
      repeated PanelSplitPort panel_split_port = 1 [json_name = "panel-split-port"];
   }
   PanelSplitPorts panel_split_ports = 2 [json_name = "panel-split-ports"];
   message AutoClears {
      message AutoClear {
         enum Type {
            INVALID_ENUM_VALUE_Type = 0;
            Type_LSRCLOSE = 7;
            Type_PHYSICALX_MODE = 14;
         };
         Type type = 1 [json_name = "type"];
         enum Status {
            Status_DISABLED = 0;
            Status_ENABLED = 1;
         };
         Status status = 2 [json_name = "status"];
         uint32 time = 3 [json_name = "time"];
      }
      repeated AutoClear auto_clear = 1 [json_name = "auto-clear"];
   }
   AutoClears auto_clears = 3 [json_name = "auto-clears"];
   message TadTransAlarmIfDowns {
      message TadTransAlarmIfDown {
         enum PortType {
            INVALID_ENUM_VALUE_PortType = 0;
            PortType_WAN = 1;
            PortType_POS = 2;
         };
         PortType port_type = 1 [json_name = "port-type"];
         enum AlarmType {
            AlarmType_AUAIS = 0;
            AlarmType_B3TCA = 1;
            AlarmType_LAIS = 2;
            AlarmType_LOF = 3;
            AlarmType_LOM = 4;
            AlarmType_LOP = 5;
            AlarmType_LOS = 6;
            AlarmType_LRDI = 7;
            AlarmType_LREI = 8;
            AlarmType_OOF = 9;
            AlarmType_PAIS = 10;
            AlarmType_PRDI = 11;
            AlarmType_PREI = 12;
            AlarmType_PPLM = 13;
            AlarmType_RDOOL = 14;
            AlarmType_RROOL = 15;
            AlarmType_SDBERE = 16;
            AlarmType_SFBERE = 17;
            AlarmType_TROOL = 18;
            AlarmType_PUNEQ = 19;
            AlarmType_LCD = 20;
            AlarmType_B1TCA = 40;
            AlarmType_B2TCA = 41;
         };
         AlarmType alarm_type = 2 [json_name = "alarm-type"];
         bool if_down = 3 [json_name = "if-down"];
      }
      repeated TadTransAlarmIfDown tad_trans_alarm_if_down = 1 [json_name = "tad-trans-alarm-if-down"];
   }
   TadTransAlarmIfDowns tad_trans_alarm_if_downs = 4 [json_name = "tad-trans-alarm-if-downs"];
   message AlarmAisInserts {
      message AlarmAisInsert {
         enum Name {
            INVALID_ENUM_VALUE_Name = 0;
            Name_HPTIM = 1;
            Name_LPTIM = 2;
            Name_RSTIM = 3;
            Name_HPTIMATM = 4;
            Name_HPUNEQATM = 5;
            Name_HPUNEQ = 6;
            Name_HPPLM = 7;
            Name_LPUNEQ = 8;
         };
         Name name = 1 [json_name = "name"];
         bool ais = 2 [json_name = "ais"];
         bool rdi = 3 [json_name = "rdi"];
      }
      repeated AlarmAisInsert alarm_ais_insert = 1 [json_name = "alarm-ais-insert"];
   }
   AlarmAisInserts alarm_ais_inserts = 5 [json_name = "alarm-ais-inserts"];
   message PortCombinationModes {
      message PortCombinationMode {
         string position = 1 [json_name = "position"];
         enum CombinationMode {
            CombinationMode_X_8X10GE = 0;
            CombinationMode_X_1X100GE = 1;
            CombinationMode_X_2X40GE = 2;
            CombinationMode_X_4X25GE = 3;
         };
         CombinationMode combination_mode = 2 [json_name = "combination-mode"];
      }
      repeated PortCombinationMode port_combination_mode = 1 [json_name = "port-combination-mode"];
   }
   PortCombinationModes port_combination_modes = 6 [json_name = "port-combination-modes"];
   message HighPerformanceModes {
      message HighPerformanceMode {
         string position = 1 [json_name = "position"];
         enum Mode {
            INVALID_ENUM_VALUE_Mode = 0;
            Mode_MODE1 = 1;
            Mode_MODE2 = 2;
            Mode_MODE3 = 3;
            Mode_MODE4 = 4;
            Mode_MODE5 = 5;
         };
         Mode mode = 2 [json_name = "mode"];
      }
      repeated HighPerformanceMode high_performance_mode = 1 [json_name = "high-performance-mode"];
   }
   HighPerformanceModes high_performance_modes = 7 [json_name = "high-performance-modes"];
   message PanelSwitchPorts {
      message PanelSwitchPort {
         string position = 1 [json_name = "position"];
         enum SwitchType {
            INVALID_ENUM_VALUE_SwitchType = 0;
            SwitchType_ADAPT = 1;
            SwitchType_X_25GETO50GE = 2;
            SwitchType_X_40GETO100GE = 3;
            SwitchType_X_100GETO40GE = 4;
            SwitchType_X_100GETO200GE = 5;
         };
         SwitchType switch_type = 2 [json_name = "switch-type"];
         string switch_port_name = 3 [json_name = "switch-port-name"];
      }
      repeated PanelSwitchPort panel_switch_port = 1 [json_name = "panel-switch-port"];
   }
   PanelSwitchPorts panel_switch_ports = 8 [json_name = "panel-switch-ports"];
}

