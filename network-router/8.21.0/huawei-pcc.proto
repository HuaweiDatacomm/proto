syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-08-30 19:34:45
// ProtoYang-version 1
// module huawei-pcc
// revision 2020-09-25
// revision 2020-08-18
// revision 2020-07-15
// revision 2020-03-24
// revision 2020-03-10
// revision 2019-06-01
// namespace urn:huawei:yang:huawei-pcc

package huawei_pcc;

message Pcc {
   message Attribute {
      bool sr_capability = 1 [json_name = "sr-capability"];
      bool multi_delegate = 2 [json_name = "multi-delegate"];
      bool stitch_label_capability = 3 [json_name = "stitch-label-capability"];
      bool initiated_capability = 4 [json_name = "initiated-capability"];
      bool association_type_enable = 5 [json_name = "association-type-enable"];
      bool srv6_capability = 6 [json_name = "srv6-capability"];
      bool ppag_standard = 7 [json_name = "ppag-standard"];
   }
   Attribute attribute = 1 [json_name = "attribute"];
   message ConnectServers {
      message ConnectServer {
         string ip_address = 1 [json_name = "ip-address"];
         uint32 preference = 2 [json_name = "preference"];
         message Authentication {
            message AuthTypeSelection_AuthKeyChain {
               string keychain_name = 1 [json_name = "keychain-name"];
            }
            oneof AuthTypeSelection {
               AuthTypeSelection_AuthKeyChain auth_type_selection_auth_key_chain = 2 [json_name = "auth-key-chain"];
            }
         }
         Authentication authentication = 3 [json_name = "authentication"];
         uint32 dscp = 4 [json_name = "dscp"];
         string description = 5 [json_name = "description"];
         string ssl_policy_name = 6 [json_name = "ssl-policy-name"];
         string source_interface = 7 [json_name = "source-interface"];
      }
      repeated ConnectServer connect_server = 1 [json_name = "connect-server"];
   }
   ConnectServers connect_servers = 2 [json_name = "connect-servers"];
   message Lsps {
      message Lsp {
         string symbolic_path_name = 1 [json_name = "symbolic-path-name"];
         uint32 plsp_id = 2 [json_name = "plsp-id"];
         uint32 tunnel_id = 3 [json_name = "tunnel-id"];
         uint32 lsp_id = 4 [json_name = "lsp-id"];
         enum State {
            State_DOWN = 0;
            State_UP = 1;
            State_ACTIVE = 2;
            State_GOINGX_DOWN = 3;
            State_GOINGX_UP = 4;
         };
         State state = 5 [json_name = "state"];
         enum InitiatedType {
            InitiatedType_PCCX_INITIATED = 0;
            InitiatedType_PCEX_INITIATED = 1;
         };
         InitiatedType initiated_type = 6 [json_name = "initiated-type"];
         string ingress_address = 7 [json_name = "ingress-address"];
         string egress_address = 8 [json_name = "egress-address"];
         enum DelegateFlag {
            DelegateFlag_NO = 0;
            DelegateFlag_YES = 1;
            DelegateFlag_RETURNED = 2;
         };
         DelegateFlag delegate_flag = 9 [json_name = "delegate-flag"];
      }
      repeated Lsp lsp = 1 [json_name = "lsp"];
   }
   Lsps lsps = 3 [json_name = "lsps"];
   message Sessions {
      message Session {
         string ip_address = 1 [json_name = "ip-address"];
         uint32 msd = 2 [json_name = "msd"];
         enum State {
            State_IDLE = 0;
            State_TCPX_PENDING = 1;
            State_OPENX_WAIT = 2;
            State_KEEPX_WAIT = 3;
            State_UP = 4;
         };
         State state = 3 [json_name = "state"];
         enum PceStatus {
            PceStatus_NORMAL = 0;
            PceStatus_OVERLOADED = 1;
         };
         PceStatus pce_status = 4 [json_name = "pce-status"];
         uint32 session_id = 5 [json_name = "session-id"];
         string ssl_policy_name = 6 [json_name = "ssl-policy-name"];
         bool is_preferred = 7 [json_name = "is-preferred"];
         uint32 hold_time = 8 [json_name = "hold-time"];
         uint32 keepalive_time = 9 [json_name = "keepalive-time"];
         uint32 peer_hold_time = 10 [json_name = "peer-hold-time"];
         uint32 peer_keepalive_time = 11 [json_name = "peer-keepalive-time"];
         string session_active_time = 12 [json_name = "session-active-time"];
         uint32 session_preference = 13 [json_name = "session-preference"];
         uint32 stitch_label_base = 14 [json_name = "stitch-label-base"];
         uint32 stitch_label_size = 15 [json_name = "stitch-label-size"];
         enum LastDownReason {
            LastDownReason_NONE = 0;
            LastDownReason_NOX_EXPLAINATION = 1;
            LastDownReason_HOLDX_TIMERX_EXPIRED = 2;
            LastDownReason_MALFORMEDX_MSGX_RECEIVED = 3;
            LastDownReason_MAXX_UNKNOWX_REQX_RECEIVED = 4;
            LastDownReason_MAXX_UNKNOWX_MSGX_RECEIVED = 5;
            LastDownReason_RESETX_SESSIONX_RECEIVED = 6;
            LastDownReason_SESSIONX_SOURCEX_ADDRESSX_CHANGE = 7;
            LastDownReason_PROTOCOLX_ERRORX_MSGX_RECEIVED = 8;
            LastDownReason_PROTOCOLX_CLOSEX_MSGX_RECEIVED = 9;
            LastDownReason_SOCKX_ERRORX_MSGX_RECEIVED = 10;
            LastDownReason_OPENX_MSGX_UPX_SESSION = 11;
            LastDownReason_MANDATORYX_TLVX_MISS = 12;
            LastDownReason_MULTIPLEX_CONNECTIONSX_RECEIVED = 13;
            LastDownReason_ASSOCIATIONX_FORMATX_CHANGED = 14;
         };
         LastDownReason last_down_reason = 16 [json_name = "last-down-reason"];
         message Statistics {
            uint32 open_msg_recv_count = 1 [json_name = "open-msg-recv-count"];
            uint32 open_msg_sent_count = 2 [json_name = "open-msg-sent-count"];
            uint32 keepalive_msg_recv_count = 3 [json_name = "keepalive-msg-recv-count"];
            uint32 keepalive_msg_sent_count = 4 [json_name = "keepalive-msg-sent-count"];
            uint32 lsp_update_recv_count = 5 [json_name = "lsp-update-recv-count"];
            uint32 lsp_update_sent_count = 6 [json_name = "lsp-update-sent-count"];
            uint32 lsp_report_recv_count = 7 [json_name = "lsp-report-recv-count"];
            uint32 lsp_report_sent_count = 8 [json_name = "lsp-report-sent-count"];
            uint32 lsp_init_recv_count = 9 [json_name = "lsp-init-recv-count"];
            uint32 lsp_init_sent_count = 10 [json_name = "lsp-init-sent-count"];
            uint32 pce_error_msg_recv_count = 11 [json_name = "pce-error-msg-recv-count"];
            uint32 pce_error_msg_sent_count = 12 [json_name = "pce-error-msg-sent-count"];
            uint32 close_msg_recv_count = 13 [json_name = "close-msg-recv-count"];
            uint32 close_msg_sent_count = 14 [json_name = "close-msg-sent-count"];
            uint32 unknown_msg_recv_count = 15 [json_name = "unknown-msg-recv-count"];
            uint32 unknown_msg_req_recv_count = 16 [json_name = "unknown-msg-req-recv-count"];
            uint32 total_msg_recv_count = 17 [json_name = "total-msg-recv-count"];
            uint32 total_msg_sent_count = 18 [json_name = "total-msg-sent-count"];
            string max_computation_time = 19 [json_name = "max-computation-time"];
            string min_computation_time = 20 [json_name = "min-computation-time"];
            uint32 label_report_sent_count = 21 [json_name = "label-report-sent-count"];
            uint32 label_update_recv_count = 22 [json_name = "label-update-recv-count"];
            uint32 path_request_timeout_count = 23 [json_name = "path-request-timeout-count"];
            uint32 path_compute_success_count = 24 [json_name = "path-compute-success-count"];
            uint32 path_compute_fail_count = 25 [json_name = "path-compute-fail-count"];
            uint32 path_compute_req_msg_recv_count = 26 [json_name = "path-compute-req-msg-recv-count"];
            uint32 path_compute_req_msg_sent_count = 27 [json_name = "path-compute-req-msg-sent-count"];
            uint32 path_compute_reply_msg_recv_count = 28 [json_name = "path-compute-reply-msg-recv-count"];
            uint32 path_compute_reply_msg_sent_count = 29 [json_name = "path-compute-reply-msg-sent-count"];
            uint32 path_compute_notify_msg_recv_count = 30 [json_name = "path-compute-notify-msg-recv-count"];
            uint32 path_compute_notify_msg_sent_count = 31 [json_name = "path-compute-notify-msg-sent-count"];
         }
         Statistics statistics = 17 [json_name = "statistics"];
         message Capability {
            bool stateful = 1 [json_name = "stateful"];
            bool stitch_label = 2 [json_name = "stitch-label"];
            bool segment_routing = 3 [json_name = "segment-routing"];
            bool pce_initiated_lsp = 4 [json_name = "pce-initiated-lsp"];
            bool segment_routing_ipv6 = 5 [json_name = "segment-routing-ipv6"];
            bool multipath = 6 [json_name = "multipath"];
         }
         Capability capability = 18 [json_name = "capability"];
      }
      repeated Session session = 1 [json_name = "session"];
   }
   Sessions sessions = 4 [json_name = "sessions"];
   message Timer {
      uint32 hold_time = 1 [json_name = "hold-time"];
      uint32 keepalive_time = 2 [json_name = "keepalive-time"];
      uint32 delegate_hold_time = 3 [json_name = "delegate-hold-time"];
      uint32 state_timeout_time = 4 [json_name = "state-timeout-time"];
   }
   Timer timer = 5 [json_name = "timer"];
   message ThresholdAlarm {
      message PceInitiatedLspNumber {
         uint32 upper_value = 1 [json_name = "upper-value"];
         uint32 lower_value = 2 [json_name = "lower-value"];
      }
      PceInitiatedLspNumber pce_initiated_lsp_number = 1 [json_name = "pce-initiated-lsp-number"];
   }
   ThresholdAlarm threshold_alarm = 6 [json_name = "threshold-alarm"];
   message Srv6TePolicyCpaths {
      message Srv6TePolicyCpath {
         string symbolic_path_name = 1 [json_name = "symbolic-path-name"];
         uint32 plsp_id = 2 [json_name = "plsp-id"];
         string endpoint = 3 [json_name = "endpoint"];
         uint32 color = 4 [json_name = "color"];
         enum ProtocolOrigin {
            INVALID_ENUM_VALUE_ProtocolOrigin = 0;
            ProtocolOrigin_PCEP = 10;
            ProtocolOrigin_BGP = 20;
            ProtocolOrigin_CONFIGURATION = 30;
         };
         ProtocolOrigin protocol_origin = 5 [json_name = "protocol-origin"];
         uint32 asn = 6 [json_name = "asn"];
         string node_address = 7 [json_name = "node-address"];
         uint32 discriminator = 8 [json_name = "discriminator"];
         uint32 preference = 9 [json_name = "preference"];
         enum PathState {
            PathState_DOWN = 0;
            PathState_UP = 1;
            PathState_ACTIVE = 2;
            PathState_GOINGX_DOWN = 3;
            PathState_GOINGX_UP = 4;
         };
         PathState path_state = 10 [json_name = "path-state"];
         string binding_sid = 11 [json_name = "binding-sid"];
         message SegmentLists {
            message SegmentList {
               uint32 index = 1 [json_name = "index"];
               uint32 path_id = 2 [json_name = "path-id"];
               uint32 weight = 3 [json_name = "weight"];
               enum State {
                  State_DOWN = 0;
                  State_UP = 1;
                  State_ACTIVE = 2;
                  State_GOINGX_DOWN = 3;
                  State_GOINGX_UP = 4;
               };
               State state = 4 [json_name = "state"];
               message Hops {
                  message Hop {
                     uint32 index = 1 [json_name = "index"];
                     string value = 2 [json_name = "value"];
                  }
                  repeated Hop hop = 1 [json_name = "hop"];
               }
               Hops hops = 5 [json_name = "hops"];
            }
            repeated SegmentList segment_list = 1 [json_name = "segment-list"];
         }
         SegmentLists segment_lists = 12 [json_name = "segment-lists"];
      }
      repeated Srv6TePolicyCpath srv6_te_policy_cpath = 1 [json_name = "srv6-te-policy-cpath"];
   }
   Srv6TePolicyCpaths srv6_te_policy_cpaths = 7 [json_name = "srv6-te-policy-cpaths"];
   message StitchLabels {
      message StitchLabel {
         uint32 stitch_label_value = 1 [json_name = "stitch-label-value"];
         string symbolic_path_name = 2 [json_name = "symbolic-path-name"];
         uint32 plsp_id = 3 [json_name = "plsp-id"];
         uint32 tunnel_id = 4 [json_name = "tunnel-id"];
         string ingress_address = 5 [json_name = "ingress-address"];
         string egress_address = 6 [json_name = "egress-address"];
         enum State {
            State_DOWN = 0;
            State_UP = 1;
            State_ACTIVE = 2;
            State_GOINGX_DOWN = 3;
            State_GOINGX_UP = 4;
         };
         State state = 7 [json_name = "state"];
         message StitchStacks {
            message StitchStack {
               string node_address = 1 [json_name = "node-address"];
               string local_address = 2 [json_name = "local-address"];
               string remote_address = 3 [json_name = "remote-address"];
               uint32 label = 4 [json_name = "label"];
               enum SegmentType {
                  SegmentType_NODE = 0;
                  SegmentType_ADJACENCY = 1;
                  SegmentType_NONE = 2;
               };
               SegmentType segment_type = 5 [json_name = "segment-type"];
            }
            repeated StitchStack stitch_stack = 1 [json_name = "stitch-stack"];
         }
         StitchStacks stitch_stacks = 8 [json_name = "stitch-stacks"];
      }
      repeated StitchLabel stitch_label = 1 [json_name = "stitch-label"];
   }
   StitchLabels stitch_labels = 8 [json_name = "stitch-labels"];
}

