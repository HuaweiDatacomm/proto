syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-08-03 16:01:26
// ProtoYang-version 1
// module ietf-netconf-monitoring
// revision 2010-10-04
// namespace urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring

package ietf_netconf_monitoring;

message NetconfState {
   message Capabilities {
      repeated string capability = 1 [json_name = "capability"];
   }
   Capabilities capabilities = 1 [json_name = "capabilities"];
   message Datastores {
      message Datastore {
         message Locks {
            message LockType_GlobalLock {
               message GlobalLock6 {
                  uint32 locked_by_session = 1 [json_name = "locked-by-session"];
                  string locked_time = 2 [json_name = "locked-time"];
               }
               GlobalLock6 global_lock = 1 [json_name = "global-lock"];
            }
            message LockType_PartialLock {
               message PartialLock6 {
                  uint32 lock_id = 1 [json_name = "lock-id"];
                  uint32 locked_by_session = 2 [json_name = "locked-by-session"];
                  string locked_time = 3 [json_name = "locked-time"];
                  repeated string select = 4 [json_name = "select"];
                  repeated string locked_node = 5 [json_name = "locked-node"];
               }
               repeated PartialLock6 partial_lock = 1 [json_name = "partial-lock"];
            }
            oneof LockType {
               LockType_GlobalLock lock_type_global_lock = 2 [json_name = "global-lock"];
               LockType_PartialLock lock_type_partial_lock = 3 [json_name = "partial-lock"];
            }
         }
         Locks locks = 1 [json_name = "locks"];
         enum Name {
            Name_CANDIDATE = 0;
            Name_RUNNING = 1;
            Name_STARTUP = 2;
         };
         Name name = 2 [json_name = "name"];
      }
      repeated Datastore datastore = 1 [json_name = "datastore"];
   }
   Datastores datastores = 2 [json_name = "datastores"];
   message Schemas {
      message Schema {
         string format = 1 [json_name = "format"];
         string identifier = 2 [json_name = "identifier"];
         repeated string location = 3 [json_name = "location"];
         string namespace = 4 [json_name = "namespace"];
         string version = 5 [json_name = "version"];
      }
      repeated Schema schema = 1 [json_name = "schema"];
   }
   Schemas schemas = 3 [json_name = "schemas"];
   message Sessions {
      message Session {
         uint32 in_bad_rpcs = 1 [json_name = "in-bad-rpcs"];
         uint32 in_rpcs = 2 [json_name = "in-rpcs"];
         string login_time = 3 [json_name = "login-time"];
         uint32 out_notifications = 4 [json_name = "out-notifications"];
         uint32 out_rpc_errors = 5 [json_name = "out-rpc-errors"];
         uint32 session_id = 6 [json_name = "session-id"];
         string source_host = 7 [json_name = "source-host"];
         string transport = 8 [json_name = "transport"];
         string username = 9 [json_name = "username"];
      }
      repeated Session session = 1 [json_name = "session"];
   }
   Sessions sessions = 4 [json_name = "sessions"];
   message Statistics {
      uint32 dropped_sessions = 1 [json_name = "dropped-sessions"];
      uint32 in_bad_hellos = 2 [json_name = "in-bad-hellos"];
      uint32 in_bad_rpcs = 3 [json_name = "in-bad-rpcs"];
      uint32 in_rpcs = 4 [json_name = "in-rpcs"];
      uint32 in_sessions = 5 [json_name = "in-sessions"];
      string netconf_start_time = 6 [json_name = "netconf-start-time"];
      uint32 out_notifications = 7 [json_name = "out-notifications"];
      uint32 out_rpc_errors = 8 [json_name = "out-rpc-errors"];
      uint32 notification_received = 9 [json_name = "notification-received"];
      uint32 notification_sent = 10 [json_name = "notification-sent"];
   }
   Statistics statistics = 5 [json_name = "statistics"];
   message Streams {
      message Stream {
         enum Name {
            Name_NETCONF = 0;
         };
         Name name = 1 [json_name = "name"];
         string description = 2 [json_name = "description"];
         string replay_support = 3 [json_name = "replay-support"];
         string replay_log_creation_time = 4 [json_name = "replay-log-creation-time"];
         string replay_log_aged_time = 5 [json_name = "replay-log-aged-time"];
      }
      repeated Stream stream = 1 [json_name = "stream"];
   }
   Streams streams = 6 [json_name = "streams"];
}

