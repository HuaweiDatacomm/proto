syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-09-18 17:05:29
// ProtoYang-version 1
// module huawei-bgp
// revision 2021-09-06
// revision 2020-05-20
// revision 2020-05-13
// revision 2020-04-20
// revision 2020-04-02
// revision 2020-04-01
// revision 2020-03-17
// revision 2020-03-16
// revision 2020-03-13
// revision 2020-03-09
// revision 2020-03-03
// revision 2020-02-25
// revision 2020-02-03
// revision 2020-01-21
// revision 2020-01-16
// revision 2020-01-14
// revision 2019-03-22
// namespace urn:huawei:yang:huawei-bgp

package huawei_bgp;

message Bgp {
   message Global {
      bool yang_enable = 1 [json_name = "yang-enable"];
      bool memory_overload_exception_discard_route = 2 [json_name = "memory-overload-exception-discard-route"];
   }
   Global global = 1 [json_name = "global"];
   message BaseProcess {
      bool enable = 1 [json_name = "enable"];
      string as = 2 [json_name = "as"];
      bool keep_all_routes = 3 [json_name = "keep-all-routes"];
      bool check_first_as = 4 [json_name = "check-first-as"];
      bool router_id_auto_select = 5 [json_name = "router-id-auto-select"];
      bool shutdown = 6 [json_name = "shutdown"];
      uint32 local_ifnet_mtu = 7 [json_name = "local-ifnet-mtu"];
      bool private_4byte_as = 8 [json_name = "private-4byte-as"];
      bool local_cross_no_med = 9 [json_name = "local-cross-no-med"];
      uint32 as_path_limit = 10 [json_name = "as-path-limit"];
      message Confederation {
         string id = 1 [json_name = "id"];
         bool nonstanded = 2 [json_name = "nonstanded"];
         repeated string as = 3 [json_name = "as"];
      }
      Confederation confederation = 11 [json_name = "confederation"];
      message GracefulRestart {
         bool enable = 1 [json_name = "enable"];
         uint32 time_wait_for_rib = 2 [json_name = "time-wait-for-rib"];
         uint32 restart_time = 3 [json_name = "restart-time"];
         bool peer_reset = 4 [json_name = "peer-reset"];
      }
      GracefulRestart graceful_restart = 12 [json_name = "graceful-restart"];
      message ReferencePeriod {
         uint32 suppress_interval = 1 [json_name = "suppress-interval"];
         uint32 hold_interval = 2 [json_name = "hold-interval"];
         uint32 clear_interval = 3 [json_name = "clear-interval"];
      }
      ReferencePeriod reference_period = 13 [json_name = "reference-period"];
      message Timer {
         uint32 connect_retry_time = 1 [json_name = "connect-retry-time"];
         uint32 keep_alive_time = 2 [json_name = "keep-alive-time"];
         uint32 hold_time = 3 [json_name = "hold-time"];
         uint32 min_hold_time = 4 [json_name = "min-hold-time"];
      }
      Timer timer = 14 [json_name = "timer"];
      message BgpRoute {
         message Ipv4Unicast {
            message Routes {
               message Route {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string route_distinguisher = 2 [json_name = "route-distinguisher"];
                  string prefix = 3 [json_name = "prefix"];
                  uint32 mask_length = 4 [json_name = "mask-length"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 5 [json_name = "route-type"];
                  uint32 im_table_id = 6 [json_name = "im-table-id"];
                  string from = 7 [json_name = "from"];
                  string path_id = 8 [json_name = "path-id"];
                  string remote_nexthop_tunnel_address = 9 [json_name = "remote-nexthop-tunnel-address"];
                  string remote_nexthop_mac_address = 10 [json_name = "remote-nexthop-mac-address"];
                  string nexthop = 11 [json_name = "nexthop"];
                  uint32 local_preference = 12 [json_name = "local-preference"];
                  uint32 preferred_value = 13 [json_name = "preferred-value"];
                  uint32 preference = 14 [json_name = "preference"];
                  string path_as = 15 [json_name = "path-as"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 16 [json_name = "origin"];
                  uint32 med = 17 [json_name = "med"];
                  string flag_string = 18 [json_name = "flag-string"];
                  string worse_reason = 19 [json_name = "worse-reason"];
                  string sending_peers = 20 [json_name = "sending-peers"];
                  uint32 time = 21 [json_name = "time"];
                  string community = 22 [json_name = "community"];
                  string large_community = 23 [json_name = "large-community"];
                  string ext_community = 24 [json_name = "ext-community"];
                  string interface_name = 25 [json_name = "interface-name"];
                  string originator = 26 [json_name = "originator"];
                  string cluster_list = 27 [json_name = "cluster-list"];
                  string remote_route_id = 28 [json_name = "remote-route-id"];
                  string relay_nexthop = 29 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 30 [json_name = "relay-tunnel-name"];
                  bool atomic_aggregate = 31 [json_name = "atomic-aggregate"];
                  string aggregator_as = 32 [json_name = "aggregator-as"];
                  string aggregator_id = 33 [json_name = "aggregator-id"];
                  uint32 in_label = 34 [json_name = "in-label"];
                  uint32 out_label = 35 [json_name = "out-label"];
                  string iterated_vpn = 36 [json_name = "iterated-vpn"];
                  uint32 remote_nexthop_vni = 37 [json_name = "remote-nexthop-vni"];
                  string advertise_nexthop = 38 [json_name = "advertise-nexthop"];
                  string prefix_sid = 39 [json_name = "prefix-sid"];
                  uint64 aigp = 40 [json_name = "aigp"];
                  string attribute_set = 41 [json_name = "attribute-set"];
                  string gateway_ip = 42 [json_name = "gateway-ip"];
                  enum ExternalFlags {
                     ExternalFlags_NULL0 = 0;
                     ExternalFlags_NULL1 = 1;
                     ExternalFlags_NULL2 = 2;
                     ExternalFlags_NULL3 = 3;
                     ExternalFlags_NULL4 = 4;
                     ExternalFlags_TYPE5X_IPX_PREFIX = 5;
                     ExternalFlags_NULL6 = 6;
                     ExternalFlags_NULL7 = 7;
                     ExternalFlags_NULL8 = 8;
                     ExternalFlags_NULL9 = 9;
                     ExternalFlags_NULL10 = 10;
                     ExternalFlags_NULL11 = 11;
                     ExternalFlags_NULL12 = 12;
                     ExternalFlags_TYPE2X_IRB = 13;
                     ExternalFlags_NULL14 = 14;
                     ExternalFlags_NULL15 = 15;
                  };
                  repeated ExternalFlags external_flags = 43 [json_name = "external-flags"];
                  string entropy_label_padding = 44 [json_name = "entropy-label-padding"];
                  enum HierarchyConvergenceRouteType {
                     INVALID_ENUM_VALUE_HierarchyConvergenceRouteType = 0;
                     HierarchyConvergenceRouteType_BASE = 1;
                     HierarchyConvergenceRouteType_HIERARCHY = 2;
                  };
                  HierarchyConvergenceRouteType hierarchy_convergence_route_type = 45 [json_name = "hierarchy-convergence-route-type"];
                  string hierarchy_route_relay_ip = 46 [json_name = "hierarchy-route-relay-ip"];
                  uint32 hierarchy_route_relay_ip_mask = 47 [json_name = "hierarchy-route-relay-ip-mask"];
                  enum RegionValidationResult {
                     INVALID_ENUM_VALUE_RegionValidationResult = 0;
                     RegionValidationResult_VALID = 1;
                     RegionValidationResult_INVALID = 2;
                  };
                  RegionValidationResult region_validation_result = 48 [json_name = "region-validation-result"];
                  uint64 loop_id = 49 [json_name = "loop-id"];
                  uint32 label_index = 50 [json_name = "label-index"];
                  uint32 start_of_srgb = 51 [json_name = "start-of-srgb"];
                  uint32 range_size_of_srgb = 52 [json_name = "range-size-of-srgb"];
                  uint64 attribute_index = 53 [json_name = "attribute-index"];
               }
               repeated Route route = 1 [json_name = "route"];
            }
            Routes routes = 1 [json_name = "routes"];
            message PeerAdvertiseRoutes {
               message PeerAdvertiseRoute {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string remote_peer_address = 2 [json_name = "remote-peer-address"];
                  string route_distinguisher = 3 [json_name = "route-distinguisher"];
                  string prefix = 4 [json_name = "prefix"];
                  uint32 mask_length = 5 [json_name = "mask-length"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  uint32 im_table_id = 7 [json_name = "im-table-id"];
                  string from = 8 [json_name = "from"];
                  string path_id = 9 [json_name = "path-id"];
                  string remote_nexthop_tunnel_address = 10 [json_name = "remote-nexthop-tunnel-address"];
                  string remote_nexthop_mac_address = 11 [json_name = "remote-nexthop-mac-address"];
                  string nexthop = 12 [json_name = "nexthop"];
                  uint32 local_preference = 13 [json_name = "local-preference"];
                  uint32 preferred_value = 14 [json_name = "preferred-value"];
                  uint32 preference = 15 [json_name = "preference"];
                  string path_as = 16 [json_name = "path-as"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 17 [json_name = "origin"];
                  uint32 med = 18 [json_name = "med"];
                  string flag_string = 19 [json_name = "flag-string"];
                  string worse_reason = 20 [json_name = "worse-reason"];
                  string sending_peers = 21 [json_name = "sending-peers"];
                  uint32 time = 22 [json_name = "time"];
                  string community = 23 [json_name = "community"];
                  string large_community = 24 [json_name = "large-community"];
                  string ext_community = 25 [json_name = "ext-community"];
                  string interface_name = 26 [json_name = "interface-name"];
                  string originator = 27 [json_name = "originator"];
                  string cluster_list = 28 [json_name = "cluster-list"];
                  string remote_route_id = 29 [json_name = "remote-route-id"];
                  string relay_nexthop = 30 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 31 [json_name = "relay-tunnel-name"];
                  bool atomic_aggregate = 32 [json_name = "atomic-aggregate"];
                  string aggregator_as = 33 [json_name = "aggregator-as"];
                  string aggregator_id = 34 [json_name = "aggregator-id"];
                  uint32 in_label = 35 [json_name = "in-label"];
                  uint32 out_label = 36 [json_name = "out-label"];
                  string iterated_vpn = 37 [json_name = "iterated-vpn"];
                  uint32 remote_nexthop_vni = 38 [json_name = "remote-nexthop-vni"];
                  string advertise_nexthop = 39 [json_name = "advertise-nexthop"];
                  string prefix_sid = 40 [json_name = "prefix-sid"];
                  uint64 aigp = 41 [json_name = "aigp"];
                  string attribute_set = 42 [json_name = "attribute-set"];
                  string gateway_ip = 43 [json_name = "gateway-ip"];
                  enum ExternalFlags {
                     ExternalFlags_NULL0 = 0;
                     ExternalFlags_NULL1 = 1;
                     ExternalFlags_NULL2 = 2;
                     ExternalFlags_NULL3 = 3;
                     ExternalFlags_NULL4 = 4;
                     ExternalFlags_TYPE5X_IPX_PREFIX = 5;
                     ExternalFlags_NULL6 = 6;
                     ExternalFlags_NULL7 = 7;
                     ExternalFlags_NULL8 = 8;
                     ExternalFlags_NULL9 = 9;
                     ExternalFlags_NULL10 = 10;
                     ExternalFlags_NULL11 = 11;
                     ExternalFlags_NULL12 = 12;
                     ExternalFlags_TYPE2X_IRB = 13;
                     ExternalFlags_NULL14 = 14;
                     ExternalFlags_NULL15 = 15;
                  };
                  repeated ExternalFlags external_flags = 44 [json_name = "external-flags"];
                  string entropy_label_padding = 45 [json_name = "entropy-label-padding"];
                  enum HierarchyConvergenceRouteType {
                     INVALID_ENUM_VALUE_HierarchyConvergenceRouteType = 0;
                     HierarchyConvergenceRouteType_BASE = 1;
                     HierarchyConvergenceRouteType_HIERARCHY = 2;
                  };
                  HierarchyConvergenceRouteType hierarchy_convergence_route_type = 46 [json_name = "hierarchy-convergence-route-type"];
                  string hierarchy_route_relay_ip = 47 [json_name = "hierarchy-route-relay-ip"];
                  uint32 hierarchy_route_relay_ip_mask = 48 [json_name = "hierarchy-route-relay-ip-mask"];
                  enum RegionValidationResult {
                     INVALID_ENUM_VALUE_RegionValidationResult = 0;
                     RegionValidationResult_VALID = 1;
                     RegionValidationResult_INVALID = 2;
                  };
                  RegionValidationResult region_validation_result = 49 [json_name = "region-validation-result"];
                  uint64 loop_id = 50 [json_name = "loop-id"];
                  uint32 label_index = 51 [json_name = "label-index"];
                  uint32 start_of_srgb = 52 [json_name = "start-of-srgb"];
                  uint32 range_size_of_srgb = 53 [json_name = "range-size-of-srgb"];
                  uint64 attribute_index = 54 [json_name = "attribute-index"];
               }
               repeated PeerAdvertiseRoute peer_advertise_route = 1 [json_name = "peer-advertise-route"];
            }
            PeerAdvertiseRoutes peer_advertise_routes = 2 [json_name = "peer-advertise-routes"];
            message PeerReceiveRoutes {
               message PeerReceiveRoute {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string remote_peer_address = 2 [json_name = "remote-peer-address"];
                  string route_distinguisher = 3 [json_name = "route-distinguisher"];
                  string prefix = 4 [json_name = "prefix"];
                  uint32 mask_length = 5 [json_name = "mask-length"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  uint32 im_table_id = 7 [json_name = "im-table-id"];
                  string from = 8 [json_name = "from"];
                  string path_id = 9 [json_name = "path-id"];
                  string remote_nexthop_tunnel_address = 10 [json_name = "remote-nexthop-tunnel-address"];
                  string remote_nexthop_mac_address = 11 [json_name = "remote-nexthop-mac-address"];
                  string nexthop = 12 [json_name = "nexthop"];
                  uint32 local_preference = 13 [json_name = "local-preference"];
                  uint32 preferred_value = 14 [json_name = "preferred-value"];
                  uint32 preference = 15 [json_name = "preference"];
                  string path_as = 16 [json_name = "path-as"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 17 [json_name = "origin"];
                  uint32 med = 18 [json_name = "med"];
                  string flag_string = 19 [json_name = "flag-string"];
                  string worse_reason = 20 [json_name = "worse-reason"];
                  string sending_peers = 21 [json_name = "sending-peers"];
                  uint32 time = 22 [json_name = "time"];
                  string community = 23 [json_name = "community"];
                  string large_community = 24 [json_name = "large-community"];
                  string ext_community = 25 [json_name = "ext-community"];
                  string interface_name = 26 [json_name = "interface-name"];
                  string originator = 27 [json_name = "originator"];
                  string cluster_list = 28 [json_name = "cluster-list"];
                  string remote_route_id = 29 [json_name = "remote-route-id"];
                  string relay_nexthop = 30 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 31 [json_name = "relay-tunnel-name"];
                  bool atomic_aggregate = 32 [json_name = "atomic-aggregate"];
                  string aggregator_as = 33 [json_name = "aggregator-as"];
                  string aggregator_id = 34 [json_name = "aggregator-id"];
                  uint32 in_label = 35 [json_name = "in-label"];
                  uint32 out_label = 36 [json_name = "out-label"];
                  string iterated_vpn = 37 [json_name = "iterated-vpn"];
                  uint32 remote_nexthop_vni = 38 [json_name = "remote-nexthop-vni"];
                  string advertise_nexthop = 39 [json_name = "advertise-nexthop"];
                  string prefix_sid = 40 [json_name = "prefix-sid"];
                  uint64 aigp = 41 [json_name = "aigp"];
                  string attribute_set = 42 [json_name = "attribute-set"];
                  string gateway_ip = 43 [json_name = "gateway-ip"];
                  enum ExternalFlags {
                     ExternalFlags_NULL0 = 0;
                     ExternalFlags_NULL1 = 1;
                     ExternalFlags_NULL2 = 2;
                     ExternalFlags_NULL3 = 3;
                     ExternalFlags_NULL4 = 4;
                     ExternalFlags_TYPE5X_IPX_PREFIX = 5;
                     ExternalFlags_NULL6 = 6;
                     ExternalFlags_NULL7 = 7;
                     ExternalFlags_NULL8 = 8;
                     ExternalFlags_NULL9 = 9;
                     ExternalFlags_NULL10 = 10;
                     ExternalFlags_NULL11 = 11;
                     ExternalFlags_NULL12 = 12;
                     ExternalFlags_TYPE2X_IRB = 13;
                     ExternalFlags_NULL14 = 14;
                     ExternalFlags_NULL15 = 15;
                  };
                  repeated ExternalFlags external_flags = 44 [json_name = "external-flags"];
                  string entropy_label_padding = 45 [json_name = "entropy-label-padding"];
                  enum HierarchyConvergenceRouteType {
                     INVALID_ENUM_VALUE_HierarchyConvergenceRouteType = 0;
                     HierarchyConvergenceRouteType_BASE = 1;
                     HierarchyConvergenceRouteType_HIERARCHY = 2;
                  };
                  HierarchyConvergenceRouteType hierarchy_convergence_route_type = 46 [json_name = "hierarchy-convergence-route-type"];
                  string hierarchy_route_relay_ip = 47 [json_name = "hierarchy-route-relay-ip"];
                  uint32 hierarchy_route_relay_ip_mask = 48 [json_name = "hierarchy-route-relay-ip-mask"];
                  enum RegionValidationResult {
                     INVALID_ENUM_VALUE_RegionValidationResult = 0;
                     RegionValidationResult_VALID = 1;
                     RegionValidationResult_INVALID = 2;
                  };
                  RegionValidationResult region_validation_result = 49 [json_name = "region-validation-result"];
                  uint64 loop_id = 50 [json_name = "loop-id"];
                  uint32 label_index = 51 [json_name = "label-index"];
                  uint32 start_of_srgb = 52 [json_name = "start-of-srgb"];
                  uint32 range_size_of_srgb = 53 [json_name = "range-size-of-srgb"];
                  uint64 attribute_index = 54 [json_name = "attribute-index"];
               }
               repeated PeerReceiveRoute peer_receive_route = 1 [json_name = "peer-receive-route"];
            }
            PeerReceiveRoutes peer_receive_routes = 3 [json_name = "peer-receive-routes"];
            message PeerReceiveActiveRoutes {
               message PeerReceiveActiveRoute {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string remote_peer_address = 2 [json_name = "remote-peer-address"];
                  string route_distinguisher = 3 [json_name = "route-distinguisher"];
                  string prefix = 4 [json_name = "prefix"];
                  uint32 mask_length = 5 [json_name = "mask-length"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  uint32 im_table_id = 7 [json_name = "im-table-id"];
                  string from = 8 [json_name = "from"];
                  string path_id = 9 [json_name = "path-id"];
                  string remote_nexthop_tunnel_address = 10 [json_name = "remote-nexthop-tunnel-address"];
                  string remote_nexthop_mac_address = 11 [json_name = "remote-nexthop-mac-address"];
                  string nexthop = 12 [json_name = "nexthop"];
                  uint32 local_preference = 13 [json_name = "local-preference"];
                  uint32 preferred_value = 14 [json_name = "preferred-value"];
                  uint32 preference = 15 [json_name = "preference"];
                  string path_as = 16 [json_name = "path-as"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 17 [json_name = "origin"];
                  uint32 med = 18 [json_name = "med"];
                  string flag_string = 19 [json_name = "flag-string"];
                  string worse_reason = 20 [json_name = "worse-reason"];
                  string sending_peers = 21 [json_name = "sending-peers"];
                  uint32 time = 22 [json_name = "time"];
                  string community = 23 [json_name = "community"];
                  string large_community = 24 [json_name = "large-community"];
                  string ext_community = 25 [json_name = "ext-community"];
                  string interface_name = 26 [json_name = "interface-name"];
                  string originator = 27 [json_name = "originator"];
                  string cluster_list = 28 [json_name = "cluster-list"];
                  string remote_route_id = 29 [json_name = "remote-route-id"];
                  string relay_nexthop = 30 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 31 [json_name = "relay-tunnel-name"];
                  bool atomic_aggregate = 32 [json_name = "atomic-aggregate"];
                  string aggregator_as = 33 [json_name = "aggregator-as"];
                  string aggregator_id = 34 [json_name = "aggregator-id"];
                  uint32 in_label = 35 [json_name = "in-label"];
                  uint32 out_label = 36 [json_name = "out-label"];
                  string iterated_vpn = 37 [json_name = "iterated-vpn"];
                  uint32 remote_nexthop_vni = 38 [json_name = "remote-nexthop-vni"];
                  string advertise_nexthop = 39 [json_name = "advertise-nexthop"];
                  string prefix_sid = 40 [json_name = "prefix-sid"];
                  uint64 aigp = 41 [json_name = "aigp"];
                  string attribute_set = 42 [json_name = "attribute-set"];
                  string gateway_ip = 43 [json_name = "gateway-ip"];
                  enum ExternalFlags {
                     ExternalFlags_TYPE5X_IPX_PREFIX = 0;
                     ExternalFlags_TYPE2X_IRB = 1;
                  };
                  repeated ExternalFlags external_flags = 44 [json_name = "external-flags"];
                  enum HierarchyConvergenceRouteType {
                     INVALID_ENUM_VALUE_HierarchyConvergenceRouteType = 0;
                     HierarchyConvergenceRouteType_BASE = 1;
                     HierarchyConvergenceRouteType_HIERARCHY = 2;
                  };
                  HierarchyConvergenceRouteType hierarchy_convergence_route_type = 45 [json_name = "hierarchy-convergence-route-type"];
                  string hierarchy_route_relay_ip = 46 [json_name = "hierarchy-route-relay-ip"];
                  uint32 hierarchy_route_relay_ip_mask = 47 [json_name = "hierarchy-route-relay-ip-mask"];
               }
               repeated PeerReceiveActiveRoute peer_receive_active_route = 1 [json_name = "peer-receive-active-route"];
            }
            PeerReceiveActiveRoutes peer_receive_active_routes = 4 [json_name = "peer-receive-active-routes"];
            message Statistics {
               message Statistic {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  uint32 total_number = 2 [json_name = "total-number"];
                  uint32 advertise_rm_total_number = 3 [json_name = "advertise-rm-total-number"];
                  uint32 active_route_number = 4 [json_name = "active-route-number"];
                  uint32 best_route_number = 5 [json_name = "best-route-number"];
                  uint32 add_path_route_number = 6 [json_name = "add-path-route-number"];
                  uint32 best_external_route_number = 7 [json_name = "best-external-route-number"];
                  uint32 cidr_route_number = 8 [json_name = "cidr-route-number"];
                  uint32 community_route_number = 9 [json_name = "community-route-number"];
                  uint32 different_origin_as_route_number = 10 [json_name = "different-origin-as-route-number"];
                  uint32 dampened_route_number = 11 [json_name = "dampened-route-number"];
               }
               repeated Statistic statistic = 1 [json_name = "statistic"];
            }
            Statistics statistics = 5 [json_name = "statistics"];
            message Attributes {
               message LoopLists {
                  message LoopList {
                     uint64 index = 1 [json_name = "index"];
                     string vpn_name = 2 [json_name = "vpn-name"];
                     repeated string loop = 3 [json_name = "loop"];
                  }
                  repeated LoopList loop_list = 1 [json_name = "loop-list"];
               }
               LoopLists loop_lists = 1 [json_name = "loop-lists"];
               message Attribute {
                  uint64 index = 1 [json_name = "index"];
                  repeated string loop = 2 [json_name = "loop"];
               }
               repeated Attribute attribute = 2 [json_name = "attribute"];
            }
            Attributes attributes = 6 [json_name = "attributes"];
         }
         Ipv4Unicast ipv4_unicast = 1 [json_name = "ipv4-unicast"];
         message Ipv6Unicast {
            message Routes {
               message Route {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string route_distinguisher = 2 [json_name = "route-distinguisher"];
                  string prefix = 3 [json_name = "prefix"];
                  uint32 mask_length = 4 [json_name = "mask-length"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 5 [json_name = "route-type"];
                  uint32 im_table_id = 6 [json_name = "im-table-id"];
                  string from = 7 [json_name = "from"];
                  string path_id = 8 [json_name = "path-id"];
                  string remote_nexthop_tunnel_address = 9 [json_name = "remote-nexthop-tunnel-address"];
                  string remote_nexthop_mac_address = 10 [json_name = "remote-nexthop-mac-address"];
                  string nexthop = 11 [json_name = "nexthop"];
                  uint32 local_preference = 12 [json_name = "local-preference"];
                  uint32 preferred_value = 13 [json_name = "preferred-value"];
                  uint32 preference = 14 [json_name = "preference"];
                  string path_as = 15 [json_name = "path-as"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 16 [json_name = "origin"];
                  uint32 med = 17 [json_name = "med"];
                  string flag_string = 18 [json_name = "flag-string"];
                  string worse_reason = 19 [json_name = "worse-reason"];
                  string sending_peers = 20 [json_name = "sending-peers"];
                  uint32 time = 21 [json_name = "time"];
                  string community = 22 [json_name = "community"];
                  string large_community = 23 [json_name = "large-community"];
                  string ext_community = 24 [json_name = "ext-community"];
                  string interface_name = 25 [json_name = "interface-name"];
                  string originator = 26 [json_name = "originator"];
                  string cluster_list = 27 [json_name = "cluster-list"];
                  string remote_route_id = 28 [json_name = "remote-route-id"];
                  string relay_nexthop = 29 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 30 [json_name = "relay-tunnel-name"];
                  bool atomic_aggregate = 31 [json_name = "atomic-aggregate"];
                  string aggregator_as = 32 [json_name = "aggregator-as"];
                  string aggregator_id = 33 [json_name = "aggregator-id"];
                  uint32 in_label = 34 [json_name = "in-label"];
                  uint32 out_label = 35 [json_name = "out-label"];
                  string iterated_vpn = 36 [json_name = "iterated-vpn"];
                  uint32 remote_nexthop_vni = 37 [json_name = "remote-nexthop-vni"];
                  string advertise_nexthop = 38 [json_name = "advertise-nexthop"];
                  string prefix_sid = 39 [json_name = "prefix-sid"];
                  uint64 aigp = 40 [json_name = "aigp"];
                  string attribute_set = 41 [json_name = "attribute-set"];
                  string gateway_ip = 42 [json_name = "gateway-ip"];
                  enum ExternalFlags {
                     ExternalFlags_NULL0 = 0;
                     ExternalFlags_NULL1 = 1;
                     ExternalFlags_NULL2 = 2;
                     ExternalFlags_NULL3 = 3;
                     ExternalFlags_NULL4 = 4;
                     ExternalFlags_TYPE5X_IPX_PREFIX = 5;
                     ExternalFlags_NULL6 = 6;
                     ExternalFlags_NULL7 = 7;
                     ExternalFlags_NULL8 = 8;
                     ExternalFlags_NULL9 = 9;
                     ExternalFlags_NULL10 = 10;
                     ExternalFlags_NULL11 = 11;
                     ExternalFlags_NULL12 = 12;
                     ExternalFlags_TYPE2X_IRB = 13;
                     ExternalFlags_NULL14 = 14;
                     ExternalFlags_NULL15 = 15;
                  };
                  repeated ExternalFlags external_flags = 43 [json_name = "external-flags"];
                  enum HierarchyConvergenceRouteType {
                     INVALID_ENUM_VALUE_HierarchyConvergenceRouteType = 0;
                     HierarchyConvergenceRouteType_BASE = 1;
                     HierarchyConvergenceRouteType_HIERARCHY = 2;
                  };
                  HierarchyConvergenceRouteType hierarchy_convergence_route_type = 44 [json_name = "hierarchy-convergence-route-type"];
                  string hierarchy_route_relay_ip = 45 [json_name = "hierarchy-route-relay-ip"];
                  uint32 hierarchy_route_relay_ip_mask = 46 [json_name = "hierarchy-route-relay-ip-mask"];
                  enum RegionValidationResult {
                     INVALID_ENUM_VALUE_RegionValidationResult = 0;
                     RegionValidationResult_VALID = 1;
                     RegionValidationResult_INVALID = 2;
                  };
                  RegionValidationResult region_validation_result = 47 [json_name = "region-validation-result"];
                  uint64 loop_id = 48 [json_name = "loop-id"];
                  uint64 attribute_index = 49 [json_name = "attribute-index"];
               }
               repeated Route route = 1 [json_name = "route"];
            }
            Routes routes = 1 [json_name = "routes"];
            message PeerAdvertiseRoutes {
               message PeerAdvertiseRoute {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string remote_peer_address = 2 [json_name = "remote-peer-address"];
                  string route_distinguisher = 3 [json_name = "route-distinguisher"];
                  string prefix = 4 [json_name = "prefix"];
                  uint32 mask_length = 5 [json_name = "mask-length"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  uint32 im_table_id = 7 [json_name = "im-table-id"];
                  string from = 8 [json_name = "from"];
                  string path_id = 9 [json_name = "path-id"];
                  string remote_nexthop_tunnel_address = 10 [json_name = "remote-nexthop-tunnel-address"];
                  string remote_nexthop_mac_address = 11 [json_name = "remote-nexthop-mac-address"];
                  string nexthop = 12 [json_name = "nexthop"];
                  uint32 local_preference = 13 [json_name = "local-preference"];
                  uint32 preferred_value = 14 [json_name = "preferred-value"];
                  uint32 preference = 15 [json_name = "preference"];
                  string path_as = 16 [json_name = "path-as"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 17 [json_name = "origin"];
                  uint32 med = 18 [json_name = "med"];
                  string flag_string = 19 [json_name = "flag-string"];
                  string worse_reason = 20 [json_name = "worse-reason"];
                  string sending_peers = 21 [json_name = "sending-peers"];
                  uint32 time = 22 [json_name = "time"];
                  string community = 23 [json_name = "community"];
                  string large_community = 24 [json_name = "large-community"];
                  string ext_community = 25 [json_name = "ext-community"];
                  string interface_name = 26 [json_name = "interface-name"];
                  string originator = 27 [json_name = "originator"];
                  string cluster_list = 28 [json_name = "cluster-list"];
                  string remote_route_id = 29 [json_name = "remote-route-id"];
                  string relay_nexthop = 30 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 31 [json_name = "relay-tunnel-name"];
                  bool atomic_aggregate = 32 [json_name = "atomic-aggregate"];
                  string aggregator_as = 33 [json_name = "aggregator-as"];
                  string aggregator_id = 34 [json_name = "aggregator-id"];
                  uint32 in_label = 35 [json_name = "in-label"];
                  uint32 out_label = 36 [json_name = "out-label"];
                  string iterated_vpn = 37 [json_name = "iterated-vpn"];
                  uint32 remote_nexthop_vni = 38 [json_name = "remote-nexthop-vni"];
                  string advertise_nexthop = 39 [json_name = "advertise-nexthop"];
                  string prefix_sid = 40 [json_name = "prefix-sid"];
                  uint64 aigp = 41 [json_name = "aigp"];
                  string attribute_set = 42 [json_name = "attribute-set"];
                  string gateway_ip = 43 [json_name = "gateway-ip"];
                  enum ExternalFlags {
                     ExternalFlags_NULL0 = 0;
                     ExternalFlags_NULL1 = 1;
                     ExternalFlags_NULL2 = 2;
                     ExternalFlags_NULL3 = 3;
                     ExternalFlags_NULL4 = 4;
                     ExternalFlags_TYPE5X_IPX_PREFIX = 5;
                     ExternalFlags_NULL6 = 6;
                     ExternalFlags_NULL7 = 7;
                     ExternalFlags_NULL8 = 8;
                     ExternalFlags_NULL9 = 9;
                     ExternalFlags_NULL10 = 10;
                     ExternalFlags_NULL11 = 11;
                     ExternalFlags_NULL12 = 12;
                     ExternalFlags_TYPE2X_IRB = 13;
                     ExternalFlags_NULL14 = 14;
                     ExternalFlags_NULL15 = 15;
                  };
                  repeated ExternalFlags external_flags = 44 [json_name = "external-flags"];
                  enum HierarchyConvergenceRouteType {
                     INVALID_ENUM_VALUE_HierarchyConvergenceRouteType = 0;
                     HierarchyConvergenceRouteType_BASE = 1;
                     HierarchyConvergenceRouteType_HIERARCHY = 2;
                  };
                  HierarchyConvergenceRouteType hierarchy_convergence_route_type = 45 [json_name = "hierarchy-convergence-route-type"];
                  string hierarchy_route_relay_ip = 46 [json_name = "hierarchy-route-relay-ip"];
                  uint32 hierarchy_route_relay_ip_mask = 47 [json_name = "hierarchy-route-relay-ip-mask"];
                  enum RegionValidationResult {
                     INVALID_ENUM_VALUE_RegionValidationResult = 0;
                     RegionValidationResult_VALID = 1;
                     RegionValidationResult_INVALID = 2;
                  };
                  RegionValidationResult region_validation_result = 48 [json_name = "region-validation-result"];
                  uint64 loop_id = 49 [json_name = "loop-id"];
                  uint64 attribute_index = 50 [json_name = "attribute-index"];
               }
               repeated PeerAdvertiseRoute peer_advertise_route = 1 [json_name = "peer-advertise-route"];
            }
            PeerAdvertiseRoutes peer_advertise_routes = 2 [json_name = "peer-advertise-routes"];
            message PeerReceiveRoutes {
               message PeerReceiveRoute {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string remote_peer_address = 2 [json_name = "remote-peer-address"];
                  string route_distinguisher = 3 [json_name = "route-distinguisher"];
                  string prefix = 4 [json_name = "prefix"];
                  uint32 mask_length = 5 [json_name = "mask-length"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  uint32 im_table_id = 7 [json_name = "im-table-id"];
                  string from = 8 [json_name = "from"];
                  string path_id = 9 [json_name = "path-id"];
                  string remote_nexthop_tunnel_address = 10 [json_name = "remote-nexthop-tunnel-address"];
                  string remote_nexthop_mac_address = 11 [json_name = "remote-nexthop-mac-address"];
                  string nexthop = 12 [json_name = "nexthop"];
                  uint32 local_preference = 13 [json_name = "local-preference"];
                  uint32 preferred_value = 14 [json_name = "preferred-value"];
                  uint32 preference = 15 [json_name = "preference"];
                  string path_as = 16 [json_name = "path-as"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 17 [json_name = "origin"];
                  uint32 med = 18 [json_name = "med"];
                  string flag_string = 19 [json_name = "flag-string"];
                  string worse_reason = 20 [json_name = "worse-reason"];
                  string sending_peers = 21 [json_name = "sending-peers"];
                  uint32 time = 22 [json_name = "time"];
                  string community = 23 [json_name = "community"];
                  string large_community = 24 [json_name = "large-community"];
                  string ext_community = 25 [json_name = "ext-community"];
                  string interface_name = 26 [json_name = "interface-name"];
                  string originator = 27 [json_name = "originator"];
                  string cluster_list = 28 [json_name = "cluster-list"];
                  string remote_route_id = 29 [json_name = "remote-route-id"];
                  string relay_nexthop = 30 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 31 [json_name = "relay-tunnel-name"];
                  bool atomic_aggregate = 32 [json_name = "atomic-aggregate"];
                  string aggregator_as = 33 [json_name = "aggregator-as"];
                  string aggregator_id = 34 [json_name = "aggregator-id"];
                  uint32 in_label = 35 [json_name = "in-label"];
                  uint32 out_label = 36 [json_name = "out-label"];
                  string iterated_vpn = 37 [json_name = "iterated-vpn"];
                  uint32 remote_nexthop_vni = 38 [json_name = "remote-nexthop-vni"];
                  string advertise_nexthop = 39 [json_name = "advertise-nexthop"];
                  string prefix_sid = 40 [json_name = "prefix-sid"];
                  uint64 aigp = 41 [json_name = "aigp"];
                  string attribute_set = 42 [json_name = "attribute-set"];
                  string gateway_ip = 43 [json_name = "gateway-ip"];
                  enum ExternalFlags {
                     ExternalFlags_NULL0 = 0;
                     ExternalFlags_NULL1 = 1;
                     ExternalFlags_NULL2 = 2;
                     ExternalFlags_NULL3 = 3;
                     ExternalFlags_NULL4 = 4;
                     ExternalFlags_TYPE5X_IPX_PREFIX = 5;
                     ExternalFlags_NULL6 = 6;
                     ExternalFlags_NULL7 = 7;
                     ExternalFlags_NULL8 = 8;
                     ExternalFlags_NULL9 = 9;
                     ExternalFlags_NULL10 = 10;
                     ExternalFlags_NULL11 = 11;
                     ExternalFlags_NULL12 = 12;
                     ExternalFlags_TYPE2X_IRB = 13;
                     ExternalFlags_NULL14 = 14;
                     ExternalFlags_NULL15 = 15;
                  };
                  repeated ExternalFlags external_flags = 44 [json_name = "external-flags"];
                  enum HierarchyConvergenceRouteType {
                     INVALID_ENUM_VALUE_HierarchyConvergenceRouteType = 0;
                     HierarchyConvergenceRouteType_BASE = 1;
                     HierarchyConvergenceRouteType_HIERARCHY = 2;
                  };
                  HierarchyConvergenceRouteType hierarchy_convergence_route_type = 45 [json_name = "hierarchy-convergence-route-type"];
                  string hierarchy_route_relay_ip = 46 [json_name = "hierarchy-route-relay-ip"];
                  uint32 hierarchy_route_relay_ip_mask = 47 [json_name = "hierarchy-route-relay-ip-mask"];
                  enum RegionValidationResult {
                     INVALID_ENUM_VALUE_RegionValidationResult = 0;
                     RegionValidationResult_VALID = 1;
                     RegionValidationResult_INVALID = 2;
                  };
                  RegionValidationResult region_validation_result = 48 [json_name = "region-validation-result"];
                  uint64 loop_id = 49 [json_name = "loop-id"];
                  uint64 attribute_index = 50 [json_name = "attribute-index"];
               }
               repeated PeerReceiveRoute peer_receive_route = 1 [json_name = "peer-receive-route"];
            }
            PeerReceiveRoutes peer_receive_routes = 3 [json_name = "peer-receive-routes"];
            message PeerReceiveActiveRoutes {
               message PeerReceiveActiveRoute {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string remote_peer_address = 2 [json_name = "remote-peer-address"];
                  string route_distinguisher = 3 [json_name = "route-distinguisher"];
                  string prefix = 4 [json_name = "prefix"];
                  uint32 mask_length = 5 [json_name = "mask-length"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  uint32 im_table_id = 7 [json_name = "im-table-id"];
                  string from = 8 [json_name = "from"];
                  string path_id = 9 [json_name = "path-id"];
                  string remote_nexthop_tunnel_address = 10 [json_name = "remote-nexthop-tunnel-address"];
                  string remote_nexthop_mac_address = 11 [json_name = "remote-nexthop-mac-address"];
                  string nexthop = 12 [json_name = "nexthop"];
                  uint32 local_preference = 13 [json_name = "local-preference"];
                  uint32 preferred_value = 14 [json_name = "preferred-value"];
                  uint32 preference = 15 [json_name = "preference"];
                  string path_as = 16 [json_name = "path-as"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 17 [json_name = "origin"];
                  uint32 med = 18 [json_name = "med"];
                  string flag_string = 19 [json_name = "flag-string"];
                  string worse_reason = 20 [json_name = "worse-reason"];
                  string sending_peers = 21 [json_name = "sending-peers"];
                  uint32 time = 22 [json_name = "time"];
                  string community = 23 [json_name = "community"];
                  string large_community = 24 [json_name = "large-community"];
                  string ext_community = 25 [json_name = "ext-community"];
                  string interface_name = 26 [json_name = "interface-name"];
                  string originator = 27 [json_name = "originator"];
                  string cluster_list = 28 [json_name = "cluster-list"];
                  string remote_route_id = 29 [json_name = "remote-route-id"];
                  string relay_nexthop = 30 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 31 [json_name = "relay-tunnel-name"];
                  bool atomic_aggregate = 32 [json_name = "atomic-aggregate"];
                  string aggregator_as = 33 [json_name = "aggregator-as"];
                  string aggregator_id = 34 [json_name = "aggregator-id"];
                  uint32 in_label = 35 [json_name = "in-label"];
                  uint32 out_label = 36 [json_name = "out-label"];
                  string iterated_vpn = 37 [json_name = "iterated-vpn"];
                  uint32 remote_nexthop_vni = 38 [json_name = "remote-nexthop-vni"];
                  string advertise_nexthop = 39 [json_name = "advertise-nexthop"];
                  string prefix_sid = 40 [json_name = "prefix-sid"];
                  uint64 aigp = 41 [json_name = "aigp"];
                  string attribute_set = 42 [json_name = "attribute-set"];
                  string gateway_ip = 43 [json_name = "gateway-ip"];
                  enum ExternalFlags {
                     ExternalFlags_TYPE5X_IPX_PREFIX = 0;
                     ExternalFlags_TYPE2X_IRB = 1;
                  };
                  repeated ExternalFlags external_flags = 44 [json_name = "external-flags"];
                  enum HierarchyConvergenceRouteType {
                     INVALID_ENUM_VALUE_HierarchyConvergenceRouteType = 0;
                     HierarchyConvergenceRouteType_BASE = 1;
                     HierarchyConvergenceRouteType_HIERARCHY = 2;
                  };
                  HierarchyConvergenceRouteType hierarchy_convergence_route_type = 45 [json_name = "hierarchy-convergence-route-type"];
                  string hierarchy_route_relay_ip = 46 [json_name = "hierarchy-route-relay-ip"];
                  uint32 hierarchy_route_relay_ip_mask = 47 [json_name = "hierarchy-route-relay-ip-mask"];
               }
               repeated PeerReceiveActiveRoute peer_receive_active_route = 1 [json_name = "peer-receive-active-route"];
            }
            PeerReceiveActiveRoutes peer_receive_active_routes = 4 [json_name = "peer-receive-active-routes"];
            message Statistics {
               message Statistic {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  uint32 total_number = 2 [json_name = "total-number"];
                  uint32 advertise_rm_total_number = 3 [json_name = "advertise-rm-total-number"];
                  uint32 active_route_number = 4 [json_name = "active-route-number"];
                  uint32 best_route_number = 5 [json_name = "best-route-number"];
                  uint32 add_path_route_number = 6 [json_name = "add-path-route-number"];
                  uint32 best_external_route_number = 7 [json_name = "best-external-route-number"];
                  uint32 community_route_number = 8 [json_name = "community-route-number"];
                  uint32 dampened_route_number = 9 [json_name = "dampened-route-number"];
               }
               repeated Statistic statistic = 1 [json_name = "statistic"];
            }
            Statistics statistics = 5 [json_name = "statistics"];
            message Attributes {
               message LoopLists {
                  message LoopList {
                     uint64 index = 1 [json_name = "index"];
                     string vpn_name = 2 [json_name = "vpn-name"];
                     repeated string loop = 3 [json_name = "loop"];
                  }
                  repeated LoopList loop_list = 1 [json_name = "loop-list"];
               }
               LoopLists loop_lists = 1 [json_name = "loop-lists"];
               message Attribute {
                  uint64 index = 1 [json_name = "index"];
                  repeated string loop = 2 [json_name = "loop"];
               }
               repeated Attribute attribute = 2 [json_name = "attribute"];
            }
            Attributes attributes = 6 [json_name = "attributes"];
         }
         Ipv6Unicast ipv6_unicast = 2 [json_name = "ipv6-unicast"];
         message Ipv4Vpn {
            message Routes {
               message Route {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string route_distinguisher = 2 [json_name = "route-distinguisher"];
                  string prefix = 3 [json_name = "prefix"];
                  uint32 mask_length = 4 [json_name = "mask-length"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 5 [json_name = "route-type"];
                  uint32 im_table_id = 6 [json_name = "im-table-id"];
                  string from = 7 [json_name = "from"];
                  string path_id = 8 [json_name = "path-id"];
                  string remote_nexthop_tunnel_address = 9 [json_name = "remote-nexthop-tunnel-address"];
                  string remote_nexthop_mac_address = 10 [json_name = "remote-nexthop-mac-address"];
                  string nexthop = 11 [json_name = "nexthop"];
                  uint32 local_preference = 12 [json_name = "local-preference"];
                  uint32 preferred_value = 13 [json_name = "preferred-value"];
                  uint32 preference = 14 [json_name = "preference"];
                  string path_as = 15 [json_name = "path-as"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 16 [json_name = "origin"];
                  uint32 med = 17 [json_name = "med"];
                  string flag_string = 18 [json_name = "flag-string"];
                  string worse_reason = 19 [json_name = "worse-reason"];
                  string sending_peers = 20 [json_name = "sending-peers"];
                  uint32 time = 21 [json_name = "time"];
                  string community = 22 [json_name = "community"];
                  string large_community = 23 [json_name = "large-community"];
                  string ext_community = 24 [json_name = "ext-community"];
                  string interface_name = 25 [json_name = "interface-name"];
                  string originator = 26 [json_name = "originator"];
                  string cluster_list = 27 [json_name = "cluster-list"];
                  string remote_route_id = 28 [json_name = "remote-route-id"];
                  string relay_nexthop = 29 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 30 [json_name = "relay-tunnel-name"];
                  bool atomic_aggregate = 31 [json_name = "atomic-aggregate"];
                  string aggregator_as = 32 [json_name = "aggregator-as"];
                  string aggregator_id = 33 [json_name = "aggregator-id"];
                  uint32 in_label = 34 [json_name = "in-label"];
                  uint32 out_label = 35 [json_name = "out-label"];
                  string iterated_vpn = 36 [json_name = "iterated-vpn"];
                  uint32 remote_nexthop_vni = 37 [json_name = "remote-nexthop-vni"];
                  string advertise_nexthop = 38 [json_name = "advertise-nexthop"];
                  string prefix_sid = 39 [json_name = "prefix-sid"];
                  uint64 aigp = 40 [json_name = "aigp"];
                  string attribute_set = 41 [json_name = "attribute-set"];
                  string gateway_ip = 42 [json_name = "gateway-ip"];
                  enum ExternalFlags {
                     ExternalFlags_NULL0 = 0;
                     ExternalFlags_NULL1 = 1;
                     ExternalFlags_NULL2 = 2;
                     ExternalFlags_NULL3 = 3;
                     ExternalFlags_NULL4 = 4;
                     ExternalFlags_TYPE5X_IPX_PREFIX = 5;
                     ExternalFlags_NULL6 = 6;
                     ExternalFlags_NULL7 = 7;
                     ExternalFlags_NULL8 = 8;
                     ExternalFlags_NULL9 = 9;
                     ExternalFlags_NULL10 = 10;
                     ExternalFlags_NULL11 = 11;
                     ExternalFlags_NULL12 = 12;
                     ExternalFlags_TYPE2X_IRB = 13;
                     ExternalFlags_NULL14 = 14;
                     ExternalFlags_NULL15 = 15;
                  };
                  repeated ExternalFlags external_flags = 43 [json_name = "external-flags"];
                  enum HierarchyConvergenceRouteType {
                     INVALID_ENUM_VALUE_HierarchyConvergenceRouteType = 0;
                     HierarchyConvergenceRouteType_BASE = 1;
                     HierarchyConvergenceRouteType_HIERARCHY = 2;
                  };
                  HierarchyConvergenceRouteType hierarchy_convergence_route_type = 44 [json_name = "hierarchy-convergence-route-type"];
                  string hierarchy_route_relay_ip = 45 [json_name = "hierarchy-route-relay-ip"];
                  uint32 hierarchy_route_relay_ip_mask = 46 [json_name = "hierarchy-route-relay-ip-mask"];
                  uint64 loop_id = 47 [json_name = "loop-id"];
                  uint64 attribute_index = 48 [json_name = "attribute-index"];
               }
               repeated Route route = 1 [json_name = "route"];
            }
            Routes routes = 1 [json_name = "routes"];
            message PeerAdvertiseRoutes {
               message PeerAdvertiseRoute {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string remote_peer_address = 2 [json_name = "remote-peer-address"];
                  string route_distinguisher = 3 [json_name = "route-distinguisher"];
                  string prefix = 4 [json_name = "prefix"];
                  uint32 mask_length = 5 [json_name = "mask-length"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  uint32 im_table_id = 7 [json_name = "im-table-id"];
                  string from = 8 [json_name = "from"];
                  string path_id = 9 [json_name = "path-id"];
                  string remote_nexthop_tunnel_address = 10 [json_name = "remote-nexthop-tunnel-address"];
                  string remote_nexthop_mac_address = 11 [json_name = "remote-nexthop-mac-address"];
                  string nexthop = 12 [json_name = "nexthop"];
                  uint32 local_preference = 13 [json_name = "local-preference"];
                  uint32 preferred_value = 14 [json_name = "preferred-value"];
                  uint32 preference = 15 [json_name = "preference"];
                  string path_as = 16 [json_name = "path-as"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 17 [json_name = "origin"];
                  uint32 med = 18 [json_name = "med"];
                  string flag_string = 19 [json_name = "flag-string"];
                  string worse_reason = 20 [json_name = "worse-reason"];
                  string sending_peers = 21 [json_name = "sending-peers"];
                  uint32 time = 22 [json_name = "time"];
                  string community = 23 [json_name = "community"];
                  string large_community = 24 [json_name = "large-community"];
                  string ext_community = 25 [json_name = "ext-community"];
                  string interface_name = 26 [json_name = "interface-name"];
                  string originator = 27 [json_name = "originator"];
                  string cluster_list = 28 [json_name = "cluster-list"];
                  string remote_route_id = 29 [json_name = "remote-route-id"];
                  string relay_nexthop = 30 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 31 [json_name = "relay-tunnel-name"];
                  bool atomic_aggregate = 32 [json_name = "atomic-aggregate"];
                  string aggregator_as = 33 [json_name = "aggregator-as"];
                  string aggregator_id = 34 [json_name = "aggregator-id"];
                  uint32 in_label = 35 [json_name = "in-label"];
                  uint32 out_label = 36 [json_name = "out-label"];
                  string iterated_vpn = 37 [json_name = "iterated-vpn"];
                  uint32 remote_nexthop_vni = 38 [json_name = "remote-nexthop-vni"];
                  string advertise_nexthop = 39 [json_name = "advertise-nexthop"];
                  string prefix_sid = 40 [json_name = "prefix-sid"];
                  uint64 aigp = 41 [json_name = "aigp"];
                  string attribute_set = 42 [json_name = "attribute-set"];
                  string gateway_ip = 43 [json_name = "gateway-ip"];
                  enum ExternalFlags {
                     ExternalFlags_NULL0 = 0;
                     ExternalFlags_NULL1 = 1;
                     ExternalFlags_NULL2 = 2;
                     ExternalFlags_NULL3 = 3;
                     ExternalFlags_NULL4 = 4;
                     ExternalFlags_TYPE5X_IPX_PREFIX = 5;
                     ExternalFlags_NULL6 = 6;
                     ExternalFlags_NULL7 = 7;
                     ExternalFlags_NULL8 = 8;
                     ExternalFlags_NULL9 = 9;
                     ExternalFlags_NULL10 = 10;
                     ExternalFlags_NULL11 = 11;
                     ExternalFlags_NULL12 = 12;
                     ExternalFlags_TYPE2X_IRB = 13;
                     ExternalFlags_NULL14 = 14;
                     ExternalFlags_NULL15 = 15;
                  };
                  repeated ExternalFlags external_flags = 44 [json_name = "external-flags"];
                  enum HierarchyConvergenceRouteType {
                     INVALID_ENUM_VALUE_HierarchyConvergenceRouteType = 0;
                     HierarchyConvergenceRouteType_BASE = 1;
                     HierarchyConvergenceRouteType_HIERARCHY = 2;
                  };
                  HierarchyConvergenceRouteType hierarchy_convergence_route_type = 45 [json_name = "hierarchy-convergence-route-type"];
                  string hierarchy_route_relay_ip = 46 [json_name = "hierarchy-route-relay-ip"];
                  uint32 hierarchy_route_relay_ip_mask = 47 [json_name = "hierarchy-route-relay-ip-mask"];
                  uint64 loop_id = 48 [json_name = "loop-id"];
                  uint64 attribute_index = 49 [json_name = "attribute-index"];
               }
               repeated PeerAdvertiseRoute peer_advertise_route = 1 [json_name = "peer-advertise-route"];
            }
            PeerAdvertiseRoutes peer_advertise_routes = 2 [json_name = "peer-advertise-routes"];
            message PeerReceiveRoutes {
               message PeerReceiveRoute {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string remote_peer_address = 2 [json_name = "remote-peer-address"];
                  string route_distinguisher = 3 [json_name = "route-distinguisher"];
                  string prefix = 4 [json_name = "prefix"];
                  uint32 mask_length = 5 [json_name = "mask-length"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  uint32 im_table_id = 7 [json_name = "im-table-id"];
                  string from = 8 [json_name = "from"];
                  string path_id = 9 [json_name = "path-id"];
                  string remote_nexthop_tunnel_address = 10 [json_name = "remote-nexthop-tunnel-address"];
                  string remote_nexthop_mac_address = 11 [json_name = "remote-nexthop-mac-address"];
                  string nexthop = 12 [json_name = "nexthop"];
                  uint32 local_preference = 13 [json_name = "local-preference"];
                  uint32 preferred_value = 14 [json_name = "preferred-value"];
                  uint32 preference = 15 [json_name = "preference"];
                  string path_as = 16 [json_name = "path-as"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 17 [json_name = "origin"];
                  uint32 med = 18 [json_name = "med"];
                  string flag_string = 19 [json_name = "flag-string"];
                  string worse_reason = 20 [json_name = "worse-reason"];
                  string sending_peers = 21 [json_name = "sending-peers"];
                  uint32 time = 22 [json_name = "time"];
                  string community = 23 [json_name = "community"];
                  string large_community = 24 [json_name = "large-community"];
                  string ext_community = 25 [json_name = "ext-community"];
                  string interface_name = 26 [json_name = "interface-name"];
                  string originator = 27 [json_name = "originator"];
                  string cluster_list = 28 [json_name = "cluster-list"];
                  string remote_route_id = 29 [json_name = "remote-route-id"];
                  string relay_nexthop = 30 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 31 [json_name = "relay-tunnel-name"];
                  bool atomic_aggregate = 32 [json_name = "atomic-aggregate"];
                  string aggregator_as = 33 [json_name = "aggregator-as"];
                  string aggregator_id = 34 [json_name = "aggregator-id"];
                  uint32 in_label = 35 [json_name = "in-label"];
                  uint32 out_label = 36 [json_name = "out-label"];
                  string iterated_vpn = 37 [json_name = "iterated-vpn"];
                  uint32 remote_nexthop_vni = 38 [json_name = "remote-nexthop-vni"];
                  string advertise_nexthop = 39 [json_name = "advertise-nexthop"];
                  string prefix_sid = 40 [json_name = "prefix-sid"];
                  uint64 aigp = 41 [json_name = "aigp"];
                  string attribute_set = 42 [json_name = "attribute-set"];
                  string gateway_ip = 43 [json_name = "gateway-ip"];
                  enum ExternalFlags {
                     ExternalFlags_NULL0 = 0;
                     ExternalFlags_NULL1 = 1;
                     ExternalFlags_NULL2 = 2;
                     ExternalFlags_NULL3 = 3;
                     ExternalFlags_NULL4 = 4;
                     ExternalFlags_TYPE5X_IPX_PREFIX = 5;
                     ExternalFlags_NULL6 = 6;
                     ExternalFlags_NULL7 = 7;
                     ExternalFlags_NULL8 = 8;
                     ExternalFlags_NULL9 = 9;
                     ExternalFlags_NULL10 = 10;
                     ExternalFlags_NULL11 = 11;
                     ExternalFlags_NULL12 = 12;
                     ExternalFlags_TYPE2X_IRB = 13;
                     ExternalFlags_NULL14 = 14;
                     ExternalFlags_NULL15 = 15;
                  };
                  repeated ExternalFlags external_flags = 44 [json_name = "external-flags"];
                  enum HierarchyConvergenceRouteType {
                     INVALID_ENUM_VALUE_HierarchyConvergenceRouteType = 0;
                     HierarchyConvergenceRouteType_BASE = 1;
                     HierarchyConvergenceRouteType_HIERARCHY = 2;
                  };
                  HierarchyConvergenceRouteType hierarchy_convergence_route_type = 45 [json_name = "hierarchy-convergence-route-type"];
                  string hierarchy_route_relay_ip = 46 [json_name = "hierarchy-route-relay-ip"];
                  uint32 hierarchy_route_relay_ip_mask = 47 [json_name = "hierarchy-route-relay-ip-mask"];
                  uint64 loop_id = 48 [json_name = "loop-id"];
                  uint64 attribute_index = 49 [json_name = "attribute-index"];
               }
               repeated PeerReceiveRoute peer_receive_route = 1 [json_name = "peer-receive-route"];
            }
            PeerReceiveRoutes peer_receive_routes = 3 [json_name = "peer-receive-routes"];
            message PeerReceiveActiveRoutes {
               message PeerReceiveActiveRoute {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string remote_peer_address = 2 [json_name = "remote-peer-address"];
                  string route_distinguisher = 3 [json_name = "route-distinguisher"];
                  string prefix = 4 [json_name = "prefix"];
                  uint32 mask_length = 5 [json_name = "mask-length"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  uint32 im_table_id = 7 [json_name = "im-table-id"];
                  string from = 8 [json_name = "from"];
                  string path_id = 9 [json_name = "path-id"];
                  string remote_nexthop_tunnel_address = 10 [json_name = "remote-nexthop-tunnel-address"];
                  string remote_nexthop_mac_address = 11 [json_name = "remote-nexthop-mac-address"];
                  string nexthop = 12 [json_name = "nexthop"];
                  uint32 local_preference = 13 [json_name = "local-preference"];
                  uint32 preferred_value = 14 [json_name = "preferred-value"];
                  uint32 preference = 15 [json_name = "preference"];
                  string path_as = 16 [json_name = "path-as"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 17 [json_name = "origin"];
                  uint32 med = 18 [json_name = "med"];
                  string flag_string = 19 [json_name = "flag-string"];
                  string worse_reason = 20 [json_name = "worse-reason"];
                  string sending_peers = 21 [json_name = "sending-peers"];
                  uint32 time = 22 [json_name = "time"];
                  string community = 23 [json_name = "community"];
                  string large_community = 24 [json_name = "large-community"];
                  string ext_community = 25 [json_name = "ext-community"];
                  string interface_name = 26 [json_name = "interface-name"];
                  string originator = 27 [json_name = "originator"];
                  string cluster_list = 28 [json_name = "cluster-list"];
                  string remote_route_id = 29 [json_name = "remote-route-id"];
                  string relay_nexthop = 30 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 31 [json_name = "relay-tunnel-name"];
                  bool atomic_aggregate = 32 [json_name = "atomic-aggregate"];
                  string aggregator_as = 33 [json_name = "aggregator-as"];
                  string aggregator_id = 34 [json_name = "aggregator-id"];
                  uint32 in_label = 35 [json_name = "in-label"];
                  uint32 out_label = 36 [json_name = "out-label"];
                  string iterated_vpn = 37 [json_name = "iterated-vpn"];
                  uint32 remote_nexthop_vni = 38 [json_name = "remote-nexthop-vni"];
                  string advertise_nexthop = 39 [json_name = "advertise-nexthop"];
                  string prefix_sid = 40 [json_name = "prefix-sid"];
                  uint64 aigp = 41 [json_name = "aigp"];
                  string attribute_set = 42 [json_name = "attribute-set"];
                  string gateway_ip = 43 [json_name = "gateway-ip"];
                  enum ExternalFlags {
                     ExternalFlags_TYPE5X_IPX_PREFIX = 0;
                     ExternalFlags_TYPE2X_IRB = 1;
                  };
                  repeated ExternalFlags external_flags = 44 [json_name = "external-flags"];
                  enum HierarchyConvergenceRouteType {
                     INVALID_ENUM_VALUE_HierarchyConvergenceRouteType = 0;
                     HierarchyConvergenceRouteType_BASE = 1;
                     HierarchyConvergenceRouteType_HIERARCHY = 2;
                  };
                  HierarchyConvergenceRouteType hierarchy_convergence_route_type = 45 [json_name = "hierarchy-convergence-route-type"];
                  string hierarchy_route_relay_ip = 46 [json_name = "hierarchy-route-relay-ip"];
                  uint32 hierarchy_route_relay_ip_mask = 47 [json_name = "hierarchy-route-relay-ip-mask"];
               }
               repeated PeerReceiveActiveRoute peer_receive_active_route = 1 [json_name = "peer-receive-active-route"];
            }
            PeerReceiveActiveRoutes peer_receive_active_routes = 4 [json_name = "peer-receive-active-routes"];
            message Statistic {
               uint32 total_number = 1 [json_name = "total-number"];
               uint32 active_route_number = 2 [json_name = "active-route-number"];
               uint32 best_route_number = 3 [json_name = "best-route-number"];
               uint32 add_path_route_number = 4 [json_name = "add-path-route-number"];
               uint32 best_external_route_number = 5 [json_name = "best-external-route-number"];
               uint32 cidr_route_number = 6 [json_name = "cidr-route-number"];
               uint32 community_route_number = 7 [json_name = "community-route-number"];
               uint32 different_origin_as_route_number = 8 [json_name = "different-origin-as-route-number"];
               uint32 dampened_route_number = 9 [json_name = "dampened-route-number"];
            }
            Statistic statistic = 5 [json_name = "statistic"];
            message Attributes {
               message LoopLists {
                  message LoopList {
                     uint64 index = 1 [json_name = "index"];
                     string vpn_name = 2 [json_name = "vpn-name"];
                     repeated string loop = 3 [json_name = "loop"];
                  }
                  repeated LoopList loop_list = 1 [json_name = "loop-list"];
               }
               LoopLists loop_lists = 1 [json_name = "loop-lists"];
               message Attribute {
                  uint64 index = 1 [json_name = "index"];
                  repeated string loop = 2 [json_name = "loop"];
               }
               repeated Attribute attribute = 2 [json_name = "attribute"];
            }
            Attributes attributes = 6 [json_name = "attributes"];
         }
         Ipv4Vpn ipv4_vpn = 3 [json_name = "ipv4-vpn"];
         message Ipv6Vpn {
            message Routes {
               message Route {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string route_distinguisher = 2 [json_name = "route-distinguisher"];
                  string prefix = 3 [json_name = "prefix"];
                  uint32 mask_length = 4 [json_name = "mask-length"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 5 [json_name = "route-type"];
                  uint32 im_table_id = 6 [json_name = "im-table-id"];
                  string from = 7 [json_name = "from"];
                  string path_id = 8 [json_name = "path-id"];
                  string remote_nexthop_tunnel_address = 9 [json_name = "remote-nexthop-tunnel-address"];
                  string remote_nexthop_mac_address = 10 [json_name = "remote-nexthop-mac-address"];
                  string nexthop = 11 [json_name = "nexthop"];
                  uint32 local_preference = 12 [json_name = "local-preference"];
                  uint32 preferred_value = 13 [json_name = "preferred-value"];
                  uint32 preference = 14 [json_name = "preference"];
                  string path_as = 15 [json_name = "path-as"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 16 [json_name = "origin"];
                  uint32 med = 17 [json_name = "med"];
                  string flag_string = 18 [json_name = "flag-string"];
                  string worse_reason = 19 [json_name = "worse-reason"];
                  string sending_peers = 20 [json_name = "sending-peers"];
                  uint32 time = 21 [json_name = "time"];
                  string community = 22 [json_name = "community"];
                  string large_community = 23 [json_name = "large-community"];
                  string ext_community = 24 [json_name = "ext-community"];
                  string interface_name = 25 [json_name = "interface-name"];
                  string originator = 26 [json_name = "originator"];
                  string cluster_list = 27 [json_name = "cluster-list"];
                  string remote_route_id = 28 [json_name = "remote-route-id"];
                  string relay_nexthop = 29 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 30 [json_name = "relay-tunnel-name"];
                  bool atomic_aggregate = 31 [json_name = "atomic-aggregate"];
                  string aggregator_as = 32 [json_name = "aggregator-as"];
                  string aggregator_id = 33 [json_name = "aggregator-id"];
                  uint32 in_label = 34 [json_name = "in-label"];
                  uint32 out_label = 35 [json_name = "out-label"];
                  string iterated_vpn = 36 [json_name = "iterated-vpn"];
                  uint32 remote_nexthop_vni = 37 [json_name = "remote-nexthop-vni"];
                  string advertise_nexthop = 38 [json_name = "advertise-nexthop"];
                  string prefix_sid = 39 [json_name = "prefix-sid"];
                  uint64 aigp = 40 [json_name = "aigp"];
                  string attribute_set = 41 [json_name = "attribute-set"];
                  string gateway_ip = 42 [json_name = "gateway-ip"];
                  enum ExternalFlags {
                     ExternalFlags_NULL0 = 0;
                     ExternalFlags_NULL1 = 1;
                     ExternalFlags_NULL2 = 2;
                     ExternalFlags_NULL3 = 3;
                     ExternalFlags_NULL4 = 4;
                     ExternalFlags_TYPE5X_IPX_PREFIX = 5;
                     ExternalFlags_NULL6 = 6;
                     ExternalFlags_NULL7 = 7;
                     ExternalFlags_NULL8 = 8;
                     ExternalFlags_NULL9 = 9;
                     ExternalFlags_NULL10 = 10;
                     ExternalFlags_NULL11 = 11;
                     ExternalFlags_NULL12 = 12;
                     ExternalFlags_TYPE2X_IRB = 13;
                     ExternalFlags_NULL14 = 14;
                     ExternalFlags_NULL15 = 15;
                  };
                  repeated ExternalFlags external_flags = 43 [json_name = "external-flags"];
                  enum HierarchyConvergenceRouteType {
                     INVALID_ENUM_VALUE_HierarchyConvergenceRouteType = 0;
                     HierarchyConvergenceRouteType_BASE = 1;
                     HierarchyConvergenceRouteType_HIERARCHY = 2;
                  };
                  HierarchyConvergenceRouteType hierarchy_convergence_route_type = 44 [json_name = "hierarchy-convergence-route-type"];
                  string hierarchy_route_relay_ip = 45 [json_name = "hierarchy-route-relay-ip"];
                  uint32 hierarchy_route_relay_ip_mask = 46 [json_name = "hierarchy-route-relay-ip-mask"];
                  uint64 loop_id = 47 [json_name = "loop-id"];
                  uint64 attribute_index = 48 [json_name = "attribute-index"];
               }
               repeated Route route = 1 [json_name = "route"];
            }
            Routes routes = 1 [json_name = "routes"];
            message PeerAdvertiseRoutes {
               message PeerAdvertiseRoute {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string remote_peer_address = 2 [json_name = "remote-peer-address"];
                  string route_distinguisher = 3 [json_name = "route-distinguisher"];
                  string prefix = 4 [json_name = "prefix"];
                  uint32 mask_length = 5 [json_name = "mask-length"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  uint32 im_table_id = 7 [json_name = "im-table-id"];
                  string from = 8 [json_name = "from"];
                  string path_id = 9 [json_name = "path-id"];
                  string remote_nexthop_tunnel_address = 10 [json_name = "remote-nexthop-tunnel-address"];
                  string remote_nexthop_mac_address = 11 [json_name = "remote-nexthop-mac-address"];
                  string nexthop = 12 [json_name = "nexthop"];
                  uint32 local_preference = 13 [json_name = "local-preference"];
                  uint32 preferred_value = 14 [json_name = "preferred-value"];
                  uint32 preference = 15 [json_name = "preference"];
                  string path_as = 16 [json_name = "path-as"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 17 [json_name = "origin"];
                  uint32 med = 18 [json_name = "med"];
                  string flag_string = 19 [json_name = "flag-string"];
                  string worse_reason = 20 [json_name = "worse-reason"];
                  string sending_peers = 21 [json_name = "sending-peers"];
                  uint32 time = 22 [json_name = "time"];
                  string community = 23 [json_name = "community"];
                  string large_community = 24 [json_name = "large-community"];
                  string ext_community = 25 [json_name = "ext-community"];
                  string interface_name = 26 [json_name = "interface-name"];
                  string originator = 27 [json_name = "originator"];
                  string cluster_list = 28 [json_name = "cluster-list"];
                  string remote_route_id = 29 [json_name = "remote-route-id"];
                  string relay_nexthop = 30 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 31 [json_name = "relay-tunnel-name"];
                  bool atomic_aggregate = 32 [json_name = "atomic-aggregate"];
                  string aggregator_as = 33 [json_name = "aggregator-as"];
                  string aggregator_id = 34 [json_name = "aggregator-id"];
                  uint32 in_label = 35 [json_name = "in-label"];
                  uint32 out_label = 36 [json_name = "out-label"];
                  string iterated_vpn = 37 [json_name = "iterated-vpn"];
                  uint32 remote_nexthop_vni = 38 [json_name = "remote-nexthop-vni"];
                  string advertise_nexthop = 39 [json_name = "advertise-nexthop"];
                  string prefix_sid = 40 [json_name = "prefix-sid"];
                  uint64 aigp = 41 [json_name = "aigp"];
                  string attribute_set = 42 [json_name = "attribute-set"];
                  string gateway_ip = 43 [json_name = "gateway-ip"];
                  enum ExternalFlags {
                     ExternalFlags_NULL0 = 0;
                     ExternalFlags_NULL1 = 1;
                     ExternalFlags_NULL2 = 2;
                     ExternalFlags_NULL3 = 3;
                     ExternalFlags_NULL4 = 4;
                     ExternalFlags_TYPE5X_IPX_PREFIX = 5;
                     ExternalFlags_NULL6 = 6;
                     ExternalFlags_NULL7 = 7;
                     ExternalFlags_NULL8 = 8;
                     ExternalFlags_NULL9 = 9;
                     ExternalFlags_NULL10 = 10;
                     ExternalFlags_NULL11 = 11;
                     ExternalFlags_NULL12 = 12;
                     ExternalFlags_TYPE2X_IRB = 13;
                     ExternalFlags_NULL14 = 14;
                     ExternalFlags_NULL15 = 15;
                  };
                  repeated ExternalFlags external_flags = 44 [json_name = "external-flags"];
                  enum HierarchyConvergenceRouteType {
                     INVALID_ENUM_VALUE_HierarchyConvergenceRouteType = 0;
                     HierarchyConvergenceRouteType_BASE = 1;
                     HierarchyConvergenceRouteType_HIERARCHY = 2;
                  };
                  HierarchyConvergenceRouteType hierarchy_convergence_route_type = 45 [json_name = "hierarchy-convergence-route-type"];
                  string hierarchy_route_relay_ip = 46 [json_name = "hierarchy-route-relay-ip"];
                  uint32 hierarchy_route_relay_ip_mask = 47 [json_name = "hierarchy-route-relay-ip-mask"];
                  uint64 loop_id = 48 [json_name = "loop-id"];
                  uint64 attribute_index = 49 [json_name = "attribute-index"];
               }
               repeated PeerAdvertiseRoute peer_advertise_route = 1 [json_name = "peer-advertise-route"];
            }
            PeerAdvertiseRoutes peer_advertise_routes = 2 [json_name = "peer-advertise-routes"];
            message PeerReceiveRoutes {
               message PeerReceiveRoute {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string remote_peer_address = 2 [json_name = "remote-peer-address"];
                  string route_distinguisher = 3 [json_name = "route-distinguisher"];
                  string prefix = 4 [json_name = "prefix"];
                  uint32 mask_length = 5 [json_name = "mask-length"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  uint32 im_table_id = 7 [json_name = "im-table-id"];
                  string from = 8 [json_name = "from"];
                  string path_id = 9 [json_name = "path-id"];
                  string remote_nexthop_tunnel_address = 10 [json_name = "remote-nexthop-tunnel-address"];
                  string remote_nexthop_mac_address = 11 [json_name = "remote-nexthop-mac-address"];
                  string nexthop = 12 [json_name = "nexthop"];
                  uint32 local_preference = 13 [json_name = "local-preference"];
                  uint32 preferred_value = 14 [json_name = "preferred-value"];
                  uint32 preference = 15 [json_name = "preference"];
                  string path_as = 16 [json_name = "path-as"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 17 [json_name = "origin"];
                  uint32 med = 18 [json_name = "med"];
                  string flag_string = 19 [json_name = "flag-string"];
                  string worse_reason = 20 [json_name = "worse-reason"];
                  string sending_peers = 21 [json_name = "sending-peers"];
                  uint32 time = 22 [json_name = "time"];
                  string community = 23 [json_name = "community"];
                  string large_community = 24 [json_name = "large-community"];
                  string ext_community = 25 [json_name = "ext-community"];
                  string interface_name = 26 [json_name = "interface-name"];
                  string originator = 27 [json_name = "originator"];
                  string cluster_list = 28 [json_name = "cluster-list"];
                  string remote_route_id = 29 [json_name = "remote-route-id"];
                  string relay_nexthop = 30 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 31 [json_name = "relay-tunnel-name"];
                  bool atomic_aggregate = 32 [json_name = "atomic-aggregate"];
                  string aggregator_as = 33 [json_name = "aggregator-as"];
                  string aggregator_id = 34 [json_name = "aggregator-id"];
                  uint32 in_label = 35 [json_name = "in-label"];
                  uint32 out_label = 36 [json_name = "out-label"];
                  string iterated_vpn = 37 [json_name = "iterated-vpn"];
                  uint32 remote_nexthop_vni = 38 [json_name = "remote-nexthop-vni"];
                  string advertise_nexthop = 39 [json_name = "advertise-nexthop"];
                  string prefix_sid = 40 [json_name = "prefix-sid"];
                  uint64 aigp = 41 [json_name = "aigp"];
                  string attribute_set = 42 [json_name = "attribute-set"];
                  string gateway_ip = 43 [json_name = "gateway-ip"];
                  enum ExternalFlags {
                     ExternalFlags_NULL0 = 0;
                     ExternalFlags_NULL1 = 1;
                     ExternalFlags_NULL2 = 2;
                     ExternalFlags_NULL3 = 3;
                     ExternalFlags_NULL4 = 4;
                     ExternalFlags_TYPE5X_IPX_PREFIX = 5;
                     ExternalFlags_NULL6 = 6;
                     ExternalFlags_NULL7 = 7;
                     ExternalFlags_NULL8 = 8;
                     ExternalFlags_NULL9 = 9;
                     ExternalFlags_NULL10 = 10;
                     ExternalFlags_NULL11 = 11;
                     ExternalFlags_NULL12 = 12;
                     ExternalFlags_TYPE2X_IRB = 13;
                     ExternalFlags_NULL14 = 14;
                     ExternalFlags_NULL15 = 15;
                  };
                  repeated ExternalFlags external_flags = 44 [json_name = "external-flags"];
                  enum HierarchyConvergenceRouteType {
                     INVALID_ENUM_VALUE_HierarchyConvergenceRouteType = 0;
                     HierarchyConvergenceRouteType_BASE = 1;
                     HierarchyConvergenceRouteType_HIERARCHY = 2;
                  };
                  HierarchyConvergenceRouteType hierarchy_convergence_route_type = 45 [json_name = "hierarchy-convergence-route-type"];
                  string hierarchy_route_relay_ip = 46 [json_name = "hierarchy-route-relay-ip"];
                  uint32 hierarchy_route_relay_ip_mask = 47 [json_name = "hierarchy-route-relay-ip-mask"];
                  uint64 loop_id = 48 [json_name = "loop-id"];
                  uint64 attribute_index = 49 [json_name = "attribute-index"];
               }
               repeated PeerReceiveRoute peer_receive_route = 1 [json_name = "peer-receive-route"];
            }
            PeerReceiveRoutes peer_receive_routes = 3 [json_name = "peer-receive-routes"];
            message PeerReceiveActiveRoutes {
               message PeerReceiveActiveRoute {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string remote_peer_address = 2 [json_name = "remote-peer-address"];
                  string route_distinguisher = 3 [json_name = "route-distinguisher"];
                  string prefix = 4 [json_name = "prefix"];
                  uint32 mask_length = 5 [json_name = "mask-length"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  uint32 im_table_id = 7 [json_name = "im-table-id"];
                  string from = 8 [json_name = "from"];
                  string path_id = 9 [json_name = "path-id"];
                  string remote_nexthop_tunnel_address = 10 [json_name = "remote-nexthop-tunnel-address"];
                  string remote_nexthop_mac_address = 11 [json_name = "remote-nexthop-mac-address"];
                  string nexthop = 12 [json_name = "nexthop"];
                  uint32 local_preference = 13 [json_name = "local-preference"];
                  uint32 preferred_value = 14 [json_name = "preferred-value"];
                  uint32 preference = 15 [json_name = "preference"];
                  string path_as = 16 [json_name = "path-as"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 17 [json_name = "origin"];
                  uint32 med = 18 [json_name = "med"];
                  string flag_string = 19 [json_name = "flag-string"];
                  string worse_reason = 20 [json_name = "worse-reason"];
                  string sending_peers = 21 [json_name = "sending-peers"];
                  uint32 time = 22 [json_name = "time"];
                  string community = 23 [json_name = "community"];
                  string large_community = 24 [json_name = "large-community"];
                  string ext_community = 25 [json_name = "ext-community"];
                  string interface_name = 26 [json_name = "interface-name"];
                  string originator = 27 [json_name = "originator"];
                  string cluster_list = 28 [json_name = "cluster-list"];
                  string remote_route_id = 29 [json_name = "remote-route-id"];
                  string relay_nexthop = 30 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 31 [json_name = "relay-tunnel-name"];
                  bool atomic_aggregate = 32 [json_name = "atomic-aggregate"];
                  string aggregator_as = 33 [json_name = "aggregator-as"];
                  string aggregator_id = 34 [json_name = "aggregator-id"];
                  uint32 in_label = 35 [json_name = "in-label"];
                  uint32 out_label = 36 [json_name = "out-label"];
                  string iterated_vpn = 37 [json_name = "iterated-vpn"];
                  uint32 remote_nexthop_vni = 38 [json_name = "remote-nexthop-vni"];
                  string advertise_nexthop = 39 [json_name = "advertise-nexthop"];
                  string prefix_sid = 40 [json_name = "prefix-sid"];
                  uint64 aigp = 41 [json_name = "aigp"];
                  string attribute_set = 42 [json_name = "attribute-set"];
                  string gateway_ip = 43 [json_name = "gateway-ip"];
                  enum ExternalFlags {
                     ExternalFlags_TYPE5X_IPX_PREFIX = 0;
                     ExternalFlags_TYPE2X_IRB = 1;
                  };
                  repeated ExternalFlags external_flags = 44 [json_name = "external-flags"];
                  enum HierarchyConvergenceRouteType {
                     INVALID_ENUM_VALUE_HierarchyConvergenceRouteType = 0;
                     HierarchyConvergenceRouteType_BASE = 1;
                     HierarchyConvergenceRouteType_HIERARCHY = 2;
                  };
                  HierarchyConvergenceRouteType hierarchy_convergence_route_type = 45 [json_name = "hierarchy-convergence-route-type"];
                  string hierarchy_route_relay_ip = 46 [json_name = "hierarchy-route-relay-ip"];
                  uint32 hierarchy_route_relay_ip_mask = 47 [json_name = "hierarchy-route-relay-ip-mask"];
               }
               repeated PeerReceiveActiveRoute peer_receive_active_route = 1 [json_name = "peer-receive-active-route"];
            }
            PeerReceiveActiveRoutes peer_receive_active_routes = 4 [json_name = "peer-receive-active-routes"];
            message Statistic {
               uint32 total_number = 1 [json_name = "total-number"];
               uint32 active_route_number = 2 [json_name = "active-route-number"];
               uint32 best_route_number = 3 [json_name = "best-route-number"];
               uint32 add_path_route_number = 4 [json_name = "add-path-route-number"];
               uint32 best_external_route_number = 5 [json_name = "best-external-route-number"];
               uint32 community_route_number = 6 [json_name = "community-route-number"];
               uint32 different_origin_as_route_number = 7 [json_name = "different-origin-as-route-number"];
            }
            Statistic statistic = 5 [json_name = "statistic"];
            message Attributes {
               message LoopLists {
                  message LoopList {
                     uint64 index = 1 [json_name = "index"];
                     string vpn_name = 2 [json_name = "vpn-name"];
                     repeated string loop = 3 [json_name = "loop"];
                  }
                  repeated LoopList loop_list = 1 [json_name = "loop-list"];
               }
               LoopLists loop_lists = 1 [json_name = "loop-lists"];
               message Attribute {
                  uint64 index = 1 [json_name = "index"];
                  repeated string loop = 2 [json_name = "loop"];
               }
               repeated Attribute attribute = 2 [json_name = "attribute"];
            }
            Attributes attributes = 6 [json_name = "attributes"];
         }
         Ipv6Vpn ipv6_vpn = 4 [json_name = "ipv6-vpn"];
         message Ipv4Labeluni {
            message Statistics {
               message Statistic {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  uint32 total_number = 2 [json_name = "total-number"];
                  uint32 advertise_rm_total_number = 3 [json_name = "advertise-rm-total-number"];
                  uint32 active_route_number = 4 [json_name = "active-route-number"];
                  uint32 best_route_number = 5 [json_name = "best-route-number"];
                  uint32 add_path_route_number = 6 [json_name = "add-path-route-number"];
                  uint32 best_external_route_number = 7 [json_name = "best-external-route-number"];
                  uint32 cidr_route_number = 8 [json_name = "cidr-route-number"];
                  uint32 community_route_number = 9 [json_name = "community-route-number"];
                  uint32 different_origin_as_route_number = 10 [json_name = "different-origin-as-route-number"];
                  uint32 dampened_route_number = 11 [json_name = "dampened-route-number"];
               }
               repeated Statistic statistic = 1 [json_name = "statistic"];
            }
            Statistics statistics = 1 [json_name = "statistics"];
         }
         Ipv4Labeluni ipv4_labeluni = 5 [json_name = "ipv4-labeluni"];
         message Ipv4Multicast {
            message Routes {
               message Route {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string route_distinguisher = 2 [json_name = "route-distinguisher"];
                  string prefix = 3 [json_name = "prefix"];
                  uint32 mask_length = 4 [json_name = "mask-length"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 5 [json_name = "route-type"];
                  uint32 im_table_id = 6 [json_name = "im-table-id"];
                  string from = 7 [json_name = "from"];
                  string path_id = 8 [json_name = "path-id"];
                  string remote_nexthop_tunnel_address = 9 [json_name = "remote-nexthop-tunnel-address"];
                  string remote_nexthop_mac_address = 10 [json_name = "remote-nexthop-mac-address"];
                  string nexthop = 11 [json_name = "nexthop"];
                  uint32 local_preference = 12 [json_name = "local-preference"];
                  uint32 preferred_value = 13 [json_name = "preferred-value"];
                  uint32 preference = 14 [json_name = "preference"];
                  string path_as = 15 [json_name = "path-as"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 16 [json_name = "origin"];
                  uint32 med = 17 [json_name = "med"];
                  string flag_string = 18 [json_name = "flag-string"];
                  string worse_reason = 19 [json_name = "worse-reason"];
                  string sending_peers = 20 [json_name = "sending-peers"];
                  uint32 time = 21 [json_name = "time"];
                  string community = 22 [json_name = "community"];
                  string large_community = 23 [json_name = "large-community"];
                  string ext_community = 24 [json_name = "ext-community"];
                  string interface_name = 25 [json_name = "interface-name"];
                  string originator = 26 [json_name = "originator"];
                  string cluster_list = 27 [json_name = "cluster-list"];
                  string remote_route_id = 28 [json_name = "remote-route-id"];
                  string relay_nexthop = 29 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 30 [json_name = "relay-tunnel-name"];
                  bool atomic_aggregate = 31 [json_name = "atomic-aggregate"];
                  string aggregator_as = 32 [json_name = "aggregator-as"];
                  string aggregator_id = 33 [json_name = "aggregator-id"];
                  uint32 in_label = 34 [json_name = "in-label"];
                  uint32 out_label = 35 [json_name = "out-label"];
                  string iterated_vpn = 36 [json_name = "iterated-vpn"];
                  uint32 remote_nexthop_vni = 37 [json_name = "remote-nexthop-vni"];
                  string advertise_nexthop = 38 [json_name = "advertise-nexthop"];
                  string prefix_sid = 39 [json_name = "prefix-sid"];
                  uint64 aigp = 40 [json_name = "aigp"];
                  string attribute_set = 41 [json_name = "attribute-set"];
                  string gateway_ip = 42 [json_name = "gateway-ip"];
                  enum ExternalFlags {
                     ExternalFlags_TYPE5X_IPX_PREFIX = 0;
                     ExternalFlags_TYPE2X_IRB = 1;
                  };
                  repeated ExternalFlags external_flags = 43 [json_name = "external-flags"];
                  enum HierarchyConvergenceRouteType {
                     INVALID_ENUM_VALUE_HierarchyConvergenceRouteType = 0;
                     HierarchyConvergenceRouteType_BASE = 1;
                     HierarchyConvergenceRouteType_HIERARCHY = 2;
                  };
                  HierarchyConvergenceRouteType hierarchy_convergence_route_type = 44 [json_name = "hierarchy-convergence-route-type"];
                  string hierarchy_route_relay_ip = 45 [json_name = "hierarchy-route-relay-ip"];
                  uint32 hierarchy_route_relay_ip_mask = 46 [json_name = "hierarchy-route-relay-ip-mask"];
               }
               repeated Route route = 1 [json_name = "route"];
            }
            Routes routes = 1 [json_name = "routes"];
            message Statistic {
               uint32 total_number = 1 [json_name = "total-number"];
               uint32 advertise_rm_total_number = 2 [json_name = "advertise-rm-total-number"];
               uint32 active_route_number = 3 [json_name = "active-route-number"];
               uint32 dampened_route_number = 4 [json_name = "dampened-route-number"];
            }
            Statistic statistic = 2 [json_name = "statistic"];
         }
         Ipv4Multicast ipv4_multicast = 6 [json_name = "ipv4-multicast"];
         message L2VpnEvpn {
            message Statistics {
               message Statistic {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  uint32 total_route_number = 2 [json_name = "total-route-number"];
                  uint32 ad_route_number = 3 [json_name = "ad-route-number"];
                  uint32 mac_route_number = 4 [json_name = "mac-route-number"];
                  uint32 include_route_number = 5 [json_name = "include-route-number"];
                  uint32 es_route_number = 6 [json_name = "es-route-number"];
                  uint32 ip_prefix_route_number = 7 [json_name = "ip-prefix-route-number"];
                  uint32 smet_route_number = 8 [json_name = "smet-route-number"];
                  uint32 igmp_join_route_number = 9 [json_name = "igmp-join-route-number"];
                  uint32 igmp_leave_route_number = 10 [json_name = "igmp-leave-route-number"];
               }
               repeated Statistic statistic = 1 [json_name = "statistic"];
            }
            Statistics statistics = 1 [json_name = "statistics"];
            message AdRoutes {
               message AdRoute {
                  string prefix = 1 [json_name = "prefix"];
                  string route_distinguisher = 2 [json_name = "route-distinguisher"];
                  string from = 3 [json_name = "from"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 4 [json_name = "route-type"];
                  string path_id = 5 [json_name = "path-id"];
                  string prefix_sid = 6 [json_name = "prefix-sid"];
                  string bypass_prefix_sid = 7 [json_name = "bypass-prefix-sid"];
                  uint32 in_label = 8 [json_name = "in-label"];
                  uint32 out_label = 9 [json_name = "out-label"];
                  string nexthop = 10 [json_name = "nexthop"];
                  uint32 local_preference = 11 [json_name = "local-preference"];
                  uint32 preferred_value = 12 [json_name = "preferred-value"];
                  uint32 preference = 13 [json_name = "preference"];
                  string worse_reason = 14 [json_name = "worse-reason"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 15 [json_name = "origin"];
                  uint32 med = 16 [json_name = "med"];
                  string flag_string = 17 [json_name = "flag-string"];
                  uint32 time = 18 [json_name = "time"];
                  string interface_name = 19 [json_name = "interface-name"];
                  string remote_route_id = 20 [json_name = "remote-route-id"];
                  string relay_nexthop = 21 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 22 [json_name = "relay-tunnel-name"];
                  string originator = 23 [json_name = "originator"];
               }
               repeated AdRoute ad_route = 1 [json_name = "ad-route"];
            }
            AdRoutes ad_routes = 2 [json_name = "ad-routes"];
            message MacRoutes {
               message MacRoute {
                  string prefix = 1 [json_name = "prefix"];
                  string route_distinguisher = 2 [json_name = "route-distinguisher"];
                  string from = 3 [json_name = "from"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 4 [json_name = "route-type"];
                  string path_id = 5 [json_name = "path-id"];
                  string nexthop = 6 [json_name = "nexthop"];
                  uint32 local_preference = 7 [json_name = "local-preference"];
                  uint32 preferred_value = 8 [json_name = "preferred-value"];
                  uint32 preference = 9 [json_name = "preference"];
                  string worse_reason = 10 [json_name = "worse-reason"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 11 [json_name = "origin"];
                  uint32 med = 12 [json_name = "med"];
                  string flag_string = 13 [json_name = "flag-string"];
                  uint32 time = 14 [json_name = "time"];
                  string interface_name = 15 [json_name = "interface-name"];
                  string remote_route_id = 16 [json_name = "remote-route-id"];
                  string relay_nexthop = 17 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 18 [json_name = "relay-tunnel-name"];
                  string originator = 19 [json_name = "originator"];
                  uint32 in_label1 = 20 [json_name = "in-label1"];
                  uint32 in_label2 = 21 [json_name = "in-label2"];
                  uint32 out_label1 = 22 [json_name = "out-label1"];
                  uint32 out_label2 = 23 [json_name = "out-label2"];
                  string prefix_sid = 24 [json_name = "prefix-sid"];
                  string bypass_prefix_sid = 25 [json_name = "bypass-prefix-sid"];
                  string l3_prefix_sid = 26 [json_name = "l3-prefix-sid"];
                  string effect_nexthop = 27 [json_name = "effect-nexthop"];
                  string redirect_out_interface = 28 [json_name = "redirect-out-interface"];
               }
               repeated MacRoute mac_route = 1 [json_name = "mac-route"];
            }
            MacRoutes mac_routes = 3 [json_name = "mac-routes"];
            message InclusiveRoutes {
               message InclusiveRoute {
                  string prefix = 1 [json_name = "prefix"];
                  string route_distinguisher = 2 [json_name = "route-distinguisher"];
                  string from = 3 [json_name = "from"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 4 [json_name = "route-type"];
                  string path_id = 5 [json_name = "path-id"];
                  string prefix_sid = 6 [json_name = "prefix-sid"];
                  uint32 in_label = 7 [json_name = "in-label"];
                  uint32 out_label = 8 [json_name = "out-label"];
                  string nexthop = 9 [json_name = "nexthop"];
                  uint32 local_preference = 10 [json_name = "local-preference"];
                  uint32 preferred_value = 11 [json_name = "preferred-value"];
                  uint32 preference = 12 [json_name = "preference"];
                  string worse_reason = 13 [json_name = "worse-reason"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 14 [json_name = "origin"];
                  uint32 med = 15 [json_name = "med"];
                  string flag_string = 16 [json_name = "flag-string"];
                  uint32 time = 17 [json_name = "time"];
                  string interface_name = 18 [json_name = "interface-name"];
                  string remote_route_id = 19 [json_name = "remote-route-id"];
                  string relay_nexthop = 20 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 21 [json_name = "relay-tunnel-name"];
                  string originator = 22 [json_name = "originator"];
               }
               repeated InclusiveRoute inclusive_route = 1 [json_name = "inclusive-route"];
            }
            InclusiveRoutes inclusive_routes = 4 [json_name = "inclusive-routes"];
            message EsRoutes {
               message EsRoute {
                  string prefix = 1 [json_name = "prefix"];
                  string route_distinguisher = 2 [json_name = "route-distinguisher"];
                  string from = 3 [json_name = "from"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 4 [json_name = "route-type"];
                  string path_id = 5 [json_name = "path-id"];
                  string nexthop = 6 [json_name = "nexthop"];
                  uint32 local_preference = 7 [json_name = "local-preference"];
                  uint32 preferred_value = 8 [json_name = "preferred-value"];
                  uint32 preference = 9 [json_name = "preference"];
                  string worse_reason = 10 [json_name = "worse-reason"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 11 [json_name = "origin"];
                  uint32 med = 12 [json_name = "med"];
                  string flag_string = 13 [json_name = "flag-string"];
                  uint32 time = 14 [json_name = "time"];
                  string interface_name = 15 [json_name = "interface-name"];
                  string remote_route_id = 16 [json_name = "remote-route-id"];
                  string relay_nexthop = 17 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 18 [json_name = "relay-tunnel-name"];
                  string originator = 19 [json_name = "originator"];
               }
               repeated EsRoute es_route = 1 [json_name = "es-route"];
            }
            EsRoutes es_routes = 5 [json_name = "es-routes"];
            message IpPrefixRoutes {
               message IpPrefixRoute {
                  string prefix = 1 [json_name = "prefix"];
                  string route_distinguisher = 2 [json_name = "route-distinguisher"];
                  string from = 3 [json_name = "from"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 4 [json_name = "route-type"];
                  string path_id = 5 [json_name = "path-id"];
                  string nexthop = 6 [json_name = "nexthop"];
                  uint32 local_preference = 7 [json_name = "local-preference"];
                  uint32 preferred_value = 8 [json_name = "preferred-value"];
                  uint32 preference = 9 [json_name = "preference"];
                  string worse_reason = 10 [json_name = "worse-reason"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 11 [json_name = "origin"];
                  uint32 med = 12 [json_name = "med"];
                  string flag_string = 13 [json_name = "flag-string"];
                  uint32 time = 14 [json_name = "time"];
                  string interface_name = 15 [json_name = "interface-name"];
                  string remote_route_id = 16 [json_name = "remote-route-id"];
                  string relay_nexthop = 17 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 18 [json_name = "relay-tunnel-name"];
                  string originator = 19 [json_name = "originator"];
                  uint32 in_label = 20 [json_name = "in-label"];
                  uint32 out_label = 21 [json_name = "out-label"];
                  string prefix_sid = 22 [json_name = "prefix-sid"];
               }
               repeated IpPrefixRoute ip_prefix_route = 1 [json_name = "ip-prefix-route"];
            }
            IpPrefixRoutes ip_prefix_routes = 6 [json_name = "ip-prefix-routes"];
         }
         L2VpnEvpn l2vpn_evpn = 7 [json_name = "l2vpn-evpn"];
         message Ipv6Srpolicy {
            message Routes {
               message Route {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string prefix = 2 [json_name = "prefix"];
                  uint32 im_table_id = 3 [json_name = "im-table-id"];
                  string from = 4 [json_name = "from"];
                  uint32 local_priority = 5 [json_name = "local-priority"];
                  uint32 preferred_value = 6 [json_name = "preferred-value"];
                  uint32 preference = 7 [json_name = "preference"];
                  string path_as = 8 [json_name = "path-as"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 9 [json_name = "origin"];
                  uint32 med = 10 [json_name = "med"];
                  string flag_string = 11 [json_name = "flag-string"];
                  string worse_reason = 12 [json_name = "worse-reason"];
                  string peer_string = 13 [json_name = "peer-string"];
                  uint32 time = 14 [json_name = "time"];
                  string community = 15 [json_name = "community"];
                  string extended_community = 16 [json_name = "extended-community"];
                  string originator = 17 [json_name = "originator"];
                  string cluster_list = 18 [json_name = "cluster-list"];
                  string remote_router_id = 19 [json_name = "remote-router-id"];
                  string tunnel_encapsulation = 20 [json_name = "tunnel-encapsulation"];
                  string large_community = 21 [json_name = "large-community"];
                  string interface_name = 22 [json_name = "interface-name"];
                  string relay_nexthop = 23 [json_name = "relay-nexthop"];
                  string advertise_nexthop = 24 [json_name = "advertise-nexthop"];
               }
               repeated Route route = 1 [json_name = "route"];
            }
            Routes routes = 1 [json_name = "routes"];
            message PeerAdvertiseRoutes {
               message PeerAdvertiseRoute {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string remote_peer_address = 2 [json_name = "remote-peer-address"];
                  string prefix = 3 [json_name = "prefix"];
                  uint32 im_table_id = 4 [json_name = "im-table-id"];
                  string from = 5 [json_name = "from"];
                  uint32 local_priority = 6 [json_name = "local-priority"];
                  uint32 preferred_value = 7 [json_name = "preferred-value"];
                  uint32 preference = 8 [json_name = "preference"];
                  string path_as = 9 [json_name = "path-as"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 10 [json_name = "origin"];
                  uint32 med = 11 [json_name = "med"];
                  string flag_string = 12 [json_name = "flag-string"];
                  string worse_reason = 13 [json_name = "worse-reason"];
                  string peer_string = 14 [json_name = "peer-string"];
                  uint32 time = 15 [json_name = "time"];
                  string community = 16 [json_name = "community"];
                  string extended_community = 17 [json_name = "extended-community"];
                  string originator = 18 [json_name = "originator"];
                  string cluster_list = 19 [json_name = "cluster-list"];
                  string remote_router_id = 20 [json_name = "remote-router-id"];
                  string tunnel_encapsulation = 21 [json_name = "tunnel-encapsulation"];
                  string large_community = 22 [json_name = "large-community"];
                  string interface_name = 23 [json_name = "interface-name"];
                  string relay_nexthop = 24 [json_name = "relay-nexthop"];
                  string advertise_nexthop = 25 [json_name = "advertise-nexthop"];
               }
               repeated PeerAdvertiseRoute peer_advertise_route = 1 [json_name = "peer-advertise-route"];
            }
            PeerAdvertiseRoutes peer_advertise_routes = 2 [json_name = "peer-advertise-routes"];
            message PeerReceiveRoutes {
               message PeerReceiveRoute {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string remote_peer_address = 2 [json_name = "remote-peer-address"];
                  string prefix = 3 [json_name = "prefix"];
                  uint32 im_table_id = 4 [json_name = "im-table-id"];
                  string from = 5 [json_name = "from"];
                  uint32 local_priority = 6 [json_name = "local-priority"];
                  uint32 preferred_value = 7 [json_name = "preferred-value"];
                  uint32 preference = 8 [json_name = "preference"];
                  string path_as = 9 [json_name = "path-as"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 10 [json_name = "origin"];
                  uint32 med = 11 [json_name = "med"];
                  string flag_string = 12 [json_name = "flag-string"];
                  string worse_reason = 13 [json_name = "worse-reason"];
                  string peer_string = 14 [json_name = "peer-string"];
                  uint32 time = 15 [json_name = "time"];
                  string community = 16 [json_name = "community"];
                  string extended_community = 17 [json_name = "extended-community"];
                  string originator = 18 [json_name = "originator"];
                  string cluster_list = 19 [json_name = "cluster-list"];
                  string remote_router_id = 20 [json_name = "remote-router-id"];
                  string tunnel_encapsulation = 21 [json_name = "tunnel-encapsulation"];
                  string large_community = 22 [json_name = "large-community"];
                  string interface_name = 23 [json_name = "interface-name"];
                  string relay_nexthop = 24 [json_name = "relay-nexthop"];
                  string advertise_nexthop = 25 [json_name = "advertise-nexthop"];
               }
               repeated PeerReceiveRoute peer_receive_route = 1 [json_name = "peer-receive-route"];
            }
            PeerReceiveRoutes peer_receive_routes = 3 [json_name = "peer-receive-routes"];
            message Statistic {
               uint32 total_number = 1 [json_name = "total-number"];
            }
            Statistic statistic = 4 [json_name = "statistic"];
         }
         Ipv6Srpolicy ipv6_srpolicy = 8 [json_name = "ipv6-srpolicy"];
         message LinkStateUnicast {
            message PrefixRoutes {
               message PrefixRoute {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  enum Type {
                     INVALID_ENUM_VALUE_Type = 0;
                     Type_NODE = 1;
                     Type_LINK = 2;
                     Type_IPV4X_PREFIXX_ROUTE = 3;
                     Type_IPV6X_PREFIXX_ROUTE = 4;
                     Type_SRV6X_SIDX_ROUTE = 6;
                  };
                  Type type = 2 [json_name = "type"];
                  string network = 3 [json_name = "network"];
                  string from = 4 [json_name = "from"];
                  enum Protocol {
                     INVALID_ENUM_VALUE_Protocol = 0;
                     Protocol_ISX_ISX_LEVELX_1 = 1;
                     Protocol_ISX_ISX_LEVELX_2 = 2;
                     Protocol_OSPF = 3;
                     Protocol_DIRECT = 4;
                     Protocol_STATIC = 5;
                     Protocol_OSPFV3 = 6;
                     Protocol_BGP = 7;
                     Protocol_SEGMENTX_ROUTING = 9;
                  };
                  Protocol protocol = 5 [json_name = "protocol"];
                  uint64 identifier = 6 [json_name = "identifier"];
                  string nexthop = 7 [json_name = "nexthop"];
                  string peer_router_id = 8 [json_name = "peer-router-id"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 9 [json_name = "route-type"];
                  uint32 local_preference = 10 [json_name = "local-preference"];
                  uint32 preferred_value = 11 [json_name = "preferred-value"];
                  uint32 preference = 12 [json_name = "preference"];
                  string path_as = 13 [json_name = "path-as"];
                  string originator = 14 [json_name = "originator"];
                  uint32 med = 15 [json_name = "med"];
                  string flag_string = 16 [json_name = "flag-string"];
                  string worse_reason = 17 [json_name = "worse-reason"];
                  uint32 in_label = 18 [json_name = "in-label"];
                  uint32 out_label = 19 [json_name = "out-label"];
                  uint32 time = 20 [json_name = "time"];
                  string interface_name = 21 [json_name = "interface-name"];
                  string relay_nexthop = 22 [json_name = "relay-nexthop"];
                  string discard_attribute = 23 [json_name = "discard-attribute"];
                  uint32 peer_count = 24 [json_name = "peer-count"];
                  string sending_peers = 25 [json_name = "sending-peers"];
                  string advertise_nexthop = 26 [json_name = "advertise-nexthop"];
                  string node_flags = 27 [json_name = "node-flags"];
                  string route_tag = 28 [json_name = "route-tag"];
                  string extended_route_tag = 29 [json_name = "extended-route-tag"];
                  uint32 prefix_metric = 30 [json_name = "prefix-metric"];
                  string ospf_forwarding_address = 31 [json_name = "ospf-forwarding-address"];
                  string opaque_prefix_attribute = 32 [json_name = "opaque-prefix-attribute"];
                  string prefix_sid = 33 [json_name = "prefix-sid"];
               }
               repeated PrefixRoute prefix_route = 1 [json_name = "prefix-route"];
            }
            PrefixRoutes prefix_routes = 1 [json_name = "prefix-routes"];
            message LinkRoutes {
               message LinkRoute {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  enum Type {
                     INVALID_ENUM_VALUE_Type = 0;
                     Type_NODE = 1;
                     Type_LINK = 2;
                     Type_IPV4X_PREFIXX_ROUTE = 3;
                     Type_IPV6X_PREFIXX_ROUTE = 4;
                     Type_SRV6X_SIDX_ROUTE = 6;
                  };
                  Type type = 2 [json_name = "type"];
                  string network = 3 [json_name = "network"];
                  string from = 4 [json_name = "from"];
                  enum Protocol {
                     INVALID_ENUM_VALUE_Protocol = 0;
                     Protocol_ISX_ISX_LEVELX_1 = 1;
                     Protocol_ISX_ISX_LEVELX_2 = 2;
                     Protocol_OSPF = 3;
                     Protocol_DIRECT = 4;
                     Protocol_STATIC = 5;
                     Protocol_OSPFV3 = 6;
                     Protocol_BGP = 7;
                     Protocol_SEGMENTX_ROUTING = 9;
                  };
                  Protocol protocol = 5 [json_name = "protocol"];
                  uint64 identifier = 6 [json_name = "identifier"];
                  string nexthop = 7 [json_name = "nexthop"];
                  string peer_router_id = 8 [json_name = "peer-router-id"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 9 [json_name = "route-type"];
                  uint32 local_preference = 10 [json_name = "local-preference"];
                  uint32 preferred_value = 11 [json_name = "preferred-value"];
                  uint32 preference = 12 [json_name = "preference"];
                  string path_as = 13 [json_name = "path-as"];
                  string originator = 14 [json_name = "originator"];
                  uint32 med = 15 [json_name = "med"];
                  string flag_string = 16 [json_name = "flag-string"];
                  string worse_reason = 17 [json_name = "worse-reason"];
                  uint32 in_label = 18 [json_name = "in-label"];
                  uint32 out_label = 19 [json_name = "out-label"];
                  uint32 time = 20 [json_name = "time"];
                  string interface_name = 21 [json_name = "interface-name"];
                  string relay_nexthop = 22 [json_name = "relay-nexthop"];
                  string discard_attribute = 23 [json_name = "discard-attribute"];
                  uint32 peer_count = 24 [json_name = "peer-count"];
                  string sending_peers = 25 [json_name = "sending-peers"];
                  string advertise_nexthop = 26 [json_name = "advertise-nexthop"];
                  string ipv4_local_node_router_id = 27 [json_name = "ipv4-local-node-router-id"];
                  string ipv6_local_node_router_id = 28 [json_name = "ipv6-local-node-router-id"];
                  string ipv4_remote_node_router_id = 29 [json_name = "ipv4-remote-node-router-id"];
                  string ipv6_remote_node_router_id = 30 [json_name = "ipv6-remote-node-router-id"];
                  string administrative_group = 31 [json_name = "administrative-group"];
                  uint32 maximum_link_bandwidth = 32 [json_name = "maximum-link-bandwidth"];
                  uint32 maximum_reservable_bandwidth = 33 [json_name = "maximum-reservable-bandwidth"];
                  string maximum_unreserved_bandwidth = 34 [json_name = "maximum-unreserved-bandwidth"];
                  uint32 te_default_metric = 35 [json_name = "te-default-metric"];
                  uint32 link_protect_type = 36 [json_name = "link-protect-type"];
                  string mpls_protocol_mask = 37 [json_name = "mpls-protocol-mask"];
                  uint32 igp_metric = 38 [json_name = "igp-metric"];
                  string shared_risk_link_group = 39 [json_name = "shared-risk-link-group"];
                  string opaque_link_properties = 40 [json_name = "opaque-link-properties"];
                  string link_name = 41 [json_name = "link-name"];
                  string adj_segment_id = 42 [json_name = "adj-segment-id"];
                  string lan_adj_segment_id = 43 [json_name = "lan-adj-segment-id"];
                  string unreserved_bandwidth = 44 [json_name = "unreserved-bandwidth"];
                  string bandwidth_constraint_model = 45 [json_name = "bandwidth-constraint-model"];
                  string bandwidth_constraint = 46 [json_name = "bandwidth-constraint"];
                  string local_overbooking_multiplier = 47 [json_name = "local-overbooking-multiplier"];
                  string bandwidth_constraint_model_standard = 48 [json_name = "bandwidth-constraint-model-standard"];
                  string bandwidth_constraint_standard = 49 [json_name = "bandwidth-constraint-standard"];
                  uint32 sid_label = 50 [json_name = "sid-label"];
                  uint32 peer_set_sid_label = 51 [json_name = "peer-set-sid-label"];
                  uint32 min_delay = 52 [json_name = "min-delay"];
                  uint32 max_delay = 53 [json_name = "max-delay"];
                  uint32 mt_id = 54 [json_name = "mt-id"];
                  string srv6_endx_sid = 55 [json_name = "srv6-endx-sid"];
                  string srv6_lan_endx_sid = 56 [json_name = "srv6-lan-endx-sid"];
                  uint32 link_local_id = 57 [json_name = "link-local-id"];
                  uint32 link_remote_id = 58 [json_name = "link-remote-id"];
               }
               repeated LinkRoute link_route = 1 [json_name = "link-route"];
            }
            LinkRoutes link_routes = 2 [json_name = "link-routes"];
            message NodeRoutes {
               message NodeRoute {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  enum Type {
                     INVALID_ENUM_VALUE_Type = 0;
                     Type_NODE = 1;
                     Type_LINK = 2;
                     Type_IPV4X_PREFIXX_ROUTE = 3;
                     Type_IPV6X_PREFIXX_ROUTE = 4;
                     Type_SRV6X_SIDX_ROUTE = 6;
                  };
                  Type type = 2 [json_name = "type"];
                  string network = 3 [json_name = "network"];
                  string from = 4 [json_name = "from"];
                  enum Protocol {
                     INVALID_ENUM_VALUE_Protocol = 0;
                     Protocol_ISX_ISX_LEVELX_1 = 1;
                     Protocol_ISX_ISX_LEVELX_2 = 2;
                     Protocol_OSPF = 3;
                     Protocol_DIRECT = 4;
                     Protocol_STATIC = 5;
                     Protocol_OSPFV3 = 6;
                     Protocol_BGP = 7;
                     Protocol_SEGMENTX_ROUTING = 9;
                  };
                  Protocol protocol = 5 [json_name = "protocol"];
                  uint64 identifier = 6 [json_name = "identifier"];
                  string nexthop = 7 [json_name = "nexthop"];
                  string peer_router_id = 8 [json_name = "peer-router-id"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 9 [json_name = "route-type"];
                  uint32 local_preference = 10 [json_name = "local-preference"];
                  uint32 preferred_value = 11 [json_name = "preferred-value"];
                  uint32 preference = 12 [json_name = "preference"];
                  string path_as = 13 [json_name = "path-as"];
                  string originator = 14 [json_name = "originator"];
                  uint32 med = 15 [json_name = "med"];
                  string flag_string = 16 [json_name = "flag-string"];
                  string worse_reason = 17 [json_name = "worse-reason"];
                  uint32 in_label = 18 [json_name = "in-label"];
                  uint32 out_label = 19 [json_name = "out-label"];
                  uint32 time = 20 [json_name = "time"];
                  string interface_name = 21 [json_name = "interface-name"];
                  string relay_nexthop = 22 [json_name = "relay-nexthop"];
                  string discard_attribute = 23 [json_name = "discard-attribute"];
                  uint32 peer_count = 24 [json_name = "peer-count"];
                  string sending_peers = 25 [json_name = "sending-peers"];
                  string advertise_nexthop = 26 [json_name = "advertise-nexthop"];
                  string opaque_node_properties = 27 [json_name = "opaque-node-properties"];
                  string mt_id_list = 28 [json_name = "mt-id-list"];
                  string node_name = 29 [json_name = "node-name"];
                  string isis_area_id = 30 [json_name = "isis-area-id"];
                  string sid_label_binding = 31 [json_name = "sid-label-binding"];
                  string sr_capabilities = 32 [json_name = "sr-capabilities"];
                  string sr_algorithm = 33 [json_name = "sr-algorithm"];
                  string node_flags = 34 [json_name = "node-flags"];
                  string ipv4_local_node_router_id = 35 [json_name = "ipv4-local-node-router-id"];
                  string ipv6_local_node_router_id = 36 [json_name = "ipv6-local-node-router-id"];
                  string sr_local_block = 37 [json_name = "sr-local-block"];
                  string msd_type_value = 38 [json_name = "msd-type-value"];
                  string srv6_capabilities = 39 [json_name = "srv6-capabilities"];
               }
               repeated NodeRoute node_route = 1 [json_name = "node-route"];
            }
            NodeRoutes node_routes = 3 [json_name = "node-routes"];
            message Srv6SidRoutes {
               message Srv6SidRoute {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  enum Type {
                     INVALID_ENUM_VALUE_Type = 0;
                     Type_NODE = 1;
                     Type_LINK = 2;
                     Type_IPV4X_PREFIXX_ROUTE = 3;
                     Type_IPV6X_PREFIXX_ROUTE = 4;
                     Type_SRV6X_SIDX_ROUTE = 6;
                  };
                  Type type = 2 [json_name = "type"];
                  string network = 3 [json_name = "network"];
                  string from = 4 [json_name = "from"];
                  enum Protocol {
                     INVALID_ENUM_VALUE_Protocol = 0;
                     Protocol_ISX_ISX_LEVELX_1 = 1;
                     Protocol_ISX_ISX_LEVELX_2 = 2;
                     Protocol_OSPF = 3;
                     Protocol_DIRECT = 4;
                     Protocol_STATIC = 5;
                     Protocol_OSPFV3 = 6;
                     Protocol_BGP = 7;
                     Protocol_SEGMENTX_ROUTING = 9;
                  };
                  Protocol protocol = 5 [json_name = "protocol"];
                  uint64 identifier = 6 [json_name = "identifier"];
                  string nexthop = 7 [json_name = "nexthop"];
                  string peer_router_id = 8 [json_name = "peer-router-id"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 9 [json_name = "route-type"];
                  uint32 local_preference = 10 [json_name = "local-preference"];
                  uint32 preferred_value = 11 [json_name = "preferred-value"];
                  uint32 preference = 12 [json_name = "preference"];
                  string path_as = 13 [json_name = "path-as"];
                  string originator = 14 [json_name = "originator"];
                  uint32 med = 15 [json_name = "med"];
                  string flag_string = 16 [json_name = "flag-string"];
                  string worse_reason = 17 [json_name = "worse-reason"];
                  uint32 in_label = 18 [json_name = "in-label"];
                  uint32 out_label = 19 [json_name = "out-label"];
                  uint32 time = 20 [json_name = "time"];
                  string interface_name = 21 [json_name = "interface-name"];
                  string relay_nexthop = 22 [json_name = "relay-nexthop"];
                  string discard_attribute = 23 [json_name = "discard-attribute"];
                  uint32 peer_count = 24 [json_name = "peer-count"];
                  string sending_peers = 25 [json_name = "sending-peers"];
                  string advertise_nexthop = 26 [json_name = "advertise-nexthop"];
                  string srv6_sid_info = 27 [json_name = "srv6-sid-info"];
                  string srv6_endpoint_function = 28 [json_name = "srv6-endpoint-function"];
                  uint32 mt_id = 29 [json_name = "mt-id"];
                  string srv6_sid_structure = 30 [json_name = "srv6-sid-structure"];
               }
               repeated Srv6SidRoute srv6sid_route = 1 [json_name = "srv6sid-route"];
            }
            Srv6SidRoutes srv6sid_routes = 4 [json_name = "srv6sid-routes"];
            message PeerAdvertiseSrv6SidRoutes {
               message PeerAdvertiseSrv6SidRoute {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string remote_peer_address = 2 [json_name = "remote-peer-address"];
                  enum Type {
                     INVALID_ENUM_VALUE_Type = 0;
                     Type_NODE = 1;
                     Type_LINK = 2;
                     Type_IPV4X_PREFIXX_ROUTE = 3;
                     Type_IPV6X_PREFIXX_ROUTE = 4;
                     Type_SRV6X_SIDX_ROUTE = 6;
                  };
                  Type type = 3 [json_name = "type"];
                  string network = 4 [json_name = "network"];
                  string from = 5 [json_name = "from"];
                  enum Protocol {
                     INVALID_ENUM_VALUE_Protocol = 0;
                     Protocol_ISX_ISX_LEVELX_1 = 1;
                     Protocol_ISX_ISX_LEVELX_2 = 2;
                     Protocol_OSPF = 3;
                     Protocol_DIRECT = 4;
                     Protocol_STATIC = 5;
                     Protocol_OSPFV3 = 6;
                     Protocol_BGP = 7;
                     Protocol_SEGMENTX_ROUTING = 9;
                  };
                  Protocol protocol = 6 [json_name = "protocol"];
                  uint64 identifier = 7 [json_name = "identifier"];
                  string nexthop = 8 [json_name = "nexthop"];
                  string peer_router_id = 9 [json_name = "peer-router-id"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 10 [json_name = "route-type"];
                  uint32 local_preference = 11 [json_name = "local-preference"];
                  uint32 preferred_value = 12 [json_name = "preferred-value"];
                  uint32 preference = 13 [json_name = "preference"];
                  string path_as = 14 [json_name = "path-as"];
                  string originator = 15 [json_name = "originator"];
                  uint32 med = 16 [json_name = "med"];
                  string flag_string = 17 [json_name = "flag-string"];
                  string worse_reason = 18 [json_name = "worse-reason"];
                  uint32 in_label = 19 [json_name = "in-label"];
                  uint32 out_label = 20 [json_name = "out-label"];
                  uint32 time = 21 [json_name = "time"];
                  string interface_name = 22 [json_name = "interface-name"];
                  string relay_nexthop = 23 [json_name = "relay-nexthop"];
                  string discard_attribute = 24 [json_name = "discard-attribute"];
                  uint32 peer_count = 25 [json_name = "peer-count"];
                  string sending_peers = 26 [json_name = "sending-peers"];
                  string advertise_nexthop = 27 [json_name = "advertise-nexthop"];
                  string srv6_sid_info = 28 [json_name = "srv6-sid-info"];
                  string srv6_endpoint_function = 29 [json_name = "srv6-endpoint-function"];
                  uint32 mt_id = 30 [json_name = "mt-id"];
                  string srv6_sid_structure = 31 [json_name = "srv6-sid-structure"];
               }
               repeated PeerAdvertiseSrv6SidRoute peer_advertise_srv6sid_route = 1 [json_name = "peer-advertise-srv6sid-route"];
            }
            PeerAdvertiseSrv6SidRoutes peer_advertise_srv6sid_routes = 5 [json_name = "peer-advertise-srv6sid-routes"];
            message PeerReceiveSrv6SidRoutes {
               message PeerReceiveSrv6SidRoute {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string remote_peer_address = 2 [json_name = "remote-peer-address"];
                  enum Type {
                     INVALID_ENUM_VALUE_Type = 0;
                     Type_NODE = 1;
                     Type_LINK = 2;
                     Type_IPV4X_PREFIXX_ROUTE = 3;
                     Type_IPV6X_PREFIXX_ROUTE = 4;
                     Type_SRV6X_SIDX_ROUTE = 6;
                  };
                  Type type = 3 [json_name = "type"];
                  string network = 4 [json_name = "network"];
                  string from = 5 [json_name = "from"];
                  enum Protocol {
                     INVALID_ENUM_VALUE_Protocol = 0;
                     Protocol_ISX_ISX_LEVELX_1 = 1;
                     Protocol_ISX_ISX_LEVELX_2 = 2;
                     Protocol_OSPF = 3;
                     Protocol_DIRECT = 4;
                     Protocol_STATIC = 5;
                     Protocol_OSPFV3 = 6;
                     Protocol_BGP = 7;
                     Protocol_SEGMENTX_ROUTING = 9;
                  };
                  Protocol protocol = 6 [json_name = "protocol"];
                  uint64 identifier = 7 [json_name = "identifier"];
                  string nexthop = 8 [json_name = "nexthop"];
                  string peer_router_id = 9 [json_name = "peer-router-id"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 10 [json_name = "route-type"];
                  uint32 local_preference = 11 [json_name = "local-preference"];
                  uint32 preferred_value = 12 [json_name = "preferred-value"];
                  uint32 preference = 13 [json_name = "preference"];
                  string path_as = 14 [json_name = "path-as"];
                  string originator = 15 [json_name = "originator"];
                  uint32 med = 16 [json_name = "med"];
                  string flag_string = 17 [json_name = "flag-string"];
                  string worse_reason = 18 [json_name = "worse-reason"];
                  uint32 in_label = 19 [json_name = "in-label"];
                  uint32 out_label = 20 [json_name = "out-label"];
                  uint32 time = 21 [json_name = "time"];
                  string interface_name = 22 [json_name = "interface-name"];
                  string relay_nexthop = 23 [json_name = "relay-nexthop"];
                  string discard_attribute = 24 [json_name = "discard-attribute"];
                  uint32 peer_count = 25 [json_name = "peer-count"];
                  string sending_peers = 26 [json_name = "sending-peers"];
                  string advertise_nexthop = 27 [json_name = "advertise-nexthop"];
                  string srv6_sid_info = 28 [json_name = "srv6-sid-info"];
                  string srv6_endpoint_function = 29 [json_name = "srv6-endpoint-function"];
                  uint32 mt_id = 30 [json_name = "mt-id"];
                  string srv6_sid_structure = 31 [json_name = "srv6-sid-structure"];
               }
               repeated PeerReceiveSrv6SidRoute peer_receive_srv6sid_route = 1 [json_name = "peer-receive-srv6sid-route"];
            }
            PeerReceiveSrv6SidRoutes peer_receive_srv6sid_routes = 6 [json_name = "peer-receive-srv6sid-routes"];
            message PeerAdvertiseLinkRoutes {
               message PeerAdvertiseLinkRoute {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string remote_peer_address = 2 [json_name = "remote-peer-address"];
                  enum Type {
                     INVALID_ENUM_VALUE_Type = 0;
                     Type_NODE = 1;
                     Type_LINK = 2;
                     Type_IPV4X_PREFIXX_ROUTE = 3;
                     Type_IPV6X_PREFIXX_ROUTE = 4;
                     Type_SRV6X_SIDX_ROUTE = 6;
                  };
                  Type type = 3 [json_name = "type"];
                  string network = 4 [json_name = "network"];
                  string from = 5 [json_name = "from"];
                  enum Protocol {
                     INVALID_ENUM_VALUE_Protocol = 0;
                     Protocol_ISX_ISX_LEVELX_1 = 1;
                     Protocol_ISX_ISX_LEVELX_2 = 2;
                     Protocol_OSPF = 3;
                     Protocol_DIRECT = 4;
                     Protocol_STATIC = 5;
                     Protocol_OSPFV3 = 6;
                     Protocol_BGP = 7;
                     Protocol_SEGMENTX_ROUTING = 9;
                  };
                  Protocol protocol = 6 [json_name = "protocol"];
                  uint64 identifier = 7 [json_name = "identifier"];
                  string nexthop = 8 [json_name = "nexthop"];
                  string peer_router_id = 9 [json_name = "peer-router-id"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 10 [json_name = "route-type"];
                  uint32 local_preference = 11 [json_name = "local-preference"];
                  uint32 preferred_value = 12 [json_name = "preferred-value"];
                  uint32 preference = 13 [json_name = "preference"];
                  string path_as = 14 [json_name = "path-as"];
                  string originator = 15 [json_name = "originator"];
                  uint32 med = 16 [json_name = "med"];
                  string flag_string = 17 [json_name = "flag-string"];
                  string worse_reason = 18 [json_name = "worse-reason"];
                  uint32 in_label = 19 [json_name = "in-label"];
                  uint32 out_label = 20 [json_name = "out-label"];
                  uint32 time = 21 [json_name = "time"];
                  string interface_name = 22 [json_name = "interface-name"];
                  string relay_nexthop = 23 [json_name = "relay-nexthop"];
                  string discard_attribute = 24 [json_name = "discard-attribute"];
                  uint32 peer_count = 25 [json_name = "peer-count"];
                  string sending_peers = 26 [json_name = "sending-peers"];
                  string advertise_nexthop = 27 [json_name = "advertise-nexthop"];
                  string ipv4_local_node_router_id = 28 [json_name = "ipv4-local-node-router-id"];
                  string ipv6_local_node_router_id = 29 [json_name = "ipv6-local-node-router-id"];
                  string ipv4_remote_node_router_id = 30 [json_name = "ipv4-remote-node-router-id"];
                  string ipv6_remote_node_router_id = 31 [json_name = "ipv6-remote-node-router-id"];
                  string administrative_group = 32 [json_name = "administrative-group"];
                  uint32 maximum_link_bandwidth = 33 [json_name = "maximum-link-bandwidth"];
                  uint32 maximum_reservable_bandwidth = 34 [json_name = "maximum-reservable-bandwidth"];
                  string maximum_unreserved_bandwidth = 35 [json_name = "maximum-unreserved-bandwidth"];
                  uint32 te_default_metric = 36 [json_name = "te-default-metric"];
                  uint32 link_protect_type = 37 [json_name = "link-protect-type"];
                  string mpls_protocol_mask = 38 [json_name = "mpls-protocol-mask"];
                  uint32 igp_metric = 39 [json_name = "igp-metric"];
                  string shared_risk_link_group = 40 [json_name = "shared-risk-link-group"];
                  string opaque_link_properties = 41 [json_name = "opaque-link-properties"];
                  string link_name = 42 [json_name = "link-name"];
                  string adj_segment_id = 43 [json_name = "adj-segment-id"];
                  string lan_adj_segment_id = 44 [json_name = "lan-adj-segment-id"];
                  string unreserved_bandwidth = 45 [json_name = "unreserved-bandwidth"];
                  string bandwidth_constraint_model = 46 [json_name = "bandwidth-constraint-model"];
                  string bandwidth_constraint = 47 [json_name = "bandwidth-constraint"];
                  string local_overbooking_multiplier = 48 [json_name = "local-overbooking-multiplier"];
                  string bandwidth_constraint_model_standard = 49 [json_name = "bandwidth-constraint-model-standard"];
                  string bandwidth_constraint_standard = 50 [json_name = "bandwidth-constraint-standard"];
                  uint32 sid_label = 51 [json_name = "sid-label"];
                  uint32 peer_set_sid_label = 52 [json_name = "peer-set-sid-label"];
                  uint32 min_delay = 53 [json_name = "min-delay"];
                  uint32 max_delay = 54 [json_name = "max-delay"];
                  uint32 mt_id = 55 [json_name = "mt-id"];
                  string srv6_endx_sid = 56 [json_name = "srv6-endx-sid"];
                  string srv6_lan_endx_sid = 57 [json_name = "srv6-lan-endx-sid"];
                  uint32 link_local_id = 58 [json_name = "link-local-id"];
                  uint32 link_remote_id = 59 [json_name = "link-remote-id"];
               }
               repeated PeerAdvertiseLinkRoute peer_advertise_link_route = 1 [json_name = "peer-advertise-link-route"];
            }
            PeerAdvertiseLinkRoutes peer_advertise_link_routes = 7 [json_name = "peer-advertise-link-routes"];
            message PeerReceiveLinkRoutes {
               message PeerReceiveLinkRoute {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string remote_peer_address = 2 [json_name = "remote-peer-address"];
                  enum Type {
                     INVALID_ENUM_VALUE_Type = 0;
                     Type_NODE = 1;
                     Type_LINK = 2;
                     Type_IPV4X_PREFIXX_ROUTE = 3;
                     Type_IPV6X_PREFIXX_ROUTE = 4;
                     Type_SRV6X_SIDX_ROUTE = 6;
                  };
                  Type type = 3 [json_name = "type"];
                  string network = 4 [json_name = "network"];
                  string from = 5 [json_name = "from"];
                  enum Protocol {
                     INVALID_ENUM_VALUE_Protocol = 0;
                     Protocol_ISX_ISX_LEVELX_1 = 1;
                     Protocol_ISX_ISX_LEVELX_2 = 2;
                     Protocol_OSPF = 3;
                     Protocol_DIRECT = 4;
                     Protocol_STATIC = 5;
                     Protocol_OSPFV3 = 6;
                     Protocol_BGP = 7;
                     Protocol_SEGMENTX_ROUTING = 9;
                  };
                  Protocol protocol = 6 [json_name = "protocol"];
                  uint64 identifier = 7 [json_name = "identifier"];
                  string nexthop = 8 [json_name = "nexthop"];
                  string peer_router_id = 9 [json_name = "peer-router-id"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 10 [json_name = "route-type"];
                  uint32 local_preference = 11 [json_name = "local-preference"];
                  uint32 preferred_value = 12 [json_name = "preferred-value"];
                  uint32 preference = 13 [json_name = "preference"];
                  string path_as = 14 [json_name = "path-as"];
                  string originator = 15 [json_name = "originator"];
                  uint32 med = 16 [json_name = "med"];
                  string flag_string = 17 [json_name = "flag-string"];
                  string worse_reason = 18 [json_name = "worse-reason"];
                  uint32 in_label = 19 [json_name = "in-label"];
                  uint32 out_label = 20 [json_name = "out-label"];
                  uint32 time = 21 [json_name = "time"];
                  string interface_name = 22 [json_name = "interface-name"];
                  string relay_nexthop = 23 [json_name = "relay-nexthop"];
                  string discard_attribute = 24 [json_name = "discard-attribute"];
                  uint32 peer_count = 25 [json_name = "peer-count"];
                  string sending_peers = 26 [json_name = "sending-peers"];
                  string advertise_nexthop = 27 [json_name = "advertise-nexthop"];
                  string ipv4_local_node_router_id = 28 [json_name = "ipv4-local-node-router-id"];
                  string ipv6_local_node_router_id = 29 [json_name = "ipv6-local-node-router-id"];
                  string ipv4_remote_node_router_id = 30 [json_name = "ipv4-remote-node-router-id"];
                  string ipv6_remote_node_router_id = 31 [json_name = "ipv6-remote-node-router-id"];
                  string administrative_group = 32 [json_name = "administrative-group"];
                  uint32 maximum_link_bandwidth = 33 [json_name = "maximum-link-bandwidth"];
                  uint32 maximum_reservable_bandwidth = 34 [json_name = "maximum-reservable-bandwidth"];
                  string maximum_unreserved_bandwidth = 35 [json_name = "maximum-unreserved-bandwidth"];
                  uint32 te_default_metric = 36 [json_name = "te-default-metric"];
                  uint32 link_protect_type = 37 [json_name = "link-protect-type"];
                  string mpls_protocol_mask = 38 [json_name = "mpls-protocol-mask"];
                  uint32 igp_metric = 39 [json_name = "igp-metric"];
                  string shared_risk_link_group = 40 [json_name = "shared-risk-link-group"];
                  string opaque_link_properties = 41 [json_name = "opaque-link-properties"];
                  string link_name = 42 [json_name = "link-name"];
                  string adj_segment_id = 43 [json_name = "adj-segment-id"];
                  string lan_adj_segment_id = 44 [json_name = "lan-adj-segment-id"];
                  string unreserved_bandwidth = 45 [json_name = "unreserved-bandwidth"];
                  string bandwidth_constraint_model = 46 [json_name = "bandwidth-constraint-model"];
                  string bandwidth_constraint = 47 [json_name = "bandwidth-constraint"];
                  string local_overbooking_multiplier = 48 [json_name = "local-overbooking-multiplier"];
                  string bandwidth_constraint_model_standard = 49 [json_name = "bandwidth-constraint-model-standard"];
                  string bandwidth_constraint_standard = 50 [json_name = "bandwidth-constraint-standard"];
                  uint32 sid_label = 51 [json_name = "sid-label"];
                  uint32 peer_set_sid_label = 52 [json_name = "peer-set-sid-label"];
                  uint32 min_delay = 53 [json_name = "min-delay"];
                  uint32 max_delay = 54 [json_name = "max-delay"];
                  uint32 mt_id = 55 [json_name = "mt-id"];
                  string srv6_endx_sid = 56 [json_name = "srv6-endx-sid"];
                  string srv6_lan_endx_sid = 57 [json_name = "srv6-lan-endx-sid"];
                  uint32 link_local_id = 58 [json_name = "link-local-id"];
                  uint32 link_remote_id = 59 [json_name = "link-remote-id"];
               }
               repeated PeerReceiveLinkRoute peer_receive_link_route = 1 [json_name = "peer-receive-link-route"];
            }
            PeerReceiveLinkRoutes peer_receive_link_routes = 8 [json_name = "peer-receive-link-routes"];
            message Statistic {
               uint32 total_number = 1 [json_name = "total-number"];
               uint32 node_route_number = 2 [json_name = "node-route-number"];
               uint32 link_route_number = 3 [json_name = "link-route-number"];
               uint32 ipv4_prefix_route_number = 4 [json_name = "ipv4-prefix-route-number"];
               uint32 ipv6_prefix_route_number = 5 [json_name = "ipv6-prefix-route-number"];
               uint32 te_policy_route_number = 6 [json_name = "te-policy-route-number"];
               uint32 srv6_sid_route_number = 7 [json_name = "srv6-sid-route-number"];
            }
            Statistic statistic = 9 [json_name = "statistic"];
            message TePolicyRoutes {
               message TePolicyRoute {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string network = 2 [json_name = "network"];
                  string from = 3 [json_name = "from"];
                  enum Protocol {
                     INVALID_ENUM_VALUE_Protocol = 0;
                     Protocol_ISX_ISX_LEVELX_1 = 1;
                     Protocol_ISX_ISX_LEVELX_2 = 2;
                     Protocol_OSPF = 3;
                     Protocol_DIRECT = 4;
                     Protocol_STATIC = 5;
                     Protocol_OSPFV3 = 6;
                     Protocol_BGP = 7;
                     Protocol_SEGMENTX_ROUTING = 9;
                  };
                  Protocol protocol = 4 [json_name = "protocol"];
                  uint64 identifier = 5 [json_name = "identifier"];
                  string peer_router_id = 6 [json_name = "peer-router-id"];
                  string nexthop = 7 [json_name = "nexthop"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 8 [json_name = "route-type"];
                  uint32 local_preference = 9 [json_name = "local-preference"];
                  uint32 preferred_value = 10 [json_name = "preferred-value"];
                  uint32 preference = 11 [json_name = "preference"];
                  string originator = 12 [json_name = "originator"];
                  uint32 med = 13 [json_name = "med"];
                  string flag_string = 14 [json_name = "flag-string"];
                  uint32 in_label = 15 [json_name = "in-label"];
                  uint32 out_label = 16 [json_name = "out-label"];
                  uint32 time = 17 [json_name = "time"];
                  string interface_name = 18 [json_name = "interface-name"];
                  string relay_nexthop = 19 [json_name = "relay-nexthop"];
                  uint32 peer_count = 20 [json_name = "peer-count"];
                  string advertise_nexthop = 21 [json_name = "advertise-nexthop"];
                  uint32 bsid_flag = 22 [json_name = "bsid-flag"];
                  string bsid_sid = 23 [json_name = "bsid-sid"];
                  string bsid_prov_sid = 24 [json_name = "bsid-prov-sid"];
                  uint32 candidate_path_priority = 25 [json_name = "candidate-path-priority"];
                  uint32 candidate_path_flag = 26 [json_name = "candidate-path-flag"];
                  uint32 candidate_path_preference = 27 [json_name = "candidate-path-preference"];
                  uint32 segment_list_count = 28 [json_name = "segment-list-count"];
                  string worse_reason = 29 [json_name = "worse-reason"];
               }
               repeated TePolicyRoute te_policy_route = 1 [json_name = "te-policy-route"];
            }
            TePolicyRoutes te_policy_routes = 10 [json_name = "te-policy-routes"];
         }
         LinkStateUnicast link_state_unicast = 9 [json_name = "link-state-unicast"];
         message Ipv4Mvpn {
            message NgType1Routes {
               message NgType1Route {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string route_distinguisher = 2 [json_name = "route-distinguisher"];
                  string prefix = 3 [json_name = "prefix"];
                  string from = 4 [json_name = "from"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 5 [json_name = "route-type"];
                  string ng_route_type = 6 [json_name = "ng-route-type"];
                  uint32 im_table_id = 7 [json_name = "im-table-id"];
                  string nexthop = 8 [json_name = "nexthop"];
                  uint32 local_preference = 9 [json_name = "local-preference"];
                  uint32 preferred_value = 10 [json_name = "preferred-value"];
                  uint32 preference = 11 [json_name = "preference"];
                  string path_as = 12 [json_name = "path-as"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 13 [json_name = "origin"];
                  uint32 med = 14 [json_name = "med"];
                  string flag_string = 15 [json_name = "flag-string"];
                  string worse_reason = 16 [json_name = "worse-reason"];
                  string sending_peers = 17 [json_name = "sending-peers"];
                  uint32 time = 18 [json_name = "time"];
                  string community = 19 [json_name = "community"];
                  string large_community = 20 [json_name = "large-community"];
                  string ext_community = 21 [json_name = "ext-community"];
                  string interface_name = 22 [json_name = "interface-name"];
                  string originator = 23 [json_name = "originator"];
                  string cluster_list = 24 [json_name = "cluster-list"];
                  string remote_route_id = 25 [json_name = "remote-route-id"];
                  string relay_nexthop = 26 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 27 [json_name = "relay-tunnel-name"];
                  uint32 in_label = 28 [json_name = "in-label"];
                  uint32 out_label = 29 [json_name = "out-label"];
                  string as_ip = 30 [json_name = "as-ip"];
                  string advertise_nexthop = 31 [json_name = "advertise-nexthop"];
                  string pmsi = 32 [json_name = "pmsi"];
               }
               repeated NgType1Route ng_type1_route = 1 [json_name = "ng-type1-route"];
            }
            NgType1Routes ng_type1_routes = 1 [json_name = "ng-type1-routes"];
            message NgType7Routes {
               message NgType7Route {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string route_distinguisher = 2 [json_name = "route-distinguisher"];
                  string prefix = 3 [json_name = "prefix"];
                  string from = 4 [json_name = "from"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 5 [json_name = "route-type"];
                  string ng_route_type = 6 [json_name = "ng-route-type"];
                  uint32 im_table_id = 7 [json_name = "im-table-id"];
                  string nexthop = 8 [json_name = "nexthop"];
                  uint32 local_preference = 9 [json_name = "local-preference"];
                  uint32 preferred_value = 10 [json_name = "preferred-value"];
                  uint32 preference = 11 [json_name = "preference"];
                  string path_as = 12 [json_name = "path-as"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 13 [json_name = "origin"];
                  uint32 med = 14 [json_name = "med"];
                  string flag_string = 15 [json_name = "flag-string"];
                  string worse_reason = 16 [json_name = "worse-reason"];
                  string sending_peers = 17 [json_name = "sending-peers"];
                  uint32 time = 18 [json_name = "time"];
                  string community = 19 [json_name = "community"];
                  string large_community = 20 [json_name = "large-community"];
                  string ext_community = 21 [json_name = "ext-community"];
                  string interface_name = 22 [json_name = "interface-name"];
                  string originator = 23 [json_name = "originator"];
                  string cluster_list = 24 [json_name = "cluster-list"];
                  string remote_route_id = 25 [json_name = "remote-route-id"];
                  string relay_nexthop = 26 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 27 [json_name = "relay-tunnel-name"];
                  uint32 in_label = 28 [json_name = "in-label"];
                  uint32 out_label = 29 [json_name = "out-label"];
                  string as_ip = 30 [json_name = "as-ip"];
                  string advertise_nexthop = 31 [json_name = "advertise-nexthop"];
               }
               repeated NgType7Route ng_type7_route = 1 [json_name = "ng-type7-route"];
            }
            NgType7Routes ng_type7_routes = 2 [json_name = "ng-type7-routes"];
            message Statistics {
               message Statistic {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  uint32 total_number = 2 [json_name = "total-number"];
                  uint32 ng_type1_route_number = 3 [json_name = "ng-type1-route-number"];
                  uint32 ng_type2_route_number = 4 [json_name = "ng-type2-route-number"];
                  uint32 ng_type3_route_number = 5 [json_name = "ng-type3-route-number"];
                  uint32 ng_type4_route_number = 6 [json_name = "ng-type4-route-number"];
                  uint32 ng_type5_route_number = 7 [json_name = "ng-type5-route-number"];
                  uint32 ng_type6_route_number = 8 [json_name = "ng-type6-route-number"];
                  uint32 ng_type7_route_number = 9 [json_name = "ng-type7-route-number"];
               }
               repeated Statistic statistic = 1 [json_name = "statistic"];
            }
            Statistics statistics = 3 [json_name = "statistics"];
            message NgType3Routes {
               message NgType3Route {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string path_id = 2 [json_name = "path-id"];
                  string route_distinguisher = 3 [json_name = "route-distinguisher"];
                  string prefix = 4 [json_name = "prefix"];
                  string from = 5 [json_name = "from"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  string ng_route_type = 7 [json_name = "ng-route-type"];
                  uint32 im_table_id = 8 [json_name = "im-table-id"];
                  string nexthop = 9 [json_name = "nexthop"];
                  uint32 local_preference = 10 [json_name = "local-preference"];
                  uint32 preferred_value = 11 [json_name = "preferred-value"];
                  uint32 preference = 12 [json_name = "preference"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 13 [json_name = "origin"];
                  uint32 med = 14 [json_name = "med"];
                  string flag_string = 15 [json_name = "flag-string"];
                  string worse_reason = 16 [json_name = "worse-reason"];
                  uint32 time = 17 [json_name = "time"];
                  string interface_name = 18 [json_name = "interface-name"];
                  string originator = 19 [json_name = "originator"];
                  string remote_route_id = 20 [json_name = "remote-route-id"];
                  string relay_nexthop = 21 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 22 [json_name = "relay-tunnel-name"];
                  uint32 in_label = 23 [json_name = "in-label"];
                  uint32 out_label = 24 [json_name = "out-label"];
                  string advertise_nexthop = 25 [json_name = "advertise-nexthop"];
               }
               repeated NgType3Route ng_type3_route = 1 [json_name = "ng-type3-route"];
            }
            NgType3Routes ng_type3_routes = 4 [json_name = "ng-type3-routes"];
            message NgType4Routes {
               message NgType4Route {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string path_id = 2 [json_name = "path-id"];
                  string route_distinguisher = 3 [json_name = "route-distinguisher"];
                  string prefix = 4 [json_name = "prefix"];
                  string from = 5 [json_name = "from"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  string ng_route_type = 7 [json_name = "ng-route-type"];
                  uint32 im_table_id = 8 [json_name = "im-table-id"];
                  string nexthop = 9 [json_name = "nexthop"];
                  uint32 local_preference = 10 [json_name = "local-preference"];
                  uint32 preferred_value = 11 [json_name = "preferred-value"];
                  uint32 preference = 12 [json_name = "preference"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 13 [json_name = "origin"];
                  uint32 med = 14 [json_name = "med"];
                  string flag_string = 15 [json_name = "flag-string"];
                  string worse_reason = 16 [json_name = "worse-reason"];
                  uint32 time = 17 [json_name = "time"];
                  string interface_name = 18 [json_name = "interface-name"];
                  string originator = 19 [json_name = "originator"];
                  string remote_route_id = 20 [json_name = "remote-route-id"];
                  string relay_nexthop = 21 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 22 [json_name = "relay-tunnel-name"];
                  uint32 in_label = 23 [json_name = "in-label"];
                  uint32 out_label = 24 [json_name = "out-label"];
                  string advertise_nexthop = 25 [json_name = "advertise-nexthop"];
               }
               repeated NgType4Route ng_type4_route = 1 [json_name = "ng-type4-route"];
            }
            NgType4Routes ng_type4_routes = 5 [json_name = "ng-type4-routes"];
            message NgType5Routes {
               message NgType5Route {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string path_id = 2 [json_name = "path-id"];
                  string route_distinguisher = 3 [json_name = "route-distinguisher"];
                  string prefix = 4 [json_name = "prefix"];
                  string from = 5 [json_name = "from"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  string ng_route_type = 7 [json_name = "ng-route-type"];
                  uint32 im_table_id = 8 [json_name = "im-table-id"];
                  string nexthop = 9 [json_name = "nexthop"];
                  uint32 local_preference = 10 [json_name = "local-preference"];
                  uint32 preferred_value = 11 [json_name = "preferred-value"];
                  uint32 preference = 12 [json_name = "preference"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 13 [json_name = "origin"];
                  uint32 med = 14 [json_name = "med"];
                  string flag_string = 15 [json_name = "flag-string"];
                  string worse_reason = 16 [json_name = "worse-reason"];
                  uint32 time = 17 [json_name = "time"];
                  string interface_name = 18 [json_name = "interface-name"];
                  string originator = 19 [json_name = "originator"];
                  string remote_route_id = 20 [json_name = "remote-route-id"];
                  string relay_nexthop = 21 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 22 [json_name = "relay-tunnel-name"];
                  uint32 in_label = 23 [json_name = "in-label"];
                  uint32 out_label = 24 [json_name = "out-label"];
                  string advertise_nexthop = 25 [json_name = "advertise-nexthop"];
               }
               repeated NgType5Route ng_type5_route = 1 [json_name = "ng-type5-route"];
            }
            NgType5Routes ng_type5_routes = 6 [json_name = "ng-type5-routes"];
            message NgType6Routes {
               message NgType6Route {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string path_id = 2 [json_name = "path-id"];
                  string route_distinguisher = 3 [json_name = "route-distinguisher"];
                  string prefix = 4 [json_name = "prefix"];
                  string from = 5 [json_name = "from"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  string ng_route_type = 7 [json_name = "ng-route-type"];
                  uint32 im_table_id = 8 [json_name = "im-table-id"];
                  string nexthop = 9 [json_name = "nexthop"];
                  uint32 local_preference = 10 [json_name = "local-preference"];
                  uint32 preferred_value = 11 [json_name = "preferred-value"];
                  uint32 preference = 12 [json_name = "preference"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 13 [json_name = "origin"];
                  uint32 med = 14 [json_name = "med"];
                  string flag_string = 15 [json_name = "flag-string"];
                  string worse_reason = 16 [json_name = "worse-reason"];
                  uint32 time = 17 [json_name = "time"];
                  string interface_name = 18 [json_name = "interface-name"];
                  string originator = 19 [json_name = "originator"];
                  string remote_route_id = 20 [json_name = "remote-route-id"];
                  string relay_nexthop = 21 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 22 [json_name = "relay-tunnel-name"];
                  uint32 in_label = 23 [json_name = "in-label"];
                  uint32 out_label = 24 [json_name = "out-label"];
                  string advertise_nexthop = 25 [json_name = "advertise-nexthop"];
               }
               repeated NgType6Route ng_type6_route = 1 [json_name = "ng-type6-route"];
            }
            NgType6Routes ng_type6_routes = 7 [json_name = "ng-type6-routes"];
         }
         Ipv4Mvpn ipv4_mvpn = 10 [json_name = "ipv4-mvpn"];
         message Ipv6Mvpn {
            message NgType1Routes {
               message NgType1Route {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string route_distinguisher = 2 [json_name = "route-distinguisher"];
                  string prefix = 3 [json_name = "prefix"];
                  string from = 4 [json_name = "from"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 5 [json_name = "route-type"];
                  string ng_route_type = 6 [json_name = "ng-route-type"];
                  uint32 im_table_id = 7 [json_name = "im-table-id"];
                  string nexthop = 8 [json_name = "nexthop"];
                  uint32 local_preference = 9 [json_name = "local-preference"];
                  uint32 preferred_value = 10 [json_name = "preferred-value"];
                  uint32 preference = 11 [json_name = "preference"];
                  string path_as = 12 [json_name = "path-as"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 13 [json_name = "origin"];
                  uint32 med = 14 [json_name = "med"];
                  string flag_string = 15 [json_name = "flag-string"];
                  string worse_reason = 16 [json_name = "worse-reason"];
                  string sending_peers = 17 [json_name = "sending-peers"];
                  uint32 time = 18 [json_name = "time"];
                  string community = 19 [json_name = "community"];
                  string large_community = 20 [json_name = "large-community"];
                  string ext_community = 21 [json_name = "ext-community"];
                  string interface_name = 22 [json_name = "interface-name"];
                  string originator = 23 [json_name = "originator"];
                  string cluster_list = 24 [json_name = "cluster-list"];
                  string remote_route_id = 25 [json_name = "remote-route-id"];
                  string relay_nexthop = 26 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 27 [json_name = "relay-tunnel-name"];
                  uint32 in_label = 28 [json_name = "in-label"];
                  uint32 out_label = 29 [json_name = "out-label"];
                  string as_ip = 30 [json_name = "as-ip"];
                  string advertise_nexthop = 31 [json_name = "advertise-nexthop"];
                  string pmsi = 32 [json_name = "pmsi"];
               }
               repeated NgType1Route ng_type1_route = 1 [json_name = "ng-type1-route"];
            }
            NgType1Routes ng_type1_routes = 1 [json_name = "ng-type1-routes"];
            message NgType7Routes {
               message NgType7Route {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string route_distinguisher = 2 [json_name = "route-distinguisher"];
                  string prefix = 3 [json_name = "prefix"];
                  string from = 4 [json_name = "from"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 5 [json_name = "route-type"];
                  string ng_route_type = 6 [json_name = "ng-route-type"];
                  uint32 im_table_id = 7 [json_name = "im-table-id"];
                  string nexthop = 8 [json_name = "nexthop"];
                  uint32 local_preference = 9 [json_name = "local-preference"];
                  uint32 preferred_value = 10 [json_name = "preferred-value"];
                  uint32 preference = 11 [json_name = "preference"];
                  string path_as = 12 [json_name = "path-as"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 13 [json_name = "origin"];
                  uint32 med = 14 [json_name = "med"];
                  string flag_string = 15 [json_name = "flag-string"];
                  string worse_reason = 16 [json_name = "worse-reason"];
                  string sending_peers = 17 [json_name = "sending-peers"];
                  uint32 time = 18 [json_name = "time"];
                  string community = 19 [json_name = "community"];
                  string large_community = 20 [json_name = "large-community"];
                  string ext_community = 21 [json_name = "ext-community"];
                  string interface_name = 22 [json_name = "interface-name"];
                  string originator = 23 [json_name = "originator"];
                  string cluster_list = 24 [json_name = "cluster-list"];
                  string remote_route_id = 25 [json_name = "remote-route-id"];
                  string relay_nexthop = 26 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 27 [json_name = "relay-tunnel-name"];
                  uint32 in_label = 28 [json_name = "in-label"];
                  uint32 out_label = 29 [json_name = "out-label"];
                  string as_ip = 30 [json_name = "as-ip"];
                  string advertise_nexthop = 31 [json_name = "advertise-nexthop"];
               }
               repeated NgType7Route ng_type7_route = 1 [json_name = "ng-type7-route"];
            }
            NgType7Routes ng_type7_routes = 2 [json_name = "ng-type7-routes"];
            message Statistics {
               message Statistic {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  uint32 total_number = 2 [json_name = "total-number"];
                  uint32 ng_type1_route_number = 3 [json_name = "ng-type1-route-number"];
                  uint32 ng_type2_route_number = 4 [json_name = "ng-type2-route-number"];
                  uint32 ng_type3_route_number = 5 [json_name = "ng-type3-route-number"];
                  uint32 ng_type4_route_number = 6 [json_name = "ng-type4-route-number"];
                  uint32 ng_type5_route_number = 7 [json_name = "ng-type5-route-number"];
                  uint32 ng_type6_route_number = 8 [json_name = "ng-type6-route-number"];
                  uint32 ng_type7_route_number = 9 [json_name = "ng-type7-route-number"];
               }
               repeated Statistic statistic = 1 [json_name = "statistic"];
            }
            Statistics statistics = 3 [json_name = "statistics"];
            message NgType3Routes {
               message NgType3Route {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string path_id = 2 [json_name = "path-id"];
                  string route_distinguisher = 3 [json_name = "route-distinguisher"];
                  string prefix = 4 [json_name = "prefix"];
                  string from = 5 [json_name = "from"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  string ng_route_type = 7 [json_name = "ng-route-type"];
                  uint32 im_table_id = 8 [json_name = "im-table-id"];
                  string nexthop = 9 [json_name = "nexthop"];
                  uint32 local_preference = 10 [json_name = "local-preference"];
                  uint32 preferred_value = 11 [json_name = "preferred-value"];
                  uint32 preference = 12 [json_name = "preference"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 13 [json_name = "origin"];
                  uint32 med = 14 [json_name = "med"];
                  string flag_string = 15 [json_name = "flag-string"];
                  string worse_reason = 16 [json_name = "worse-reason"];
                  uint32 time = 17 [json_name = "time"];
                  string interface_name = 18 [json_name = "interface-name"];
                  string originator = 19 [json_name = "originator"];
                  string remote_route_id = 20 [json_name = "remote-route-id"];
                  string relay_nexthop = 21 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 22 [json_name = "relay-tunnel-name"];
                  uint32 in_label = 23 [json_name = "in-label"];
                  uint32 out_label = 24 [json_name = "out-label"];
                  string advertise_nexthop = 25 [json_name = "advertise-nexthop"];
               }
               repeated NgType3Route ng_type3_route = 1 [json_name = "ng-type3-route"];
            }
            NgType3Routes ng_type3_routes = 4 [json_name = "ng-type3-routes"];
            message NgType4Routes {
               message NgType4Route {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string path_id = 2 [json_name = "path-id"];
                  string route_distinguisher = 3 [json_name = "route-distinguisher"];
                  string prefix = 4 [json_name = "prefix"];
                  string from = 5 [json_name = "from"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  string ng_route_type = 7 [json_name = "ng-route-type"];
                  uint32 im_table_id = 8 [json_name = "im-table-id"];
                  string nexthop = 9 [json_name = "nexthop"];
                  uint32 local_preference = 10 [json_name = "local-preference"];
                  uint32 preferred_value = 11 [json_name = "preferred-value"];
                  uint32 preference = 12 [json_name = "preference"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 13 [json_name = "origin"];
                  uint32 med = 14 [json_name = "med"];
                  string flag_string = 15 [json_name = "flag-string"];
                  string worse_reason = 16 [json_name = "worse-reason"];
                  uint32 time = 17 [json_name = "time"];
                  string interface_name = 18 [json_name = "interface-name"];
                  string originator = 19 [json_name = "originator"];
                  string remote_route_id = 20 [json_name = "remote-route-id"];
                  string relay_nexthop = 21 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 22 [json_name = "relay-tunnel-name"];
                  uint32 in_label = 23 [json_name = "in-label"];
                  uint32 out_label = 24 [json_name = "out-label"];
                  string advertise_nexthop = 25 [json_name = "advertise-nexthop"];
               }
               repeated NgType4Route ng_type4_route = 1 [json_name = "ng-type4-route"];
            }
            NgType4Routes ng_type4_routes = 5 [json_name = "ng-type4-routes"];
            message NgType5Routes {
               message NgType5Route {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string path_id = 2 [json_name = "path-id"];
                  string route_distinguisher = 3 [json_name = "route-distinguisher"];
                  string prefix = 4 [json_name = "prefix"];
                  string from = 5 [json_name = "from"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  string ng_route_type = 7 [json_name = "ng-route-type"];
                  uint32 im_table_id = 8 [json_name = "im-table-id"];
                  string nexthop = 9 [json_name = "nexthop"];
                  uint32 local_preference = 10 [json_name = "local-preference"];
                  uint32 preferred_value = 11 [json_name = "preferred-value"];
                  uint32 preference = 12 [json_name = "preference"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 13 [json_name = "origin"];
                  uint32 med = 14 [json_name = "med"];
                  string flag_string = 15 [json_name = "flag-string"];
                  string worse_reason = 16 [json_name = "worse-reason"];
                  uint32 time = 17 [json_name = "time"];
                  string interface_name = 18 [json_name = "interface-name"];
                  string originator = 19 [json_name = "originator"];
                  string remote_route_id = 20 [json_name = "remote-route-id"];
                  string relay_nexthop = 21 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 22 [json_name = "relay-tunnel-name"];
                  uint32 in_label = 23 [json_name = "in-label"];
                  uint32 out_label = 24 [json_name = "out-label"];
                  string advertise_nexthop = 25 [json_name = "advertise-nexthop"];
               }
               repeated NgType5Route ng_type5_route = 1 [json_name = "ng-type5-route"];
            }
            NgType5Routes ng_type5_routes = 6 [json_name = "ng-type5-routes"];
            message NgType6Routes {
               message NgType6Route {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string path_id = 2 [json_name = "path-id"];
                  string route_distinguisher = 3 [json_name = "route-distinguisher"];
                  string prefix = 4 [json_name = "prefix"];
                  string from = 5 [json_name = "from"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  string ng_route_type = 7 [json_name = "ng-route-type"];
                  uint32 im_table_id = 8 [json_name = "im-table-id"];
                  string nexthop = 9 [json_name = "nexthop"];
                  uint32 local_preference = 10 [json_name = "local-preference"];
                  uint32 preferred_value = 11 [json_name = "preferred-value"];
                  uint32 preference = 12 [json_name = "preference"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 13 [json_name = "origin"];
                  uint32 med = 14 [json_name = "med"];
                  string flag_string = 15 [json_name = "flag-string"];
                  string worse_reason = 16 [json_name = "worse-reason"];
                  uint32 time = 17 [json_name = "time"];
                  string interface_name = 18 [json_name = "interface-name"];
                  string originator = 19 [json_name = "originator"];
                  string remote_route_id = 20 [json_name = "remote-route-id"];
                  string relay_nexthop = 21 [json_name = "relay-nexthop"];
                  string relay_tunnel_name = 22 [json_name = "relay-tunnel-name"];
                  uint32 in_label = 23 [json_name = "in-label"];
                  uint32 out_label = 24 [json_name = "out-label"];
                  string advertise_nexthop = 25 [json_name = "advertise-nexthop"];
               }
               repeated NgType6Route ng_type6_route = 1 [json_name = "ng-type6-route"];
            }
            NgType6Routes ng_type6_routes = 7 [json_name = "ng-type6-routes"];
         }
         Ipv6Mvpn ipv6_mvpn = 11 [json_name = "ipv6-mvpn"];
         message RoutingFlappings {
            message RoutingFlapping {
               string vpn_name = 1 [json_name = "vpn-name"];
               enum AddressFamily {
                  INVALID_ENUM_VALUE_AddressFamily = 0;
                  AddressFamily_IPV4UNI = 1;
                  AddressFamily_IPV4MULTI = 2;
                  AddressFamily_IPV4VPN = 3;
                  AddressFamily_IPV4LABELUNI = 4;
                  AddressFamily_IPV6UNI = 5;
                  AddressFamily_IPV6VPN = 6;
               };
               AddressFamily address_family = 2 [json_name = "address-family"];
               string prefix = 3 [json_name = "prefix"];
               uint32 mask_length = 4 [json_name = "mask-length"];
               string from = 5 [json_name = "from"];
               enum Origin {
                  INVALID_ENUM_VALUE_Origin = 0;
                  Origin_IGP = 1;
                  Origin_EGP = 2;
                  Origin_INCOMPLETE = 3;
               };
               Origin origin = 6 [json_name = "origin"];
               uint32 flaps = 7 [json_name = "flaps"];
               uint32 reuse_time = 8 [json_name = "reuse-time"];
               uint32 duration_time = 9 [json_name = "duration-time"];
            }
            repeated RoutingFlapping routing_flapping = 1 [json_name = "routing-flapping"];
         }
         RoutingFlappings routing_flappings = 12 [json_name = "routing-flappings"];
         message Ipv4Srpolicy {
            message Routes {
               message Route {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string prefix = 2 [json_name = "prefix"];
                  string from = 3 [json_name = "from"];
                  uint32 local_priority = 4 [json_name = "local-priority"];
                  uint32 preferred_value = 5 [json_name = "preferred-value"];
                  uint32 preference = 6 [json_name = "preference"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 7 [json_name = "origin"];
                  uint32 med = 8 [json_name = "med"];
                  string flag_string = 9 [json_name = "flag-string"];
                  uint32 time = 10 [json_name = "time"];
                  string originator = 11 [json_name = "originator"];
                  string remote_router_id = 12 [json_name = "remote-router-id"];
                  string interface_name = 13 [json_name = "interface-name"];
                  string relay_nexthop = 14 [json_name = "relay-nexthop"];
                  string worse_reason = 15 [json_name = "worse-reason"];
               }
               repeated Route route = 1 [json_name = "route"];
            }
            Routes routes = 1 [json_name = "routes"];
            message Statistic {
               uint32 total_number = 1 [json_name = "total-number"];
            }
            Statistic statistic = 2 [json_name = "statistic"];
         }
         Ipv4Srpolicy ipv4_srpolicy = 13 [json_name = "ipv4-srpolicy"];
         message L2Vpnad {
            message Statistic {
               uint32 total_number = 1 [json_name = "total-number"];
            }
            Statistic statistic = 1 [json_name = "statistic"];
         }
         L2Vpnad l2vpnad = 14 [json_name = "l2vpnad"];
         message Mdt {
            message Statistics {
               message Statistic {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  uint32 total_number = 2 [json_name = "total-number"];
                  uint32 cidr_route_number = 3 [json_name = "cidr-route-number"];
                  uint32 community_route_number = 4 [json_name = "community-route-number"];
                  uint32 different_origin_as_route_number = 5 [json_name = "different-origin-as-route-number"];
               }
               repeated Statistic statistic = 1 [json_name = "statistic"];
            }
            Statistics statistics = 1 [json_name = "statistics"];
         }
         Mdt mdt = 15 [json_name = "mdt"];
         message Rpd {
            message Statistic {
               uint32 total_number = 1 [json_name = "total-number"];
            }
            Statistic statistic = 1 [json_name = "statistic"];
         }
         Rpd rpd = 16 [json_name = "rpd"];
         message Vpntarget {
            message Statistic {
               uint32 total_number = 1 [json_name = "total-number"];
            }
            Statistic statistic = 1 [json_name = "statistic"];
         }
         Vpntarget vpntarget = 17 [json_name = "vpntarget"];
         message Ipv4VpnMulticast {
            message Statistic {
               uint32 total_number = 1 [json_name = "total-number"];
            }
            Statistic statistic = 1 [json_name = "statistic"];
         }
         Ipv4VpnMulticast ipv4_vpn_multicast = 18 [json_name = "ipv4-vpn-multicast"];
         message Ipv4Flow {
            message Routes {
               message Route {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string route_distinguisher = 2 [json_name = "route-distinguisher"];
                  uint32 index = 3 [json_name = "index"];
                  string route_generate_identity = 4 [json_name = "route-generate-identity"];
                  string from = 5 [json_name = "from"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  string path_id = 7 [json_name = "path-id"];
                  string remote_route_id = 8 [json_name = "remote-route-id"];
                  string relay_tunnel_name = 9 [json_name = "relay-tunnel-name"];
                  enum ValidationResult {
                     ValidationResult_NOTX_ENABLE = 0;
                     ValidationResult_CHECKING = 1;
                     ValidationResult_ACCEPT = 2;
                     ValidationResult_DISCARD = 3;
                  };
                  ValidationResult validation_result = 10 [json_name = "validation-result"];
                  bool reflect_client = 11 [json_name = "reflect-client"];
                  bool unknown_rule = 12 [json_name = "unknown-rule"];
                  uint32 med = 13 [json_name = "med"];
                  uint32 preferred_value = 14 [json_name = "preferred-value"];
                  uint32 local_preference = 15 [json_name = "local-preference"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 16 [json_name = "origin"];
                  string originator = 17 [json_name = "originator"];
                  uint32 time = 18 [json_name = "time"];
                  string flag_string = 19 [json_name = "flag-string"];
                  string worse_reason = 20 [json_name = "worse-reason"];
                  bool route_policy_distribute = 21 [json_name = "route-policy-distribute"];
                  string invalid_reason = 22 [json_name = "invalid-reason"];
                  string relay_tunnel_id = 23 [json_name = "relay-tunnel-id"];
               }
               repeated Route route = 1 [json_name = "route"];
            }
            Routes routes = 1 [json_name = "routes"];
            message Statistics {
               message Statistic {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  uint32 total_number = 2 [json_name = "total-number"];
               }
               repeated Statistic statistic = 1 [json_name = "statistic"];
            }
            Statistics statistics = 2 [json_name = "statistics"];
            message RedirectIpRelayInfos {
               message RedirectIpRelayInfo {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string route_distinguisher = 2 [json_name = "route-distinguisher"];
                  uint32 index = 3 [json_name = "index"];
                  string route_generate_identity = 4 [json_name = "route-generate-identity"];
                  string from = 5 [json_name = "from"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  string path_id = 7 [json_name = "path-id"];
                  string address = 8 [json_name = "address"];
                  string color = 9 [json_name = "color"];
                  enum OperationCode {
                     OperationCode_REDIRECT = 0;
                     OperationCode_COPY = 1;
                  };
                  OperationCode operation_code = 10 [json_name = "operation-code"];
                  string relay_ip_next_hop = 11 [json_name = "relay-ip-next-hop"];
                  string relay_ip_interface_name = 12 [json_name = "relay-ip-interface-name"];
                  string relay_tunnel_next_hop = 13 [json_name = "relay-tunnel-next-hop"];
                  string relay_tunnel_interface_name = 14 [json_name = "relay-tunnel-interface-name"];
                  string relay_tunnel_id = 15 [json_name = "relay-tunnel-id"];
               }
               repeated RedirectIpRelayInfo redirect_ip_relay_info = 1 [json_name = "redirect-ip-relay-info"];
            }
            RedirectIpRelayInfos redirect_ip_relay_infos = 3 [json_name = "redirect-ip-relay-infos"];
            message RedirectIpv6RelayInfos {
               message RedirectIpv6RelayInfo {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string route_distinguisher = 2 [json_name = "route-distinguisher"];
                  uint32 index = 3 [json_name = "index"];
                  string route_generate_identity = 4 [json_name = "route-generate-identity"];
                  string from = 5 [json_name = "from"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  string path_id = 7 [json_name = "path-id"];
                  string address = 8 [json_name = "address"];
                  string color = 9 [json_name = "color"];
                  enum OperationCode {
                     OperationCode_REDIRECT = 0;
                     OperationCode_COPY = 1;
                  };
                  OperationCode operation_code = 10 [json_name = "operation-code"];
                  string relay_tunnel_interface_name = 11 [json_name = "relay-tunnel-interface-name"];
                  string relay_tunnel_id = 12 [json_name = "relay-tunnel-id"];
                  string prefix_sid = 13 [json_name = "prefix-sid"];
               }
               repeated RedirectIpv6RelayInfo redirect_ipv6_relay_info = 1 [json_name = "redirect-ipv6-relay-info"];
            }
            RedirectIpv6RelayInfos redirect_ipv6_relay_infos = 4 [json_name = "redirect-ipv6-relay-infos"];
         }
         Ipv4Flow ipv4_flow = 19 [json_name = "ipv4-flow"];
         message Ipv6Flow {
            message Routes {
               message Route {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string route_distinguisher = 2 [json_name = "route-distinguisher"];
                  uint32 index = 3 [json_name = "index"];
                  string route_generate_identity = 4 [json_name = "route-generate-identity"];
                  string from = 5 [json_name = "from"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  string path_id = 7 [json_name = "path-id"];
                  string remote_route_id = 8 [json_name = "remote-route-id"];
                  string relay_tunnel_name = 9 [json_name = "relay-tunnel-name"];
                  enum ValidationResult {
                     ValidationResult_NOTX_ENABLE = 0;
                     ValidationResult_CHECKING = 1;
                     ValidationResult_ACCEPT = 2;
                     ValidationResult_DISCARD = 3;
                  };
                  ValidationResult validation_result = 10 [json_name = "validation-result"];
                  bool reflect_client = 11 [json_name = "reflect-client"];
                  bool unknown_rule = 12 [json_name = "unknown-rule"];
                  uint32 med = 13 [json_name = "med"];
                  uint32 preferred_value = 14 [json_name = "preferred-value"];
                  uint32 local_preference = 15 [json_name = "local-preference"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 16 [json_name = "origin"];
                  string originator = 17 [json_name = "originator"];
                  uint32 time = 18 [json_name = "time"];
                  string flag_string = 19 [json_name = "flag-string"];
                  string worse_reason = 20 [json_name = "worse-reason"];
                  bool route_policy_distribute = 21 [json_name = "route-policy-distribute"];
                  string invalid_reason = 22 [json_name = "invalid-reason"];
                  string relay_tunnel_id = 23 [json_name = "relay-tunnel-id"];
               }
               repeated Route route = 1 [json_name = "route"];
            }
            Routes routes = 1 [json_name = "routes"];
            message Statistics {
               message Statistic {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  uint32 total_number = 2 [json_name = "total-number"];
               }
               repeated Statistic statistic = 1 [json_name = "statistic"];
            }
            Statistics statistics = 2 [json_name = "statistics"];
            message RedirectIpv6RelayInfos {
               message RedirectIpv6RelayInfo {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string route_distinguisher = 2 [json_name = "route-distinguisher"];
                  uint32 index = 3 [json_name = "index"];
                  string route_generate_identity = 4 [json_name = "route-generate-identity"];
                  string from = 5 [json_name = "from"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  string path_id = 7 [json_name = "path-id"];
                  string address = 8 [json_name = "address"];
                  string color = 9 [json_name = "color"];
                  enum OperationCode {
                     OperationCode_REDIRECT = 0;
                     OperationCode_COPY = 1;
                  };
                  OperationCode operation_code = 10 [json_name = "operation-code"];
                  string relay_tunnel_interface_name = 11 [json_name = "relay-tunnel-interface-name"];
                  string relay_tunnel_id = 12 [json_name = "relay-tunnel-id"];
                  string prefix_sid = 13 [json_name = "prefix-sid"];
               }
               repeated RedirectIpv6RelayInfo redirect_ipv6_relay_info = 1 [json_name = "redirect-ipv6-relay-info"];
            }
            RedirectIpv6RelayInfos redirect_ipv6_relay_infos = 3 [json_name = "redirect-ipv6-relay-infos"];
         }
         Ipv6Flow ipv6_flow = 20 [json_name = "ipv6-flow"];
         message Vpnv4Flow {
            message Routes {
               message Route {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string route_distinguisher = 2 [json_name = "route-distinguisher"];
                  uint32 index = 3 [json_name = "index"];
                  string route_generate_identity = 4 [json_name = "route-generate-identity"];
                  string from = 5 [json_name = "from"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  string path_id = 7 [json_name = "path-id"];
                  string remote_route_id = 8 [json_name = "remote-route-id"];
                  string relay_tunnel_name = 9 [json_name = "relay-tunnel-name"];
                  enum ValidationResult {
                     ValidationResult_NOTX_ENABLE = 0;
                     ValidationResult_CHECKING = 1;
                     ValidationResult_ACCEPT = 2;
                     ValidationResult_DISCARD = 3;
                  };
                  ValidationResult validation_result = 10 [json_name = "validation-result"];
                  bool reflect_client = 11 [json_name = "reflect-client"];
                  bool unknown_rule = 12 [json_name = "unknown-rule"];
                  uint32 med = 13 [json_name = "med"];
                  uint32 preferred_value = 14 [json_name = "preferred-value"];
                  uint32 local_preference = 15 [json_name = "local-preference"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 16 [json_name = "origin"];
                  string originator = 17 [json_name = "originator"];
                  uint32 time = 18 [json_name = "time"];
                  string flag_string = 19 [json_name = "flag-string"];
                  string worse_reason = 20 [json_name = "worse-reason"];
                  bool route_policy_distribute = 21 [json_name = "route-policy-distribute"];
                  string invalid_reason = 22 [json_name = "invalid-reason"];
                  string relay_tunnel_id = 23 [json_name = "relay-tunnel-id"];
               }
               repeated Route route = 1 [json_name = "route"];
            }
            Routes routes = 1 [json_name = "routes"];
            message Statistics {
               message Statistic {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  uint32 total_number = 2 [json_name = "total-number"];
               }
               repeated Statistic statistic = 1 [json_name = "statistic"];
            }
            Statistics statistics = 2 [json_name = "statistics"];
         }
         Vpnv4Flow vpnv4_flow = 21 [json_name = "vpnv4-flow"];
         message Vpnv6Flow {
            message Routes {
               message Route {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  string route_distinguisher = 2 [json_name = "route-distinguisher"];
                  uint32 index = 3 [json_name = "index"];
                  string route_generate_identity = 4 [json_name = "route-generate-identity"];
                  string from = 5 [json_name = "from"];
                  enum RouteType {
                     RouteType_IBGP = 0;
                     RouteType_EBGP = 1;
                     RouteType_NETWORK = 2;
                     RouteType_IMPORT = 3;
                     RouteType_AUTOX_SUMMARY = 4;
                     RouteType_AGGREGATE = 5;
                     RouteType_CPRI = 6;
                     RouteType_PCRI = 7;
                     RouteType_SUPPRESSED = 8;
                     RouteType_NHPX_EMPTY = 9;
                     RouteType_NOX_ADV = 10;
                     RouteType_LOCALX_CROSS = 11;
                     RouteType_REMOTEX_CROSS = 12;
                     RouteType_VDX_BGP = 13;
                     RouteType_PATHX_LOCAL = 14;
                     RouteType_PATHX_GATEWAY = 15;
                     RouteType_POLICYX_NOPASS = 16;
                     RouteType_SUPPRENET = 17;
                     RouteType_DAMPENED = 18;
                     RouteType_HISTORY = 19;
                     RouteType_SELECT = 20;
                     RouteType_BEST = 21;
                     RouteType_BACKUP = 22;
                     RouteType_ATTRX_CHANGE = 23;
                     RouteType_NHLFEX_CREATED = 24;
                     RouteType_ILMX_CREATED = 25;
                     RouteType_NEXTHOPX_CHANGE = 26;
                     RouteType_INVALID = 27;
                     RouteType_SOURCEX_CHANGE = 28;
                     RouteType_INX_SELECTEDQ = 29;
                     RouteType_EXITIFX_ERROR = 30;
                     RouteType_GROUPX_HEAD = 31;
                  };
                  repeated RouteType route_type = 6 [json_name = "route-type"];
                  string path_id = 7 [json_name = "path-id"];
                  string remote_route_id = 8 [json_name = "remote-route-id"];
                  string relay_tunnel_name = 9 [json_name = "relay-tunnel-name"];
                  enum ValidationResult {
                     ValidationResult_NOTX_ENABLE = 0;
                     ValidationResult_CHECKING = 1;
                     ValidationResult_ACCEPT = 2;
                     ValidationResult_DISCARD = 3;
                  };
                  ValidationResult validation_result = 10 [json_name = "validation-result"];
                  bool reflect_client = 11 [json_name = "reflect-client"];
                  bool unknown_rule = 12 [json_name = "unknown-rule"];
                  uint32 med = 13 [json_name = "med"];
                  uint32 preferred_value = 14 [json_name = "preferred-value"];
                  uint32 local_preference = 15 [json_name = "local-preference"];
                  enum Origin {
                     INVALID_ENUM_VALUE_Origin = 0;
                     Origin_IGP = 1;
                     Origin_EGP = 2;
                     Origin_INCOMPLETE = 3;
                  };
                  Origin origin = 16 [json_name = "origin"];
                  string originator = 17 [json_name = "originator"];
                  uint32 time = 18 [json_name = "time"];
                  string flag_string = 19 [json_name = "flag-string"];
                  string worse_reason = 20 [json_name = "worse-reason"];
                  bool route_policy_distribute = 21 [json_name = "route-policy-distribute"];
                  string invalid_reason = 22 [json_name = "invalid-reason"];
                  string relay_tunnel_id = 23 [json_name = "relay-tunnel-id"];
               }
               repeated Route route = 1 [json_name = "route"];
            }
            Routes routes = 1 [json_name = "routes"];
            message Statistics {
               message Statistic {
                  string vpn_name = 1 [json_name = "vpn-name"];
                  uint32 total_number = 2 [json_name = "total-number"];
               }
               repeated Statistic statistic = 1 [json_name = "statistic"];
            }
            Statistics statistics = 2 [json_name = "statistics"];
         }
         Vpnv6Flow vpnv6_flow = 22 [json_name = "vpnv6-flow"];
      }
      BgpRoute bgp_route = 15 [json_name = "bgp-route"];
      message RemotePrefixSidStates {
         message RemotePrefixSidState {
            string prefix_sid = 1 [json_name = "prefix-sid"];
            string locator_sid = 2 [json_name = "locator-sid"];
            uint32 locator_mask_length = 3 [json_name = "locator-mask-length"];
            string vpn_name = 4 [json_name = "vpn-name"];
         }
         repeated RemotePrefixSidState remote_prefix_sid_state = 1 [json_name = "remote-prefix-sid-state"];
      }
      RemotePrefixSidStates remote_prefix_sid_states = 16 [json_name = "remote-prefix-sid-states"];
      message GracefulRestartStatus {
         bool enable = 1 [json_name = "enable"];
         uint32 restart_timer = 2 [json_name = "restart-timer"];
         uint32 eor_timer = 3 [json_name = "eor-timer"];
         message Peers {
            message Peer {
               string vpn_name = 1 [json_name = "vpn-name"];
               string af = 2 [json_name = "af"];
               string address = 3 [json_name = "address"];
               string peer_capability = 4 [json_name = "peer-capability"];
               bool gr_capability_enable = 5 [json_name = "gr-capability-enable"];
               enum BgpPeerState {
                  INVALID_ENUM_VALUE_BgpPeerState = 0;
                  BgpPeerState_IDLE = 1;
                  BgpPeerState_CONNECT = 2;
                  BgpPeerState_ACTIVE = 3;
                  BgpPeerState_OPENSENT = 4;
                  BgpPeerState_OPENCONFIRM = 5;
                  BgpPeerState_ESTABLISHED = 6;
                  BgpPeerState_IDLEX_ADMIN = 7;
                  BgpPeerState_IDLEX_OVLMT = 8;
                  BgpPeerState_NOX_NEG = 9;
               };
               BgpPeerState bgp_peer_state = 6 [json_name = "bgp-peer-state"];
               bool gr_state = 7 [json_name = "gr-state"];
               uint32 restart_left_timer = 8 [json_name = "restart-left-timer"];
               bool eor_sent = 9 [json_name = "eor-sent"];
               uint32 stale_route_num = 10 [json_name = "stale-route-num"];
            }
            repeated Peer peer = 1 [json_name = "peer"];
         }
         Peers peers = 4 [json_name = "peers"];
      }
      GracefulRestartStatus graceful_restart_status = 17 [json_name = "graceful-restart-status"];
      message ErrorDiscardInfo {
         uint32 cluster_id_loop_count = 1 [json_name = "cluster-id-loop-count"];
         uint32 receive_as_over_limit_count = 2 [json_name = "receive-as-over-limit-count"];
         uint32 advertise_as_over_limit_count = 3 [json_name = "advertise-as-over-limit-count"];
         uint32 as_loop_count = 4 [json_name = "as-loop-count"];
         uint32 zero_rd_count = 5 [json_name = "zero-rd-count"];
         uint32 no_prefix_count = 6 [json_name = "no-prefix-count"];
         uint32 path_attribute_error_count = 7 [json_name = "path-attribute-error-count"];
         uint32 originator_id_loop_count = 8 [json_name = "originator-id-loop-count"];
         uint32 md5_count = 9 [json_name = "md5-count"];
         message Afs {
            message Af {
               enum AddressFamily {
                  INVALID_ENUM_VALUE_AddressFamily = 0;
                  AddressFamily_IPV4UNI = 1;
                  AddressFamily_IPV4MULTI = 2;
                  AddressFamily_IPV4VPN = 3;
                  AddressFamily_IPV4LABELUNI = 4;
                  AddressFamily_IPV6UNI = 5;
                  AddressFamily_IPV6VPN = 6;
                  AddressFamily_IPV4FLOW = 7;
                  AddressFamily_L2VPNAD = 8;
                  AddressFamily_EVPN = 9;
                  AddressFamily_MVPN = 10;
                  AddressFamily_VPNTARGET = 11;
                  AddressFamily_IPV4VPNMCAST = 12;
                  AddressFamily_LS = 13;
                  AddressFamily_MDT = 14;
                  AddressFamily_IPV6FLOW = 15;
                  AddressFamily_MVPNV6 = 16;
                  AddressFamily_VPNV4FLOW = 17;
                  AddressFamily_VPNV6FLOW = 18;
                  AddressFamily_RPD = 19;
                  AddressFamily_IPV4SRPOLICY = 20;
                  AddressFamily_IPV6SRPOLICY = 21;
                  AddressFamily_IPV4SDWAN = 22;
               };
               AddressFamily address_family = 1 [json_name = "address-family"];
               uint32 cluster_id_loop_count = 2 [json_name = "cluster-id-loop-count"];
               uint32 receive_as_over_limit_count = 3 [json_name = "receive-as-over-limit-count"];
               uint32 advertise_as_over_limit_count = 4 [json_name = "advertise-as-over-limit-count"];
               uint32 as_loop_count = 5 [json_name = "as-loop-count"];
               uint32 zero_rd_count = 6 [json_name = "zero-rd-count"];
               uint32 path_attribute_error_count = 7 [json_name = "path-attribute-error-count"];
               uint32 originator_id_loop_count = 8 [json_name = "originator-id-loop-count"];
               uint32 peer_record_count = 9 [json_name = "peer-record-count"];
               message Peers {
                  message Peer {
                     string vpn_name = 1 [json_name = "vpn-name"];
                     string address = 2 [json_name = "address"];
                     string record_time = 3 [json_name = "record-time"];
                     string reason = 4 [json_name = "reason"];
                     string error_data = 5 [json_name = "error-data"];
                     uint32 vpn_id = 6 [json_name = "vpn-id"];
                  }
                  repeated Peer peer = 1 [json_name = "peer"];
               }
               Peers peers = 10 [json_name = "peers"];
            }
            repeated Af af = 1 [json_name = "af"];
         }
         Afs afs = 10 [json_name = "afs"];
      }
      ErrorDiscardInfo error_discard_info = 18 [json_name = "error-discard-info"];
      message VpnBriefInfos {
         message VpnBriefInfo {
            string vpn_name = 1 [json_name = "vpn-name"];
            enum AddressFamily {
               INVALID_ENUM_VALUE_AddressFamily = 0;
               AddressFamily_IPV4UNI = 1;
               AddressFamily_IPV4MULTI = 2;
               AddressFamily_IPV4VPN = 3;
               AddressFamily_IPV4LABELUNI = 4;
               AddressFamily_IPV6UNI = 5;
               AddressFamily_IPV6VPN = 6;
               AddressFamily_IPV4FLOW = 7;
               AddressFamily_L2VPNAD = 8;
               AddressFamily_EVPN = 9;
               AddressFamily_MVPN = 10;
               AddressFamily_VPNTARGET = 11;
               AddressFamily_IPV4VPNMCAST = 12;
               AddressFamily_LS = 13;
               AddressFamily_MDT = 14;
               AddressFamily_IPV6FLOW = 15;
               AddressFamily_MVPNV6 = 16;
               AddressFamily_VPNV4FLOW = 17;
               AddressFamily_VPNV6FLOW = 18;
               AddressFamily_RPD = 19;
               AddressFamily_IPV4SRPOLICY = 20;
               AddressFamily_IPV6SRPOLICY = 21;
               AddressFamily_IPV4SDWAN = 22;
            };
            AddressFamily address_family = 2 [json_name = "address-family"];
            uint32 peer_number = 3 [json_name = "peer-number"];
            uint32 route_number = 4 [json_name = "route-number"];
            uint32 route_distinguisher_number = 5 [json_name = "route-distinguisher-number"];
         }
         repeated VpnBriefInfo vpn_brief_info = 1 [json_name = "vpn-brief-info"];
      }
      VpnBriefInfos vpn_brief_infos = 19 [json_name = "vpn-brief-infos"];
      uint32 dynamic_session_limit = 20 [json_name = "dynamic-session-limit"];
      bool peer_up_route_lowest_priority = 21 [json_name = "peer-up-route-lowest-priority"];
      uint32 delay_time = 22 [json_name = "delay-time"];
      message DefaultParameter {
         uint32 version = 1 [json_name = "version"];
         uint32 connect_retry_time = 2 [json_name = "connect-retry-time"];
         uint32 hold_time = 3 [json_name = "hold-time"];
         uint32 keepalive_time = 4 [json_name = "keepalive-time"];
      }
      DefaultParameter default_parameter = 23 [json_name = "default-parameter"];
      bool route_loop_detect_enable = 24 [json_name = "route-loop-detect-enable"];
      message Srgbs {
         message Srgb {
            uint32 lower_bound = 1 [json_name = "lower-bound"];
            uint32 upper_bound = 2 [json_name = "upper-bound"];
         }
         repeated Srgb srgb = 1 [json_name = "srgb"];
      }
      Srgbs srgbs = 25 [json_name = "srgbs"];
   }
   BaseProcess base_process = 2 [json_name = "base-process"];
   message PafControls {
      message PafControl {
         enum FeatureName {
            FeatureName_ROUTEX_NUMX_ALLX_PEER = 0;
         };
         FeatureName feature_name = 1 [json_name = "feature-name"];
      }
      repeated PafControl paf_control = 1 [json_name = "paf-control"];
   }
   PafControls paf_controls = 3 [json_name = "paf-controls"];
   message InstanceProcesss {
      message InstanceProcess {
         string name = 1 [json_name = "name"];
         string as_number = 2 [json_name = "as-number"];
         bool check_first_as = 3 [json_name = "check-first-as"];
         bool shutdown = 4 [json_name = "shutdown"];
         bool private_4byte_as = 5 [json_name = "private-4byte-as"];
         bool peer_up_route_lowest_priority = 6 [json_name = "peer-up-route-lowest-priority"];
         uint32 delay_time = 7 [json_name = "delay-time"];
         bool memory_limit = 8 [json_name = "memory-limit"];
         message GracefulRestart {
            bool enable = 1 [json_name = "enable"];
            uint32 time_wait_for_rib = 2 [json_name = "time-wait-for-rib"];
            uint32 restart_time = 3 [json_name = "restart-time"];
            bool peer_reset = 4 [json_name = "peer-reset"];
         }
         GracefulRestart graceful_restart = 9 [json_name = "graceful-restart"];
         message ReferencePeriod {
            uint32 suppress_interval = 1 [json_name = "suppress-interval"];
            uint32 hold_interval = 2 [json_name = "hold-interval"];
            uint32 clear_interval = 3 [json_name = "clear-interval"];
         }
         ReferencePeriod reference_period = 10 [json_name = "reference-period"];
         message Timer {
            uint32 connect_retry_time = 1 [json_name = "connect-retry-time"];
            uint32 keep_alive_time = 2 [json_name = "keep-alive-time"];
            uint32 hold_time = 3 [json_name = "hold-time"];
            uint32 min_hold_time = 4 [json_name = "min-hold-time"];
         }
         Timer timer = 11 [json_name = "timer"];
      }
      repeated InstanceProcess instance_process = 1 [json_name = "instance-process"];
   }
   InstanceProcesss instance_processs = 4 [json_name = "instance-processs"];
   message SessionCar {
      bool enable = 1 [json_name = "enable"];
      uint32 cir_value = 2 [json_name = "cir-value"];
      uint32 cbs_value = 3 [json_name = "cbs-value"];
      uint32 pir_value = 4 [json_name = "pir-value"];
      uint32 pbs_value = 5 [json_name = "pbs-value"];
   }
   SessionCar session_car = 5 [json_name = "session-car"];
   message MicroCar {
      bool enable = 1 [json_name = "enable"];
      uint32 cir_value = 2 [json_name = "cir-value"];
      uint32 cbs_value = 3 [json_name = "cbs-value"];
      uint32 pir_value = 4 [json_name = "pir-value"];
      uint32 pbs_value = 5 [json_name = "pbs-value"];
   }
   MicroCar micro_car = 6 [json_name = "micro-car"];
   message RtAdvertisedLowPrioritys {
      message RtAdvertisedLowPriority {
         enum AddressFamily {
            INVALID_ENUM_VALUE_AddressFamily = 0;
            AddressFamily_IPV4UNI = 1;
            AddressFamily_IPV4VPN = 3;
            AddressFamily_IPV6UNI = 5;
            AddressFamily_IPV6VPN = 6;
            AddressFamily_EVPN = 9;
         };
         AddressFamily address_family = 1 [json_name = "address-family"];
      }
      repeated RtAdvertisedLowPriority rt_advertised_low_priority = 1 [json_name = "rt-advertised-low-priority"];
   }
   RtAdvertisedLowPrioritys rt_advertised_low_prioritys = 7 [json_name = "rt-advertised-low-prioritys"];
}

