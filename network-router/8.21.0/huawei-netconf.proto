syntax = "proto3";
// Automatically generated by ProtoYang
// ProtoYang-version 1
// module huawei-netconf
// revision 2020-02-22
// revision 2019-05-05
// namespace urn:huawei:yang:huawei-netconf

package huawei_netconf;

message Netconf {
   message Authorization {
      message Statistics {
         uint32 deniedDataWrites = 1;
         uint32 deniedOperations = 2;
      }
      Statistics statistics = 1;
      message TaskGroupRules {
         message TaskGroupRule {
            enum Action {
               Action_DENY = 0;
               Action_PERMIT = 1;
            };
            Action action = 1;
            string dataNodePath = 2;
            string description = 3;
            enum Execute {
               Execute_DISABLE = 0;
               Execute_ENABLE = 1;
            };
            Execute execute = 4;
            enum Read {
               Read_DISABLE = 0;
               Read_ENABLE = 1;
            };
            Read read = 5;
            enum RpcOperName {
               RpcOperName_COMMIT = 0;
               RpcOperName_COPYX_CONFIG = 1;
               RpcOperName_CREATEX_SUBSCRIPTION = 2;
               RpcOperName_DELETEX_CONFIG = 3;
               RpcOperName_DISCARDX_CHANGES = 4;
               RpcOperName_DISCARDX_COMMIT = 5;
               RpcOperName_EDITX_CONFIG = 6;
               RpcOperName_EXECUTEX_ACTION = 7;
               RpcOperName_EXECUTEX_CLI = 8;
               RpcOperName_GET = 9;
               RpcOperName_GETX_CONFIG = 10;
               RpcOperName_GETX_NEXT = 11;
               RpcOperName_KILLX_SESSION = 12;
               RpcOperName_LOCK = 13;
               RpcOperName_RPC = 14;
               RpcOperName_SYNCX_FULL = 15;
               RpcOperName_SYNCX_INCREMENT = 16;
               RpcOperName_UNLOCK = 17;
               RpcOperName_UPDATE = 18;
            };
            RpcOperName rpcOperName = 6;
            string ruleName = 7;
            enum RuleType {
               RuleType_DATANODERULE = 0;
               RuleType_OPERATIONRULE = 1;
            };
            RuleType ruleType = 8;
            string taskGroupName = 9;
            enum Write {
               Write_DISABLE = 0;
               Write_ENABLE = 1;
            };
            Write write = 10;
         }
         repeated TaskGroupRule taskGroupRule = 1;
      }
      TaskGroupRules taskGroupRules = 2;
      message UserGroupRules {
         message UserGroupRule {
            enum Action {
               Action_DENY = 0;
               Action_PERMIT = 1;
            };
            Action action = 1;
            string dataNodePath = 2;
            string description = 3;
            enum Execute {
               Execute_DISABLE = 0;
               Execute_ENABLE = 1;
            };
            Execute execute = 4;
            enum Read {
               Read_DISABLE = 0;
               Read_ENABLE = 1;
            };
            Read read = 5;
            enum RpcOperName {
               RpcOperName_COMMIT = 0;
               RpcOperName_COPYX_CONFIG = 1;
               RpcOperName_CREATEX_SUBSCRIPTION = 2;
               RpcOperName_DELETEX_CONFIG = 3;
               RpcOperName_DISCARDX_CHANGES = 4;
               RpcOperName_DISCARDX_COMMIT = 5;
               RpcOperName_EDITX_CONFIG = 6;
               RpcOperName_EXECUTEX_ACTION = 7;
               RpcOperName_EXECUTEX_CLI = 8;
               RpcOperName_GET = 9;
               RpcOperName_GETX_CONFIG = 10;
               RpcOperName_GETX_NEXT = 11;
               RpcOperName_KILLX_SESSION = 12;
               RpcOperName_LOCK = 13;
               RpcOperName_RPC = 14;
               RpcOperName_SYNCX_FULL = 15;
               RpcOperName_SYNCX_INCREMENT = 16;
               RpcOperName_UNLOCK = 17;
               RpcOperName_UPDATE = 18;
            };
            RpcOperName rpcOperName = 6;
            string ruleName = 7;
            enum RuleType {
               RuleType_DATANODERULE = 0;
               RuleType_OPERATIONRULE = 1;
            };
            RuleType ruleType = 8;
            string userGroupName = 9;
            enum Write {
               Write_DISABLE = 0;
               Write_ENABLE = 1;
            };
            Write write = 10;
         }
         repeated UserGroupRule userGroupRule = 1;
      }
      UserGroupRules userGroupRules = 3;
   }
   Authorization authorization = 1;
   message NetconfCapabilitys {
      message NetconfCapability {
         string capabilityName = 1;
         string scope = 2;
         string version = 3;
      }
      repeated NetconfCapability netconfCapability = 1;
   }
   NetconfCapabilitys netconfCapabilitys = 2;
   message Notification {
      message Statistics {
         uint32 notificationReceived = 1;
         uint32 notificationSent = 2;
      }
      Statistics statistics = 1;
      message Streams {
         message Stream {
            string description = 1;
            enum Name {
               Name_NETCONF = 0;
            };
            Name name = 2;
            string replayLogAgedTime = 3;
            string replayLogCreationTime = 4;
            string replaySupport = 5;
         }
         repeated Stream stream = 1;
      }
      Streams streams = 2;
   }
   Notification notification = 3;
   message OperationLogSwitch {
      bool get = 1 [json_name = "get"];
   }
   OperationLogSwitch operation_log_switch = 4 [json_name = "operation-log-switch"];
   message ActiveModules {
      message ActiveModule {
         string module_name = 1 [json_name = "module-name"];
      }
      repeated ActiveModule active_module = 1 [json_name = "active-module"];
   }
   ActiveModules active_modules = 5 [json_name = "active-modules"];
}
message HwNetconfServerSyncConfigFail {
   string IPType = 1;
   string MasterIP = 2;
   string VpnName = 3;
}

