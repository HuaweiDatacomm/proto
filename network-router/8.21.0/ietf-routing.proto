syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-09-01 20:16:01
// ProtoYang-version 1
// module ietf-routing
// revision 2018-03-13
// revision 2016-11-04
// namespace urn:ietf:params:xml:ns:yang:ietf-routing

package ietf_routing;

message Routing {
   string router_id = 1 [json_name = "router-id"];
   message Interfaces {
      repeated string interface = 1 [json_name = "interface"];
   }
   Interfaces interfaces = 2 [json_name = "interfaces"];
   message ControlPlaneProtocols {
      message ControlPlaneProtocol {
         string type = 1 [json_name = "type"];
         string name = 2 [json_name = "name"];
         string description = 3 [json_name = "description"];
         message StaticRoutes {
            message Ipv4 {
               message Route {
                  string destination_prefix = 1 [json_name = "destination-prefix"];
                  string description = 2 [json_name = "description"];
                  message NextHop {
                     message NextHopOptions_SimpleNextHop {
                        string outgoing_interface = 1 [json_name = "outgoing-interface"];
                        string next_hop_address = 2 [json_name = "next-hop-address"];
                     }
                     message NextHopOptions_SpecialNextHop {
                        enum SpecialNextHop9 {
                           SpecialNextHop9_BLACKHOLE = 0;
                           SpecialNextHop9_UNREACHABLE = 1;
                           SpecialNextHop9_PROHIBIT = 2;
                           SpecialNextHop9_RECEIVE = 3;
                        };
                        SpecialNextHop9 special_next_hop = 1 [json_name = "special-next-hop"];
                     }
                     message NextHopOptions_NextHopList {
                        message NextHopList9 {
                           message NextHop10 {
                              string index = 1 [json_name = "index"];
                              string outgoing_interface = 2 [json_name = "outgoing-interface"];
                              string next_hop_address = 3 [json_name = "next-hop-address"];
                           }
                           repeated NextHop10 next_hop = 1 [json_name = "next-hop"];
                        }
                        NextHopList9 next_hop_list = 1 [json_name = "next-hop-list"];
                     }
                     oneof NextHopOptions {
                        NextHopOptions_SimpleNextHop next_hop_options_simple_next_hop = 1 [json_name = "simple-next-hop"];
                        NextHopOptions_SpecialNextHop next_hop_options_special_next_hop = 2 [json_name = "special-next-hop"];
                        NextHopOptions_NextHopList next_hop_options_next_hop_list = 3 [json_name = "next-hop-list"];
                     }
                  }
                  NextHop next_hop = 3 [json_name = "next-hop"];
               }
               repeated Route route = 1 [json_name = "route"];
            }
            Ipv4 ipv4 = 1 [json_name = "ipv4"];
            message Ipv6 {
               message Route {
                  string destination_prefix = 1 [json_name = "destination-prefix"];
                  string description = 2 [json_name = "description"];
                  message NextHop {
                     message NextHopOptions_SimpleNextHop {
                        string outgoing_interface = 1 [json_name = "outgoing-interface"];
                        string next_hop_address = 2 [json_name = "next-hop-address"];
                     }
                     message NextHopOptions_SpecialNextHop {
                        enum SpecialNextHop9 {
                           SpecialNextHop9_BLACKHOLE = 0;
                           SpecialNextHop9_UNREACHABLE = 1;
                           SpecialNextHop9_PROHIBIT = 2;
                           SpecialNextHop9_RECEIVE = 3;
                        };
                        SpecialNextHop9 special_next_hop = 1 [json_name = "special-next-hop"];
                     }
                     message NextHopOptions_NextHopList {
                        message NextHopList9 {
                           message NextHop10 {
                              string index = 1 [json_name = "index"];
                              string outgoing_interface = 2 [json_name = "outgoing-interface"];
                              string next_hop_address = 3 [json_name = "next-hop-address"];
                           }
                           repeated NextHop10 next_hop = 1 [json_name = "next-hop"];
                        }
                        NextHopList9 next_hop_list = 1 [json_name = "next-hop-list"];
                     }
                     oneof NextHopOptions {
                        NextHopOptions_SimpleNextHop next_hop_options_simple_next_hop = 1 [json_name = "simple-next-hop"];
                        NextHopOptions_SpecialNextHop next_hop_options_special_next_hop = 2 [json_name = "special-next-hop"];
                        NextHopOptions_NextHopList next_hop_options_next_hop_list = 3 [json_name = "next-hop-list"];
                     }
                  }
                  NextHop next_hop = 3 [json_name = "next-hop"];
               }
               repeated Route route = 1 [json_name = "route"];
            }
            Ipv6 ipv6 = 2 [json_name = "ipv6"];
         }
         StaticRoutes static_routes = 4 [json_name = "static-routes"];
      }
      repeated ControlPlaneProtocol control_plane_protocol = 1 [json_name = "control-plane-protocol"];
   }
   ControlPlaneProtocols control_plane_protocols = 3 [json_name = "control-plane-protocols"];
   message Ribs {
      message Rib {
         string name = 1 [json_name = "name"];
         string address_family = 2 [json_name = "address-family"];
         bool default_rib = 3 [json_name = "default-rib"];
         message Routes {
            message Route {
               uint32 route_preference = 1 [json_name = "route-preference"];
               message NextHop {
                  message NextHopOptions_SimpleNextHop {
                     string outgoing_interface = 1 [json_name = "outgoing-interface"];
                     string next_hop_address = 2 [json_name = "next-hop-address"];
                  }
                  message NextHopOptions_SpecialNextHop {
                     enum SpecialNextHop8 {
                        SpecialNextHop8_BLACKHOLE = 0;
                        SpecialNextHop8_UNREACHABLE = 1;
                        SpecialNextHop8_PROHIBIT = 2;
                        SpecialNextHop8_RECEIVE = 3;
                     };
                     SpecialNextHop8 special_next_hop = 1 [json_name = "special-next-hop"];
                  }
                  message NextHopOptions_NextHopList {
                     message NextHopList8 {
                        message NextHop9 {
                           string outgoing_interface = 1 [json_name = "outgoing-interface"];
                           string address = 2 [json_name = "address"];
                        }
                        repeated NextHop9 next_hop = 1 [json_name = "next-hop"];
                     }
                     NextHopList8 next_hop_list = 1 [json_name = "next-hop-list"];
                  }
                  oneof NextHopOptions {
                     NextHopOptions_SimpleNextHop next_hop_options_simple_next_hop = 1 [json_name = "simple-next-hop"];
                     NextHopOptions_SpecialNextHop next_hop_options_special_next_hop = 2 [json_name = "special-next-hop"];
                     NextHopOptions_NextHopList next_hop_options_next_hop_list = 3 [json_name = "next-hop-list"];
                  }
               }
               NextHop next_hop = 2 [json_name = "next-hop"];
               string source_protocol = 3 [json_name = "source-protocol"];
               bool active = 4 [json_name = "active"];
               string last_updated = 5 [json_name = "last-updated"];
               string destination_prefix = 6 [json_name = "destination-prefix"];
            }
            repeated Route route = 1 [json_name = "route"];
         }
         Routes routes = 4 [json_name = "routes"];
         string description = 5 [json_name = "description"];
      }
      repeated Rib rib = 1 [json_name = "rib"];
   }
   Ribs ribs = 4 [json_name = "ribs"];
}
message RoutingState {
   string router_id = 1 [json_name = "router-id"];
   message Interfaces {
      repeated string interface = 1 [json_name = "interface"];
   }
   Interfaces interfaces = 2 [json_name = "interfaces"];
   message ControlPlaneProtocols {
      message ControlPlaneProtocol {
         string type = 1 [json_name = "type"];
         string name = 2 [json_name = "name"];
      }
      repeated ControlPlaneProtocol control_plane_protocol = 1 [json_name = "control-plane-protocol"];
   }
   ControlPlaneProtocols control_plane_protocols = 3 [json_name = "control-plane-protocols"];
   message Ribs {
      message Rib {
         string name = 1 [json_name = "name"];
         string address_family = 2 [json_name = "address-family"];
         bool default_rib = 3 [json_name = "default-rib"];
         message Routes {
            message Route {
               uint32 route_preference = 1 [json_name = "route-preference"];
               message NextHop {
                  message NextHopOptions_SimpleNextHop {
                     string outgoing_interface = 1 [json_name = "outgoing-interface"];
                     string next_hop_address_1 = 2 [json_name = "next-hop-address"];
                     string next_hop_address = 3 [json_name = "next-hop-address"];
                  }
                  message NextHopOptions_SpecialNextHop {
                     enum SpecialNextHop8 {
                        SpecialNextHop8_BLACKHOLE = 0;
                        SpecialNextHop8_UNREACHABLE = 1;
                        SpecialNextHop8_PROHIBIT = 2;
                        SpecialNextHop8_RECEIVE = 3;
                     };
                     SpecialNextHop8 special_next_hop = 1 [json_name = "special-next-hop"];
                  }
                  message NextHopOptions_NextHopList {
                     message NextHopList8 {
                        message NextHop9 {
                           string outgoing_interface = 1 [json_name = "outgoing-interface"];
                           string address_1 = 2 [json_name = "address"];
                           string address = 3 [json_name = "address"];
                        }
                        repeated NextHop9 next_hop = 1 [json_name = "next-hop"];
                     }
                     NextHopList8 next_hop_list = 1 [json_name = "next-hop-list"];
                  }
                  oneof NextHopOptions {
                     NextHopOptions_SimpleNextHop next_hop_options_simple_next_hop = 1 [json_name = "simple-next-hop"];
                     NextHopOptions_SpecialNextHop next_hop_options_special_next_hop = 2 [json_name = "special-next-hop"];
                     NextHopOptions_NextHopList next_hop_options_next_hop_list = 3 [json_name = "next-hop-list"];
                  }
               }
               NextHop next_hop = 2 [json_name = "next-hop"];
               string source_protocol = 3 [json_name = "source-protocol"];
               bool active = 4 [json_name = "active"];
               string last_updated = 5 [json_name = "last-updated"];
               string destination_prefix_1 = 6 [json_name = "destination-prefix"];
               string destination_prefix = 7 [json_name = "destination-prefix"];
            }
            repeated Route route = 1 [json_name = "route"];
         }
         Routes routes = 4 [json_name = "routes"];
      }
      repeated Rib rib = 1 [json_name = "rib"];
   }
   Ribs ribs = 4 [json_name = "ribs"];
}

