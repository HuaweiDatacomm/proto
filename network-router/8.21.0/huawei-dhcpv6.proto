syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-09-22 17:11:08
// ProtoYang-version 1
// module huawei-dhcpv6
// revision 2021-09-04
// revision 2020-04-17
// revision 2020-04-10
// revision 2020-03-09
// revision 2020-02-25
// namespace urn:huawei:yang:huawei-dhcpv6

package huawei_dhcpv6;

message Dhcpv6 {
   message Common {
      message Global {
         bool enable = 1 [json_name = "enable"];
         enum DuidFormat {
            DuidFormat_INVALID = 0;
            DuidFormat_LLT = 1;
            DuidFormat_LL = 2;
            DuidFormat_USERX_DEFINED = 3;
         };
         DuidFormat duid_format = 2 [json_name = "duid-format"];
         string duid_string = 3 [json_name = "duid-string"];
         bool rate_limit_enable = 4 [json_name = "rate-limit-enable"];
         uint32 rate_limit = 5 [json_name = "rate-limit"];
         bool source_ip_adaptive = 6 [json_name = "source-ip-adaptive"];
         string active_duid = 7 [json_name = "active-duid"];
         uint32 aging_time = 8 [json_name = "aging-time"];
         enum RemoteIdFormat {
            RemoteIdFormat_DEFAULT = 0;
            RemoteIdFormat_USERX_DEFINED = 1;
         };
         RemoteIdFormat remote_id_format = 9 [json_name = "remote-id-format"];
         string remote_id_user_define_text = 10 [json_name = "remote-id-user-define-text"];
         enum InterfaceIdFormat {
            InterfaceIdFormat_DEFAULT = 0;
            InterfaceIdFormat_USERX_DEFINED = 1;
         };
         InterfaceIdFormat interface_id_format = 11 [json_name = "interface-id-format"];
         string interface_id_user_define_text = 12 [json_name = "interface-id-user-define-text"];
         uint32 packet_rate = 13 [json_name = "packet-rate"];
         bool drop_alarm_enable = 14 [json_name = "drop-alarm-enable"];
         uint32 drop_alarm_threshold = 15 [json_name = "drop-alarm-threshold"];
      }
      Global global = 1 [json_name = "global"];
      message SessionCar {
         bool enable = 1 [json_name = "enable"];
         uint32 cir_value = 2 [json_name = "cir-value"];
         uint32 cbs_value = 3 [json_name = "cbs-value"];
         uint32 pir_value = 4 [json_name = "pir-value"];
         uint32 pbs_value = 5 [json_name = "pbs-value"];
      }
      SessionCar session_car = 2 [json_name = "session-car"];
      message IpsecPeers {
         message IpsecPeer {
            string peer_address = 1 [json_name = "peer-address"];
            string vpn_name = 2 [json_name = "vpn-name"];
            string sa_name = 3 [json_name = "sa-name"];
         }
         repeated IpsecPeer ipsec_peer = 1 [json_name = "ipsec-peer"];
      }
      IpsecPeers ipsec_peers = 3 [json_name = "ipsec-peers"];
   }
   Common common = 1 [json_name = "common"];
   message Relay {
      message PdRoute {
         bool export = 1 [json_name = "export"];
         string save_file_name = 2 [json_name = "save-file-name"];
         uint32 write_delay = 3 [json_name = "write-delay"];
         uint32 item_number = 4 [json_name = "item-number"];
         uint32 write_route_delay = 5 [json_name = "write-route-delay"];
         uint32 write_route_number = 6 [json_name = "write-route-number"];
         uint32 access_limit = 7 [json_name = "access-limit"];
         enum FileAuthenticationMode {
            FileAuthenticationMode_CHECK = 0;
            FileAuthenticationMode_NOX_CHECK = 1;
            FileAuthenticationMode_FORCEX_CHECK = 2;
         };
         FileAuthenticationMode file_authentication_mode = 8 [json_name = "file-authentication-mode"];
      }
      PdRoute pd_route = 1 [json_name = "pd-route"];
      message ServerGroups {
         message ServerGroup {
            string name = 1 [json_name = "name"];
            message ServerAddresses {
               message ServerAddress {
                  string server = 1 [json_name = "server"];
                  string interface_name = 2 [json_name = "interface-name"];
               }
               repeated ServerAddress server_address = 1 [json_name = "server-address"];
            }
            ServerAddresses server_addresses = 2 [json_name = "server-addresses"];
            string vpn_name = 3 [json_name = "vpn-name"];
            message ServerAddressIfs {
               message ServerAddressIf {
                  string server_address = 1 [json_name = "server-address"];
                  string interface_name = 2 [json_name = "interface-name"];
               }
               repeated ServerAddressIf server_address_if = 1 [json_name = "server-address-if"];
            }
            ServerAddressIfs server_address_ifs = 4 [json_name = "server-address-ifs"];
         }
         repeated ServerGroup server_group = 1 [json_name = "server-group"];
      }
      ServerGroups server_groups = 2 [json_name = "server-groups"];
      message UserInfos {
         message UserInfo {
            uint32 index = 1 [json_name = "index"];
            string client_duid = 2 [json_name = "client-duid"];
            uint32 iaid = 3 [json_name = "iaid"];
            enum IaType {
               IaType_IAINVALID = 0;
               IaType_IANA = 1;
               IaType_IATA = 2;
               IaType_IAPD = 3;
            };
            IaType ia_type = 4 [json_name = "ia-type"];
            string server_duid = 5 [json_name = "server-duid"];
            string server_address = 6 [json_name = "server-address"];
            string if_name = 7 [json_name = "if-name"];
            uint32 pe_vlan = 8 [json_name = "pe-vlan"];
            uint32 ce_vlan = 9 [json_name = "ce-vlan"];
            string vpn_name = 10 [json_name = "vpn-name"];
            string client_mac = 11 [json_name = "client-mac"];
            enum RapidCommit {
               RapidCommit_OFF = 0;
               RapidCommit_ON = 1;
            };
            RapidCommit rapid_commit = 12 [json_name = "rapid-commit"];
            uint32 transaction_id = 13 [json_name = "transaction-id"];
            uint32 info_transaction_id = 14 [json_name = "info-transaction-id"];
            message IanaInfos {
               message IanaInfo {
                  string ipv6_address = 1 [json_name = "ipv6-address"];
                  string server_duid = 2 [json_name = "server-duid"];
                  string server_address = 3 [json_name = "server-address"];
                  string valid_time = 4 [json_name = "valid-time"];
                  uint32 lease = 5 [json_name = "lease"];
                  uint32 remain_lease = 6 [json_name = "remain-lease"];
                  enum Status {
                     Status_INIT = 0;
                     Status_SOLICIT = 1;
                     Status_ADVERTISE = 2;
                     Status_REQUEST = 3;
                     Status_RENEWREBIND = 4;
                     Status_CONFIRM = 5;
                     Status_DECLINE = 6;
                     Status_RELEASE = 7;
                     Status_UP = 8;
                     Status_ERROR = 9;
                  };
                  Status status = 7 [json_name = "status"];
               }
               repeated IanaInfo iana_info = 1 [json_name = "iana-info"];
            }
            IanaInfos iana_infos = 15 [json_name = "iana-infos"];
            message IapdInfos {
               message IapdInfo {
                  string ipv6_address = 1 [json_name = "ipv6-address"];
                  uint32 prefix = 2 [json_name = "prefix"];
                  string server_duid = 3 [json_name = "server-duid"];
                  string server_address = 4 [json_name = "server-address"];
                  string valid_time = 5 [json_name = "valid-time"];
                  uint32 lease = 6 [json_name = "lease"];
                  uint32 remain_lease = 7 [json_name = "remain-lease"];
                  enum Status {
                     Status_INIT = 0;
                     Status_SOLICIT = 1;
                     Status_ADVERTISE = 2;
                     Status_REQUEST = 3;
                     Status_RENEWREBIND = 4;
                     Status_CONFIRM = 5;
                     Status_DECLINE = 6;
                     Status_RELEASE = 7;
                     Status_UP = 8;
                     Status_ERROR = 9;
                  };
                  Status status = 8 [json_name = "status"];
               }
               repeated IapdInfo iapd_info = 1 [json_name = "iapd-info"];
            }
            IapdInfos iapd_infos = 16 [json_name = "iapd-infos"];
         }
         repeated UserInfo user_info = 1 [json_name = "user-info"];
      }
      UserInfos user_infos = 3 [json_name = "user-infos"];
      message Global {
         bool insert_option79 = 1 [json_name = "insert-option79"];
         string source_interface = 2 [json_name = "source-interface"];
      }
      Global global = 4 [json_name = "global"];
      message Option18Formats {
         message Option18Format {
            uint32 vlan = 1 [json_name = "vlan"];
            uint32 ce_vlan = 2 [json_name = "ce-vlan"];
            string user_defined = 3 [json_name = "user-defined"];
         }
         repeated Option18Format option18_format = 1 [json_name = "option18-format"];
      }
      Option18Formats option18_formats = 5 [json_name = "option18-formats"];
      message Option37Formats {
         message Option37Format {
            uint32 vlan = 1 [json_name = "vlan"];
            uint32 ce_vlan = 2 [json_name = "ce-vlan"];
            string user_defined = 3 [json_name = "user-defined"];
         }
         repeated Option37Format option37_format = 1 [json_name = "option37-format"];
      }
      Option37Formats option37_formats = 6 [json_name = "option37-formats"];
      message GlobalPacketStatistics {
         uint32 solicit_received_count = 1 [json_name = "solicit-received-count"];
         uint32 request_received_count = 2 [json_name = "request-received-count"];
         uint32 confirm_received_count = 3 [json_name = "confirm-received-count"];
         uint32 renew_received_count = 4 [json_name = "renew-received-count"];
         uint32 rebind_received_count = 5 [json_name = "rebind-received-count"];
         uint32 decline_received_count = 6 [json_name = "decline-received-count"];
         uint32 release_received_count = 7 [json_name = "release-received-count"];
         uint32 inform_received_count = 8 [json_name = "inform-received-count"];
         uint32 relay_forward_received_count = 9 [json_name = "relay-forward-received-count"];
         uint32 relay_reply_received_count = 10 [json_name = "relay-reply-received-count"];
         uint32 advertise_send_count = 11 [json_name = "advertise-send-count"];
         uint32 reply_send_count = 12 [json_name = "reply-send-count"];
         uint32 reconfig_send_count = 13 [json_name = "reconfig-send-count"];
         uint32 relay_forward_send_count = 14 [json_name = "relay-forward-send-count"];
         uint32 relay_reply_send_count = 15 [json_name = "relay-reply-send-count"];
         uint32 bad_packets_received_count = 16 [json_name = "bad-packets-received-count"];
         uint32 drop_packets_for_table_full = 17 [json_name = "drop-packets-for-table-full"];
         uint32 drop_packets_for_general_error = 18 [json_name = "drop-packets-for-general-error"];
         uint32 drop_packets_for_ipsec_authentication_fail = 19 [json_name = "drop-packets-for-ipsec-authentication-fail"];
         uint32 received_from_clients = 20 [json_name = "received-from-clients"];
         uint32 solicit_received = 21 [json_name = "solicit-received"];
         uint32 request_received = 22 [json_name = "request-received"];
         uint32 confirm_received = 23 [json_name = "confirm-received"];
         uint32 renew_received = 24 [json_name = "renew-received"];
         uint32 rebind_received = 25 [json_name = "rebind-received"];
         uint32 decline_received = 26 [json_name = "decline-received"];
         uint32 release_received = 27 [json_name = "release-received"];
         uint32 inform_received = 28 [json_name = "inform-received"];
         uint32 received_from_relay_agents_or_servers = 29 [json_name = "received-from-relay-agents-or-servers"];
         uint32 relay_forward_received = 30 [json_name = "relay-forward-received"];
         uint32 relay_reply_received = 31 [json_name = "relay-reply-received"];
         uint32 sent_to_clients = 32 [json_name = "sent-to-clients"];
         uint32 advertise_send = 33 [json_name = "advertise-send"];
         uint32 reply_send = 34 [json_name = "reply-send"];
         uint32 reconfig_send = 35 [json_name = "reconfig-send"];
         uint32 sent_to_relay_agents_or_servers = 36 [json_name = "sent-to-relay-agents-or-servers"];
         uint32 relay_forward_send = 37 [json_name = "relay-forward-send"];
         uint32 relay_reply_send = 38 [json_name = "relay-reply-send"];
         uint32 bad_packets_received = 39 [json_name = "bad-packets-received"];
         uint32 total_drop_packets = 40 [json_name = "total-drop-packets"];
      }
      GlobalPacketStatistics global_packet_statistics = 7 [json_name = "global-packet-statistics"];
      message AccessVlans {
         message AccessVlan {
            uint32 access_limit = 1 [json_name = "access-limit"];
            uint32 pe_vlan = 2 [json_name = "pe-vlan"];
            bool ce_vlan = 3 [json_name = "ce-vlan"];
            string vlan_batch = 4 [json_name = "vlan-batch"];
         }
         repeated AccessVlan access_vlan = 1 [json_name = "access-vlan"];
      }
      AccessVlans access_vlans = 8 [json_name = "access-vlans"];
      message ClientInfos {
         message ClientInfo {
            uint32 index = 1 [json_name = "index"];
            string client_duid = 2 [json_name = "client-duid"];
            enum IaType {
               IaType_IAINVALID = 0;
               IaType_IANA = 1;
               IaType_IATA = 2;
               IaType_IAPD = 3;
            };
            IaType ia_type = 3 [json_name = "ia-type"];
            uint32 iaid = 4 [json_name = "iaid"];
            string if_name = 5 [json_name = "if-name"];
            uint32 pevlan = 6 [json_name = "pevlan"];
            uint32 cevlan = 7 [json_name = "cevlan"];
            string vpn_name = 8 [json_name = "vpn-name"];
            string client_mac = 9 [json_name = "client-mac"];
            message IanaInfos {
               message IanaInfo {
                  string ipv6_address = 1 [json_name = "ipv6-address"];
                  enum ReleaseCause {
                     ReleaseCause_USELESS = 0;
                     ReleaseCause_INFOX_REQUESTX_PACKETX_DELETE = 1;
                     ReleaseCause_ADDRESSX_ALLOCATIONX_FAILURE = 2;
                     ReleaseCause_PREFIXX_ALLOCATIONX_FAILURE = 3;
                     ReleaseCause_ADDRESSX_RENEWALX_FAILURE = 4;
                     ReleaseCause_PREFIXX_RENEWALX_FAILURE = 5;
                     ReleaseCause_CONFIRMX_PACKETX_DELETE = 6;
                     ReleaseCause_CLIENTX_DECLINEX_ADDRESS = 8;
                     ReleaseCause_CLIENTX_RELEASEX_ADDRESS = 9;
                     ReleaseCause_RELAYX_INTERFACEX_DELETE = 10;
                     ReleaseCause_VPNX_CONFIGURATIONX_DELETE = 11;
                     ReleaseCause_USERX_TIMEOUT = 12;
                     ReleaseCause_RESENDX_SOLICIT = 13;
                     ReleaseCause_ADDRESSX_CONFLICT = 14;
                     ReleaseCause_LEASEX_TIMEOUT = 15;
                     ReleaseCause_ADDX_PDX_ROUTEX_FAILURE = 16;
                     ReleaseCause_MACX_DUIDX_MISMATCH = 17;
                     ReleaseCause_REACHX_LIMIT = 18;
                     ReleaseCause_ENTRYX_RESOURCEX_ALLOCATIONX_FAILURE = 19;
                     ReleaseCause_INDEXX_RESOURCEX_ALLOCATIONX_FAILURE = 20;
                     ReleaseCause_UPDATEX_USERX_ENTRYX_FAILURE = 21;
                     ReleaseCause_ADDX_USERX_ENTRYX_FAILURE = 22;
                     ReleaseCause_COMMONDX_RESET = 23;
                     ReleaseCause_INTERFACEX_INFORMATIONX_CHANGED = 24;
                     ReleaseCause_DUIDX_CHANGED = 25;
                  };
                  ReleaseCause release_cause = 2 [json_name = "release-cause"];
                  enum ReleaseStatus {
                     ReleaseStatus_INIT = 0;
                     ReleaseStatus_SOLICIT = 1;
                     ReleaseStatus_ADVERTISE = 2;
                     ReleaseStatus_REQUEST = 3;
                     ReleaseStatus_RENEWX_REBIND = 4;
                     ReleaseStatus_CONFIRM = 5;
                     ReleaseStatus_DECLINE = 6;
                     ReleaseStatus_RELESE = 7;
                     ReleaseStatus_UP = 8;
                     ReleaseStatus_BUTT = 9;
                  };
                  ReleaseStatus release_status = 3 [json_name = "release-status"];
                  string release_time = 4 [json_name = "release-time"];
               }
               repeated IanaInfo iana_info = 1 [json_name = "iana-info"];
            }
            IanaInfos iana_infos = 10 [json_name = "iana-infos"];
            message IapdInfos {
               message IapdInfo {
                  string ipv6_address = 1 [json_name = "ipv6-address"];
                  uint32 prefix = 2 [json_name = "prefix"];
                  enum ReleaseCause {
                     ReleaseCause_USELESS = 0;
                     ReleaseCause_INFOX_REQUESTX_PACKETX_DELETE = 1;
                     ReleaseCause_ADDRESSX_ALLOCATIONX_FAILURE = 2;
                     ReleaseCause_PREFIXX_ALLOCATIONX_FAILURE = 3;
                     ReleaseCause_ADDRESSX_RENEWALX_FAILURE = 4;
                     ReleaseCause_PREFIXX_RENEWALX_FAILURE = 5;
                     ReleaseCause_CONFIRMX_PACKETX_DELETE = 6;
                     ReleaseCause_CLIENTX_DECLINEX_ADDRESS = 8;
                     ReleaseCause_CLIENTX_RELEASEX_ADDRESS = 9;
                     ReleaseCause_RELAYX_INTERFACEX_DELETE = 10;
                     ReleaseCause_VPNX_CONFIGURATIONX_DELETE = 11;
                     ReleaseCause_USERX_TIMEOUT = 12;
                     ReleaseCause_RESENDX_SOLICIT = 13;
                     ReleaseCause_ADDRESSX_CONFLICT = 14;
                     ReleaseCause_LEASEX_TIMEOUT = 15;
                     ReleaseCause_ADDX_PDX_ROUTEX_FAILURE = 16;
                     ReleaseCause_MACX_DUIDX_MISMATCH = 17;
                     ReleaseCause_REACHX_LIMIT = 18;
                     ReleaseCause_ENTRYX_RESOURCEX_ALLOCATIONX_FAILURE = 19;
                     ReleaseCause_INDEXX_RESOURCEX_ALLOCATIONX_FAILURE = 20;
                     ReleaseCause_UPDATEX_USERX_ENTRYX_FAILURE = 21;
                     ReleaseCause_ADDX_USERX_ENTRYX_FAILURE = 22;
                     ReleaseCause_COMMONDX_RESET = 23;
                     ReleaseCause_INTERFACEX_INFORMATIONX_CHANGED = 24;
                     ReleaseCause_DUIDX_CHANGED = 25;
                  };
                  ReleaseCause release_cause = 3 [json_name = "release-cause"];
                  enum ReleaseStatus {
                     ReleaseStatus_INIT = 0;
                     ReleaseStatus_SOLICIT = 1;
                     ReleaseStatus_ADVERTISE = 2;
                     ReleaseStatus_REQUEST = 3;
                     ReleaseStatus_RENEWX_REBIND = 4;
                     ReleaseStatus_CONFIRM = 5;
                     ReleaseStatus_DECLINE = 6;
                     ReleaseStatus_RELESE = 7;
                     ReleaseStatus_UP = 8;
                     ReleaseStatus_BUTT = 9;
                  };
                  ReleaseStatus release_status = 4 [json_name = "release-status"];
                  string release_time = 5 [json_name = "release-time"];
               }
               repeated IapdInfo iapd_info = 1 [json_name = "iapd-info"];
            }
            IapdInfos iapd_infos = 11 [json_name = "iapd-infos"];
         }
         repeated ClientInfo client_info = 1 [json_name = "client-info"];
      }
      ClientInfos client_infos = 9 [json_name = "client-infos"];
      message ClientFailInfos {
         message ClientFailInfo {
            uint32 index = 1 [json_name = "index"];
            string client_duid = 2 [json_name = "client-duid"];
            enum IaType {
               IaType_IAINVALID = 0;
               IaType_IANA = 1;
               IaType_IATA = 2;
               IaType_IAPD = 3;
            };
            IaType ia_type = 3 [json_name = "ia-type"];
            uint32 iaid = 4 [json_name = "iaid"];
            string if_name = 5 [json_name = "if-name"];
            uint32 pevlan = 6 [json_name = "pevlan"];
            uint32 cevlan = 7 [json_name = "cevlan"];
            string vpn_name = 8 [json_name = "vpn-name"];
            string client_mac = 9 [json_name = "client-mac"];
            message IanaInfos {
               message IanaInfo {
                  string ipv6_address = 1 [json_name = "ipv6-address"];
                  enum FailCause {
                     FailCause_USELESS = 0;
                     FailCause_INFOX_REQUESTX_PACKETX_DELETE = 1;
                     FailCause_ADDRESSX_ALLOCATIONX_FAILURE = 2;
                     FailCause_PREFIXX_ALLOCATIONX_FAILURE = 3;
                     FailCause_ADDRESSX_RENEWALX_FAILURE = 4;
                     FailCause_PREFIXX_RENEWALX_FAILURE = 5;
                     FailCause_CONFIRMX_PACKETX_DELETE = 6;
                     FailCause_CLIENTX_DECLINEX_ADDRESS = 8;
                     FailCause_CLIENTX_RELEASEX_ADDRESS = 9;
                     FailCause_RELAYX_INTERFACEX_DELETE = 10;
                     FailCause_VPNX_CONFIGURATIONX_DELETE = 11;
                     FailCause_USERX_TIMEOUT = 12;
                     FailCause_RESENDX_SOLICIT = 13;
                     FailCause_ADDRESSX_CONFLICT = 14;
                     FailCause_LEASEX_TIMEOUT = 15;
                     FailCause_ADDX_PDX_ROUTEX_FAILURE = 16;
                     FailCause_MACX_DUIDX_MISMATCH = 17;
                     FailCause_REACHX_LIMIT = 18;
                     FailCause_ENTRYX_RESOURCEX_ALLOCATIONX_FAILURE = 19;
                     FailCause_INDEXX_RESOURCEX_ALLOCATIONX_FAILURE = 20;
                     FailCause_UPDATEX_USERX_ENTRYX_FAILURE = 21;
                     FailCause_ADDX_USERX_ENTRYX_FAILURE = 22;
                     FailCause_COMMONDX_RESET = 23;
                     FailCause_INTERFACEX_INFORMATIONX_CHANGED = 24;
                     FailCause_DUIDX_CHANGED = 25;
                  };
                  FailCause fail_cause = 2 [json_name = "fail-cause"];
                  string fail_time = 3 [json_name = "fail-time"];
               }
               repeated IanaInfo iana_info = 1 [json_name = "iana-info"];
            }
            IanaInfos iana_infos = 10 [json_name = "iana-infos"];
            message IapdInfos {
               message IapdInfo {
                  string ipv6_address = 1 [json_name = "ipv6-address"];
                  uint32 prefix = 2 [json_name = "prefix"];
                  enum FailCause {
                     FailCause_USELESS = 0;
                     FailCause_INFOX_REQUESTX_PACKETX_DELETE = 1;
                     FailCause_ADDRESSX_ALLOCATIONX_FAILURE = 2;
                     FailCause_PREFIXX_ALLOCATIONX_FAILURE = 3;
                     FailCause_ADDRESSX_RENEWALX_FAILURE = 4;
                     FailCause_PREFIXX_RENEWALX_FAILURE = 5;
                     FailCause_CONFIRMX_PACKETX_DELETE = 6;
                     FailCause_CLIENTX_DECLINEX_ADDRESS = 8;
                     FailCause_CLIENTX_RELEASEX_ADDRESS = 9;
                     FailCause_RELAYX_INTERFACEX_DELETE = 10;
                     FailCause_VPNX_CONFIGURATIONX_DELETE = 11;
                     FailCause_USERX_TIMEOUT = 12;
                     FailCause_RESENDX_SOLICIT = 13;
                     FailCause_ADDRESSX_CONFLICT = 14;
                     FailCause_LEASEX_TIMEOUT = 15;
                     FailCause_ADDX_PDX_ROUTEX_FAILURE = 16;
                     FailCause_MACX_DUIDX_MISMATCH = 17;
                     FailCause_REACHX_LIMIT = 18;
                     FailCause_ENTRYX_RESOURCEX_ALLOCATIONX_FAILURE = 19;
                     FailCause_INDEXX_RESOURCEX_ALLOCATIONX_FAILURE = 20;
                     FailCause_UPDATEX_USERX_ENTRYX_FAILURE = 21;
                     FailCause_ADDX_USERX_ENTRYX_FAILURE = 22;
                     FailCause_COMMONDX_RESET = 23;
                     FailCause_INTERFACEX_INFORMATIONX_CHANGED = 24;
                     FailCause_DUIDX_CHANGED = 25;
                  };
                  FailCause fail_cause = 3 [json_name = "fail-cause"];
                  string fail_time = 4 [json_name = "fail-time"];
               }
               repeated IapdInfo iapd_info = 1 [json_name = "iapd-info"];
            }
            IapdInfos iapd_infos = 11 [json_name = "iapd-infos"];
         }
         repeated ClientFailInfo client_fail_info = 1 [json_name = "client-fail-info"];
      }
      ClientFailInfos client_fail_infos = 10 [json_name = "client-fail-infos"];
   }
   Relay relay = 2 [json_name = "relay"];
   message Server {
      message Server3 {
         bool is_allow_hint = 1 [json_name = "is-allow-hint"];
         uint32 preference = 2 [json_name = "preference"];
         bool is_rapid = 3 [json_name = "is-rapid"];
         bool is_unicast = 4 [json_name = "is-unicast"];
      }
      Server3 server3 = 1 [json_name = "server"];
      message ServerStorage {
         bool database_enable = 1 [json_name = "database-enable"];
         bool database_recover_enable = 2 [json_name = "database-recover-enable"];
         string database_url = 3 [json_name = "database-url"];
         uint32 write_delay = 4 [json_name = "write-delay"];
      }
      ServerStorage server_storage = 2 [json_name = "server-storage"];
      message Ipv6Pools {
         message Ipv6Pool {
            string pool_name = 1 [json_name = "pool-name"];
            bool lock_flag = 2 [json_name = "lock-flag"];
            uint32 refresh_time = 3 [json_name = "refresh-time"];
            uint32 conflict_recovery_time = 4 [json_name = "conflict-recovery-time"];
            uint32 renew_percent = 5 [json_name = "renew-percent"];
            uint32 rebind_percent = 6 [json_name = "rebind-percent"];
            string capwap_ac = 7 [json_name = "capwap-ac"];
            string vpn_instance = 8 [json_name = "vpn-instance"];
            enum Logging {
               INVALID_ENUM_VALUE_Logging = 0;
               Logging_ALLOCATIONX_ADDRESSX_SUCCESS = 1;
               Logging_ALLOCATIONX_PREFIXX_SUCCESS = 2;
               Logging_DETECTX_ADDRESSX_CONFLICT = 3;
               Logging_RELEASEX_ADDRESSX_SUCCESS = 4;
               Logging_RELEASEX_PREFIXX_SUCCESS = 5;
               Logging_RENEWX_ADDRESSX_SUCCESS = 6;
               Logging_RENEWX_PREFIXX_SUCCESS = 7;
            };
            repeated Logging logging = 9 [json_name = "logging"];
            repeated string link_address = 10 [json_name = "link-address"];
            message AddressPrefixes {
               message AddressPrefix {
                  string prefix = 1 [json_name = "prefix"];
                  uint32 prefix_length = 2 [json_name = "prefix-length"];
                  bool eui_64 = 3 [json_name = "eui-64"];
                  uint32 valid_time = 4 [json_name = "valid-time"];
                  uint32 preferred_time = 5 [json_name = "preferred-time"];
                  bool valid_infinite = 6 [json_name = "valid-infinite"];
                  bool preferred_infinite = 7 [json_name = "preferred-infinite"];
                  bool lock = 8 [json_name = "lock"];
               }
               repeated AddressPrefix address_prefix = 1 [json_name = "address-prefix"];
            }
            AddressPrefixes address_prefixes = 11 [json_name = "address-prefixes"];
            message PrefixDelegations {
               message PrefixDelegation {
                  string prefix = 1 [json_name = "prefix"];
                  uint32 prefix_length = 2 [json_name = "prefix-length"];
                  uint32 assign_prefix_length = 3 [json_name = "assign-prefix-length"];
                  uint32 valid_time = 4 [json_name = "valid-time"];
                  uint32 preferred_time = 5 [json_name = "preferred-time"];
                  bool valid_infinite = 6 [json_name = "valid-infinite"];
                  bool preferred_infinite = 7 [json_name = "preferred-infinite"];
                  bool lock = 8 [json_name = "lock"];
               }
               repeated PrefixDelegation prefix_delegation = 1 [json_name = "prefix-delegation"];
            }
            PrefixDelegations prefix_delegations = 12 [json_name = "prefix-delegations"];
            message StaticBindAddresses {
               message StaticBindAddress {
                  string ipv6_address = 1 [json_name = "ipv6-address"];
                  string client_duid = 2 [json_name = "client-duid"];
                  uint32 iaid = 3 [json_name = "iaid"];
                  uint32 valid_time = 4 [json_name = "valid-time"];
                  uint32 preferred_time = 5 [json_name = "preferred-time"];
                  bool valid_infinite = 6 [json_name = "valid-infinite"];
                  bool preferred_infinite = 7 [json_name = "preferred-infinite"];
               }
               repeated StaticBindAddress static_bind_address = 1 [json_name = "static-bind-address"];
            }
            StaticBindAddresses static_bind_addresses = 13 [json_name = "static-bind-addresses"];
            message StaticBindPrefixs {
               message StaticBindPrefix {
                  string prefix = 1 [json_name = "prefix"];
                  uint32 prefix_length = 2 [json_name = "prefix-length"];
                  string client_duid = 3 [json_name = "client-duid"];
                  uint32 iaid = 4 [json_name = "iaid"];
                  uint32 valid_time = 5 [json_name = "valid-time"];
                  uint32 preferred_time = 6 [json_name = "preferred-time"];
                  bool valid_infinite = 7 [json_name = "valid-infinite"];
                  bool preferred_infinite = 8 [json_name = "preferred-infinite"];
               }
               repeated StaticBindPrefix static_bind_prefix = 1 [json_name = "static-bind-prefix"];
            }
            StaticBindPrefixs static_bind_prefixs = 14 [json_name = "static-bind-prefixs"];
            message ExcludedAddresses {
               message ExcludedAddress {
                  string start_ipv6_address = 1 [json_name = "start-ipv6-address"];
                  string end_ipv6_address = 2 [json_name = "end-ipv6-address"];
               }
               repeated ExcludedAddress excluded_address = 1 [json_name = "excluded-address"];
            }
            ExcludedAddresses excluded_addresses = 15 [json_name = "excluded-addresses"];
            message DnsServers {
               message DnsServer {
                  string dns_server_address = 1 [json_name = "dns-server-address"];
               }
               repeated DnsServer dns_server = 1 [json_name = "dns-server"];
            }
            DnsServers dns_servers = 16 [json_name = "dns-servers"];
            message SipServers {
               message SipServer {
                  string sip_server_address = 1 [json_name = "sip-server-address"];
               }
               repeated SipServer sip_server = 1 [json_name = "sip-server"];
            }
            SipServers sip_servers = 17 [json_name = "sip-servers"];
            message NisServers {
               message NisServer {
                  string nis_server_address = 1 [json_name = "nis-server-address"];
               }
               repeated NisServer nis_server = 1 [json_name = "nis-server"];
            }
            NisServers nis_servers = 18 [json_name = "nis-servers"];
            message NispServers {
               message NispServer {
                  string nisp_server_address = 1 [json_name = "nisp-server-address"];
               }
               repeated NispServer nisp_server = 1 [json_name = "nisp-server"];
            }
            NispServers nisp_servers = 19 [json_name = "nisp-servers"];
            message SntpServers {
               message SntpServer {
                  string sntp_server_address = 1 [json_name = "sntp-server-address"];
               }
               repeated SntpServer sntp_server = 1 [json_name = "sntp-server"];
            }
            SntpServers sntp_servers = 20 [json_name = "sntp-servers"];
            message SipDomains {
               message SipDomain {
                  string domain_name = 1 [json_name = "domain-name"];
               }
               repeated SipDomain sip_domain = 1 [json_name = "sip-domain"];
            }
            SipDomains sip_domains = 21 [json_name = "sip-domains"];
            message DnsDomains {
               message DnsDomain {
                  string domain_name = 1 [json_name = "domain-name"];
               }
               repeated DnsDomain dns_domain = 1 [json_name = "dns-domain"];
            }
            DnsDomains dns_domains = 22 [json_name = "dns-domains"];
            message NisDomains {
               message NisDomain {
                  string domain_name = 1 [json_name = "domain-name"];
               }
               repeated NisDomain nis_domain = 1 [json_name = "nis-domain"];
            }
            NisDomains nis_domains = 23 [json_name = "nis-domains"];
            message NispDomains {
               message NispDomain {
                  string domain_name = 1 [json_name = "domain-name"];
               }
               repeated NispDomain nisp_domain = 1 [json_name = "nisp-domain"];
            }
            NispDomains nisp_domains = 24 [json_name = "nisp-domains"];
            message VendorSpecifics {
               message VendorSpecific {
                  uint32 vendor_id = 1 [json_name = "vendor-id"];
                  message Suboptions {
                     message Suboption {
                        uint32 code = 1 [json_name = "code"];
                        message CodeType_Address {
                           repeated string ipv6_address = 1 [json_name = "ipv6-address"];
                        }
                        message CodeType_Ascii {
                           string ascii_string = 1 [json_name = "ascii-string"];
                        }
                        message CodeType_Hex {
                           string hex_string = 1 [json_name = "hex-string"];
                        }
                        oneof CodeType {
                           CodeType_Address code_type_address = 2 [json_name = "address"];
                           CodeType_Ascii code_type_ascii = 3 [json_name = "ascii"];
                           CodeType_Hex code_type_hex = 4 [json_name = "hex"];
                        }
                     }
                     repeated Suboption suboption = 1 [json_name = "suboption"];
                  }
                  Suboptions suboptions = 2 [json_name = "suboptions"];
               }
               repeated VendorSpecific vendor_specific = 1 [json_name = "vendor-specific"];
            }
            VendorSpecifics vendor_specifics = 25 [json_name = "vendor-specifics"];
            message AddressAllocateInfos {
               message AddressAllocateInfo {
                  string ipv6_address = 1 [json_name = "ipv6-address"];
                  uint32 valid_time = 2 [json_name = "valid-time"];
                  string expire_time = 3 [json_name = "expire-time"];
                  uint32 left_time = 4 [json_name = "left-time"];
               }
               repeated AddressAllocateInfo address_allocate_info = 1 [json_name = "address-allocate-info"];
            }
            AddressAllocateInfos address_allocate_infos = 26 [json_name = "address-allocate-infos"];
            message UserBindInfos {
               message UserBindInfo {
                  string ipv6_address = 1 [json_name = "ipv6-address"];
                  string client_duid = 2 [json_name = "client-duid"];
                  string client_address = 3 [json_name = "client-address"];
                  uint32 iaid = 4 [json_name = "iaid"];
                  uint32 valid_time = 5 [json_name = "valid-time"];
                  uint32 preferred_time = 6 [json_name = "preferred-time"];
                  string expire_time = 7 [json_name = "expire-time"];
                  uint32 left_time = 8 [json_name = "left-time"];
               }
               repeated UserBindInfo user_bind_info = 1 [json_name = "user-bind-info"];
            }
            UserBindInfos user_bind_infos = 27 [json_name = "user-bind-infos"];
            message AddressConflictInfos {
               message AddressConflictInfo {
                  string ipv6_address = 1 [json_name = "ipv6-address"];
                  string detect_time = 2 [json_name = "detect-time"];
               }
               repeated AddressConflictInfo address_conflict_info = 1 [json_name = "address-conflict-info"];
            }
            AddressConflictInfos address_conflict_infos = 28 [json_name = "address-conflict-infos"];
            message AddressStatusInfos {
               message AddressStatusInfo {
                  string ipv6_address = 1 [json_name = "ipv6-address"];
                  enum AddressStatus {
                     AddressStatus_NOTX_INX_POOL = 0;
                     AddressStatus_RESERVEDX_ADDRESS = 1;
                     AddressStatus_LEASEDX_ADDRESS = 2;
                     AddressStatus_STATICX_ADDRESS = 3;
                     AddressStatus_CONFLICTX_ADDRESS = 4;
                     AddressStatus_EXCLUDEX_ADDRESS = 5;
                     AddressStatus_IDLEX_ADDRESS = 6;
                  };
                  AddressStatus address_status = 2 [json_name = "address-status"];
                  string client_duid = 3 [json_name = "client-duid"];
                  uint32 valid_time = 4 [json_name = "valid-time"];
                  uint32 preferred_time = 5 [json_name = "preferred-time"];
                  string expire_time = 6 [json_name = "expire-time"];
                  uint32 left_time = 7 [json_name = "left-time"];
                  uint32 iaid = 8 [json_name = "iaid"];
                  string detect_time = 9 [json_name = "detect-time"];
               }
               repeated AddressStatusInfo address_status_info = 1 [json_name = "address-status-info"];
            }
            AddressStatusInfos address_status_infos = 29 [json_name = "address-status-infos"];
         }
         repeated Ipv6Pool ipv6_pool = 1 [json_name = "ipv6-pool"];
      }
      Ipv6Pools ipv6_pools = 3 [json_name = "ipv6-pools"];
      message GlobalPacketStatistics {
         uint32 solicit_number = 1 [json_name = "solicit-number"];
         uint32 request_number = 2 [json_name = "request-number"];
         uint32 confirm_number = 3 [json_name = "confirm-number"];
         uint32 renew_number = 4 [json_name = "renew-number"];
         uint32 rebind_number = 5 [json_name = "rebind-number"];
         uint32 release_number = 6 [json_name = "release-number"];
         uint32 decline_number = 7 [json_name = "decline-number"];
         uint32 information_request_number = 8 [json_name = "information-request-number"];
         uint32 relay_forward_number = 9 [json_name = "relay-forward-number"];
         uint32 lease_query_number = 10 [json_name = "lease-query-number"];
         uint32 unknown_type_number = 11 [json_name = "unknown-type-number"];
         uint32 advertise_number = 12 [json_name = "advertise-number"];
         uint32 reply_number = 13 [json_name = "reply-number"];
         uint32 relay_reply_number = 14 [json_name = "relay-reply-number"];
         uint32 lease_reply_number = 15 [json_name = "lease-reply-number"];
         uint32 reconfigure_number = 16 [json_name = "reconfigure-number"];
      }
      GlobalPacketStatistics global_packet_statistics = 4 [json_name = "global-packet-statistics"];
   }
   Server server = 3 [json_name = "server"];
}

