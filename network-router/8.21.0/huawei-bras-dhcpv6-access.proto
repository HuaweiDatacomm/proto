syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-09-28 10:43:05
// ProtoYang-version 1
// module huawei-bras-dhcpv6-access
// revision 2020-02-22
// revision 2020-02-14
// revision 2020-01-19
// revision 2019-12-23
// revision 2019-12-14
// revision 2019-11-25
// revision 2019-11-11
// revision 2019-11-04
// revision 2019-10-17
// revision 2019-04-02
// namespace urn:huawei:yang:huawei-bras-dhcpv6-access

package huawei_bras_dhcpv6_access;

message BrasDhcpv6Access {
   message GlobalOption {
      message Option37Decode {
         bool decode_any_format = 1 [json_name = "decode-any-format"];
         enum ConflictOffline {
            ConflictOffline_IPV6 = 0;
            ConflictOffline_IPV6X_ANDX_RADIUS = 1;
         };
         ConflictOffline conflict_offline = 2 [json_name = "conflict-offline"];
      }
      Option37Decode option37_decode = 1 [json_name = "option37-decode"];
   }
   GlobalOption global_option = 1 [json_name = "global-option"];
   message Global {
      message Option {
         message Option17Decode {
            bool option17_decode = 1 [json_name = "option17-decode"];
            uint32 wait_request_time = 2 [json_name = "wait-request-time"];
            uint32 server_option = 3 [json_name = "server-option"];
         }
         Option17Decode option17_decode = 1 [json_name = "option17-decode"];
         message OptionPriority {
            bool enable = 1 [json_name = "enable"];
         }
         OptionPriority option_priority = 2 [json_name = "option-priority"];
         message VendorClass {
            uint32 option_code = 1 [json_name = "option-code"];
            uint32 offset_value = 2 [json_name = "offset-value"];
         }
         VendorClass vendor_class = 3 [json_name = "vendor-class"];
         message Option18 {
            bool ignore_interface_type = 1 [json_name = "ignore-interface-type"];
            bool ignore_nas_logic = 2 [json_name = "ignore-nas-logic"];
         }
         Option18 option18 = 4 [json_name = "option18"];
         message Option37Option17 {
            bool nas_port_id_exclude = 1 [json_name = "nas-port-id-exclude"];
         }
         Option37Option17 option37_option17 = 5 [json_name = "option37-option17"];
      }
      Option option = 1 [json_name = "option"];
      message UserOffline {
         bool duid_mismatch = 1 [json_name = "duid-mismatch"];
      }
      UserOffline user_offline = 2 [json_name = "user-offline"];
      message ClientDuidReplace {
         bool enable = 1 [json_name = "enable"];
      }
      ClientDuidReplace client_duid_replace = 3 [json_name = "client-duid-replace"];
      message SolictSpeed {
         uint32 packet_num = 1 [json_name = "packet-num"];
         uint32 second = 2 [json_name = "second"];
      }
      SolictSpeed solict_speed = 4 [json_name = "solict-speed"];
      message ThroughPacket {
         bool enable = 1 [json_name = "enable"];
      }
      ThroughPacket through_packet = 5 [json_name = "through-packet"];
      message RebindNoUserReply {
         bool enable = 1 [json_name = "enable"];
      }
      RebindNoUserReply rebind_no_user_reply = 6 [json_name = "rebind-no-user-reply"];
      message Reconfigure {
         uint32 retransmit_times = 1 [json_name = "retransmit-times"];
      }
      Reconfigure reconfigure = 7 [json_name = "reconfigure"];
      message LeaseManagement {
         bool enable = 1 [json_name = "enable"];
      }
      LeaseManagement lease_management = 8 [json_name = "lease-management"];
      message WhitelistSessionCar {
         bool enable = 1 [json_name = "enable"];
         uint32 cir = 2 [json_name = "cir"];
         uint32 cbs = 3 [json_name = "cbs"];
         uint32 pir = 4 [json_name = "pir"];
         uint32 pbs = 5 [json_name = "pbs"];
      }
      WhitelistSessionCar whitelist_session_car = 9 [json_name = "whitelist-session-car"];
      message DuidMissmatch {
         bool reply = 1 [json_name = "reply"];
      }
      DuidMissmatch duid_missmatch = 10 [json_name = "duid-missmatch"];
      message ReplyStatusCode {
         bool reply_disable = 1 [json_name = "reply-disable"];
      }
      ReplyStatusCode reply_status_code = 11 [json_name = "reply-status-code"];
   }
   Global global = 2 [json_name = "global"];
   message RapidCommit {
      bool enable = 1 [json_name = "enable"];
   }
   RapidCommit rapid_commit = 3 [json_name = "rapid-commit"];
   message Relay {
      message RelayOptions {
         message RelayOption {
            string interface_name = 1 [json_name = "interface-name"];
            enum RemoteIdType {
               INVALID_ENUM_VALUE_RemoteIdType = 0;
               RemoteIdType_NEBA = 1;
               RemoteIdType_VULA = 2;
            };
            RemoteIdType remote_id_type = 2 [json_name = "remote-id-type"];
         }
         repeated RelayOption relay_option = 1 [json_name = "relay-option"];
      }
      RelayOptions relay_options = 1 [json_name = "relay-options"];
   }
   Relay relay = 4 [json_name = "relay"];
   message ReconfTimeoutUsers {
      message ReconfTimeoutUser {
         uint32 index = 1 [json_name = "index"];
         uint32 user_id = 2 [json_name = "user-id"];
         string user_mac = 3 [json_name = "user-mac"];
         uint32 session_id = 4 [json_name = "session-id"];
         string ipv6_address = 5 [json_name = "ipv6-address"];
         string ipv6_prefix = 6 [json_name = "ipv6-prefix"];
         string record_time = 7 [json_name = "record-time"];
      }
      repeated ReconfTimeoutUser reconf_timeout_user = 1 [json_name = "reconf-timeout-user"];
   }
   ReconfTimeoutUsers reconf_timeout_users = 5 [json_name = "reconf-timeout-users"];
   message LeaseProxyUsers {
      message LeaseProxyUser {
         string slot_id = 1 [json_name = "slot-id"];
         uint32 user_id = 2 [json_name = "user-id"];
         string mac_address = 3 [json_name = "mac-address"];
         string interface = 4 [json_name = "interface"];
         uint32 pe_vlan = 5 [json_name = "pe-vlan"];
         uint32 ce_vlan = 6 [json_name = "ce-vlan"];
         string start_time = 7 [json_name = "start-time"];
         string last_renew_time = 8 [json_name = "last-renew-time"];
         uint32 preferred_lifetime = 9 [json_name = "preferred-lifetime"];
         uint32 valid_lifetime = 10 [json_name = "valid-lifetime"];
         uint32 original_t1 = 11 [json_name = "original-t1"];
      }
      repeated LeaseProxyUser lease_proxy_user = 1 [json_name = "lease-proxy-user"];
   }
   LeaseProxyUsers lease_proxy_users = 6 [json_name = "lease-proxy-users"];
   message AccessLeaseProxyUsers {
      message AccessLeaseProxyUser {
         uint32 user_id = 1 [json_name = "user-id"];
         string interface = 2 [json_name = "interface"];
         string domain_name = 3 [json_name = "domain-name"];
         string vpn_instance = 4 [json_name = "vpn-instance"];
         string mac_address = 5 [json_name = "mac-address"];
         enum ProxyType {
            INVALID_ENUM_VALUE_ProxyType = 0;
            ProxyType_IPV4X_STACK = 1;
            ProxyType_IPV6X_STACK = 2;
            ProxyType_DUALX_STACK = 3;
         };
         ProxyType proxy_type = 6 [json_name = "proxy-type"];
         string ipv4_address = 7 [json_name = "ipv4-address"];
         string ipv6_address = 8 [json_name = "ipv6-address"];
         string ipv6_prefix = 9 [json_name = "ipv6-prefix"];
         uint32 pe_vlan = 10 [json_name = "pe-vlan"];
         uint32 ce_vlan = 11 [json_name = "ce-vlan"];
         uint32 ipv4_lease = 12 [json_name = "ipv4-lease"];
         uint32 preferred_lifetime = 13 [json_name = "preferred-lifetime"];
         uint32 valid_lifetime = 14 [json_name = "valid-lifetime"];
      }
      repeated AccessLeaseProxyUser access_lease_proxy_user = 1 [json_name = "access-lease-proxy-user"];
   }
   AccessLeaseProxyUsers access_lease_proxy_users = 7 [json_name = "access-lease-proxy-users"];
   message Ipoev6UserDelays {
      message Ipoev6UserDelay {
         string mac = 1 [json_name = "mac"];
         string ipv6_prefix = 2 [json_name = "ipv6-prefix"];
         uint32 prefix_length = 3 [json_name = "prefix-length"];
         uint32 vrfid = 4 [json_name = "vrfid"];
         uint32 detecting_delay_time = 5 [json_name = "detecting-delay-time"];
         uint32 timestamp = 6 [json_name = "timestamp"];
      }
      repeated Ipoev6UserDelay ipoev6_user_delay = 1 [json_name = "ipoev6-user-delay"];
   }
   Ipoev6UserDelays ipoev6_user_delays = 8 [json_name = "ipoev6-user-delays"];
   message AccessLeaseProxyUserStatistics {
      uint32 total_lease_proxy_users = 1 [json_name = "total-lease-proxy-users"];
      uint32 dual_stack_users = 2 [json_name = "dual-stack-users"];
      uint32 ipv4_stack_users = 3 [json_name = "ipv4-stack-users"];
      uint32 ipv6_stack_users = 4 [json_name = "ipv6-stack-users"];
   }
   AccessLeaseProxyUserStatistics access_lease_proxy_user_statistics = 9 [json_name = "access-lease-proxy-user-statistics"];
   message Dhcpv6ClientStatistics {
      uint32 send_solicit = 1 [json_name = "send-solicit"];
      uint32 send_request = 2 [json_name = "send-request"];
      uint32 send_renew = 3 [json_name = "send-renew"];
      uint32 send_rebind = 4 [json_name = "send-rebind"];
      uint32 send_release = 5 [json_name = "send-release"];
      uint32 send_decline = 6 [json_name = "send-decline"];
      uint32 receive_advertise = 7 [json_name = "receive-advertise"];
      uint32 receive_request_reply = 8 [json_name = "receive-request-reply"];
      uint32 receive_renew_reply = 9 [json_name = "receive-renew-reply"];
      uint32 receive_rebind_reply = 10 [json_name = "receive-rebind-reply"];
      uint32 receive_other = 11 [json_name = "receive-other"];
      uint32 receive_conflict_address = 12 [json_name = "receive-conflict-address"];
      uint32 receive_transaction_id = 13 [json_name = "receive-transaction-id"];
      uint32 receive_noduid_option = 14 [json_name = "receive-noduid-option"];
      uint32 receive_ip_or_udp_head = 15 [json_name = "receive-ip-or-udp-head"];
      uint32 receive_iaid_error = 16 [json_name = "receive-iaid-error"];
      uint32 receive_client_duid_error = 17 [json_name = "receive-client-duid-error"];
      uint32 receive_prefix_lenth_error = 18 [json_name = "receive-prefix-lenth-error"];
      uint32 receive_advertise_server_error = 19 [json_name = "receive-advertise-server-error"];
      uint32 receive_reply_server_error = 20 [json_name = "receive-reply-server-error"];
   }
   Dhcpv6ClientStatistics dhcpv6_client_statistics = 10 [json_name = "dhcpv6-client-statistics"];
}

