syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-09-14 11:21:58
// ProtoYang-version 1
// module huawei-bras-user-manage
// revision 2020-04-27
// revision 2019-04-04
// namespace urn:huawei:yang:huawei-bras-user-manage

package huawei_bras_user_manage;

message BrasUserManage {
   message ServiceIdentifyPolicys {
      message ServiceIdentifyPolicy {
         string name = 1 [json_name = "name"];
         message Mode {
            enum Mode5 {
               INVALID_ENUM_VALUE_Mode5 = 0;
               Mode5_INNERX_VLAN = 1;
               Mode5_OUTERX_VLAN = 2;
               Mode5_DSCP = 3;
               Mode5_DHCPX_OPTION60 = 4;
               Mode5_VENDORX_CLASS = 5;
               Mode5_SERVICE8021PX_INNERVLAN = 6;
               Mode5_SERVICE8021PX_OUTERVLAN = 7;
            };
            Mode5 mode5 = 1 [json_name = "mode"];
         }
         Mode mode = 2 [json_name = "mode"];
         message DhcpOption60 {
            bool encrypt = 1 [json_name = "encrypt"];
            enum PartialMatch {
               PartialMatch_DOMAINX_INCLUDED = 0;
               PartialMatch_INCLUDEDX_INX_DOMAIN = 1;
            };
            PartialMatch partial_match = 2 [json_name = "partial-match"];
            message PartialInfo_Cn {
               bool cn6 = 1 [json_name = "cn"];
            }
            message PartialInfo_NotCn {
               uint32 offset_value = 1 [json_name = "offset-value"];
               message LengthOrSubOption_Length {
                  uint32 length7 = 1 [json_name = "length"];
               }
               message LengthOrSubOption_SubOption {
                  uint32 sub_option_value = 1 [json_name = "sub-option-value"];
                  uint32 sub_offset_value = 2 [json_name = "sub-offset-value"];
                  uint32 sub_length_value = 3 [json_name = "sub-length-value"];
               }
               oneof LengthOrSubOption {
                  LengthOrSubOption_Length length_or_sub_option_length = 2 [json_name = "length"];
                  LengthOrSubOption_SubOption length_or_sub_option_sub_option = 3 [json_name = "sub-option"];
               }
            }
            oneof PartialInfo {
               PartialInfo_Cn partial_info_cn = 4 [json_name = "cn"];
               PartialInfo_NotCn partial_info_not_cn = 5 [json_name = "not-cn"];
            }
         }
         DhcpOption60 dhcp_option60 = 3 [json_name = "dhcp-option60"];
         message VendorClass {
            bool encrypt = 1 [json_name = "encrypt"];
            enum PartialMatch {
               PartialMatch_DOMAINX_INCLUDED = 0;
               PartialMatch_INCLUDEDX_INX_DOMAIN = 1;
            };
            PartialMatch partial_match = 2 [json_name = "partial-match"];
            message PartialInfo_Cn {
               bool cn6 = 1 [json_name = "cn"];
            }
            message PartialInfo_NotCn {
               uint32 offset_value = 1 [json_name = "offset-value"];
               message LengthOrSubOption_Length {
                  uint32 length7 = 1 [json_name = "length"];
               }
               message LengthOrSubOption_SubOption {
                  uint32 sub_option_value = 1 [json_name = "sub-option-value"];
                  uint32 sub_offset_value = 2 [json_name = "sub-offset-value"];
                  uint32 sub_length_value = 3 [json_name = "sub-length-value"];
               }
               oneof LengthOrSubOption {
                  LengthOrSubOption_Length length_or_sub_option_length = 2 [json_name = "length"];
                  LengthOrSubOption_SubOption length_or_sub_option_sub_option = 3 [json_name = "sub-option"];
               }
            }
            oneof PartialInfo {
               PartialInfo_Cn partial_info_cn = 4 [json_name = "cn"];
               PartialInfo_NotCn partial_info_not_cn = 5 [json_name = "not-cn"];
            }
         }
         VendorClass vendor_class = 4 [json_name = "vendor-class"];
      }
      repeated ServiceIdentifyPolicy service_identify_policy = 1 [json_name = "service-identify-policy"];
   }
   ServiceIdentifyPolicys service_identify_policys = 1 [json_name = "service-identify-policys"];
   message DomainMapLists {
      message DomainMapList {
         string name = 1 [json_name = "name"];
         message DomainMappings {
            message DomainMapping {
               string source_domain = 1 [json_name = "source-domain"];
               string destination_domain = 2 [json_name = "destination-domain"];
               bool extend = 3 [json_name = "extend"];
            }
            repeated DomainMapping domain_mapping = 1 [json_name = "domain-mapping"];
         }
         DomainMappings domain_mappings = 2 [json_name = "domain-mappings"];
      }
      repeated DomainMapList domain_map_list = 1 [json_name = "domain-map-list"];
   }
   DomainMapLists domain_map_lists = 2 [json_name = "domain-map-lists"];
   message DomainLists {
      message DomainList {
         string name = 1 [json_name = "name"];
         repeated string domain_list_domain = 2 [json_name = "domain-list-domain"];
      }
      repeated DomainList domain_list = 1 [json_name = "domain-list"];
   }
   DomainLists domain_lists = 3 [json_name = "domain-lists"];
   message AccessPolicy {
      bool pure_user_name_no_exist_online = 1 [json_name = "pure-user-name-no-exist-online"];
   }
   AccessPolicy access_policy = 4 [json_name = "access-policy"];
   message AccessSpeed {
      message AdjustSystemState {
         bool enable = 1 [json_name = "enable"];
      }
      AdjustSystemState adjust_system_state = 1 [json_name = "adjust-system-state"];
      message AccessRateLimitation {
         uint32 access_number = 1 [json_name = "access-number"];
         uint32 access_period = 2 [json_name = "access-period"];
         enum Type {
            INVALID_ENUM_VALUE_Type = 0;
            Type_FORCED = 1;
            Type_LEVEL1 = 2;
            Type_LEVEL2 = 3;
         };
         Type type = 3 [json_name = "type"];
         bool trigger_packet_enable = 4 [json_name = "trigger-packet-enable"];
      }
      AccessRateLimitation access_rate_limitation = 2 [json_name = "access-rate-limitation"];
      message AdjustThresholds {
         message AdjustThreshold {
            enum SystemState {
               SystemState_MAINX_MEMORYX_USAGE = 0;
               SystemState_SLOTX_MEMORYX_USAGE = 1;
               SystemState_MAINX_CPUX_USAGE = 2;
               SystemState_SLOTX_CPUX_USAGE = 3;
               SystemState_ACCESSX_QUEUE = 4;
               SystemState_PPPX_CPCARX_DROP = 5;
               SystemState_PPPX_RECEIVEX_QUEUE = 6;
               SystemState_PPPOEX_RECEIVEX_QUEUE = 7;
               SystemState_L2TPX_QUEUE = 8;
               SystemState_DHCPX_SLOTX_QUEUE = 9;
               SystemState_FESX_QUEUE = 10;
               SystemState_LNSX_CPCARX_DROP = 11;
               SystemState_DHCPX_SERVERX_QUEUE = 13;
               SystemState_DHCPV6X_SERVERX_QUEUE = 14;
               SystemState_EAPX_CPCARX_DROP = 15;
               SystemState_HTTPSX_CPUX_USAGE = 16;
               SystemState_IPOEX_KEEPALIVEX_CPUX_USAGE = 17;
            };
            SystemState system_state = 1 [json_name = "system-state"];
            uint32 alarm_percent = 2 [json_name = "alarm-percent"];
            uint32 resume_percent = 3 [json_name = "resume-percent"];
         }
         repeated AdjustThreshold adjust_threshold = 1 [json_name = "adjust-threshold"];
      }
      AdjustThresholds adjust_thresholds = 3 [json_name = "adjust-thresholds"];
      message AccessQueueThreshold {
         uint32 msg_queue_length = 1 [json_name = "msg-queue-length"];
      }
      AccessQueueThreshold access_queue_threshold = 4 [json_name = "access-queue-threshold"];
      message OfflineSpeed {
         uint32 offline_number = 1 [json_name = "offline-number"];
      }
      OfflineSpeed offline_speed = 5 [json_name = "offline-speed"];
      message AdjustCpcarLevel {
         uint32 minimum_adjustable_threshold = 1 [json_name = "minimum-adjustable-threshold"];
         uint32 decrease_interval = 2 [json_name = "decrease-interval"];
         uint32 resume_interval = 3 [json_name = "resume-interval"];
      }
      AdjustCpcarLevel adjust_cpcar_level = 6 [json_name = "adjust-cpcar-level"];
      message AdjustUserType {
         bool dhcp = 1 [json_name = "dhcp"];
         bool pppoe = 2 [json_name = "pppoe"];
         bool ipv4_trigger = 3 [json_name = "ipv4-trigger"];
         bool ipv6_trigger = 4 [json_name = "ipv6-trigger"];
         bool dot1x = 5 [json_name = "dot1x"];
         bool l2tp = 6 [json_name = "l2tp"];
         bool dhcpv6 = 7 [json_name = "dhcpv6"];
      }
      AdjustUserType adjust_user_type = 7 [json_name = "adjust-user-type"];
      message AdjustSwitch {
         bool enable = 1 [json_name = "enable"];
         bool strict_check = 2 [json_name = "strict-check"];
         bool strict_check_l2tp = 3 [json_name = "strict-check-l2tp"];
      }
      AdjustSwitch adjust_switch = 8 [json_name = "adjust-switch"];
      message AdjustTimes {
         message AdjustTime {
            enum BoardType {
               INVALID_ENUM_VALUE_BoardType = 0;
               BoardType_MPUX_ORX_SRU = 1;
               BoardType_LPU = 2;
            };
            BoardType board_type = 1 [json_name = "board-type"];
            uint32 adjust_interval = 2 [json_name = "adjust-interval"];
            uint32 adjust_delay_count = 3 [json_name = "adjust-delay-count"];
         }
         repeated AdjustTime adjust_time = 1 [json_name = "adjust-time"];
      }
      AdjustTimes adjust_times = 9 [json_name = "adjust-times"];
      message RadiusProxyActiveSession {
         uint32 restrain_threshold = 1 [json_name = "restrain-threshold"];
         uint32 resume_threshold = 2 [json_name = "resume-threshold"];
      }
      RadiusProxyActiveSession radius_proxy_active_session = 10 [json_name = "radius-proxy-active-session"];
   }
   AccessSpeed access_speed = 5 [json_name = "access-speed"];
   message DefaultPasswordTemplates {
      message DefaultPasswordTemplate {
         string template_name = 1 [json_name = "template-name"];
         enum PasswordFormat {
            INVALID_ENUM_VALUE_PasswordFormat = 0;
            PasswordFormat_PASSWORD = 1;
            PasswordFormat_USERX_CLASS = 2;
            PasswordFormat_VENDORX_CLASS = 3;
            PasswordFormat_OPTION60 = 4;
            PasswordFormat_OPTION77 = 5;
         };
         PasswordFormat password_format = 2 [json_name = "password-format"];
         string password_value = 3 [json_name = "password-value"];
         enum VendorClassFormat {
            INVALID_ENUM_VALUE_VendorClassFormat = 0;
            VendorClassFormat_CN = 1;
            VendorClassFormat_LENGTHX_DEFINED = 2;
            VendorClassFormat_SUBX_OPTION = 3;
         };
         VendorClassFormat vendor_class_format = 4 [json_name = "vendor-class-format"];
         uint32 vendor_class_offset_value = 5 [json_name = "vendor-class-offset-value"];
         uint32 vendor_class_length_value = 6 [json_name = "vendor-class-length-value"];
         uint32 vendor_class_sub_option_code = 7 [json_name = "vendor-class-sub-option-code"];
         uint32 vendor_class_sub_offset = 8 [json_name = "vendor-class-sub-offset"];
         uint32 vendor_class_sub_length = 9 [json_name = "vendor-class-sub-length"];
         bool md5_encrypt = 10 [json_name = "md5-encrypt"];
         bool support_hex = 11 [json_name = "support-hex"];
      }
      repeated DefaultPasswordTemplate default_password_template = 1 [json_name = "default-password-template"];
   }
   DefaultPasswordTemplates default_password_templates = 6 [json_name = "default-password-templates"];
   message AccessTriggerLoose {
      uint32 loose_time = 1 [json_name = "loose-time"];
      bool all_time = 2 [json_name = "all-time"];
      bool infinite_lease = 3 [json_name = "infinite-lease"];
   }
   AccessTriggerLoose access_trigger_loose = 7 [json_name = "access-trigger-loose"];
   message OnlineFailOrOfflineRecords {
      message OnlineFailOrOfflineRecord {
         uint64 record_number = 1 [json_name = "record-number"];
         enum RecordType {
            INVALID_ENUM_VALUE_RecordType = 0;
            RecordType_OFFLINEX_RECORD = 1;
            RecordType_ONLINEX_FAILX_RECORD = 2;
         };
         RecordType record_type = 2 [json_name = "record-type"];
         bool is_normal = 3 [json_name = "is-normal"];
         string interface_name = 4 [json_name = "interface-name"];
         uint32 pe_vlan = 5 [json_name = "pe-vlan"];
         uint32 ce_vlan = 6 [json_name = "ce-vlan"];
         string user_name = 7 [json_name = "user-name"];
         string domain_name = 8 [json_name = "domain-name"];
         string mac_address = 9 [json_name = "mac-address"];
         enum UserType {
            UserType_NONE = 0;
            UserType_TERMINAL = 1;
            UserType_TELNET = 2;
            UserType_FTP = 3;
            UserType_PPP = 4;
            UserType_SSH = 5;
            UserType_QX = 6;
            UserType_SNMP = 7;
            UserType_HTTP = 8;
            UserType_MML = 9;
            UserType_VLANX_EAP = 10;
            UserType_BIND = 11;
         };
         UserType user_type = 10 [json_name = "user-type"];
         string ipv4_address = 11 [json_name = "ipv4-address"];
         string ipv6_address = 12 [json_name = "ipv6-address"];
         uint32 user_id = 13 [json_name = "user-id"];
         uint32 up_id = 14 [json_name = "up-id"];
         enum AccessType {
            AccessType_NONE = 0;
            AccessType_TELNET = 1;
            AccessType_TERMINAL = 2;
            AccessType_SSH = 3;
            AccessType_FTP = 4;
            AccessType_X25X_PAD = 5;
            AccessType_PPP = 6;
            AccessType_PPPOE = 7;
            AccessType_PPPOA = 8;
            AccessType_PPPOLNS = 9;
            AccessType_IPOE = 10;
            AccessType_VLANX_EAP = 11;
            AccessType_VLANX_IP = 12;
            AccessType_VLANX_STATIC = 13;
            AccessType_QX = 14;
            AccessType_MML = 15;
            AccessType_SESSIONX_GROUP = 16;
            AccessType_LEASEX_L2 = 17;
            AccessType_L2VPNX_LEASEX_LINE = 18;
            AccessType_LEASEX_L3 = 19;
            AccessType_LEASEX_L2X_USER = 20;
            AccessType_LACX_TUNNEL = 21;
            AccessType_LNSX_TUNNEL = 22;
            AccessType_SNMP = 23;
            AccessType_HTTP = 24;
         };
         AccessType access_type = 15 [json_name = "access-type"];
         enum StackType {
            StackType_NONE = 0;
            StackType_IPV4 = 1;
            StackType_IPV6NA = 2;
            StackType_IPV6NAPD = 3;
            StackType_IPV6ND = 4;
            StackType_IPV6NDPD = 5;
            StackType_IPV6PD = 6;
         };
         StackType stack_type = 16 [json_name = "stack-type"];
         string ndra_prefix = 17 [json_name = "ndra-prefix"];
         uint32 ndra_prefix_lenth = 18 [json_name = "ndra-prefix-lenth"];
         string ipv6_pd_prefix = 19 [json_name = "ipv6-pd-prefix"];
         enum AuthenState {
            AuthenState_AUTHX_IDLE = 0;
            AuthenState_AUTHX_WAIT = 1;
            AuthenState_AUTHENTICATED = 2;
            AuthenState_FAILED = 3;
            AuthenState_UNKNOWN = 255;
         };
         AuthenState authen_state = 20 [json_name = "authen-state"];
         enum AccountState {
            INVALID_ENUM_VALUE_AccountState = 0;
            AccountState_ACCOUNTX_IDLE = 3;
            AccountState_ACCOUNTX_READY = 4;
            AccountState_ACCOUNTX_STARTX_WAIT = 5;
            AccountState_ACCOUNTING = 6;
            AccountState_ACCOUNTX_LEAVINGX_FLOWX_QUERY = 7;
            AccountState_ACCOUNTX_STOPX_WAIT = 8;
            AccountState_STARTX_ACCOUNTINGX_FAILED = 13;
            AccountState_STOPX_ACCOUNTINGX_IDLE = 14;
            AccountState_ACCOUNTINGX_FINISHED = 16;
            AccountState_STOPX_ACCOUNTINGX_FAILED = 17;
            AccountState_UNKNOWN = 255;
         };
         AccountState account_state = 21 [json_name = "account-state"];
         enum AuthorState {
            INVALID_ENUM_VALUE_AuthorState = 0;
            AuthorState_SUCCESS = 2;
            AuthorState_FAILED = 3;
            AuthorState_AUTHORX_IDLE = 9;
            AuthorState_AUTHORX_USERX_ACKX_WAIT = 10;
            AuthorState_AUTHORX_SERVERX_ACKX_WAIT = 11;
            AuthorState_UNKNOWN = 255;
         };
         AuthorState author_state = 22 [json_name = "author-state"];
         string login_time = 23 [json_name = "login-time"];
         string offline_time = 24 [json_name = "offline-time"];
         string online_fail_or_offline_reason = 25 [json_name = "online-fail-or-offline-reason"];
         string reply_message = 26 [json_name = "reply-message"];
         string premapping_reason = 27 [json_name = "premapping-reason"];
         string timeout_message = 28 [json_name = "timeout-message"];
         string decode_error_attribute = 29 [json_name = "decode-error-attribute"];
         string detail_reason = 30 [json_name = "detail-reason"];
         enum ServerType {
            ServerType_NA = 0;
            ServerType_RADIUS = 1;
            ServerType_DHCP = 2;
         };
         ServerType server_type = 31 [json_name = "server-type"];
         string server_group_name = 32 [json_name = "server-group-name"];
         uint32 online_fail_or_offline_type_code = 33 [json_name = "online-fail-or-offline-type-code"];
         uint32 view_count = 34 [json_name = "view-count"];
         string reason_include = 35 [json_name = "reason-include"];
      }
      repeated OnlineFailOrOfflineRecord online_fail_or_offline_record = 1 [json_name = "online-fail-or-offline-record"];
   }
   OnlineFailOrOfflineRecords online_fail_or_offline_records = 8 [json_name = "online-fail-or-offline-records"];
   message AccessOnlineNumber {
      enum UserType {
         UserType_IPV4 = 0;
         UserType_IPV6 = 1;
         UserType_DUAL = 2;
         UserType_ALL = 3;
      };
      UserType user_type = 1 [json_name = "user-type"];
      bool exclude_dual = 2 [json_name = "exclude-dual"];
      string domain_name = 3 [json_name = "domain-name"];
      enum AccessType {
         AccessType_PPP = 0;
         AccessType_L2TP = 1;
         AccessType_IP = 2;
         AccessType_NONE = 3;
      };
      AccessType access_type = 4 [json_name = "access-type"];
      enum Ipv6AddressProtocol {
         Ipv6AddressProtocol_ND = 0;
         Ipv6AddressProtocol_DHCPV6 = 1;
         Ipv6AddressProtocol_NONE = 2;
      };
      Ipv6AddressProtocol ipv6_address_protocol = 5 [json_name = "ipv6-address-protocol"];
      enum Ipv6CpeMode {
         Ipv6CpeMode_IPV6 = 0;
         Ipv6CpeMode_IPV6X_PD = 1;
         Ipv6CpeMode_BOTH = 2;
         Ipv6CpeMode_NONE = 3;
      };
      Ipv6CpeMode ipv6_cpe_mode = 6 [json_name = "ipv6-cpe-mode"];
      string interface_name = 7 [json_name = "interface-name"];
      string vpn_name = 8 [json_name = "vpn-name"];
      uint32 pevlan_start_id = 9 [json_name = "pevlan-start-id"];
      uint32 pevlan_end_id = 10 [json_name = "pevlan-end-id"];
      uint32 cevlan_start_id = 11 [json_name = "cevlan-start-id"];
      uint32 cevlan_end_id = 12 [json_name = "cevlan-end-id"];
      string slot_id = 13 [json_name = "slot-id"];
      uint32 card_id = 14 [json_name = "card-id"];
      uint32 total_users = 15 [json_name = "total-users"];
      uint32 ipv4_users = 16 [json_name = "ipv4-users"];
      uint32 ipv6_users = 17 [json_name = "ipv6-users"];
      uint32 dual_users = 18 [json_name = "dual-users"];
   }
   AccessOnlineNumber access_online_number = 9 [json_name = "access-online-number"];
   message AccessTables {
      message AccessTable {
         uint32 access_index = 1 [json_name = "access-index"];
         int32 pevlan_start = 2 [json_name = "pevlan-start"];
         int32 pevlan_end = 3 [json_name = "pevlan-end"];
         int32 cevlan_start = 4 [json_name = "cevlan-start"];
         int32 cevlan_end = 5 [json_name = "cevlan-end"];
         string access_interface = 6 [json_name = "access-interface"];
         int32 access_slot_number = 7 [json_name = "access-slot-number"];
         message AccessUserBasicInfo {
            string access_user_name = 1 [json_name = "access-user-name"];
            enum AccessPortType {
               INVALID_ENUM_VALUE_AccessPortType = 0;
               AccessPortType_ALL = 1;
               AccessPortType_PPP = 2;
               AccessPortType_VLAN = 3;
               AccessPortType_VLANWEB = 4;
               AccessPortType_VLANPORTAL = 5;
               AccessPortType_VLAN8021X = 6;
               AccessPortType_TELNET = 7;
               AccessPortType_FTP = 8;
               AccessPortType_SSH = 9;
               AccessPortType_IGMP = 10;
            };
            AccessPortType access_port_type = 2 [json_name = "access-port-type"];
            int32 access_sub_slot_number = 3 [json_name = "access-sub-slot-number"];
            int32 access_port_number = 4 [json_name = "access-port-number"];
            int32 access_vlan_id = 5 [json_name = "access-vlan-id"];
            enum AccessAuthenMethod {
               INVALID_ENUM_VALUE_AccessAuthenMethod = 0;
               AccessAuthenMethod_LOCAL = 1;
               AccessAuthenMethod_NOAUTH = 2;
               AccessAuthenMethod_RADIUS = 3;
               AccessAuthenMethod_LOCALX_RADIUS = 4;
               AccessAuthenMethod_RADIUSX_LOCAL = 5;
               AccessAuthenMethod_RADIUSX_NOAUTH = 6;
               AccessAuthenMethod_TACACS = 7;
               AccessAuthenMethod_LOCALX_TACACS = 8;
               AccessAuthenMethod_TACACSX_LOCAL = 9;
               AccessAuthenMethod_TACACSX_NONE = 10;
            };
            AccessAuthenMethod access_authen_method = 6 [json_name = "access-authen-method"];
            enum AccessAccountMethod {
               INVALID_ENUM_VALUE_AccessAccountMethod = 0;
               AccessAccountMethod_LOCAL = 1;
               AccessAccountMethod_RADIUS = 2;
               AccessAccountMethod_NOACCT = 3;
               AccessAccountMethod_LOCALRADIUSBOTH = 4;
               AccessAccountMethod_HWTACACS = 5;
               AccessAccountMethod_LOCALHWTACACSBOTH = 6;
               AccessAccountMethod_COPS = 7;
               AccessAccountMethod_DIAMETER = 8;
               AccessAccountMethod_INVALID = 255;
            };
            AccessAccountMethod access_account_method = 7 [json_name = "access-account-method"];
            string access_ipaddress = 8 [json_name = "access-ipaddress"];
            string access_mac_address = 9 [json_name = "access-mac-address"];
            string access_start_time = 10 [json_name = "access-start-time"];
            string access_basic_ip_type = 11 [json_name = "access-basic-ip-type"];
            int32 access_ipv6_wait_delay = 12 [json_name = "access-ipv6-wait-delay"];
            enum Ipv6ManagedAddressMethod {
               INVALID_ENUM_VALUE_Ipv6ManagedAddressMethod = 0;
               Ipv6ManagedAddressMethod_NDRA = 1;
               Ipv6ManagedAddressMethod_DHCPV6 = 2;
               Ipv6ManagedAddressMethod_INVALID = 255;
            };
            Ipv6ManagedAddressMethod ipv6_managed_address_method = 13 [json_name = "ipv6-managed-address-method"];
            enum AccessIpv6CpWithInterfaceId {
               INVALID_ENUM_VALUE_AccessIpv6CpWithInterfaceId = 0;
               AccessIpv6CpWithInterfaceId_TRUE = 1;
               AccessIpv6CpWithInterfaceId_FALSE = 2;
            };
            AccessIpv6CpWithInterfaceId access_ipv6_cp_with_interface_id = 14 [json_name = "access-ipv6-cp-with-interface-id"];
            enum AccessIpv6ConfigMethod {
               INVALID_ENUM_VALUE_AccessIpv6ConfigMethod = 0;
               AccessIpv6ConfigMethod_NDRA = 1;
               AccessIpv6ConfigMethod_DHCPV6 = 2;
               AccessIpv6ConfigMethod_INVALID = 255;
            };
            AccessIpv6ConfigMethod access_ipv6_config_method = 15 [json_name = "access-ipv6-config-method"];
            enum AccessIpv6CpAssignInterfaceId {
               INVALID_ENUM_VALUE_AccessIpv6CpAssignInterfaceId = 0;
               AccessIpv6CpAssignInterfaceId_TRUE = 1;
               AccessIpv6CpAssignInterfaceId_FALSE = 2;
            };
            AccessIpv6CpAssignInterfaceId access_ipv6_cp_assign_interface_id = 16 [json_name = "access-ipv6-cp-assign-interface-id"];
            enum RuiType {
               INVALID_ENUM_VALUE_RuiType = 0;
               RuiType_NOTX_RUI = 1;
               RuiType_RUIX_LOCAL = 2;
               RuiType_RUIX_REMOTE = 3;
            };
            RuiType rui_type = 17 [json_name = "rui-type"];
            string access_type = 18 [json_name = "access-type"];
            string access_phy_interface = 19 [json_name = "access-phy-interface"];
            string access_authen_ip_type = 20 [json_name = "access-authen-ip-type"];
            enum UsedFlag {
               UsedFlag_NO = 0;
               UsedFlag_YES = 1;
            };
            UsedFlag used_flag = 21 [json_name = "used-flag"];
            enum UsedType {
               UsedType_INVALID = 0;
               UsedType_ACTIVE = 1;
               UsedType_STANDBY = 2;
            };
            UsedType used_type = 22 [json_name = "used-type"];
            enum UsernameRd {
               UsernameRd_NO = 0;
               UsernameRd_YES = 1;
            };
            UsernameRd username_rd = 23 [json_name = "username-rd"];
            string domain_name = 24 [json_name = "domain-name"];
            string domain_map_name = 25 [json_name = "domain-map-name"];
            enum DomainnameRd {
               DomainnameRd_NO = 0;
               DomainnameRd_YES = 1;
            };
            DomainnameRd domainname_rd = 26 [json_name = "domainname-rd"];
            enum BackupState {
               BackupState_NONE = 0;
               BackupState_LOCAL = 1;
               BackupState_REMOTE = 2;
            };
            BackupState backup_state = 27 [json_name = "backup-state"];
            enum Ipv6BackupState {
               Ipv6BackupState_NONE = 0;
               Ipv6BackupState_LOCAL = 1;
               Ipv6BackupState_REMOTE = 2;
            };
            Ipv6BackupState ipv6_backup_state = 28 [json_name = "ipv6-backup-state"];
            enum RbpState {
               RbpState_NONE = 0;
               RbpState_MASTER = 1;
               RbpState_SLAVE = 2;
            };
            RbpState rbp_state = 29 [json_name = "rbp-state"];
            string callnum = 30 [json_name = "callnum"];
            uint32 out_bound_slot = 31 [json_name = "out-bound-slot"];
            uint32 port_limit = 32 [json_name = "port-limit"];
            enum PortLimitRd {
               PortLimitRd_NO = 0;
               PortLimitRd_YES = 1;
            };
            PortLimitRd port_limit_rd = 33 [json_name = "port-limit-rd"];
            string vpnname = 34 [json_name = "vpnname"];
            enum VpnnameRd {
               VpnnameRd_NO = 0;
               VpnnameRd_YES = 1;
            };
            VpnnameRd vpnname_rd = 35 [json_name = "vpnname-rd"];
            string inbound_vpnname = 36 [json_name = "inbound-vpnname"];
            enum InboundvpnnameRd {
               InboundvpnnameRd_NO = 0;
               InboundvpnnameRd_YES = 1;
            };
            InboundvpnnameRd inboundvpnname_rd = 37 [json_name = "inboundvpnname-rd"];
            string ipv6_vpnname = 38 [json_name = "ipv6-vpnname"];
            enum Ipv6VpnnameRd {
               Ipv6VpnnameRd_NO = 0;
               Ipv6VpnnameRd_YES = 1;
            };
            Ipv6VpnnameRd ipv6vpnname_rd = 39 [json_name = "ipv6vpnname-rd"];
            string ipv6inbound_vpnname = 40 [json_name = "ipv6inbound-vpnname"];
            enum Ipv6InboundvpnnameRd {
               Ipv6InboundvpnnameRd_NO = 0;
               Ipv6InboundvpnnameRd_YES = 1;
            };
            Ipv6InboundvpnnameRd ipv6inboundvpnname_rd = 41 [json_name = "ipv6inboundvpnname-rd"];
            string usr_ipaddr_mask = 42 [json_name = "usr-ipaddr-mask"];
            enum UsrIpaddrMaskRd {
               UsrIpaddrMaskRd_NO = 0;
               UsrIpaddrMaskRd_YES = 1;
            };
            UsrIpaddrMaskRd usr_ipaddr_mask_rd = 43 [json_name = "usr-ipaddr-mask-rd"];
            string gate_way_addr = 44 [json_name = "gate-way-addr"];
            enum GateWayAddrRd {
               GateWayAddrRd_NO = 0;
               GateWayAddrRd_YES = 1;
            };
            GateWayAddrRd gate_way_addr_rd = 45 [json_name = "gate-way-addr-rd"];
            string framed_route = 46 [json_name = "framed-route"];
            uint32 framed_route_mask_len = 47 [json_name = "framed-route-mask-len"];
            string next_ip = 48 [json_name = "next-ip"];
            uint32 meric = 49 [json_name = "meric"];
            enum FrameRouteRd {
               FrameRouteRd_NO = 0;
               FrameRouteRd_YES = 1;
            };
            FrameRouteRd frame_route_rd = 50 [json_name = "frame-route-rd"];
            uint32 frame_route_num = 51 [json_name = "frame-route-num"];
            string ipv6lla_addr_pre = 52 [json_name = "ipv6lla-addr-pre"];
            enum Ipv6AddrPreRd {
               Ipv6AddrPreRd_NO = 0;
               Ipv6AddrPreRd_YES = 1;
            };
            Ipv6AddrPreRd ipv6_addr_pre_rd = 53 [json_name = "ipv6-addr-pre-rd"];
            string ipv6_addr = 54 [json_name = "ipv6-addr"];
            enum Ipv6AddrRd {
               Ipv6AddrRd_NO = 0;
               Ipv6AddrRd_YES = 1;
            };
            Ipv6AddrRd ipv6_addr_rd = 55 [json_name = "ipv6-addr-rd"];
            string ipv6_pd_addr_pre = 56 [json_name = "ipv6-pd-addr-pre"];
            enum Ipv6PdAddrPreRd {
               Ipv6PdAddrPreRd_NO = 0;
               Ipv6PdAddrPreRd_YES = 1;
            };
            Ipv6PdAddrPreRd ipv6_pd_addr_pre_rd = 57 [json_name = "ipv6-pd-addr-pre-rd"];
            string frame_v6_route_ipaddr = 58 [json_name = "frame-v6-route-ipaddr"];
            uint32 frame_v6_route_ipaddr_prefix_len = 59 [json_name = "frame-v6-route-ipaddr-prefix-len"];
            enum FrameV6RouteRd {
               FrameV6RouteRd_NO = 0;
               FrameV6RouteRd_YES = 1;
            };
            FrameV6RouteRd frame_v6_route_rd = 60 [json_name = "frame-v6-route-rd"];
            uint32 frame_v6_route_num = 61 [json_name = "frame-v6-route-num"];
            string dhcpserver_ip = 62 [json_name = "dhcpserver-ip"];
            enum V6AddrAssignMode {
               V6AddrAssignMode_NONE = 0;
               V6AddrAssignMode_OPTION18 = 1;
               V6AddrAssignMode_OPTION37 = 2;
               V6AddrAssignMode_OPTION18X_ANDX_OPTION37 = 3;
            };
            V6AddrAssignMode v6_addr_assign_mode = 63 [json_name = "v6-addr-assign-mode"];
            enum RalinkPrefix {
               RalinkPrefix_NO = 0;
               RalinkPrefix_YES = 1;
            };
            RalinkPrefix ralink_prefix = 64 [json_name = "ralink-prefix"];
            uint32 ipv6_cp_receive_user_interface_id = 65 [json_name = "ipv6-cp-receive-user-interface-id"];
            string hex_lineid = 66 [json_name = "hex-lineid"];
            string char_lineid = 67 [json_name = "char-lineid"];
            enum LineidType {
               INVALID_ENUM_VALUE_LineidType = 0;
               LineidType_SESSIONX_GROUP = 1;
               LineidType_PPPOEX_PLUS = 2;
               LineidType_DHCPV6 = 3;
               LineidType_DHCPV4X_OPTION82 = 4;
            };
            LineidType lineid_type = 68 [json_name = "lineid-type"];
            string agent_circuit_id = 69 [json_name = "agent-circuit-id"];
            string agent_remote_id = 70 [json_name = "agent-remote-id"];
            string option37info = 71 [json_name = "option37info"];
            string option38info = 72 [json_name = "option38info"];
            enum Ip4LeasCoa0Flg {
               Ip4LeasCoa0Flg_NO = 0;
               Ip4LeasCoa0Flg_YES = 1;
            };
            Ip4LeasCoa0Flg ip4_leas_coa0_flg = 73 [json_name = "ip4-leas-coa0-flg"];
            string ip4_start_leas = 74 [json_name = "ip4-start-leas"];
            string ip4_end_leas = 75 [json_name = "ip4-end-leas"];
            enum Ip4LeasRdsFlg {
               Ip4LeasRdsFlg_NO = 0;
               Ip4LeasRdsFlg_YES = 1;
            };
            Ip4LeasRdsFlg ip4_leas_rds_flg = 76 [json_name = "ip4-leas-rds-flg"];
            uint32 ip4_ori_leas = 77 [json_name = "ip4-ori-leas"];
            uint32 ip4_rem_leas = 78 [json_name = "ip4-rem-leas"];
            enum Ip4RemLeasRds {
               Ip4RemLeasRds_NO = 0;
               Ip4RemLeasRds_YES = 1;
            };
            Ip4RemLeasRds ip4_rem_leas_rds = 79 [json_name = "ip4-rem-leas-rds"];
            string ip6_start_leas = 80 [json_name = "ip6-start-leas"];
            string ip6_end_leas = 81 [json_name = "ip6-end-leas"];
            enum Ip6LeasRdsFlg {
               Ip6LeasRdsFlg_NO = 0;
               Ip6LeasRdsFlg_YES = 1;
            };
            Ip6LeasRdsFlg ip6_leas_rds_flg = 82 [json_name = "ip6-leas-rds-flg"];
            uint32 ip6_leas_end_tim = 83 [json_name = "ip6-leas-end-tim"];
            uint32 ip6_rem_leas = 84 [json_name = "ip6-rem-leas"];
            enum Ip6RemLeasRds {
               Ip6RemLeasRds_NO = 0;
               Ip6RemLeasRds_YES = 1;
            };
            Ip6RemLeasRds ip6_rem_leas_rds = 85 [json_name = "ip6-rem-leas-rds"];
            string usr_grp_name = 86 [json_name = "usr-grp-name"];
            enum UsrGrpRdsFlg {
               UsrGrpRdsFlg_NO = 0;
               UsrGrpRdsFlg_YES = 1;
            };
            UsrGrpRdsFlg usr_grp_rds_flg = 87 [json_name = "usr-grp-rds-flg"];
            string nxt_hop = 88 [json_name = "nxt-hop"];
            enum NxtHopRdsFlg {
               NxtHopRdsFlg_NO = 0;
               NxtHopRdsFlg_YES = 1;
            };
            NxtHopRdsFlg nxt_hop_rds_flg = 89 [json_name = "nxt-hop-rds-flg"];
            string ip6_plcy_addr = 90 [json_name = "ip6-plcy-addr"];
            enum Ip6PlcyAddrRds {
               Ip6PlcyAddrRds_NO = 0;
               Ip6PlcyAddrRds_YES = 1;
            };
            Ip6PlcyAddrRds ip6_plcy_addr_rds = 91 [json_name = "ip6-plcy-addr-rds"];
            string map_ipv4_addr = 92 [json_name = "map-ipv4-addr"];
            string map_ipv4_prefix_addr = 93 [json_name = "map-ipv4-prefix-addr"];
            uint32 map_ipv4_prefix_len = 94 [json_name = "map-ipv4-prefix-len"];
            uint32 map_psid = 95 [json_name = "map-psid"];
            uint32 map_psid_offet = 96 [json_name = "map-psid-offet"];
            string nat_ipaddr = 97 [json_name = "nat-ipaddr"];
            uint32 nat_start_port = 98 [json_name = "nat-start-port"];
            uint32 nat_end_port = 99 [json_name = "nat-end-port"];
            enum NatPortRdsFlg {
               NatPortRdsFlg_NO = 0;
               NatPortRdsFlg_YES = 1;
            };
            NatPortRdsFlg nat_port_rds_flg = 100 [json_name = "nat-port-rds-flg"];
         }
         AccessUserBasicInfo access_user_basic_info = 8 [json_name = "access-user-basic-info"];
         message AccessUserAaaInfo {
            enum AccessIfIdleCut {
               INVALID_ENUM_VALUE_AccessIfIdleCut = 0;
               AccessIfIdleCut_TRUE = 1;
               AccessIfIdleCut_FALSE = 2;
            };
            AccessIfIdleCut access_if_idle_cut = 1 [json_name = "access-if-idle-cut"];
            uint32 access_idle_cut_time = 2 [json_name = "access-idle-cut-time"];
            int32 access_idle_cut_flow = 3 [json_name = "access-idle-cut-flow"];
            string dns_addr = 4 [json_name = "dns-addr"];
            enum DnsAddrRd {
               DnsAddrRd_NO = 0;
               DnsAddrRd_YES = 1;
            };
            DnsAddrRd dns_addr_rd = 5 [json_name = "dns-addr-rd"];
            string dns_sec_addr = 6 [json_name = "dns-sec-addr"];
            enum DnsSecAddrRd {
               DnsSecAddrRd_NO = 0;
               DnsSecAddrRd_YES = 1;
            };
            DnsSecAddrRd dns_sec_addr_rd = 7 [json_name = "dns-sec-addr-rd"];
            enum UsrIpaddrRd {
               UsrIpaddrRd_NO = 0;
               UsrIpaddrRd_YES = 1;
            };
            UsrIpaddrRd usr_ipaddr_rd = 8 [json_name = "usr-ipaddr-rd"];
            string ifid = 9 [json_name = "ifid"];
            enum IfidRd {
               IfidRd_NO = 0;
               IfidRd_YES = 1;
            };
            IfidRd ifid_rd = 10 [json_name = "ifid-rd"];
            string lla_addr = 11 [json_name = "lla-addr"];
            string v6duiid = 12 [json_name = "v6duiid"];
            string dns_pri_v6_ip = 13 [json_name = "dns-pri-v6-ip"];
            enum DnsPriV6IpRd {
               DnsPriV6IpRd_NO = 0;
               DnsPriV6IpRd_YES = 1;
            };
            DnsPriV6IpRd dns_pri_v6_ip_rd = 14 [json_name = "dns-pri-v6-ip-rd"];
            string dns2st_pri_v6_ip = 15 [json_name = "dns2st-pri-v6-ip"];
            enum Dns2StV6IpRd {
               Dns2StV6IpRd_NO = 0;
               Dns2StV6IpRd_YES = 1;
            };
            Dns2StV6IpRd dns2st_v6_ip_rd = 16 [json_name = "dns2st-v6-ip-rd"];
            string dns3st_pri_v6_ip = 17 [json_name = "dns3st-pri-v6-ip"];
            enum Dns3StPriV6IpRd {
               Dns3StPriV6IpRd_NO = 0;
               Dns3StPriV6IpRd_YES = 1;
            };
            Dns3StPriV6IpRd dns3st_pri_v6_ip_rd = 18 [json_name = "dns3st-pri-v6-ip-rd"];
            string dns4st_pri_v6_ip = 19 [json_name = "dns4st-pri-v6-ip"];
            enum Dns4StPriV6IpRd {
               Dns4StPriV6IpRd_NO = 0;
               Dns4StPriV6IpRd_YES = 1;
            };
            Dns4StPriV6IpRd dns4st_pri_v6_ip_rd = 20 [json_name = "dns4st-pri-v6-ip-rd"];
            enum CpeIpv4 {
               CpeIpv4_NO = 0;
               CpeIpv4_YES = 1;
            };
            CpeIpv4 cpe_ipv4 = 21 [json_name = "cpe-ipv4"];
            enum CpeIpv6 {
               CpeIpv6_NO = 0;
               CpeIpv6_YES = 1;
            };
            CpeIpv6 cpe_ipv6 = 22 [json_name = "cpe-ipv6"];
            enum CpeIpv6Pd {
               CpeIpv6Pd_NO = 0;
               CpeIpv6Pd_YES = 1;
            };
            CpeIpv6Pd cpe_ipv6_pd = 23 [json_name = "cpe-ipv6-pd"];
            enum BasicServiceIpv4 {
               BasicServiceIpv4_NO = 0;
               BasicServiceIpv4_YES = 1;
            };
            BasicServiceIpv4 basic_service_ipv4 = 24 [json_name = "basic-service-ipv4"];
            enum BasicServiceIpv6 {
               BasicServiceIpv6_NO = 0;
               BasicServiceIpv6_YES = 1;
            };
            BasicServiceIpv6 basic_service_ipv6 = 25 [json_name = "basic-service-ipv6"];
            enum BasicServiceIpv6Pd {
               BasicServiceIpv6Pd_NO = 0;
               BasicServiceIpv6Pd_YES = 1;
            };
            BasicServiceIpv6Pd basic_service_ipv6_pd = 26 [json_name = "basic-service-ipv6-pd"];
            string mirror_policy_name = 27 [json_name = "mirror-policy-name"];
            string rds_template_name = 28 [json_name = "rds-template-name"];
            string tac_tmp_group_name = 29 [json_name = "tac-tmp-group-name"];
            string sec_st_rds_template_name = 30 [json_name = "sec-st-rds-template-name"];
            string phy_rds_template_name = 31 [json_name = "phy-rds-template-name"];
            string edsg_rds_template_name = 32 [json_name = "edsg-rds-template-name"];
            string tmp_rds_template_name = 33 [json_name = "tmp-rds-template-name"];
            enum CurAuthenResult {
               CurAuthenResult_FAILURE = 0;
               CurAuthenResult_SUCCESS = 1;
            };
            CurAuthenResult cur_authen_result = 34 [json_name = "cur-authen-result"];
            enum AuthoredPlace {
               AuthoredPlace_IDLE = 0;
               AuthoredPlace_NOX_AUTHORIZATION = 1;
               AuthoredPlace_LOCALX_AUTHORIZATION = 2;
               AuthoredPlace_IFX_AUTHENTICATEDX_AUTHORIZATION = 3;
               AuthoredPlace_SOAPX_AUTHORIZATION = 4;
            };
            AuthoredPlace authored_place = 35 [json_name = "authored-place"];
            enum AuthoredResult {
               AuthoredResult_FAILURE = 0;
               AuthoredResult_SUCCESS = 1;
               AuthoredResult_IDLE = 2;
            };
            AuthoredResult authored_result = 36 [json_name = "authored-result"];
            enum ActionFlag {
               ActionFlag_IDLE = 0;
               ActionFlag_NEWUSERAUTH = 1;
               ActionFlag_REAUTH = 2;
               ActionFlag_LOGOUT = 3;
               ActionFlag_LEAVING = 4;
               ActionFlag_AUTHMODIFY = 5;
               ActionFlag_CONNECTUP = 6;
            };
            ActionFlag action_flag = 37 [json_name = "action-flag"];
            enum AuthenState {
               AuthenState_AUTHX_IDLE = 0;
               AuthenState_AUTHED = 1;
               AuthenState_AUTHX_WAIT = 2;
               AuthenState_UNKNOWN = 255;
            };
            AuthenState authen_state = 38 [json_name = "authen-state"];
            enum AuthorState {
               INVALID_ENUM_VALUE_AuthorState = 0;
               AuthorState_AUTHORX_IDLE = 9;
               AuthorState_AUTHORX_USERX_ACKX_WAIT = 10;
               AuthorState_AUTHORX_SERVERX_ACKX_WAIT = 11;
               AuthorState_UNKNOWN = 255;
            };
            AuthorState author_state = 39 [json_name = "author-state"];
            enum AcctMethod {
               INVALID_ENUM_VALUE_AcctMethod = 0;
               AcctMethod_LOCAL = 1;
               AcctMethod_RADIUS = 2;
               AcctMethod_NOACCT = 3;
               AcctMethod_LOCALRADIUSBOTH = 4;
               AcctMethod_HWTACACS = 5;
               AcctMethod_LOCALHWTACACSBOTH = 6;
               AcctMethod_COPS = 7;
               AcctMethod_DIAMETER = 8;
               AcctMethod_INVALID = 255;
            };
            AcctMethod acct_method = 40 [json_name = "acct-method"];
            enum QuotaOutaction {
               QuotaOutaction_OFFLINE = 0;
               QuotaOutaction_ONLINE = 1;
               QuotaOutaction_SENDX_REALTIMEX_ACCOUNTING = 2;
            };
            QuotaOutaction quota_outaction = 41 [json_name = "quota-outaction"];
            enum CurrentAcctMethod {
               INVALID_ENUM_VALUE_CurrentAcctMethod = 0;
               CurrentAcctMethod_LOCAL = 1;
               CurrentAcctMethod_RADIUS = 2;
               CurrentAcctMethod_NOACCT = 3;
               CurrentAcctMethod_LOCALRADIUSBOTH = 4;
               CurrentAcctMethod_HWTACACS = 5;
               CurrentAcctMethod_LOCALHWTACACSBOTH = 6;
               CurrentAcctMethod_COPS = 7;
               CurrentAcctMethod_DIAMETER = 8;
               CurrentAcctMethod_INVALID = 255;
            };
            CurrentAcctMethod current_acct_method = 42 [json_name = "current-acct-method"];
            string direct_url = 43 [json_name = "direct-url"];
            enum LeaseTimeoutOfflineFlag {
               LeaseTimeoutOfflineFlag_NO = 0;
               LeaseTimeoutOfflineFlag_YES = 1;
            };
            LeaseTimeoutOfflineFlag lease_timeout_offline_flag = 44 [json_name = "lease-timeout-offline-flag"];
            uint32 rtacct_interval = 45 [json_name = "rtacct-interval"];
            enum RtacctFlg {
               RtacctFlg_NO = 0;
               RtacctFlg_YES = 1;
            };
            RtacctFlg rtacct_flg = 46 [json_name = "rtacct-flg"];
            enum RtacctIntervalRd {
               RtacctIntervalRd_NO = 0;
               RtacctIntervalRd_YES = 1;
            };
            RtacctIntervalRd rtacct_interval_rd = 47 [json_name = "rtacct-interval-rd"];
            enum RtacctSend {
               RtacctSend_NO = 0;
               RtacctSend_YES = 1;
            };
            RtacctSend rtacct_send = 48 [json_name = "rtacct-send"];
            enum RttrafficUpdate {
               RttrafficUpdate_NO = 0;
               RttrafficUpdate_YES = 1;
            };
            RttrafficUpdate rttraffic_update = 49 [json_name = "rttraffic-update"];
            string acc_starttime = 50 [json_name = "acc-starttime"];
            string acc_onlinetime = 51 [json_name = "acc-onlinetime"];
            enum AcctState {
               INVALID_ENUM_VALUE_AcctState = 0;
               AcctState_ACCTX_IDLE = 3;
               AcctState_ACCTX_READY = 4;
               AcctState_ACCTX_STARTX_WAIT = 5;
               AcctState_ACCTX_ACCTING = 6;
               AcctState_ACCTX_LEAVINGX_FLOWX_QUERY = 7;
               AcctState_ACCTX_STOPX_WAIT = 8;
               AcctState_ACCTX_SENDX_FORCEX_STOPX_WAIT = 12;
               AcctState_UNKNOWN = 255;
            };
            AcctState acct_state = 52 [json_name = "acct-state"];
            uint32 tim_limt = 53 [json_name = "tim-limt"];
            enum TimLimtRdsFlg {
               TimLimtRdsFlg_NO = 0;
               TimLimtRdsFlg_YES = 1;
            };
            TimLimtRdsFlg tim_limt_rds_flg = 54 [json_name = "tim-limt-rds-flg"];
            uint32 tim_remain = 55 [json_name = "tim-remain"];
            uint32 flw_limt_high = 56 [json_name = "flw-limt-high"];
            uint32 flw_limt_low = 57 [json_name = "flw-limt-low"];
            enum FlwLimtRdsFlg {
               FlwLimtRdsFlg_NO = 0;
               FlwLimtRdsFlg_YES = 1;
            };
            FlwLimtRdsFlg flw_limt_rds_flg = 58 [json_name = "flw-limt-rds-flg"];
            enum IdleCutDir {
               INVALID_ENUM_VALUE_IdleCutDir = 0;
               IdleCutDir_BOTH = 1;
               IdleCutDir_INBOUND = 2;
               IdleCutDir_OUTBOUND = 3;
               IdleCutDir_NONE = 4;
            };
            IdleCutDir idle_cut_dir = 59 [json_name = "idle-cut-dir"];
            enum IdleCutRdsFlg {
               IdleCutRdsFlg_NO = 0;
               IdleCutRdsFlg_YES = 1;
            };
            IdleCutRdsFlg idle_cut_rds_flg = 60 [json_name = "idle-cut-rds-flg"];
            uint32 ip4_acct_flw = 61 [json_name = "ip4-acct-flw"];
            enum Ip4AcctBytFlg {
               Ip4AcctBytFlg_KBYTEX_MIN = 0;
               Ip4AcctBytFlg_BYTEX_MIN = 1;
               Ip4AcctBytFlg_KBYTEX_S = 2;
            };
            Ip4AcctBytFlg ip4_acct_byt_flg = 62 [json_name = "ip4-acct-byt-flg"];
            uint32 ip4_acct_up_flw = 63 [json_name = "ip4-acct-up-flw"];
            enum Ip4AcctUpBytFlg {
               Ip4AcctUpBytFlg_KBYTEX_MIN = 0;
               Ip4AcctUpBytFlg_BYTEX_MIN = 1;
               Ip4AcctUpBytFlg_KBYTEX_S = 2;
            };
            Ip4AcctUpBytFlg ip4_acct_up_byt_flg = 64 [json_name = "ip4-acct-up-byt-flg"];
            uint32 ip4_acct_dn_flw = 65 [json_name = "ip4-acct-dn-flw"];
            enum Ip4AcctDnBytFlg {
               Ip4AcctDnBytFlg_KBYTEX_MIN = 0;
               Ip4AcctDnBytFlg_BYTEX_MIN = 1;
               Ip4AcctDnBytFlg_KBYTEX_S = 2;
            };
            Ip4AcctDnBytFlg ip4_acct_dn_byt_flg = 66 [json_name = "ip4-acct-dn-byt-flg"];
            uint32 ip6_acct_flw = 67 [json_name = "ip6-acct-flw"];
            enum Ip6AcctBytFlg {
               Ip6AcctBytFlg_KBYTEX_MIN = 0;
               Ip6AcctBytFlg_BYTEX_MIN = 1;
               Ip6AcctBytFlg_KBYTEX_S = 2;
            };
            Ip6AcctBytFlg ip6_acct_byt_flg = 68 [json_name = "ip6-acct-byt-flg"];
            uint32 ip6_acct_up_flw = 69 [json_name = "ip6-acct-up-flw"];
            enum Ip6AcctUpBytFlg {
               Ip6AcctUpBytFlg_KBYTEX_MIN = 0;
               Ip6AcctUpBytFlg_BYTEX_MIN = 1;
               Ip6AcctUpBytFlg_KBYTEX_S = 2;
            };
            Ip6AcctUpBytFlg ip6_acct_up_byt_flg = 70 [json_name = "ip6-acct-up-byt-flg"];
            uint32 ip6_acct_dn_flw = 71 [json_name = "ip6-acct-dn-flw"];
            enum Ip6AcctDnBytFlg {
               Ip6AcctDnBytFlg_KBYTEX_MIN = 0;
               Ip6AcctDnBytFlg_BYTEX_MIN = 1;
               Ip6AcctDnBytFlg_KBYTEX_S = 2;
            };
            Ip6AcctDnBytFlg ip6_acct_dn_byt_flg = 72 [json_name = "ip6-acct-dn-byt-flg"];
            enum AcctDelayFlg {
               AcctDelayFlg_NO = 0;
               AcctDelayFlg_YES = 1;
            };
            AcctDelayFlg acct_delay_flg = 73 [json_name = "acct-delay-flg"];
            uint32 acct_delay_tim = 74 [json_name = "acct-delay-tim"];
            uint32 acct_delay_pas_tim = 75 [json_name = "acct-delay-pas-tim"];
            enum AcctDelayAct {
               AcctDelayAct_OFFLINE = 0;
               AcctDelayAct_ONLINE = 1;
            };
            AcctDelayAct acct_delay_act = 76 [json_name = "acct-delay-act"];
            uint32 usr_pri = 77 [json_name = "usr-pri"];
            string web_url = 78 [json_name = "web-url"];
            enum WebUrlRdsFlg {
               WebUrlRdsFlg_NO = 0;
               WebUrlRdsFlg_YES = 1;
            };
            WebUrlRdsFlg web_url_rds_flg = 79 [json_name = "web-url-rds-flg"];
            string class_opt61 = 80 [json_name = "class-opt61"];
            enum AutoAdaptFlg {
               AutoAdaptFlg_NO = 0;
               AutoAdaptFlg_YES = 1;
            };
            AutoAdaptFlg auto_adapt_flg = 81 [json_name = "auto-adapt-flg"];
            enum UpPriority {
               UpPriority_X_0 = 0;
               UpPriority_X_1 = 1;
               UpPriority_X_2 = 2;
               UpPriority_X_3 = 3;
               UpPriority_X_4 = 4;
               UpPriority_X_5 = 5;
               UpPriority_X_6 = 6;
               UpPriority_X_7 = 7;
               UpPriority_TRUSTX_DSCPX_OUTER = 8;
               UpPriority_TRUSTX_8021PX_INNER = 9;
               UpPriority_TRUSTX_8021PX_OUTER = 10;
               UpPriority_TRUSTX_EXPX_INNER = 11;
               UpPriority_TRUSTX_EXPX_OUTER = 12;
               UpPriority_UNCHANGEABLE = 13;
               UpPriority_TRUSTX_DSCPX_INNER = 14;
            };
            UpPriority up_priority = 82 [json_name = "up-priority"];
            enum UpPriorityRd {
               UpPriorityRd_NO = 0;
               UpPriorityRd_YES = 1;
            };
            UpPriorityRd up_priority_rd = 83 [json_name = "up-priority-rd"];
            enum DownPriority {
               DownPriority_X_0 = 0;
               DownPriority_X_1 = 1;
               DownPriority_X_2 = 2;
               DownPriority_X_3 = 3;
               DownPriority_X_4 = 4;
               DownPriority_X_5 = 5;
               DownPriority_X_6 = 6;
               DownPriority_X_7 = 7;
               DownPriority_TRUSTX_DSCPX_OUTER = 8;
               DownPriority_TRUSTX_8021PX_INNER = 9;
               DownPriority_TRUSTX_8021PX_OUTER = 10;
               DownPriority_TRUSTX_EXPX_INNER = 11;
               DownPriority_TRUSTX_EXPX_OUTER = 12;
               DownPriority_UNCHANGEABLE = 13;
               DownPriority_TRUSTX_DSCPX_INNER = 14;
            };
            DownPriority down_priority = 84 [json_name = "down-priority"];
            enum DownPriorityRd {
               DownPriorityRd_NO = 0;
               DownPriorityRd_YES = 1;
            };
            DownPriorityRd down_priority_rd = 85 [json_name = "down-priority-rd"];
            string author_ds_name = 86 [json_name = "author-ds-name"];
            string real_ds_name = 87 [json_name = "real-ds-name"];
            enum PcpFlg {
               PcpFlg_NO = 0;
               PcpFlg_YES = 1;
            };
            PcpFlg pcp_flg = 88 [json_name = "pcp-flg"];
            enum PcpRdsFlg {
               PcpRdsFlg_NO = 0;
               PcpRdsFlg_YES = 1;
            };
            PcpRdsFlg pcp_rds_flg = 89 [json_name = "pcp-rds-flg"];
            uint32 ipv4_mtu = 90 [json_name = "ipv4-mtu"];
            enum Ipv4MtuRdsFlg {
               Ipv4MtuRdsFlg_NO = 0;
               Ipv4MtuRdsFlg_YES = 1;
            };
            Ipv4MtuRdsFlg ipv4_mtu_rds_flg = 91 [json_name = "ipv4-mtu-rds-flg"];
            uint32 ipv6_mtu = 92 [json_name = "ipv6-mtu"];
            enum Ipv6MtuRdsFlg {
               Ipv6MtuRdsFlg_NO = 0;
               Ipv6MtuRdsFlg_YES = 1;
            };
            Ipv6MtuRdsFlg ipv6_mtu_rds_flg = 93 [json_name = "ipv6-mtu-rds-flg"];
            uint32 mru = 94 [json_name = "mru"];
            string clng_sta_id = 95 [json_name = "clng-sta-id"];
            enum ClngStaIdRdsFlg {
               ClngStaIdRdsFlg_NO = 0;
               ClngStaIdRdsFlg_YES = 1;
            };
            ClngStaIdRdsFlg clng_sta_id_rds_flg = 96 [json_name = "clng-sta-id-rds-flg"];
            uint32 access_real_idle_cut_time = 97 [json_name = "access-real-idle-cut-time"];
            message AccessUserClassInfos {
               message AccessUserClassInfo {
                  uint32 class_num = 1 [json_name = "class-num"];
                  string classinfo = 2 [json_name = "classinfo"];
                  string hexclassinfo = 3 [json_name = "hexclassinfo"];
                  enum ClassinfoRd {
                     ClassinfoRd_NO = 0;
                     ClassinfoRd_YES = 1;
                  };
                  ClassinfoRd classinfo_rd = 4 [json_name = "classinfo-rd"];
               }
               repeated AccessUserClassInfo access_user_class_info = 1 [json_name = "access-user-class-info"];
            }
            AccessUserClassInfos access_user_class_infos = 98 [json_name = "access-user-class-infos"];
            string acct_session_id = 99 [json_name = "acct-session-id"];
         }
         AccessUserAaaInfo access_user_aaa_info = 9 [json_name = "access-user-aaa-info"];
         message AccessUserDot1XMcastInfo {
            string msi_dsn_name = 1 [json_name = "msi-dsn-name"];
            enum MsiDsnNameRd {
               MsiDsnNameRd_NO = 0;
               MsiDsnNameRd_YES = 1;
            };
            MsiDsnNameRd msi_dsn_name_rd = 2 [json_name = "msi-dsn-name-rd"];
            enum EapuserFlg {
               EapuserFlg_NO = 0;
               EapuserFlg_YES = 1;
            };
            EapuserFlg eapuser_flg = 3 [json_name = "eapuser-flg"];
            enum Md5EndFlg {
               Md5EndFlg_NO = 0;
               Md5EndFlg_YES = 1;
            };
            Md5EndFlg md5_end_flg = 4 [json_name = "md5-end-flg"];
            string iptv_prof = 5 [json_name = "iptv-prof"];
            enum IptvProfRdsFlg {
               IptvProfRdsFlg_NO = 0;
               IptvProfRdsFlg_YES = 1;
            };
            IptvProfRdsFlg iptv_prof_rds_flg = 6 [json_name = "iptv-prof-rds-flg"];
            string ip6tv_prof = 7 [json_name = "ip6tv-prof"];
            enum Ip6TvProfRdsFlg {
               Ip6TvProfRdsFlg_NO = 0;
               Ip6TvProfRdsFlg_YES = 1;
            };
            Ip6TvProfRdsFlg ip6tv_prof_rds_flg = 8 [json_name = "ip6tv-prof-rds-flg"];
            uint32 max_lst_num = 9 [json_name = "max-lst-num"];
            enum MaxLstNumRdsFlg {
               MaxLstNumRdsFlg_NO = 0;
               MaxLstNumRdsFlg_YES = 1;
            };
            MaxLstNumRdsFlg max_lst_num_rds_flg = 10 [json_name = "max-lst-num-rds-flg"];
            enum IgmpEn {
               IgmpEn_NO = 0;
               IgmpEn_YES = 1;
            };
            IgmpEn igmp_en = 11 [json_name = "igmp-en"];
            enum IgmpEnRdsFlg {
               IgmpEnRdsFlg_NO = 0;
               IgmpEnRdsFlg_YES = 1;
            };
            IgmpEnRdsFlg igmp_en_rds_flg = 12 [json_name = "igmp-en-rds-flg"];
            enum PimV4En {
               PimV4En_NO = 0;
               PimV4En_YES = 1;
            };
            PimV4En pim_v4_en = 13 [json_name = "pim-v4-en"];
            enum PimV6En {
               PimV6En_NO = 0;
               PimV6En_YES = 1;
            };
            PimV6En pim_v6_en = 14 [json_name = "pim-v6-en"];
         }
         AccessUserDot1XMcastInfo access_user_dot1x_mcast_info = 10 [json_name = "access-user-dot1x-mcast-info"];
         message AccessUserAclQosInfo {
            enum L2Priority {
               L2Priority_X_0 = 0;
               L2Priority_X_1 = 1;
               L2Priority_X_2 = 2;
               L2Priority_X_3 = 3;
               L2Priority_X_4 = 4;
               L2Priority_X_5 = 5;
               L2Priority_X_6 = 6;
               L2Priority_X_7 = 7;
               L2Priority_TRUSTX_DSCPX_OUTER = 8;
               L2Priority_TRUSTX_8021PX_INNER = 9;
               L2Priority_TRUSTX_8021PX_OUTER = 10;
               L2Priority_TRUSTX_EXPX_INNER = 11;
               L2Priority_TRUSTX_EXPX_OUTER = 12;
               L2Priority_UNCHANGEABLE = 13;
               L2Priority_TRUSTX_DSCPX_INNER = 14;
            };
            L2Priority l2_priority = 1 [json_name = "l2-priority"];
            string inbound_gq_name = 2 [json_name = "inbound-gq-name"];
            enum InboundGqNameRd {
               InboundGqNameRd_NO = 0;
               InboundGqNameRd_YES = 1;
            };
            InboundGqNameRd inbound_gq_name_rd = 3 [json_name = "inbound-gq-name-rd"];
            string outbound_gq_name = 4 [json_name = "outbound-gq-name"];
            enum OutboundGqNameRd {
               OutboundGqNameRd_NO = 0;
               OutboundGqNameRd_YES = 1;
            };
            OutboundGqNameRd outbound_gq_name_rd = 5 [json_name = "outbound-gq-name-rd"];
            string online_policy = 6 [json_name = "online-policy"];
            enum OnlinePolicyRd {
               OnlinePolicyRd_NO = 0;
               OnlinePolicyRd_YES = 1;
            };
            OnlinePolicyRd online_policy_rd = 7 [json_name = "online-policy-rd"];
            message UserQosInboundInfo {
               string qos_profile_name = 1 [json_name = "qos-profile-name"];
               enum QosConfigType {
                  QosConfigType_LOCAL = 0;
                  QosConfigType_RADIUS = 1;
               };
               QosConfigType qos_config_type = 2 [json_name = "qos-config-type"];
               enum QosEffectiveType {
                  INVALID_ENUM_VALUE_QosEffectiveType = 0;
                  QosEffectiveType_USERX_QUEUE = 1;
                  QosEffectiveType_USERX_CAR = 2;
                  QosEffectiveType_USERX_QUEUEX_CAR = 3;
                  QosEffectiveType_L2X_USERX_CAR = 4;
               };
               QosEffectiveType qos_effective_type = 3 [json_name = "qos-effective-type"];
               uint64 sq_cir = 4 [json_name = "sq-cir"];
               enum SqCirConfigType {
                  SqCirConfigType_LOCAL = 0;
                  SqCirConfigType_RADIUS = 1;
               };
               SqCirConfigType sq_cir_config_type = 5 [json_name = "sq-cir-config-type"];
               uint64 sq_pir = 6 [json_name = "sq-pir"];
               enum SqPirConfigType {
                  SqPirConfigType_LOCAL = 0;
                  SqPirConfigType_RADIUS = 1;
               };
               SqPirConfigType sq_pir_config_type = 7 [json_name = "sq-pir-config-type"];
               uint64 car_cir = 8 [json_name = "car-cir"];
               enum CarCirConfigType {
                  CarCirConfigType_LOCAL = 0;
                  CarCirConfigType_RADIUS = 1;
               };
               CarCirConfigType car_cir_config_type = 9 [json_name = "car-cir-config-type"];
               uint64 car_pir = 10 [json_name = "car-pir"];
               enum CarPirConfigType {
                  CarPirConfigType_LOCAL = 0;
                  CarPirConfigType_RADIUS = 1;
               };
               CarPirConfigType car_pir_config_type = 11 [json_name = "car-pir-config-type"];
               uint64 car_cbs = 12 [json_name = "car-cbs"];
               enum CarCbsConfigType {
                  CarCbsConfigType_LOCAL = 0;
                  CarCbsConfigType_RADIUS = 1;
               };
               CarCbsConfigType car_cbs_config_type = 13 [json_name = "car-cbs-config-type"];
               uint64 car_pbs = 14 [json_name = "car-pbs"];
               enum CarPbsConfigType {
                  CarPbsConfigType_LOCAL = 0;
                  CarPbsConfigType_RADIUS = 1;
               };
               CarPbsConfigType car_pbs_config_type = 15 [json_name = "car-pbs-config-type"];
            }
            UserQosInboundInfo user_qos_inbound_info = 8 [json_name = "user-qos-inbound-info"];
            message UserQosOutboundInfo {
               string qos_profile_name = 1 [json_name = "qos-profile-name"];
               enum QosConfigType {
                  QosConfigType_LOCAL = 0;
                  QosConfigType_RADIUS = 1;
               };
               QosConfigType qos_config_type = 2 [json_name = "qos-config-type"];
               enum QosEffectiveType {
                  INVALID_ENUM_VALUE_QosEffectiveType = 0;
                  QosEffectiveType_USERX_QUEUE = 1;
                  QosEffectiveType_USERX_CAR = 2;
                  QosEffectiveType_USERX_QUEUEX_CAR = 3;
                  QosEffectiveType_L2X_USERX_CAR = 4;
               };
               QosEffectiveType qos_effective_type = 3 [json_name = "qos-effective-type"];
               uint64 sq_cir = 4 [json_name = "sq-cir"];
               enum SqCirConfigType {
                  SqCirConfigType_LOCAL = 0;
                  SqCirConfigType_RADIUS = 1;
               };
               SqCirConfigType sq_cir_config_type = 5 [json_name = "sq-cir-config-type"];
               uint64 sq_pir = 6 [json_name = "sq-pir"];
               enum SqPirConfigType {
                  SqPirConfigType_LOCAL = 0;
                  SqPirConfigType_RADIUS = 1;
               };
               SqPirConfigType sq_pir_config_type = 7 [json_name = "sq-pir-config-type"];
               uint64 car_cir = 8 [json_name = "car-cir"];
               enum CarCirConfigType {
                  CarCirConfigType_LOCAL = 0;
                  CarCirConfigType_RADIUS = 1;
               };
               CarCirConfigType car_cir_config_type = 9 [json_name = "car-cir-config-type"];
               uint64 car_pir = 10 [json_name = "car-pir"];
               enum CarPirConfigType {
                  CarPirConfigType_LOCAL = 0;
                  CarPirConfigType_RADIUS = 1;
               };
               CarPirConfigType car_pir_config_type = 11 [json_name = "car-pir-config-type"];
               uint64 car_cbs = 12 [json_name = "car-cbs"];
               enum CarCbsConfigType {
                  CarCbsConfigType_LOCAL = 0;
                  CarCbsConfigType_RADIUS = 1;
               };
               CarCbsConfigType car_cbs_config_type = 13 [json_name = "car-cbs-config-type"];
               uint64 car_pbs = 14 [json_name = "car-pbs"];
               enum CarPbsConfigType {
                  CarPbsConfigType_LOCAL = 0;
                  CarPbsConfigType_RADIUS = 1;
               };
               CarPbsConfigType car_pbs_config_type = 15 [json_name = "car-pbs-config-type"];
            }
            UserQosOutboundInfo user_qos_outbound_info = 9 [json_name = "user-qos-outbound-info"];
            message UserSqCarInsufficientInfos {
               message UserSqCarInsufficientInfo {
                  uint32 failslotindex = 1 [json_name = "failslotindex"];
                  uint32 failslot_upid = 2 [json_name = "failslot-upid"];
                  enum InFamilyCarResFailSlot {
                     InFamilyCarResFailSlot_NO = 0;
                     InFamilyCarResFailSlot_YES = 1;
                  };
                  InFamilyCarResFailSlot in_family_car_res_fail_slot = 3 [json_name = "in-family-car-res-fail-slot"];
                  enum OutFamilyCarResFailSlot {
                     OutFamilyCarResFailSlot_NO = 0;
                     OutFamilyCarResFailSlot_YES = 1;
                  };
                  OutFamilyCarResFailSlot out_family_car_res_fail_slot = 4 [json_name = "out-family-car-res-fail-slot"];
                  enum InFamilySqResFailSlot {
                     InFamilySqResFailSlot_NO = 0;
                     InFamilySqResFailSlot_YES = 1;
                  };
                  InFamilySqResFailSlot in_family_sq_res_fail_slot = 5 [json_name = "in-family-sq-res-fail-slot"];
                  enum OutFamilySqResFailSlot {
                     OutFamilySqResFailSlot_NO = 0;
                     OutFamilySqResFailSlot_YES = 1;
                  };
                  OutFamilySqResFailSlot out_family_sq_res_fail_slot = 6 [json_name = "out-family-sq-res-fail-slot"];
               }
               repeated UserSqCarInsufficientInfo user_sq_car_insufficient_info = 1 [json_name = "user-sq-car-insufficient-info"];
            }
            UserSqCarInsufficientInfos user_sq_car_insufficient_infos = 10 [json_name = "user-sq-car-insufficient-infos"];
            message AccessUserEffectiveSlotInfos {
               message AccessUserEffectiveSlotInfo {
                  uint32 effective_slot_index = 1 [json_name = "effective-slot-index"];
                  uint32 user_queueincir = 2 [json_name = "user-queueincir"];
                  uint32 user_queueinpir = 3 [json_name = "user-queueinpir"];
                  uint32 user_queueincir1 = 4 [json_name = "user-queueincir1"];
                  uint32 user_queueinpir1 = 5 [json_name = "user-queueinpir1"];
                  uint32 user_queueincir2 = 6 [json_name = "user-queueincir2"];
                  uint32 user_queueinpir2 = 7 [json_name = "user-queueinpir2"];
                  uint32 user_queueincir3 = 8 [json_name = "user-queueincir3"];
                  uint32 user_queueinpir3 = 9 [json_name = "user-queueinpir3"];
                  uint32 user_queueincir4 = 10 [json_name = "user-queueincir4"];
                  uint32 user_queueinpir4 = 11 [json_name = "user-queueinpir4"];
                  uint32 user_queueincir5 = 12 [json_name = "user-queueincir5"];
                  uint32 user_queueinpir5 = 13 [json_name = "user-queueinpir5"];
                  uint32 user_queueoutcir = 14 [json_name = "user-queueoutcir"];
                  uint32 user_queueoutpir = 15 [json_name = "user-queueoutpir"];
                  uint32 user_queueoutcir1 = 16 [json_name = "user-queueoutcir1"];
                  uint32 user_queueoutpir1 = 17 [json_name = "user-queueoutpir1"];
                  uint32 user_queueoutcir2 = 18 [json_name = "user-queueoutcir2"];
                  uint32 user_queueoutpir2 = 19 [json_name = "user-queueoutpir2"];
                  uint32 user_queueoutcir3 = 20 [json_name = "user-queueoutcir3"];
                  uint32 user_queueoutpir3 = 21 [json_name = "user-queueoutpir3"];
                  uint32 user_queueoutcir4 = 22 [json_name = "user-queueoutcir4"];
                  uint32 user_queueoutpir4 = 23 [json_name = "user-queueoutpir4"];
                  uint32 user_queueoutcir5 = 24 [json_name = "user-queueoutcir5"];
                  uint32 user_queueoutpir5 = 25 [json_name = "user-queueoutpir5"];
                  uint32 domain_carincir = 26 [json_name = "domain-carincir"];
                  uint32 domain_carinpir = 27 [json_name = "domain-carinpir"];
                  uint32 domain_carincbs = 28 [json_name = "domain-carincbs"];
                  uint32 domain_carinpbs = 29 [json_name = "domain-carinpbs"];
                  uint32 domain_carincir1 = 30 [json_name = "domain-carincir1"];
                  uint32 domain_carinpir1 = 31 [json_name = "domain-carinpir1"];
                  uint32 domain_carincbs1 = 32 [json_name = "domain-carincbs1"];
                  uint32 domain_carinpbs1 = 33 [json_name = "domain-carinpbs1"];
                  uint32 domain_carincir2 = 34 [json_name = "domain-carincir2"];
                  uint32 domain_carinpir2 = 35 [json_name = "domain-carinpir2"];
                  uint32 domain_carincbs2 = 36 [json_name = "domain-carincbs2"];
                  uint32 domain_carinpbs2 = 37 [json_name = "domain-carinpbs2"];
                  uint32 domain_carincir3 = 38 [json_name = "domain-carincir3"];
                  uint32 domain_carinpir3 = 39 [json_name = "domain-carinpir3"];
                  uint32 domain_carincbs3 = 40 [json_name = "domain-carincbs3"];
                  uint32 domain_carinpbs3 = 41 [json_name = "domain-carinpbs3"];
                  uint32 domain_carincir4 = 42 [json_name = "domain-carincir4"];
                  uint32 domain_carinpir4 = 43 [json_name = "domain-carinpir4"];
                  uint32 domain_carincbs4 = 44 [json_name = "domain-carincbs4"];
                  uint32 domain_carinpbs4 = 45 [json_name = "domain-carinpbs4"];
                  uint32 domain_carincir5 = 46 [json_name = "domain-carincir5"];
                  uint32 domain_carinpir5 = 47 [json_name = "domain-carinpir5"];
                  uint32 domain_carincbs5 = 48 [json_name = "domain-carincbs5"];
                  uint32 domain_carinpbs5 = 49 [json_name = "domain-carinpbs5"];
                  uint32 domain_caroutcir = 50 [json_name = "domain-caroutcir"];
                  uint32 domain_caroutpir = 51 [json_name = "domain-caroutpir"];
                  uint32 domain_caroutcbs = 52 [json_name = "domain-caroutcbs"];
                  uint32 domain_caroutpbs = 53 [json_name = "domain-caroutpbs"];
                  uint32 domain_caroutcir1 = 54 [json_name = "domain-caroutcir1"];
                  uint32 domain_caroutpir1 = 55 [json_name = "domain-caroutpir1"];
                  uint32 domain_caroutcbs1 = 56 [json_name = "domain-caroutcbs1"];
                  uint32 domain_caroutpbs1 = 57 [json_name = "domain-caroutpbs1"];
                  uint32 domain_caroutcir2 = 58 [json_name = "domain-caroutcir2"];
                  uint32 domain_caroutpir2 = 59 [json_name = "domain-caroutpir2"];
                  uint32 domain_caroutcbs2 = 60 [json_name = "domain-caroutcbs2"];
                  uint32 domain_caroutpbs2 = 61 [json_name = "domain-caroutpbs2"];
                  uint32 domain_caroutcir3 = 62 [json_name = "domain-caroutcir3"];
                  uint32 domain_caroutpir3 = 63 [json_name = "domain-caroutpir3"];
                  uint32 domain_caroutcbs3 = 64 [json_name = "domain-caroutcbs3"];
                  uint32 domain_caroutpbs3 = 65 [json_name = "domain-caroutpbs3"];
                  uint32 domain_caroutcir4 = 66 [json_name = "domain-caroutcir4"];
                  uint32 domain_caroutpir4 = 67 [json_name = "domain-caroutpir4"];
                  uint32 domain_caroutcbs4 = 68 [json_name = "domain-caroutcbs4"];
                  uint32 domain_caroutpbs4 = 69 [json_name = "domain-caroutpbs4"];
                  uint32 domain_caroutcir5 = 70 [json_name = "domain-caroutcir5"];
                  uint32 domain_caroutpir5 = 71 [json_name = "domain-caroutpir5"];
                  uint32 domain_caroutcbs5 = 72 [json_name = "domain-caroutcbs5"];
                  uint32 domain_caroutpbs5 = 73 [json_name = "domain-caroutpbs5"];
                  uint32 family_carincir = 74 [json_name = "family-carincir"];
                  uint32 family_carinpir = 75 [json_name = "family-carinpir"];
                  uint32 family_carincbs = 76 [json_name = "family-carincbs"];
                  uint32 family_carinpbs = 77 [json_name = "family-carinpbs"];
                  uint32 family_carincir1 = 78 [json_name = "family-carincir1"];
                  uint32 family_carinpir1 = 79 [json_name = "family-carinpir1"];
                  uint32 family_carincbs1 = 80 [json_name = "family-carincbs1"];
                  uint32 family_carinpbs1 = 81 [json_name = "family-carinpbs1"];
                  uint32 family_carincir2 = 82 [json_name = "family-carincir2"];
                  uint32 family_carinpir2 = 83 [json_name = "family-carinpir2"];
                  uint32 family_carincbs2 = 84 [json_name = "family-carincbs2"];
                  uint32 family_carinpbs2 = 85 [json_name = "family-carinpbs2"];
                  uint32 family_carincir3 = 86 [json_name = "family-carincir3"];
                  uint32 family_carinpir3 = 87 [json_name = "family-carinpir3"];
                  uint32 family_carincbs3 = 88 [json_name = "family-carincbs3"];
                  uint32 family_carinpbs3 = 89 [json_name = "family-carinpbs3"];
                  uint32 family_carincir4 = 90 [json_name = "family-carincir4"];
                  uint32 family_carinpir4 = 91 [json_name = "family-carinpir4"];
                  uint32 family_carincbs4 = 92 [json_name = "family-carincbs4"];
                  uint32 family_carinpbs4 = 93 [json_name = "family-carinpbs4"];
                  uint32 family_carincir5 = 94 [json_name = "family-carincir5"];
                  uint32 family_carinpir5 = 95 [json_name = "family-carinpir5"];
                  uint32 family_carincbs5 = 96 [json_name = "family-carincbs5"];
                  uint32 family_carinpbs5 = 97 [json_name = "family-carinpbs5"];
                  uint32 family_caroutcir = 98 [json_name = "family-caroutcir"];
                  uint32 family_caroutpir = 99 [json_name = "family-caroutpir"];
                  uint32 family_caroutcbs = 100 [json_name = "family-caroutcbs"];
                  uint32 family_caroutpbs = 101 [json_name = "family-caroutpbs"];
                  uint32 family_caroutcir1 = 102 [json_name = "family-caroutcir1"];
                  uint32 family_caroutpir1 = 103 [json_name = "family-caroutpir1"];
                  uint32 family_caroutcbs1 = 104 [json_name = "family-caroutcbs1"];
                  uint32 family_caroutpbs1 = 105 [json_name = "family-caroutpbs1"];
                  uint32 family_caroutcir2 = 106 [json_name = "family-caroutcir2"];
                  uint32 family_caroutpir2 = 107 [json_name = "family-caroutpir2"];
                  uint32 family_caroutcbs2 = 108 [json_name = "family-caroutcbs2"];
                  uint32 family_caroutpbs2 = 109 [json_name = "family-caroutpbs2"];
                  uint32 family_caroutcir3 = 110 [json_name = "family-caroutcir3"];
                  uint32 family_caroutpir3 = 111 [json_name = "family-caroutpir3"];
                  uint32 family_caroutcbs3 = 112 [json_name = "family-caroutcbs3"];
                  uint32 family_caroutpbs3 = 113 [json_name = "family-caroutpbs3"];
                  uint32 family_caroutcir4 = 114 [json_name = "family-caroutcir4"];
                  uint32 family_caroutpir4 = 115 [json_name = "family-caroutpir4"];
                  uint32 family_caroutcbs4 = 116 [json_name = "family-caroutcbs4"];
                  uint32 family_caroutpbs4 = 117 [json_name = "family-caroutpbs4"];
                  uint32 family_caroutcir5 = 118 [json_name = "family-caroutcir5"];
                  uint32 family_caroutpir5 = 119 [json_name = "family-caroutpir5"];
                  uint32 family_caroutcbs5 = 120 [json_name = "family-caroutcbs5"];
                  uint32 family_caroutpbs5 = 121 [json_name = "family-caroutpbs5"];
               }
               repeated AccessUserEffectiveSlotInfo access_user_effective_slot_info = 1 [json_name = "access-user-effective-slot-info"];
            }
            AccessUserEffectiveSlotInfos access_user_effective_slot_infos = 11 [json_name = "access-user-effective-slot-infos"];
         }
         AccessUserAclQosInfo access_user_acl_qos_info = 11 [json_name = "access-user-acl-qos-info"];
         message AccessUserFlowStatisticInfo {
            uint32 acct_flw = 1 [json_name = "acct-flw"];
            enum AcctBytFlg {
               AcctBytFlg_KBYTEX_MIN = 0;
               AcctBytFlg_BYTEX_MIN = 1;
               AcctBytFlg_KBYTEX_S = 2;
            };
            AcctBytFlg acct_byt_flg = 2 [json_name = "acct-byt-flg"];
            uint32 acct_up_flw = 3 [json_name = "acct-up-flw"];
            enum AcctUpBytFlg {
               AcctUpBytFlg_KBYTEX_MIN = 0;
               AcctUpBytFlg_BYTEX_MIN = 1;
               AcctUpBytFlg_KBYTEX_S = 2;
            };
            AcctUpBytFlg acct_up_byt_flg = 4 [json_name = "acct-up-byt-flg"];
            uint32 acct_dn_flw = 5 [json_name = "acct-dn-flw"];
            enum AcctDnBytFlg {
               AcctDnBytFlg_KBYTEX_MIN = 0;
               AcctDnBytFlg_BYTEX_MIN = 1;
               AcctDnBytFlg_KBYTEX_S = 2;
            };
            AcctDnBytFlg acct_dn_byt_flg = 6 [json_name = "acct-dn-byt-flg"];
            enum FlwIncL2Flg {
               FlwIncL2Flg_NO = 0;
               FlwIncL2Flg_YES = 1;
            };
            FlwIncL2Flg flw_inc_l2_flg = 7 [json_name = "flw-inc-l2-flg"];
            enum FlwUpStatFlg {
               FlwUpStatFlg_NO = 0;
               FlwUpStatFlg_YES = 1;
            };
            FlwUpStatFlg flw_up_stat_flg = 8 [json_name = "flw-up-stat-flg"];
            enum FlwDnStatFlg {
               FlwDnStatFlg_NO = 0;
               FlwDnStatFlg_YES = 1;
            };
            FlwDnStatFlg flw_dn_stat_flg = 9 [json_name = "flw-dn-stat-flg"];
            uint32 ip4_flw_up_st_pkt_hi = 10 [json_name = "ip4-flw-up-st-pkt-hi"];
            uint32 ip4_flw_up_st_pkt_lo = 11 [json_name = "ip4-flw-up-st-pkt-lo"];
            uint32 ip4_flw_up_st_byt_hi = 12 [json_name = "ip4-flw-up-st-byt-hi"];
            uint32 ip4_flw_up_st_byt_lo = 13 [json_name = "ip4-flw-up-st-byt-lo"];
            uint32 ip4_flw_dn_st_pkt_hi = 14 [json_name = "ip4-flw-dn-st-pkt-hi"];
            uint32 ip4_flw_dn_st_pkt_lo = 15 [json_name = "ip4-flw-dn-st-pkt-lo"];
            uint32 ip4_flw_dn_st_byt_hi = 16 [json_name = "ip4-flw-dn-st-byt-hi"];
            uint32 ip4_flw_dn_st_byt_lo = 17 [json_name = "ip4-flw-dn-st-byt-lo"];
            uint32 l2_flw_up_st_pkt_hi = 18 [json_name = "l2-flw-up-st-pkt-hi"];
            uint32 l2_flw_up_st_pkt_lo = 19 [json_name = "l2-flw-up-st-pkt-lo"];
            uint32 l2_flw_up_st_byt_hi = 20 [json_name = "l2-flw-up-st-byt-hi"];
            uint32 l2_flw_up_st_byt_lo = 21 [json_name = "l2-flw-up-st-byt-lo"];
            uint32 l2_flw_dn_st_pkt_hi = 22 [json_name = "l2-flw-dn-st-pkt-hi"];
            uint32 l2_flw_dn_st_pkt_lo = 23 [json_name = "l2-flw-dn-st-pkt-lo"];
            uint32 l2_flw_dn_st_byt_hi = 24 [json_name = "l2-flw-dn-st-byt-hi"];
            uint32 l2_flw_dn_st_byt_lo = 25 [json_name = "l2-flw-dn-st-byt-lo"];
            uint32 ip6_flw_up_st_pkt_hi = 26 [json_name = "ip6-flw-up-st-pkt-hi"];
            uint32 ip6_flw_up_st_pkt_lo = 27 [json_name = "ip6-flw-up-st-pkt-lo"];
            uint32 ip6_flw_up_st_byt_hi = 28 [json_name = "ip6-flw-up-st-byt-hi"];
            uint32 ip6_flw_up_st_byt_lo = 29 [json_name = "ip6-flw-up-st-byt-lo"];
            uint32 ip6_flw_dn_st_pkt_hi = 30 [json_name = "ip6-flw-dn-st-pkt-hi"];
            uint32 ip6_flw_dn_st_pkt_lo = 31 [json_name = "ip6-flw-dn-st-pkt-lo"];
            uint32 ip6_flw_dn_st_byt_hi = 32 [json_name = "ip6-flw-dn-st-byt-hi"];
            uint32 ip6_flw_dn_st_byt_lo = 33 [json_name = "ip6-flw-dn-st-byt-lo"];
            uint32 mc_flw_dn_st_pkt_hi = 34 [json_name = "mc-flw-dn-st-pkt-hi"];
            uint32 mc_flw_dn_st_pkt_lo = 35 [json_name = "mc-flw-dn-st-pkt-lo"];
            uint32 mc_flw_dn_st_byt_hi = 36 [json_name = "mc-flw-dn-st-byt-hi"];
            uint32 mc_flw_dn_st_byt_lo = 37 [json_name = "mc-flw-dn-st-byt-lo"];
            message AccessDiscardedStreamInfos {
               message AccessDiscardedStreamInfo {
                  enum StreamType {
                     StreamType_LOCAL = 0;
                     StreamType_REMOTE = 1;
                  };
                  StreamType stream_type = 1 [json_name = "stream-type"];
                  enum QueueType {
                     QueueType_BE = 0;
                     QueueType_AF1 = 1;
                     QueueType_AF2 = 2;
                     QueueType_AF3 = 3;
                     QueueType_AF4 = 4;
                     QueueType_EF = 5;
                     QueueType_CS6 = 6;
                     QueueType_CS7 = 7;
                  };
                  QueueType queue_type = 2 [json_name = "queue-type"];
                  enum Direction {
                     Direction_DOWN = 0;
                     Direction_UP = 1;
                  };
                  Direction direction = 3 [json_name = "direction"];
                  uint32 flow_packet_high = 4 [json_name = "flow-packet-high"];
                  uint32 flow_packet_low = 5 [json_name = "flow-packet-low"];
                  uint32 flow_byte_high = 6 [json_name = "flow-byte-high"];
                  uint32 flow_byte_low = 7 [json_name = "flow-byte-low"];
               }
               repeated AccessDiscardedStreamInfo access_discarded_stream_info = 1 [json_name = "access-discarded-stream-info"];
            }
            AccessDiscardedStreamInfos access_discarded_stream_infos = 38 [json_name = "access-discarded-stream-infos"];
         }
         AccessUserFlowStatisticInfo access_user_flow_statistic_info = 12 [json_name = "access-user-flow-statistic-info"];
         message AccessUserDslamInfo {
            string l2cp_circuit_id = 1 [json_name = "l2cp-circuit-id"];
            string l2cp_remote_id = 2 [json_name = "l2cp-remote-id"];
            uint32 actual_data_rate_upstream = 3 [json_name = "actual-data-rate-upstream"];
            uint32 actual_data_rate_downstream = 4 [json_name = "actual-data-rate-downstream"];
            uint32 minimum_data_rate_upstream = 5 [json_name = "minimum-data-rate-upstream"];
            uint32 minimum_data_rate_downstream = 6 [json_name = "minimum-data-rate-downstream"];
            uint32 attainable_data_rate_upstream = 7 [json_name = "attainable-data-rate-upstream"];
            uint32 attainable_data_rate_downstream = 8 [json_name = "attainable-data-rate-downstream"];
            uint32 maximum_data_rate_upstream = 9 [json_name = "maximum-data-rate-upstream"];
            uint32 maximum_data_rate_downstream = 10 [json_name = "maximum-data-rate-downstream"];
            uint32 minimum_data_rate_up_low_power = 11 [json_name = "minimum-data-rate-up-low-power"];
            uint32 minimum_data_rate_down_low_power = 12 [json_name = "minimum-data-rate-down-low-power"];
            uint32 maximum_int_delay_upstream = 13 [json_name = "maximum-int-delay-upstream"];
            uint32 maximum_int_delay_downstream = 14 [json_name = "maximum-int-delay-downstream"];
            uint32 actual_int_delay_upstream = 15 [json_name = "actual-int-delay-upstream"];
            uint32 actual_int_delay_downstream = 16 [json_name = "actual-int-delay-downstream"];
            string access_loop_encapsulation = 17 [json_name = "access-loop-encapsulation"];
         }
         AccessUserDslamInfo access_user_dslam_info = 13 [json_name = "access-user-dslam-info"];
         message AccessUserL2TpOrCuInfo {
            int32 up_id = 1 [json_name = "up-id"];
            enum L2TpPeer {
               L2TpPeer_L2TPX_PEERX_LAC = 0;
               L2TpPeer_L2TPX_PEERX_LNS = 1;
               L2TpPeer_L2TPX_PEERX_LTS = 2;
            };
            L2TpPeer l2tp_peer = 2 [json_name = "l2tp-peer"];
            uint32 lac_tnl_id = 3 [json_name = "lac-tnl-id"];
            uint32 lac_session_id = 4 [json_name = "lac-session-id"];
            string l2tp_grp_name = 5 [json_name = "l2tp-grp-name"];
            enum L2TpGrpRdsFlg {
               L2TpGrpRdsFlg_NO = 0;
               L2TpGrpRdsFlg_YES = 1;
            };
            L2TpGrpRdsFlg l2tp_grp_rds_flg = 6 [json_name = "l2tp-grp-rds-flg"];
            uint32 lns_tnl_id = 7 [json_name = "lns-tnl-id"];
            uint32 lns_session_id = 8 [json_name = "lns-session-id"];
            string lns_slot = 9 [json_name = "lns-slot"];
            string l2tp_tnl_sip = 10 [json_name = "l2tp-tnl-sip"];
            string l2tp_tnl_auth_id = 11 [json_name = "l2tp-tnl-auth-id"];
            string up_rui_prf_name = 12 [json_name = "up-rui-prf-name"];
            string cu_master_ifname = 13 [json_name = "cu-master-ifname"];
            string cu_slave_ifname = 14 [json_name = "cu-slave-ifname"];
            string sessn_grp_name = 15 [json_name = "sessn-grp-name"];
            enum SessnGrpSrvMod {
               SessnGrpSrvMod_NORMAL = 0;
               SessnGrpSrvMod_VCPE = 1;
               SessnGrpSrvMod_INVALID = 2;
            };
            SessnGrpSrvMod sessn_grp_srv_mod = 16 [json_name = "sessn-grp-srv-mod"];
            enum SessnGrpEkeyFlg {
               SessnGrpEkeyFlg_NO = 0;
               SessnGrpEkeyFlg_YES = 1;
            };
            SessnGrpEkeyFlg sessn_grp_ekey_flg = 17 [json_name = "sessn-grp-ekey-flg"];
            uint32 sessn_grp_ekey = 18 [json_name = "sessn-grp-ekey"];
            string srch_trgt_name = 19 [json_name = "srch-trgt-name"];
            string gre_grp_name = 20 [json_name = "gre-grp-name"];
            uint32 sessn_grp_auth_if = 21 [json_name = "sessn-grp-auth-if"];
            uint32 sessn_grp_diag_if = 22 [json_name = "sessn-grp-diag-if"];
         }
         AccessUserL2TpOrCuInfo access_user_l2tp_or_cu_info = 14 [json_name = "access-user-l2tp-or-cu-info"];
         message AccessUserEdsgInfos {
            message AccessUserEdsgInfo {
               uint32 msiserviceindex = 1 [json_name = "msiserviceindex"];
               enum ActiveFlag {
                  ActiveFlag_NO = 0;
                  ActiveFlag_YES = 1;
               };
               ActiveFlag active_flag = 2 [json_name = "active-flag"];
               string service_name = 3 [json_name = "service-name"];
            }
            repeated AccessUserEdsgInfo access_user_edsg_info = 1 [json_name = "access-user-edsg-info"];
         }
         AccessUserEdsgInfos access_user_edsg_infos = 15 [json_name = "access-user-edsg-infos"];
         message AccessUserDaaPolicyInfo {
            string sub_redir_key = 1 [json_name = "sub-redir-key"];
            string sub_id = 2 [json_name = "sub-id"];
            enum SubIdRdsFlg {
               SubIdRdsFlg_NO = 0;
               SubIdRdsFlg_YES = 1;
            };
            SubIdRdsFlg sub_id_rds_flg = 3 [json_name = "sub-id-rds-flg"];
            string daa_policy_name = 4 [json_name = "daa-policy-name"];
            string daa_policy_name_lv1 = 5 [json_name = "daa-policy-name-lv1"];
            string daa_policy_name_lv2 = 6 [json_name = "daa-policy-name-lv2"];
            string daa_policy_name_lv3 = 7 [json_name = "daa-policy-name-lv3"];
            string daa_policy_name_lv4 = 8 [json_name = "daa-policy-name-lv4"];
            string daa_policy_name_lv5 = 9 [json_name = "daa-policy-name-lv5"];
            string daa_policy_name_lv6 = 10 [json_name = "daa-policy-name-lv6"];
            string daa_policy_name_lv7 = 11 [json_name = "daa-policy-name-lv7"];
            string daa_policy_name_lv8 = 12 [json_name = "daa-policy-name-lv8"];
         }
         AccessUserDaaPolicyInfo access_user_daa_policy_info = 16 [json_name = "access-user-daa-policy-info"];
         string access_slot = 17 [json_name = "access-slot"];
      }
      repeated AccessTable access_table = 1 [json_name = "access-table"];
   }
   AccessTables access_tables = 10 [json_name = "access-tables"];
   message AccessUserResourceUsage {
      message Mpu {
         uint32 user_usage = 1 [json_name = "user-usage"];
         uint32 total_user_number = 2 [json_name = "total-user-number"];
         uint32 used_user_number = 3 [json_name = "used-user-number"];
      }
      Mpu mpu = 1 [json_name = "mpu"];
      message License {
         uint32 user_usage = 1 [json_name = "user-usage"];
         uint32 total_user_number = 2 [json_name = "total-user-number"];
         uint32 used_user_number = 3 [json_name = "used-user-number"];
      }
      License license = 2 [json_name = "license"];
      message Slots {
         message Slot {
            string slot_id = 1 [json_name = "slot-id"];
            uint32 user_usage = 2 [json_name = "user-usage"];
            uint32 total_user_number = 3 [json_name = "total-user-number"];
            uint32 used_user_number = 4 [json_name = "used-user-number"];
         }
         repeated Slot slot = 1 [json_name = "slot"];
      }
      Slots slots = 3 [json_name = "slots"];
   }
   AccessUserResourceUsage access_user_resource_usage = 11 [json_name = "access-user-resource-usage"];
   message AccessServices {
      message AccessService {
         string name = 1 [json_name = "name"];
         message QosProfile {
            string qos_profile_name = 1 [json_name = "qos-profile-name"];
         }
         QosProfile qos_profile = 2 [json_name = "qos-profile"];
         message QosProfileTimeRanges {
            message QosProfileTimeRange {
               string time_range_name = 1 [json_name = "time-range-name"];
               string qos_profile_name = 2 [json_name = "qos-profile-name"];
            }
            repeated QosProfileTimeRange qos_profile_time_range = 1 [json_name = "qos-profile-time-range"];
         }
         QosProfileTimeRanges qos_profile_time_ranges = 3 [json_name = "qos-profile-time-ranges"];
      }
      repeated AccessService access_service = 1 [json_name = "access-service"];
   }
   AccessServices access_services = 12 [json_name = "access-services"];
   message DomainMaxOnlineUserStatistics {
      message DomainMaxOnlineUserStatistic {
         string domain_name = 1 [json_name = "domain-name"];
         uint32 max_online_users = 2 [json_name = "max-online-users"];
         string max_online_time = 3 [json_name = "max-online-time"];
         string max_online_reset_time = 4 [json_name = "max-online-reset-time"];
      }
      repeated DomainMaxOnlineUserStatistic domain_max_online_user_statistic = 1 [json_name = "domain-max-online-user-statistic"];
   }
   DomainMaxOnlineUserStatistics domain_max_online_user_statistics = 13 [json_name = "domain-max-online-user-statistics"];
   message MaxOnlineUserStatistic {
      uint32 max_online_users = 1 [json_name = "max-online-users"];
      string max_online_time = 2 [json_name = "max-online-time"];
      uint32 max_accounting_ready_users = 3 [json_name = "max-accounting-ready-users"];
      string max_accounting_ready_time = 4 [json_name = "max-accounting-ready-time"];
      uint32 max_normal_rui_local_users = 5 [json_name = "max-normal-rui-local-users"];
      string max_normal_rui_local_time = 6 [json_name = "max-normal-rui-local-time"];
      uint32 max_rui_remote_users = 7 [json_name = "max-rui-remote-users"];
      string max_rui_remote_time = 8 [json_name = "max-rui-remote-time"];
   }
   MaxOnlineUserStatistic max_online_user_statistic = 14 [json_name = "max-online-user-statistic"];
   message UserPolicyInterfaceDown {
      enum UserPolicy {
         UserPolicy_OFFLINE = 0;
         UserPolicy_ONLINE = 1;
      };
      UserPolicy user_policy = 1 [json_name = "user-policy"];
   }
   UserPolicyInterfaceDown user_policy_interface_down = 15 [json_name = "user-policy-interface-down"];
   message AaaCallRate {
      uint32 total_connect_number = 1 [json_name = "total-connect-number"];
      uint32 total_success_number = 2 [json_name = "total-success-number"];
      uint32 total_lcp_fail_number = 3 [json_name = "total-lcp-fail-number"];
      uint32 total_authen_fail_number = 4 [json_name = "total-authen-fail-number"];
      uint32 total_ncp_fail_number = 5 [json_name = "total-ncp-fail-number"];
      uint32 total_ip_alloc_fail_number = 6 [json_name = "total-ip-alloc-fail-number"];
      uint32 total_other_ppp_fail_number = 7 [json_name = "total-other-ppp-fail-number"];
      uint32 total_web_connect_number = 8 [json_name = "total-web-connect-number"];
      uint32 total_success_web_connect_number = 9 [json_name = "total-success-web-connect-number"];
      uint32 total_bind_connect_number = 10 [json_name = "total-bind-connect-number"];
      uint32 total_success_bind_connect_number = 11 [json_name = "total-success-bind-connect-number"];
      uint32 total_ppp_connect_num = 12 [json_name = "total-ppp-connect-num"];
      uint32 total_ppp_success_num = 13 [json_name = "total-ppp-success-num"];
      uint32 total_dot1x_connect_num = 14 [json_name = "total-dot1x-connect-num"];
      uint32 total_success_dot1x_num = 15 [json_name = "total-success-dot1x-num"];
      string ppp_rate = 16 [json_name = "ppp-rate"];
      string web_rate = 17 [json_name = "web-rate"];
      string dot1x_rate = 18 [json_name = "dot1x-rate"];
      string bind_rate = 19 [json_name = "bind-rate"];
      string total_rate = 20 [json_name = "total-rate"];
   }
   AaaCallRate aaa_call_rate = 16 [json_name = "aaa-call-rate"];
   message AaaOnlineFailOrOfflineStatistics {
      message AaaOnlineFailOrOfflineStatistic {
         enum RecordType {
            INVALID_ENUM_VALUE_RecordType = 0;
            RecordType_OFFLINEX_RECORD = 1;
            RecordType_ONLINEX_FAILX_RECORD = 2;
         };
         RecordType record_type = 1 [json_name = "record-type"];
         enum RecordOrder {
            INVALID_ENUM_VALUE_RecordOrder = 0;
            RecordOrder_MACX_ADDRESS = 1;
            RecordOrder_LINKX_INFO = 2;
         };
         RecordOrder record_order = 2 [json_name = "record-order"];
         uint32 top_number = 3 [json_name = "top-number"];
         uint32 hour = 4 [json_name = "hour"];
         uint32 minute = 5 [json_name = "minute"];
         uint32 second = 6 [json_name = "second"];
         string interface = 7 [json_name = "interface"];
         uint32 pevlan = 8 [json_name = "pevlan"];
         uint32 cevlan = 9 [json_name = "cevlan"];
         string mac = 10 [json_name = "mac"];
         uint32 times = 11 [json_name = "times"];
      }
      repeated AaaOnlineFailOrOfflineStatistic aaa_online_fail_or_offline_statistic = 1 [json_name = "aaa-online-fail-or-offline-statistic"];
   }
   AaaOnlineFailOrOfflineStatistics aaa_online_fail_or_offline_statistics = 17 [json_name = "aaa-online-fail-or-offline-statistics"];
   message AaaStatistics {
      uint32 total_online_number = 1 [json_name = "total-online-number"];
      uint32 total_pppoe_online_number = 2 [json_name = "total-pppoe-online-number"];
      uint32 total_pppoa_online_number = 3 [json_name = "total-pppoa-online-number"];
      uint32 total_ftp_online_number = 4 [json_name = "total-ftp-online-number"];
      uint32 total_ssh_online_number = 5 [json_name = "total-ssh-online-number"];
      uint32 total_telnet_online_number = 6 [json_name = "total-telnet-online-number"];
      uint32 total_vlan_online_number = 7 [json_name = "total-vlan-online-number"];
      uint32 historic_max_online_number = 8 [json_name = "historic-max-online-number"];
      uint32 max_pppoe_online_number = 9 [json_name = "max-pppoe-online-number"];
      uint32 total_portal_user_number = 10 [json_name = "total-portal-user-number"];
      uint32 max_portal_user_number = 11 [json_name = "max-portal-user-number"];
      uint32 total_ipv4_online_number = 12 [json_name = "total-ipv4-online-number"];
      uint32 total_ipv6_online_number = 13 [json_name = "total-ipv6-online-number"];
      uint32 total_dual_stack_online_number = 14 [json_name = "total-dual-stack-online-number"];
      uint64 total_ipv4_flow_down_byte = 15 [json_name = "total-ipv4-flow-down-byte"];
      uint64 total_ipv4_flow_down_packet = 16 [json_name = "total-ipv4-flow-down-packet"];
      uint64 total_ipv4_flow_up_byte = 17 [json_name = "total-ipv4-flow-up-byte"];
      uint64 total_ipv4_flow_up_packet = 18 [json_name = "total-ipv4-flow-up-packet"];
      uint64 total_ipv6_flow_down_byte = 19 [json_name = "total-ipv6-flow-down-byte"];
      uint64 total_ipv6_flow_down_packet = 20 [json_name = "total-ipv6-flow-down-packet"];
      uint64 total_ipv6_flow_up_byte = 21 [json_name = "total-ipv6-flow-up-byte"];
      uint64 total_ipv6_flow_up_packet = 22 [json_name = "total-ipv6-flow-up-packet"];
      uint32 historic_max_online_acct_ready_num = 23 [json_name = "historic-max-online-acct-ready-num"];
      uint32 public_lac_user_number = 24 [json_name = "public-lac-user-number"];
      uint32 historic_max_rui_online_local_num = 25 [json_name = "historic-max-rui-online-local-num"];
      uint32 historic_max_rui_online_remote_num = 26 [json_name = "historic-max-rui-online-remote-num"];
      uint32 total_lac_online_number = 27 [json_name = "total-lac-online-number"];
      uint32 total_lns_online_number = 28 [json_name = "total-lns-online-number"];
      uint32 total_wireless_online_number = 29 [json_name = "total-wireless-online-number"];
      uint32 total_wired_online_number = 30 [json_name = "total-wired-online-number"];
      string historic_max_online_num_date = 31 [json_name = "historic-max-online-num-date"];
      uint32 total_lease_online_number = 32 [json_name = "total-lease-online-number"];
      uint32 total_tunnel_online_number = 33 [json_name = "total-tunnel-online-number"];
      uint32 total_ppp_online_number = 34 [json_name = "total-ppp-online-number"];
      uint32 total_session_group_online_num = 35 [json_name = "total-session-group-online-num"];
   }
   AaaStatistics aaa_statistics = 18 [json_name = "aaa-statistics"];
   message AccessUserExtendStates {
      message AccessUserExtendState {
         uint32 access_index = 1 [json_name = "access-index"];
         int32 user_group = 2 [json_name = "user-group"];
         int32 authentication_state = 3 [json_name = "authentication-state"];
         int32 authorization_state = 4 [json_name = "authorization-state"];
         int32 accounting_state = 5 [json_name = "accounting-state"];
         string domain_name = 6 [json_name = "domain-name"];
         int32 idle_start_time = 7 [json_name = "idle-start-time"];
         string account_session_id = 8 [json_name = "account-session-id"];
         string access_start_account_time = 9 [json_name = "access-start-account-time"];
         string access_normal_radius_server_group = 10 [json_name = "access-normal-radius-server-group"];
         string domain_account_copy_radius_sever = 11 [json_name = "domain-account-copy-radius-sever"];
         string interface_account_copy_radius_sever = 12 [json_name = "interface-account-copy-radius-sever"];
         enum AccessCurrentAuthenPlace {
            AccessCurrentAuthenPlace_NONE = 0;
            AccessCurrentAuthenPlace_LOCAL = 1;
            AccessCurrentAuthenPlace_RADIUS = 2;
            AccessCurrentAuthenPlace_TACACS = 3;
         };
         AccessCurrentAuthenPlace access_current_authen_place = 13 [json_name = "access-current-authen-place"];
         enum AccessActionFlag {
            AccessActionFlag_IDLE = 0;
            AccessActionFlag_NEWUSERAUTH = 1;
            AccessActionFlag_REAUTH = 2;
            AccessActionFlag_LOGOUT = 3;
            AccessActionFlag_LEAVING = 4;
            AccessActionFlag_AUTHMODIFY = 5;
            AccessActionFlag_CONNECTUP = 6;
         };
         AccessActionFlag access_action_flag = 14 [json_name = "access-action-flag"];
         enum AccessAuthType {
            AccessAuthType_NONE = 0;
            AccessAuthType_PPP = 1;
            AccessAuthType_DOT1X = 2;
            AccessAuthType_WEB = 3;
            AccessAuthType_BIND = 4;
            AccessAuthType_FAST = 5;
            AccessAuthType_WLAN = 6;
            AccessAuthType_ADMIN = 7;
            AccessAuthType_TUNNEL = 8;
         };
         AccessAuthType access_auth_type = 15 [json_name = "access-auth-type"];
         enum AccessType {
            INVALID_ENUM_VALUE_AccessType = 0;
            AccessType_TELNET = 1;
            AccessType_TERMINAL = 2;
            AccessType_SSH = 3;
            AccessType_FTP = 4;
            AccessType_X25PAD = 5;
            AccessType_PPP = 6;
            AccessType_PPPOE = 7;
            AccessType_PPPOEOVLAN = 8;
            AccessType_PPPOA = 9;
            AccessType_PPPOEOA = 10;
            AccessType_PPPOLNS = 11;
            AccessType_ORDINARYX_VLAN = 12;
            AccessType_EAP = 13;
            AccessType_PNP = 14;
            AccessType_IP = 15;
            AccessType_STATICX_VLAN = 16;
            AccessType_LAYER2X_LEASEDX_LINE = 17;
            AccessType_LAYER2X_LEASEDX_LINEX_USER = 18;
            AccessType_LAYER3X_LEASEDX_LINE = 19;
            AccessType_PPPOEX_LEASEDX_LINE = 20;
            AccessType_NMSX_LEASEDX_LINE = 21;
            AccessType_PROXYX_LEASEDX_LINE = 22;
            AccessType_RELAYX_LEASEDX_LINE = 23;
            AccessType_E1POS = 24;
            AccessType_LACX_TUNNEL = 25;
            AccessType_LNSX_TUNNEL = 26;
            AccessType_MIP = 27;
            AccessType_DEVICEX_USER = 28;
            AccessType_PPPOEX_OR = 29;
            AccessType_PPPOEOVLANOR = 30;
            AccessType_ORDINARYX_VLANOR = 31;
            AccessType_HTTP = 38;
         };
         AccessType access_type = 16 [json_name = "access-type"];
         uint32 access_total_online_time = 17 [json_name = "access-total-online-time"];
         int32 resource_insufficient_inbound = 18 [json_name = "resource-insufficient-inbound"];
         int32 resource_insufficient_outbound = 19 [json_name = "resource-insufficient-outbound"];
      }
      repeated AccessUserExtendState access_user_extend_state = 1 [json_name = "access-user-extend-state"];
   }
   AccessUserExtendStates access_user_extend_states = 19 [json_name = "access-user-extend-states"];
   message AccessBackupCheckDetect {
      uint32 detect_interval = 1 [json_name = "detect-interval"];
      uint32 detect_count = 2 [json_name = "detect-count"];
      uint32 fail_count = 3 [json_name = "fail-count"];
   }
   AccessBackupCheckDetect access_backup_check_detect = 20 [json_name = "access-backup-check-detect"];
   message IpUserlog {
      message IpUserlogAccess {
         string ip_address = 1 [json_name = "ip-address"];
         uint32 udp_port = 2 [json_name = "udp-port"];
         uint32 version = 3 [json_name = "version"];
         bool enable = 4 [json_name = "enable"];
         bool send_format_syslog = 5 [json_name = "send-format-syslog"];
         enum TransportMode {
            TransportMode_UDP = 0;
            TransportMode_TCP = 1;
         };
         TransportMode transport_mode = 6 [json_name = "transport-mode"];
         message Statistic {
            string bind_ssl_policy = 1 [json_name = "bind-ssl-policy"];
            enum SslStatus {
               SslStatus_INIT = 0;
               SslStatus_CONNECTING = 1;
               SslStatus_CONNECTED = 2;
            };
            SslStatus ssl_status = 2 [json_name = "ssl-status"];
         }
         Statistic statistic = 7 [json_name = "statistic"];
         message CuStatistics {
            message CuStatistic {
               string upmng_instance = 1 [json_name = "upmng-instance"];
               string bind_ssl_policy = 2 [json_name = "bind-ssl-policy"];
               enum SslStatus {
                  SslStatus_INIT = 0;
                  SslStatus_CONNECTING = 1;
                  SslStatus_CONNECTED = 2;
               };
               SslStatus ssl_status = 3 [json_name = "ssl-status"];
            }
            repeated CuStatistic cu_statistic = 1 [json_name = "cu-statistic"];
         }
         CuStatistics cu_statistics = 8 [json_name = "cu-statistics"];
      }
      IpUserlogAccess ip_userlog_access = 1 [json_name = "ip-userlog-access"];
      message IpUserlogCallStatus {
         string ip_address = 1 [json_name = "ip-address"];
         uint32 udp_port = 2 [json_name = "udp-port"];
         bool call_status_enable = 3 [json_name = "call-status-enable"];
         enum TransportMode {
            TransportMode_UDP = 0;
            TransportMode_TCP = 1;
         };
         TransportMode transport_mode = 4 [json_name = "transport-mode"];
         message Statistic {
            string bind_ssl_policy = 1 [json_name = "bind-ssl-policy"];
            enum SslStatus {
               SslStatus_INIT = 0;
               SslStatus_CONNECTING = 1;
               SslStatus_CONNECTED = 2;
            };
            SslStatus ssl_status = 2 [json_name = "ssl-status"];
         }
         Statistic statistic = 5 [json_name = "statistic"];
         message CuStatistics {
            message CuStatistic {
               string upmng_instance = 1 [json_name = "upmng-instance"];
               string bind_ssl_policy = 2 [json_name = "bind-ssl-policy"];
               enum SslStatus {
                  SslStatus_INIT = 0;
                  SslStatus_CONNECTING = 1;
                  SslStatus_CONNECTED = 2;
               };
               SslStatus ssl_status = 3 [json_name = "ssl-status"];
            }
            repeated CuStatistic cu_statistic = 1 [json_name = "cu-statistic"];
         }
         CuStatistics cu_statistics = 6 [json_name = "cu-statistics"];
      }
      IpUserlogCallStatus ip_userlog_call_status = 2 [json_name = "ip-userlog-call-status"];
      message IpUserlogSslPolicys {
         message IpUserlogSslPolicy {
            string ip_address = 1 [json_name = "ip-address"];
            uint32 port = 2 [json_name = "port"];
            string ssl_policy_name = 3 [json_name = "ssl-policy-name"];
         }
         repeated IpUserlogSslPolicy ip_userlog_ssl_policy = 1 [json_name = "ip-userlog-ssl-policy"];
      }
      IpUserlogSslPolicys ip_userlog_ssl_policys = 3 [json_name = "ip-userlog-ssl-policys"];
   }
   IpUserlog ip_userlog = 21 [json_name = "ip-userlog"];
   message Trace {
      bool online_fail_auto_enable = 1 [json_name = "online-fail-auto-enable"];
   }
   Trace trace = 22 [json_name = "trace"];
   message UserAuthorization {
      bool reauthorize_enable = 1 [json_name = "reauthorize-enable"];
   }
   UserAuthorization user_authorization = 23 [json_name = "user-authorization"];
   message QoeAccounting {
      string radius_server_group_name = 1 [json_name = "radius-server-group-name"];
      uint32 interval = 2 [json_name = "interval"];
   }
   QoeAccounting qoe_accounting = 24 [json_name = "qoe-accounting"];
   message RealtimeAccountingBackup {
      bool enable = 1 [json_name = "enable"];
   }
   RealtimeAccountingBackup realtime_accounting_backup = 25 [json_name = "realtime-accounting-backup"];
   message AccountingTimeCalibration {
      bool enable = 1 [json_name = "enable"];
   }
   AccountingTimeCalibration accounting_time_calibration = 26 [json_name = "accounting-time-calibration"];
   message AcctSessionId {
      enum Version {
         INVALID_ENUM_VALUE_Version = 0;
         Version_VERSION1 = 1;
         Version_VERSION2 = 2;
         Version_VERSION3 = 3;
         Version_VERSION4 = 4;
         Version_VERSION5 = 5;
         Version_VERSION6 = 6;
      };
      Version version = 1 [json_name = "version"];
      string nas_logic_sysname = 2 [json_name = "nas-logic-sysname"];
   }
   AcctSessionId acct_session_id = 27 [json_name = "acct-session-id"];
   message LocalAaaServerUsers {
      message LocalAaaServerUser {
         string user_name = 1 [json_name = "user-name"];
         enum PasswordType {
            INVALID_ENUM_VALUE_PasswordType = 0;
            PasswordType_CIPHERX_PASSWORD = 1;
            PasswordType_IRREVERSIBLEX_PASSWORD = 2;
         };
         PasswordType password_type = 2 [json_name = "password-type"];
         string password = 3 [json_name = "password"];
         enum UserState {
            UserState_BLOCK = 0;
            UserState_ACTIVE = 1;
            UserState_LOCKX_WHENX_AUTHENX_FAIL = 2;
         };
         UserState user_state = 4 [json_name = "user-state"];
         uint32 user_level = 5 [json_name = "user-level"];
         string ftp_directory = 6 [json_name = "ftp-directory"];
         bool idle_cut = 7 [json_name = "idle-cut"];
         uint32 fail_times = 8 [json_name = "fail-times"];
         uint32 fail_interval = 9 [json_name = "fail-interval"];
         bool callback_nocheck = 10 [json_name = "callback-nocheck"];
         string callback_number = 11 [json_name = "callback-number"];
         string qos_profile_name = 12 [json_name = "qos-profile-name"];
         string ip_address = 13 [json_name = "ip-address"];
         string vpn_name = 14 [json_name = "vpn-name"];
         string user_group_name = 15 [json_name = "user-group-name"];
         bool terminal = 16 [json_name = "terminal"];
         bool telnet = 17 [json_name = "telnet"];
         bool ftp = 18 [json_name = "ftp"];
         bool ppp = 19 [json_name = "ppp"];
         bool ssh = 20 [json_name = "ssh"];
         bool vlan_web = 21 [json_name = "vlan-web"];
         bool vlan = 22 [json_name = "vlan"];
         bool dot1x = 23 [json_name = "dot1x"];
         bool x25_pad = 24 [json_name = "x25-pad"];
         bool tunnel = 25 [json_name = "tunnel"];
         bool snmp = 26 [json_name = "snmp"];
         bool mml = 27 [json_name = "mml"];
         bool qx = 28 [json_name = "qx"];
         bool http = 29 [json_name = "http"];
         string expire_time = 30 [json_name = "expire-time"];
      }
      repeated LocalAaaServerUser local_aaa_server_user = 1 [json_name = "local-aaa-server-user"];
   }
   LocalAaaServerUsers local_aaa_server_users = 28 [json_name = "local-aaa-server-users"];
   message FamilyOrCommonUser {
      enum UserNoFamilyMaxSession {
         INVALID_ENUM_VALUE_UserNoFamilyMaxSession = 0;
         UserNoFamilyMaxSession_SAMEX_USERX_NAMEX_LIMIT = 1;
         UserNoFamilyMaxSession_FAMILYX_TOX_COMMONX_USER = 2;
      };
      UserNoFamilyMaxSession user_no_family_max_session = 1 [json_name = "user-no-family-max-session"];
   }
   FamilyOrCommonUser family_or_common_user = 29 [json_name = "family-or-common-user"];
   message UserWarningThreshold {
      uint32 slot_warning_threshold = 1 [json_name = "slot-warning-threshold"];
      uint32 user_warning_threshold_upper_limit = 2 [json_name = "user-warning-threshold-upper-limit"];
      uint32 user_warning_threshold_lower_limit = 3 [json_name = "user-warning-threshold-lower-limit"];
   }
   UserWarningThreshold user_warning_threshold = 30 [json_name = "user-warning-threshold"];
   message UserResourceExhaustAlarm {
      bool user_resource_exhaust_threshold = 1 [json_name = "user-resource-exhaust-threshold"];
      uint32 main_resource_usage_upper_limit = 2 [json_name = "main-resource-usage-upper-limit"];
      uint32 main_resource_usage_lower_limit = 3 [json_name = "main-resource-usage-lower-limit"];
      uint32 slot_resource_usage_upper_limit = 4 [json_name = "slot-resource-usage-upper-limit"];
      uint32 slot_resource_usage_lower_limit = 5 [json_name = "slot-resource-usage-lower-limit"];
      uint32 main_cpu_usage_upper_limit = 6 [json_name = "main-cpu-usage-upper-limit"];
      uint32 main_cpu_usage_lower_limit = 7 [json_name = "main-cpu-usage-lower-limit"];
      uint32 slot_cpu_usage_upper_limit = 8 [json_name = "slot-cpu-usage-upper-limit"];
      uint32 slot_cpu_usage_lower_limit = 9 [json_name = "slot-cpu-usage-lower-limit"];
   }
   UserResourceExhaustAlarm user_resource_exhaust_alarm = 31 [json_name = "user-resource-exhaust-alarm"];
   message AccessBackupTrapUsernums {
      message AccessBackupTrapUsernum {
         enum InterfaceType {
            INVALID_ENUM_VALUE_InterfaceType = 0;
            InterfaceType_ETHX_TRUNK = 1;
            InterfaceType_GIGABITX_ETHERNET = 2;
            InterfaceType_GIGABITX_ETHERNETX_10X_GE = 3;
            InterfaceType_GIGABITX_ETHERNETX_100X_GE = 4;
            InterfaceType_GIGABITX_ETHERNETX_25X_GE = 5;
            InterfaceType_GIGABITX_ETHERNETX_50X_GE = 6;
            InterfaceType_GIGABITX_ETHERNETX_50X_ORX_100X_GE = 7;
            InterfaceType_XGIGABITX_ETHERNET = 8;
         };
         InterfaceType interface_type = 1 [json_name = "interface-type"];
         uint32 minor_trap_usernum = 2 [json_name = "minor-trap-usernum"];
         uint32 major_trap_usernum = 3 [json_name = "major-trap-usernum"];
      }
      repeated AccessBackupTrapUsernum access_backup_trap_usernum = 1 [json_name = "access-backup-trap-usernum"];
   }
   AccessBackupTrapUsernums access_backup_trap_usernums = 32 [json_name = "access-backup-trap-usernums"];
   message LocalBill {
      string bill_backup_server_ip = 1 [json_name = "bill-backup-server-ip"];
      string bill_backup_file_name = 2 [json_name = "bill-backup-file-name"];
      string bill_backup_user_name = 3 [json_name = "bill-backup-user-name"];
      string bill_backup_password = 4 [json_name = "bill-backup-password"];
      uint32 bill_backup_port_number = 5 [json_name = "bill-backup-port-number"];
      bool local_bill_pool_enable = 6 [json_name = "local-bill-pool-enable"];
      uint32 cache_backup_interval = 7 [json_name = "cache-backup-interval"];
      uint32 cache_alarm_threshold = 8 [json_name = "cache-alarm-threshold"];
      enum CacheBackupMode {
         INVALID_ENUM_VALUE_CacheBackupMode = 0;
         CacheBackupMode_NONE = 1;
         CacheBackupMode_TFTP = 2;
         CacheBackupMode_CFCARD = 3;
         CacheBackupMode_SFTP = 5;
      };
      CacheBackupMode cache_backup_mode = 9 [json_name = "cache-backup-mode"];
      uint32 cfcard_backup_interval = 10 [json_name = "cfcard-backup-interval"];
      uint32 cfcard_alarm_threshold = 11 [json_name = "cfcard-alarm-threshold"];
      enum CfcardBackupMode {
         INVALID_ENUM_VALUE_CfcardBackupMode = 0;
         CfcardBackupMode_TFTP = 2;
         CfcardBackupMode_SFTP = 5;
      };
      CfcardBackupMode cfcard_backup_mode = 12 [json_name = "cfcard-backup-mode"];
   }
   LocalBill local_bill = 33 [json_name = "local-bill"];
   message OfflineReasonStatistics {
      message OfflineReasonStatistic {
         int32 offline_or_online_fail_reason = 1 [json_name = "offline-or-online-fail-reason"];
         int32 offline_reasons_statistic = 2 [json_name = "offline-reasons-statistic"];
         int32 online_fail_reason_statistic = 3 [json_name = "online-fail-reason-statistic"];
      }
      repeated OfflineReasonStatistic offline_reason_statistic = 1 [json_name = "offline-reason-statistic"];
   }
   OfflineReasonStatistics offline_reason_statistics = 34 [json_name = "offline-reason-statistics"];
   message AccessOnlineNumberByUserTypes {
      message AccessOnlineNumberByUserType {
         uint32 up_id = 1 [json_name = "up-id"];
         enum UserType {
            UserType_PPP = 0;
            UserType_L2TP = 1;
            UserType_IP = 2;
         };
         UserType user_type = 2 [json_name = "user-type"];
         uint32 total_users = 3 [json_name = "total-users"];
         uint32 ipv4_users = 4 [json_name = "ipv4-users"];
         uint32 ipv6_users = 5 [json_name = "ipv6-users"];
         uint32 dual_users = 6 [json_name = "dual-users"];
      }
      repeated AccessOnlineNumberByUserType access_online_number_by_user_type = 1 [json_name = "access-online-number-by-user-type"];
   }
   AccessOnlineNumberByUserTypes access_online_number_by_user_types = 35 [json_name = "access-online-number-by-user-types"];
   message AccessOnlineNumberByDomains {
      message AccessOnlineNumberByDomain {
         uint32 up_id = 1 [json_name = "up-id"];
         string domain_name = 2 [json_name = "domain-name"];
         uint32 total_users = 3 [json_name = "total-users"];
         uint32 ipv4_users = 4 [json_name = "ipv4-users"];
         uint32 ipv6_users = 5 [json_name = "ipv6-users"];
         uint32 dual_users = 6 [json_name = "dual-users"];
      }
      repeated AccessOnlineNumberByDomain access_online_number_by_domain = 1 [json_name = "access-online-number-by-domain"];
   }
   AccessOnlineNumberByDomains access_online_number_by_domains = 36 [json_name = "access-online-number-by-domains"];
   message SlotAccessUserStatistics {
      message SlotAccessUserStatistic {
         int32 slot_id = 1 [json_name = "slot-id"];
         enum UserType {
            INVALID_ENUM_VALUE_UserType = 0;
            UserType_PPPOE = 1;
            UserType_PPPOA = 2;
            UserType_IPOE = 3;
            UserType_LNS = 4;
            UserType_LAC = 5;
            UserType_IPV4 = 6;
            UserType_IPV6 = 7;
            UserType_DUALX_STACK = 8;
            UserType_ALL = 9;
         };
         UserType user_type = 2 [json_name = "user-type"];
         int32 user_number = 3 [json_name = "user-number"];
         string slot = 4 [json_name = "slot"];
      }
      repeated SlotAccessUserStatistic slot_access_user_statistic = 1 [json_name = "slot-access-user-statistic"];
   }
   SlotAccessUserStatistics slot_access_user_statistics = 37 [json_name = "slot-access-user-statistics"];
   message OnlineFailRecordStatistic {
      uint32 dhcpv4_online_failures = 1 [json_name = "dhcpv4-online-failures"];
      uint32 dhcpv6_online_failures = 2 [json_name = "dhcpv6-online-failures"];
   }
   OnlineFailRecordStatistic online_fail_record_statistic = 38 [json_name = "online-fail-record-statistic"];
   message RateLimitStates {
      message RateLimitState {
         enum Direction {
            INVALID_ENUM_VALUE_Direction = 0;
            Direction_INBOUND = 1;
            Direction_OUTBOUND = 2;
         };
         Direction direction = 1 [json_name = "direction"];
         int32 rate_type = 2 [json_name = "rate-type"];
         int32 rate_peak = 3 [json_name = "rate-peak"];
         int32 rate_average = 4 [json_name = "rate-average"];
         int32 users = 5 [json_name = "users"];
         int32 percent = 6 [json_name = "percent"];
      }
      repeated RateLimitState rate_limit_state = 1 [json_name = "rate-limit-state"];
   }
   RateLimitStates rate_limit_states = 39 [json_name = "rate-limit-states"];
   message AccessPacketDiscardStatistics {
      message AccessPacketDiscardStatistic {
         string slot_id = 1 [json_name = "slot-id"];
         string interface_name = 2 [json_name = "interface-name"];
         enum DiscardType {
            INVALID_ENUM_VALUE_DiscardType = 0;
            DiscardType_MACX_SPOOFING = 1;
            DiscardType_URPF = 2;
         };
         DiscardType discard_type = 3 [json_name = "discard-type"];
         uint32 pppoe_ipv4_packets_high = 4 [json_name = "pppoe-ipv4-packets-high"];
         uint32 pppoe_ipv4_packets_low = 5 [json_name = "pppoe-ipv4-packets-low"];
         uint32 pppoe_ipv6_packets_high = 6 [json_name = "pppoe-ipv6-packets-high"];
         uint32 pppoe_ipv6_packets_low = 7 [json_name = "pppoe-ipv6-packets-low"];
         uint32 ipoe_ipv4_packets_high = 8 [json_name = "ipoe-ipv4-packets-high"];
         uint32 ipoe_ipv4_packets_low = 9 [json_name = "ipoe-ipv4-packets-low"];
         uint32 ipoe_ipv6_packets_high = 10 [json_name = "ipoe-ipv6-packets-high"];
         uint32 ipoe_ipv6_packets_low = 11 [json_name = "ipoe-ipv6-packets-low"];
      }
      repeated AccessPacketDiscardStatistic access_packet_discard_statistic = 1 [json_name = "access-packet-discard-statistic"];
   }
   AccessPacketDiscardStatistics access_packet_discard_statistics = 40 [json_name = "access-packet-discard-statistics"];
   message DomainStatistics {
      message DomainStatistic {
         string domain_name = 1 [json_name = "domain-name"];
         int32 accessed_number = 2 [json_name = "accessed-number"];
         int32 online_number = 3 [json_name = "online-number"];
         int32 online_ppp_user = 4 [json_name = "online-ppp-user"];
         uint64 flow_down_byte = 5 [json_name = "flow-down-byte"];
         uint64 flow_down_packet = 6 [json_name = "flow-down-packet"];
         uint64 flow_up_byte = 7 [json_name = "flow-up-byte"];
         uint64 flow_up_packet = 8 [json_name = "flow-up-packet"];
         int32 ip_total_number = 9 [json_name = "ip-total-number"];
         int32 ip_used_number = 10 [json_name = "ip-used-number"];
         int32 ip_conflict_number = 11 [json_name = "ip-conflict-number"];
         int32 ip_exclude_number = 12 [json_name = "ip-exclude-number"];
         int32 ip_idle_number = 13 [json_name = "ip-idle-number"];
         string ip_used_percent = 14 [json_name = "ip-used-percent"];
         int32 pppoe_user_number = 15 [json_name = "pppoe-user-number"];
         uint32 authen_request_number = 16 [json_name = "authen-request-number"];
         uint32 authen_accept_number = 17 [json_name = "authen-accept-number"];
         uint32 authen_reject_number = 18 [json_name = "authen-reject-number"];
         uint32 acct_request_number = 19 [json_name = "acct-request-number"];
         uint32 acct_success_number = 20 [json_name = "acct-success-number"];
         uint32 acct_request_fail_number = 21 [json_name = "acct-request-fail-number"];
         int32 ipv6_address_total_number = 22 [json_name = "ipv6-address-total-number"];
         int32 ipv6_address_used_number = 23 [json_name = "ipv6-address-used-number"];
         int32 ipv6_address_free_number = 24 [json_name = "ipv6-address-free-number"];
         int32 ipv6_address_conflict_number = 25 [json_name = "ipv6-address-conflict-number"];
         int32 ipv6_address_exclude_number = 26 [json_name = "ipv6-address-exclude-number"];
         string ipv6_address_used_percent = 27 [json_name = "ipv6-address-used-percent"];
         int32 ndra_prefix_total_number = 28 [json_name = "ndra-prefix-total-number"];
         int32 ndra_prefix_used_number = 29 [json_name = "ndra-prefix-used-number"];
         int32 ndra_prefix_free_number = 30 [json_name = "ndra-prefix-free-number"];
         int32 ndra_prefix_conflict_number = 31 [json_name = "ndra-prefix-conflict-number"];
         int32 ndra_prefix_exclude_number = 32 [json_name = "ndra-prefix-exclude-number"];
         string ndra_prefix_used_percent = 33 [json_name = "ndra-prefix-used-percent"];
         int32 pd_prefix_total_number = 34 [json_name = "pd-prefix-total-number"];
         int32 pd_prefix_used_number = 35 [json_name = "pd-prefix-used-number"];
         int32 pd_prefix_free_number = 36 [json_name = "pd-prefix-free-number"];
         int32 pd_prefix_conflict_number = 37 [json_name = "pd-prefix-conflict-number"];
         int32 pd_prefix_exclude_number = 38 [json_name = "pd-prefix-exclude-number"];
         string pd_prefix_used_percent = 39 [json_name = "pd-prefix-used-percent"];
         uint64 ipv6_flow_down_byte = 40 [json_name = "ipv6-flow-down-byte"];
         uint64 ipv6_flow_down_packet = 41 [json_name = "ipv6-flow-down-packet"];
         uint64 ipv6_flow_up_byte = 42 [json_name = "ipv6-flow-up-byte"];
         uint64 ipv6_flow_up_packet = 43 [json_name = "ipv6-flow-up-packet"];
         enum Ipv4UsageWarning {
            Ipv4UsageWarning_NORMAL = 0;
            Ipv4UsageWarning_UP = 1;
            Ipv4UsageWarning_LOWER = 2;
         };
         Ipv4UsageWarning ipv4_usage_warning = 44 [json_name = "ipv4-usage-warning"];
         enum Ipv6UsageWarning {
            Ipv6UsageWarning_NORMAL = 0;
            Ipv6UsageWarning_UP = 1;
            Ipv6UsageWarning_LOWER = 2;
         };
         Ipv6UsageWarning ipv6_usage_warning = 45 [json_name = "ipv6-usage-warning"];
         int32 ipv4_usage_peak = 46 [json_name = "ipv4-usage-peak"];
         string ipv4_usage_peak_time = 47 [json_name = "ipv4-usage-peak-time"];
         int32 ipv6_usage_peak = 48 [json_name = "ipv6-usage-peak"];
         string ipv6_usage_peak_time = 49 [json_name = "ipv6-usage-peak-time"];
         enum NdUsageWarning {
            NdUsageWarning_NORMAL = 0;
            NdUsageWarning_UP = 1;
            NdUsageWarning_LOWER = 2;
         };
         NdUsageWarning nd_usage_warning = 50 [json_name = "nd-usage-warning"];
         int32 nd_usage_peak = 51 [json_name = "nd-usage-peak"];
         string nd_usage_peak_time = 52 [json_name = "nd-usage-peak-time"];
         enum PdUsageWarning {
            PdUsageWarning_NORMAL = 0;
            PdUsageWarning_UP = 1;
            PdUsageWarning_LOWER = 2;
         };
         PdUsageWarning pd_usage_warning = 53 [json_name = "pd-usage-warning"];
         int32 pd_usage_peak = 54 [json_name = "pd-usage-peak"];
         string pd_usage_peak_time = 55 [json_name = "pd-usage-peak-time"];
      }
      repeated DomainStatistic domain_statistic = 1 [json_name = "domain-statistic"];
   }
   DomainStatistics domain_statistics = 41 [json_name = "domain-statistics"];
   message VasUserStatistics {
      message VasUserStatistic {
         enum ServiceType {
            ServiceType_BOD = 0;
            ServiceType_DAA = 1;
            ServiceType_EDSG = 2;
         };
         ServiceType service_type = 1 [json_name = "service-type"];
         uint32 normal_users = 2 [json_name = "normal-users"];
         uint32 rui_local_users = 3 [json_name = "rui-local-users"];
         uint32 rui_remote_users = 4 [json_name = "rui-remote-users"];
         uint32 total_users = 5 [json_name = "total-users"];
         message DetailStates {
            message DetailState {
               uint32 user_id = 1 [json_name = "user-id"];
               string user_name = 2 [json_name = "user-name"];
               string interface_name = 3 [json_name = "interface-name"];
               string ip_address = 4 [json_name = "ip-address"];
               string mac = 5 [json_name = "mac"];
               uint32 pe_vlan_start_id = 6 [json_name = "pe-vlan-start-id"];
               uint32 ce_vlan_start_id = 7 [json_name = "ce-vlan-start-id"];
               string ipv6_address = 8 [json_name = "ipv6-address"];
               string access_type = 9 [json_name = "access-type"];
            }
            repeated DetailState detail_state = 1 [json_name = "detail-state"];
         }
         DetailStates detail_states = 6 [json_name = "detail-states"];
      }
      repeated VasUserStatistic vas_user_statistic = 1 [json_name = "vas-user-statistic"];
   }
   VasUserStatistics vas_user_statistics = 42 [json_name = "vas-user-statistics"];
   message PevlanFlowStatistics {
      message PevlanFlowStatistic {
         int32 pevlan = 1 [json_name = "pevlan"];
         uint64 input_packet = 2 [json_name = "input-packet"];
         uint64 input_byte = 3 [json_name = "input-byte"];
         uint64 output_packet = 4 [json_name = "output-packet"];
         uint64 output_byte = 5 [json_name = "output-byte"];
         uint64 ipv4_input_packet = 6 [json_name = "ipv4-input-packet"];
         uint64 ipv4_input_byte = 7 [json_name = "ipv4-input-byte"];
         uint64 ipv4_output_packet = 8 [json_name = "ipv4-output-packet"];
         uint64 ipv4_output_byte = 9 [json_name = "ipv4-output-byte"];
         uint64 ipv6_input_packet = 10 [json_name = "ipv6-input-packet"];
         uint64 ipv6_input_byte = 11 [json_name = "ipv6-input-byte"];
         uint64 ipv6_output_packet = 12 [json_name = "ipv6-output-packet"];
         uint64 ipv6_output_byte = 13 [json_name = "ipv6-output-byte"];
      }
      repeated PevlanFlowStatistic pevlan_flow_statistic = 1 [json_name = "pevlan-flow-statistic"];
   }
   PevlanFlowStatistics pevlan_flow_statistics = 43 [json_name = "pevlan-flow-statistics"];
   message CevlanFlowStatistics {
      message CevlanFlowStatistic {
         int32 cevlan = 1 [json_name = "cevlan"];
         uint64 input_packet = 2 [json_name = "input-packet"];
         uint64 input_byte = 3 [json_name = "input-byte"];
         uint64 output_packet = 4 [json_name = "output-packet"];
         uint64 output_byte = 5 [json_name = "output-byte"];
         uint64 ipv4_input_packet = 6 [json_name = "ipv4-input-packet"];
         uint64 ipv4_input_byte = 7 [json_name = "ipv4-input-byte"];
         uint64 ipv4_output_packet = 8 [json_name = "ipv4-output-packet"];
         uint64 ipv4_output_byte = 9 [json_name = "ipv4-output-byte"];
         uint64 ipv6_input_packet = 10 [json_name = "ipv6-input-packet"];
         uint64 ipv6_input_byte = 11 [json_name = "ipv6-input-byte"];
         uint64 ipv6_output_packet = 12 [json_name = "ipv6-output-packet"];
         uint64 ipv6_output_byte = 13 [json_name = "ipv6-output-byte"];
      }
      repeated CevlanFlowStatistic cevlan_flow_statistic = 1 [json_name = "cevlan-flow-statistic"];
   }
   CevlanFlowStatistics cevlan_flow_statistics = 44 [json_name = "cevlan-flow-statistics"];
   message WebModuleStatistics {
      message WebModuleStatistic {
         string ip_address = 1 [json_name = "ip-address"];
         string vpn_name = 2 [json_name = "vpn-name"];
         bool slave_board = 3 [json_name = "slave-board"];
         uint32 challenge_request_accept_server = 4 [json_name = "challenge-request-accept-server"];
         uint32 challenge_request_drop_server = 5 [json_name = "challenge-request-drop-server"];
         uint32 auth_request_accept_server = 6 [json_name = "auth-request-accept-server"];
         uint32 auth_request_drop_server = 7 [json_name = "auth-request-drop-server"];
         uint32 auth_ack_affirm_accept_server = 8 [json_name = "auth-ack-affirm-accept-server"];
         uint32 auth_ack_affirm_drop_server = 9 [json_name = "auth-ack-affirm-drop-server"];
         uint32 logout_request_accept_server = 10 [json_name = "logout-request-accept-server"];
         uint32 logout_request_drop_server = 11 [json_name = "logout-request-drop-server"];
         uint32 info_request_accept_server = 12 [json_name = "info-request-accept-server"];
         uint32 info_request_drop_server = 13 [json_name = "info-request-drop-server"];
         uint32 user_discovery_accept_server = 14 [json_name = "user-discovery-accept-server"];
         uint32 user_discovery_drop_server = 15 [json_name = "user-discovery-drop-server"];
         uint32 logout_ack_accept_server = 16 [json_name = "logout-ack-accept-server"];
         uint32 logout_ack_drop_server = 17 [json_name = "logout-ack-drop-server"];
         uint32 user_ip_change_ack_accept_server = 18 [json_name = "user-ip-change-ack-accept-server"];
         uint32 user_ip_change_ack_drop_server = 19 [json_name = "user-ip-change-ack-drop-server"];
         uint32 status_notify_accept_server = 20 [json_name = "status-notify-accept-server"];
         uint32 status_notify_drop_server = 21 [json_name = "status-notify-drop-server"];
         uint32 version_error_server = 22 [json_name = "version-error-server"];
         uint32 authenticator_error_server = 23 [json_name = "authenticator-error-server"];
         uint32 drop_packet_total_server = 24 [json_name = "drop-packet-total-server"];
         uint32 challenge_request_accept_rui_peer = 25 [json_name = "challenge-request-accept-rui-peer"];
         uint32 challenge_request_drop_rui_peer = 26 [json_name = "challenge-request-drop-rui-peer"];
         uint32 auth_request_accept_rui_peer = 27 [json_name = "auth-request-accept-rui-peer"];
         uint32 auth_request_drop_rui_peer = 28 [json_name = "auth-request-drop-rui-peer"];
         uint32 auth_ack_affirm_accept_rui_peer = 29 [json_name = "auth-ack-affirm-accept-rui-peer"];
         uint32 auth_ack_affirm_drop_rui_peer = 30 [json_name = "auth-ack-affirm-drop-rui-peer"];
         uint32 logout_request_accept_rui_peer = 31 [json_name = "logout-request-accept-rui-peer"];
         uint32 logout_request_drop_rui_peer = 32 [json_name = "logout-request-drop-rui-peer"];
         uint32 info_request_accept_rui_peer = 33 [json_name = "info-request-accept-rui-peer"];
         uint32 info_request_drop_rui_peer = 34 [json_name = "info-request-drop-rui-peer"];
         uint32 user_discovery_accept_rui_peer = 35 [json_name = "user-discovery-accept-rui-peer"];
         uint32 user_discovery_drop_rui_peer = 36 [json_name = "user-discovery-drop-rui-peer"];
         uint32 logout_ack_accept_rui_peer = 37 [json_name = "logout-ack-accept-rui-peer"];
         uint32 logout_ack_drop_rui_peer = 38 [json_name = "logout-ack-drop-rui-peer"];
         uint32 user_ip_change_ack_accept_rui_peer = 39 [json_name = "user-ip-change-ack-accept-rui-peer"];
         uint32 user_ip_change_ack_drop_rui_peer = 40 [json_name = "user-ip-change-ack-drop-rui-peer"];
         uint32 status_notify_accept_rui_peer = 41 [json_name = "status-notify-accept-rui-peer"];
         uint32 status_notify_drop_rui_peer = 42 [json_name = "status-notify-drop-rui-peer"];
         uint32 version_error_rui_peer = 43 [json_name = "version-error-rui-peer"];
         uint32 authenticator_error_rui_peer = 44 [json_name = "authenticator-error-rui-peer"];
         uint32 drop_packet_total_rui_peer = 45 [json_name = "drop-packet-total-rui-peer"];
         uint32 drop_packets_too_fast = 46 [json_name = "drop-packets-too-fast"];
         uint32 drop_packets_cpu_limit = 47 [json_name = "drop-packets-cpu-limit"];
         uint32 query_base_on_mac_address = 48 [json_name = "query-base-on-mac-address"];
         uint32 query_base_on_ip_address = 49 [json_name = "query-base-on-ip-address"];
         uint32 query_base_on_user_name = 50 [json_name = "query-base-on-user-name"];
         uint32 query_base_onuser_account_id = 51 [json_name = "query-base-onuser-account-id"];
         uint32 sent_challenge_ack_success = 52 [json_name = "sent-challenge-ack-success"];
         uint32 sent_challenge_ack_fail = 53 [json_name = "sent-challenge-ack-fail"];
         uint32 sent_auth_ack_success = 54 [json_name = "sent-auth-ack-success"];
         uint32 sent_auth_ack_fail = 55 [json_name = "sent-auth-ack-fail"];
         uint32 sent_logout_ack_success = 56 [json_name = "sent-logout-ack-success"];
         uint32 sent_logout_ack_fail = 57 [json_name = "sent-logout-ack-fail"];
         uint32 sent_logout_notify_success = 58 [json_name = "sent-logout-notify-success"];
         uint32 sent_logout_notify_fail = 59 [json_name = "sent-logout-notify-fail"];
         uint32 sent_information_ack_success = 60 [json_name = "sent-information-ack-success"];
         uint32 sent_information_ack_fail = 61 [json_name = "sent-information-ack-fail"];
         uint32 query_in_auth_domain = 62 [json_name = "query-in-auth-domain"];
         uint32 query_in_preauth_domain = 63 [json_name = "query-in-preauth-domain"];
         uint32 query_for_excluded_users = 64 [json_name = "query-for-excluded-users"];
         uint32 query_for_offline_users = 65 [json_name = "query-for-offline-users"];
         uint32 sent_user_ip_change_success = 66 [json_name = "sent-user-ip-change-success"];
         uint32 sent_user_ip_change_fail = 67 [json_name = "sent-user-ip-change-fail"];
         uint32 sent_status_notify_ack_success = 68 [json_name = "sent-status-notify-ack-success"];
         uint32 sent_status_notify_ack_fail = 69 [json_name = "sent-status-notify-ack-fail"];
      }
      repeated WebModuleStatistic web_module_statistic = 1 [json_name = "web-module-statistic"];
   }
   WebModuleStatistics web_module_statistics = 45 [json_name = "web-module-statistics"];
   message WebStatistics {
      string begin_time = 1 [json_name = "begin-time"];
      uint64 packet_authenticator_error = 2 [json_name = "packet-authenticator-error"];
      uint64 packet_access_request_error = 3 [json_name = "packet-access-request-error"];
      uint64 packet_logout_request_error = 4 [json_name = "packet-logout-request-error"];
      uint64 packet_inquiry_request_error = 5 [json_name = "packet-inquiry-request-error"];
      uint64 packet_login_confirm_error = 6 [json_name = "packet-login-confirm-error"];
      uint64 packet_access_request_recv = 7 [json_name = "packet-access-request-recv"];
      uint64 packet_login_request_recv = 8 [json_name = "packet-login-request-recv"];
      uint64 packet_logout_request_recv = 9 [json_name = "packet-logout-request-recv"];
      uint64 packet_inquiry_request_recv = 10 [json_name = "packet-inquiry-request-recv"];
      uint64 packet_login_confirm_recv = 11 [json_name = "packet-login-confirm-recv"];
      uint64 packet_access_ack_failure = 12 [json_name = "packet-access-ack-failure"];
      uint64 packet_login_ack_failure = 13 [json_name = "packet-login-ack-failure"];
      uint64 packet_logout_ack_failure = 14 [json_name = "packet-logout-ack-failure"];
      uint64 packet_inquiry_ack_failure = 15 [json_name = "packet-inquiry-ack-failure"];
      uint64 packet_access_ack_sent = 16 [json_name = "packet-access-ack-sent"];
      uint64 packet_login_ack_sent = 17 [json_name = "packet-login-ack-sent"];
      uint64 packet_logout_ack_sent = 18 [json_name = "packet-logout-ack-sent"];
      uint64 packet_inquiry_ack_sent = 19 [json_name = "packet-inquiry-ack-sent"];
   }
   WebStatistics web_statistics = 46 [json_name = "web-statistics"];
   message InterfaceAccessUserStatistics {
      message InterfaceAccessUserStatistic {
         string interface_name = 1 [json_name = "interface-name"];
         enum UserType {
            INVALID_ENUM_VALUE_UserType = 0;
            UserType_PPPOE = 1;
            UserType_PPPOA = 2;
            UserType_IPOE = 3;
            UserType_LNS = 4;
            UserType_LAC = 5;
            UserType_IPV4 = 6;
            UserType_IPV6 = 7;
            UserType_DUALX_STACK = 8;
            UserType_ALL = 9;
         };
         UserType user_type = 2 [json_name = "user-type"];
         int32 user_number = 3 [json_name = "user-number"];
      }
      repeated InterfaceAccessUserStatistic interface_access_user_statistic = 1 [json_name = "interface-access-user-statistic"];
   }
   InterfaceAccessUserStatistics interface_access_user_statistics = 47 [json_name = "interface-access-user-statistics"];
   message WebAuthServers {
      message WebAuthServer {
         string server_ip_address = 1 [json_name = "server-ip-address"];
         string vpn_name = 2 [json_name = "vpn-name"];
         int32 server_user_number = 3 [json_name = "server-user-number"];
      }
      repeated WebAuthServer web_auth_server = 1 [json_name = "web-auth-server"];
   }
   WebAuthServers web_auth_servers = 48 [json_name = "web-auth-servers"];
   message SlotCardConnectStatistics {
      message SlotCardConnectStatistic {
         string slot_id = 1 [json_name = "slot-id"];
         int32 card_id = 2 [json_name = "card-id"];
         int32 online_number = 3 [json_name = "online-number"];
         int32 ipv4_online_number = 4 [json_name = "ipv4-online-number"];
         int32 ipv6_online_number = 5 [json_name = "ipv6-online-number"];
         int32 dual_stack_online_number = 6 [json_name = "dual-stack-online-number"];
         int32 no_authentication_online_number = 7 [json_name = "no-authentication-online-number"];
         int32 ppp_authentication_number = 8 [json_name = "ppp-authentication-number"];
         int32 access_8021_xauth_number = 9 [json_name = "access-8021-xauth-number"];
         int32 web_authentication_number = 10 [json_name = "web-authentication-number"];
         int32 bind_authentication_number = 11 [json_name = "bind-authentication-number"];
         int32 fast_authentication_number = 12 [json_name = "fast-authentication-number"];
         int32 wlan_authentication_number = 13 [json_name = "wlan-authentication-number"];
         int32 admin_authentication_number = 14 [json_name = "admin-authentication-number"];
         int32 tunnel_authentication_number = 15 [json_name = "tunnel-authentication-number"];
         int32 mip_authentication_number = 16 [json_name = "mip-authentication-number"];
      }
      repeated SlotCardConnectStatistic slot_card_connect_statistic = 1 [json_name = "slot-card-connect-statistic"];
   }
   SlotCardConnectStatistics slot_card_connect_statistics = 49 [json_name = "slot-card-connect-statistics"];
   message UpBackup {
      bool realtime_accounting_enable = 1 [json_name = "realtime-accounting-enable"];
   }
   UpBackup up_backup = 50 [json_name = "up-backup"];
   message KpiStatistics {
      bool user_statistics_enable = 1 [json_name = "user-statistics-enable"];
   }
   KpiStatistics kpi_statistics = 51 [json_name = "kpi-statistics"];
   message AccountingCopyGroups {
      message AccountingCopyGroup {
         string name = 1 [json_name = "name"];
         message AccountingCopyServers {
            message AccountingCopyServer {
               string radius_server_group_name = 1 [json_name = "radius-server-group-name"];
               uint32 accounting_interval = 2 [json_name = "accounting-interval"];
            }
            repeated AccountingCopyServer accounting_copy_server = 1 [json_name = "accounting-copy-server"];
         }
         AccountingCopyServers accounting_copy_servers = 2 [json_name = "accounting-copy-servers"];
      }
      repeated AccountingCopyGroup accounting_copy_group = 1 [json_name = "accounting-copy-group"];
   }
   AccountingCopyGroups accounting_copy_groups = 52 [json_name = "accounting-copy-groups"];
   message AccessUserAccountingCopyInfos {
      message AccessUserAccountingCopyInfo {
         uint32 access_index = 1 [json_name = "access-index"];
         string accounting_copy_group_name = 2 [json_name = "accounting-copy-group-name"];
         message AccessUserMultServerInfos {
            message AccessUserMultServerInfo {
               string radius_server_group_name = 1 [json_name = "radius-server-group-name"];
               uint32 accounting_interval = 2 [json_name = "accounting-interval"];
            }
            repeated AccessUserMultServerInfo access_user_mult_server_info = 1 [json_name = "access-user-mult-server-info"];
         }
         AccessUserMultServerInfos access_user_mult_server_infos = 3 [json_name = "access-user-mult-server-infos"];
      }
      repeated AccessUserAccountingCopyInfo access_user_accounting_copy_info = 1 [json_name = "access-user-accounting-copy-info"];
   }
   AccessUserAccountingCopyInfos access_user_accounting_copy_infos = 53 [json_name = "access-user-accounting-copy-infos"];
   message AccessOnlineNumberByFilters {
      message AccessOnlineNumberByFilter {
         uint32 up_id = 1 [json_name = "up-id"];
         uint32 total_users = 2 [json_name = "total-users"];
         uint32 ipv4_users = 3 [json_name = "ipv4-users"];
         uint32 ipv6_users = 4 [json_name = "ipv6-users"];
         uint32 dual_users = 5 [json_name = "dual-users"];
      }
      repeated AccessOnlineNumberByFilter access_online_number_by_filter = 1 [json_name = "access-online-number-by-filter"];
   }
   AccessOnlineNumberByFilters access_online_number_by_filters = 54 [json_name = "access-online-number-by-filters"];
   message AccessOnlineNumberUpmngInstances {
      message AccessOnlineNumberUpmngInstance {
         string upmng_instance = 1 [json_name = "upmng-instance"];
         uint32 total_users = 2 [json_name = "total-users"];
         uint32 ipv4_users = 3 [json_name = "ipv4-users"];
         uint32 ipv6_users = 4 [json_name = "ipv6-users"];
         uint32 dual_users = 5 [json_name = "dual-users"];
         message IndependentUps {
            message IndependentUp {
               uint32 up_id = 1 [json_name = "up-id"];
               uint32 total_users = 2 [json_name = "total-users"];
               uint32 ipv4_users = 3 [json_name = "ipv4-users"];
               uint32 ipv6_users = 4 [json_name = "ipv6-users"];
               uint32 dual_users = 5 [json_name = "dual-users"];
            }
            repeated IndependentUp independent_up = 1 [json_name = "independent-up"];
         }
         IndependentUps independent_ups = 6 [json_name = "independent-ups"];
         message UpBackupGroups {
            message UpBackupGroup {
               string group_name = 1 [json_name = "group-name"];
               uint32 total_users = 2 [json_name = "total-users"];
               uint32 ipv4_users = 3 [json_name = "ipv4-users"];
               uint32 ipv6_users = 4 [json_name = "ipv6-users"];
               uint32 dual_users = 5 [json_name = "dual-users"];
               message BackupGroupUpIds {
                  message BackupGroupUpId {
                     uint32 up_id = 1 [json_name = "up-id"];
                     uint32 total_users = 2 [json_name = "total-users"];
                     uint32 ipv4_users = 3 [json_name = "ipv4-users"];
                     uint32 ipv6_users = 4 [json_name = "ipv6-users"];
                     uint32 dual_users = 5 [json_name = "dual-users"];
                  }
                  repeated BackupGroupUpId backup_group_up_id = 1 [json_name = "backup-group-up-id"];
               }
               BackupGroupUpIds backup_group_up_ids = 6 [json_name = "backup-group-up-ids"];
            }
            repeated UpBackupGroup up_backup_group = 1 [json_name = "up-backup-group"];
         }
         UpBackupGroups up_backup_groups = 7 [json_name = "up-backup-groups"];
      }
      repeated AccessOnlineNumberUpmngInstance access_online_number_upmng_instance = 1 [json_name = "access-online-number-upmng-instance"];
   }
   AccessOnlineNumberUpmngInstances access_online_number_upmng_instances = 55 [json_name = "access-online-number-upmng-instances"];
   message DefaultUserNameTemplates {
      message DefaultUserNameTemplate {
         string template_name = 1 [json_name = "template-name"];
         message IncludeTypes {
            message IncludeType {
               enum Type {
                  INVALID_ENUM_VALUE_Type = 0;
                  Type_SYSNAME = 1;
               };
               Type type = 1 [json_name = "type"];
               string seperator = 2 [json_name = "seperator"];
            }
            repeated IncludeType include_type = 1 [json_name = "include-type"];
         }
         IncludeTypes include_types = 2 [json_name = "include-types"];
      }
      repeated DefaultUserNameTemplate default_user_name_template = 1 [json_name = "default-user-name-template"];
   }
   DefaultUserNameTemplates default_user_name_templates = 56 [json_name = "default-user-name-templates"];
   message UserlogWithUsername {
      bool enable = 1 [json_name = "enable"];
   }
   UserlogWithUsername userlog_with_username = 57 [json_name = "userlog-with-username"];
   message AccessSpeedCu {
      message AdjustmentSystemState {
         bool check_enable = 1 [json_name = "check-enable"];
         uint32 interval = 2 [json_name = "interval"];
         uint32 delay_count = 3 [json_name = "delay-count"];
         uint32 queue_deep_alarm_threshold = 4 [json_name = "queue-deep-alarm-threshold"];
         uint32 queue_deep_resume_threshold = 5 [json_name = "queue-deep-resume-threshold"];
      }
      AdjustmentSystemState adjustment_system_state = 1 [json_name = "adjustment-system-state"];
      message AdjustmentUserType {
         bool dhcp_enable = 1 [json_name = "dhcp-enable"];
         bool pppoe_enable = 2 [json_name = "pppoe-enable"];
         bool ipv4_trigger_enable = 3 [json_name = "ipv4-trigger-enable"];
         bool ipv6_trigger_enable = 4 [json_name = "ipv6-trigger-enable"];
         bool l2tp_enable = 5 [json_name = "l2tp-enable"];
         bool dhcpv6_enable = 6 [json_name = "dhcpv6-enable"];
      }
      AdjustmentUserType adjustment_user_type = 2 [json_name = "adjustment-user-type"];
   }
   AccessSpeedCu access_speed_cu = 58 [json_name = "access-speed-cu"];
   message AccessRadiusAttributeInfo {
      message FramedRoutes {
         message FramedRoute {
            uint32 user_id = 1 [json_name = "user-id"];
            uint32 route_index = 2 [json_name = "route-index"];
            string prefix = 3 [json_name = "prefix"];
            uint32 prefix_length = 4 [json_name = "prefix-length"];
            string next_hop = 5 [json_name = "next-hop"];
            uint32 cost = 6 [json_name = "cost"];
         }
         repeated FramedRoute framed_route = 1 [json_name = "framed-route"];
      }
      FramedRoutes framed_routes = 1 [json_name = "framed-routes"];
      message Ipv6FramedRoutes {
         message Ipv6FramedRoute {
            uint32 user_id = 1 [json_name = "user-id"];
            uint32 route_index = 2 [json_name = "route-index"];
            string prefix = 3 [json_name = "prefix"];
            uint32 prefix_length = 4 [json_name = "prefix-length"];
            string next_hop = 5 [json_name = "next-hop"];
            uint32 cost = 6 [json_name = "cost"];
         }
         repeated Ipv6FramedRoute ipv6_framed_route = 1 [json_name = "ipv6-framed-route"];
      }
      Ipv6FramedRoutes ipv6_framed_routes = 2 [json_name = "ipv6-framed-routes"];
   }
   AccessRadiusAttributeInfo access_radius_attribute_info = 59 [json_name = "access-radius-attribute-info"];
   message GlobalDefaultUserName {
      message IncludeTypes {
         message IncludeType {
            enum Type {
               INVALID_ENUM_VALUE_Type = 0;
               Type_SYSNAME = 1;
               Type_GATEWAYX_ADDRESS = 2;
               Type_IPX_ADDRESS = 3;
               Type_MACX_ADDRESS = 4;
               Type_OPTION82X_ORX_ACCESSX_LINEX_ID = 5;
               Type_OPTION60X_ORX_VENDORX_CLASS = 6;
               Type_OPTION61X_ORX_CLIENTX_ID = 7;
               Type_OPTION12 = 8;
               Type_PEVLAN = 9;
               Type_CEVLAN = 10;
               Type_PORT = 11;
               Type_SLOT = 12;
               Type_SUBX_SLOT = 13;
               Type_UPX_ID = 14;
            };
            Type type = 1 [json_name = "type"];
            string user_seperator = 2 [json_name = "user-seperator"];
            message Gateway {
               string seperator = 1 [json_name = "seperator"];
            }
            Gateway gateway = 3 [json_name = "gateway"];
            message Ip {
               string seperator = 1 [json_name = "seperator"];
            }
            Ip ip = 4 [json_name = "ip"];
            message Mac {
               enum SeperatorType {
                  INVALID_ENUM_VALUE_SeperatorType = 0;
                  SeperatorType_SEPERATOR = 1;
                  SeperatorType_NOX_SEPERATOR = 2;
               };
               SeperatorType seperator_type = 1 [json_name = "seperator-type"];
               string mac_seperator = 2 [json_name = "mac-seperator"];
            }
            Mac mac = 5 [json_name = "mac"];
            message Option61OrClientIdParameter {
               enum Option61OrClientIdType {
                  INVALID_ENUM_VALUE_Option61OrClientIdType = 0;
                  Option61OrClientIdType_OPTION61 = 1;
                  Option61OrClientIdType_CLIENTX_ID = 2;
               };
               Option61OrClientIdType option61_or_client_id_type = 1 [json_name = "option61-or-client-id-type"];
            }
            Option61OrClientIdParameter option61_or_client_id_parameter = 6 [json_name = "option61-or-client-id-parameter"];
            message Option60OrVendorClassParameter {
               enum Option60OrVendorClassType {
                  INVALID_ENUM_VALUE_Option60OrVendorClassType = 0;
                  Option60OrVendorClassType_OPTION60 = 1;
                  Option60OrVendorClassType_VENDORX_CLASS = 2;
               };
               Option60OrVendorClassType option60_or_vendor_class_type = 1 [json_name = "option60-or-vendor-class-type"];
               message OptionType_Cn {
                  bool enable = 1 [json_name = "enable"];
               }
               message OptionType_Option {
                  uint32 offset_value = 1 [json_name = "offset-value"];
                  message SubType_Length {
                     uint32 vendor_class_length = 1 [json_name = "vendor-class-length"];
                  }
                  message SubType_SubOption {
                     uint32 vendor_class_sub_option = 1 [json_name = "vendor-class-sub-option"];
                     uint32 vendor_class_sub_offset = 2 [json_name = "vendor-class-sub-offset"];
                     uint32 vendor_class_sub_length = 3 [json_name = "vendor-class-sub-length"];
                  }
                  oneof SubType {
                     SubType_Length sub_type_length = 2 [json_name = "length"];
                     SubType_SubOption sub_type_sub_option = 3 [json_name = "sub-option"];
                  }
               }
               oneof OptionType {
                  OptionType_Cn option_type_cn = 2 [json_name = "cn"];
                  OptionType_Option option_type_option = 3 [json_name = "option"];
               }
            }
            Option60OrVendorClassParameter option60_or_vendor_class_parameter = 7 [json_name = "option60-or-vendor-class-parameter"];
            message Option82OrAccessLineIdParameter {
               message Option82OrAccessLineIdType_Option82 {
                  uint32 first_sub_option_value = 1 [json_name = "first-sub-option-value"];
                  uint32 first_sub_offset = 2 [json_name = "first-sub-offset"];
                  enum FirstParseMode {
                     INVALID_ENUM_VALUE_FirstParseMode = 0;
                     FirstParseMode_STRING = 1;
                     FirstParseMode_BINARY = 2;
                     FirstParseMode_HEX = 3;
                     FirstParseMode_AUTOX_IDENTIFY = 4;
                  };
                  FirstParseMode first_parse_mode = 3 [json_name = "first-parse-mode"];
                  uint32 first_sub_length = 4 [json_name = "first-sub-length"];
                  uint32 first_sub_binary_length = 5 [json_name = "first-sub-binary-length"];
                  enum FirstHexClass {
                     INVALID_ENUM_VALUE_FirstHexClass = 0;
                     FirstHexClass_CLASS1 = 1;
                     FirstHexClass_CLASS2 = 2;
                     FirstHexClass_CLASS3 = 3;
                  };
                  FirstHexClass first_hex_class = 6 [json_name = "first-hex-class"];
                  string first_sub_user_name_separator = 7 [json_name = "first-sub-user-name-separator"];
                  uint32 second_sub_option_value = 8 [json_name = "second-sub-option-value"];
                  uint32 second_sub_offset = 9 [json_name = "second-sub-offset"];
                  enum SecondParseMode {
                     INVALID_ENUM_VALUE_SecondParseMode = 0;
                     SecondParseMode_STRING = 1;
                     SecondParseMode_BINARY = 2;
                     SecondParseMode_HEX = 3;
                     SecondParseMode_AUTOX_IDENTIFY = 4;
                  };
                  SecondParseMode second_parse_mode = 10 [json_name = "second-parse-mode"];
                  uint32 second_sub_length = 11 [json_name = "second-sub-length"];
                  uint32 second_sub_binary_length = 12 [json_name = "second-sub-binary-length"];
                  enum SecondHexClass {
                     INVALID_ENUM_VALUE_SecondHexClass = 0;
                     SecondHexClass_CLASS1 = 1;
                     SecondHexClass_CLASS2 = 2;
                     SecondHexClass_CLASS3 = 3;
                  };
                  SecondHexClass second_hex_class = 13 [json_name = "second-hex-class"];
                  string second_sub_user_name_separator = 14 [json_name = "second-sub-user-name-separator"];
                  uint32 third_sub_option_value = 15 [json_name = "third-sub-option-value"];
                  uint32 third_sub_offset = 16 [json_name = "third-sub-offset"];
                  enum ThirdParseMode {
                     INVALID_ENUM_VALUE_ThirdParseMode = 0;
                     ThirdParseMode_STRING = 1;
                     ThirdParseMode_BINARY = 2;
                     ThirdParseMode_HEX = 3;
                     ThirdParseMode_AUTOX_IDENTIFY = 4;
                  };
                  ThirdParseMode third_parse_mode = 17 [json_name = "third-parse-mode"];
                  uint32 third_sub_length = 18 [json_name = "third-sub-length"];
                  uint32 third_sub_binary_length = 19 [json_name = "third-sub-binary-length"];
                  enum ThirdHexClass {
                     INVALID_ENUM_VALUE_ThirdHexClass = 0;
                     ThirdHexClass_CLASS1 = 1;
                     ThirdHexClass_CLASS2 = 2;
                     ThirdHexClass_CLASS3 = 3;
                  };
                  ThirdHexClass third_hex_class = 20 [json_name = "third-hex-class"];
                  string third_sub_user_name_separator = 21 [json_name = "third-sub-user-name-separator"];
                  uint32 fourth_sub_option_value = 22 [json_name = "fourth-sub-option-value"];
                  uint32 fourth_sub_offset = 23 [json_name = "fourth-sub-offset"];
                  enum FourthParseMode {
                     INVALID_ENUM_VALUE_FourthParseMode = 0;
                     FourthParseMode_STRING = 1;
                     FourthParseMode_BINARY = 2;
                     FourthParseMode_HEX = 3;
                     FourthParseMode_AUTOX_IDENTIFY = 4;
                  };
                  FourthParseMode fourth_parse_mode = 24 [json_name = "fourth-parse-mode"];
                  uint32 fourth_sub_length = 25 [json_name = "fourth-sub-length"];
                  uint32 fourth_sub_binary_length = 26 [json_name = "fourth-sub-binary-length"];
                  enum FourthHexClass {
                     INVALID_ENUM_VALUE_FourthHexClass = 0;
                     FourthHexClass_CLASS1 = 1;
                     FourthHexClass_CLASS2 = 2;
                     FourthHexClass_CLASS3 = 3;
                  };
                  FourthHexClass fourth_hex_class = 27 [json_name = "fourth-hex-class"];
                  string fourth_sub_user_name_separator = 28 [json_name = "fourth-sub-user-name-separator"];
               }
               message Option82OrAccessLineIdType_AccessLineId {
                  message AccessLineIdParameters {
                     message AccessLineIdParameter {
                        enum OptionType {
                           OptionType_CIRCUITX_ID = 0;
                           OptionType_REMOTEX_ID = 1;
                        };
                        OptionType option_type = 1 [json_name = "option-type"];
                        uint32 sub_offset = 2 [json_name = "sub-offset"];
                        enum ParseMode {
                           INVALID_ENUM_VALUE_ParseMode = 0;
                           ParseMode_STRING = 1;
                           ParseMode_BINARY = 2;
                           ParseMode_HEX = 3;
                           ParseMode_AUTOX_IDENTIFY = 4;
                        };
                        ParseMode parse_mode = 3 [json_name = "parse-mode"];
                        uint32 sub_length = 4 [json_name = "sub-length"];
                        uint32 sub_binary_length = 5 [json_name = "sub-binary-length"];
                        enum HexClass {
                           INVALID_ENUM_VALUE_HexClass = 0;
                           HexClass_CLASS1 = 1;
                           HexClass_CLASS2 = 2;
                           HexClass_CLASS3 = 3;
                        };
                        HexClass hex_class = 6 [json_name = "hex-class"];
                        string sub_user_name_separator = 7 [json_name = "sub-user-name-separator"];
                     }
                     repeated AccessLineIdParameter access_line_id_parameter = 1 [json_name = "access-line-id-parameter"];
                  }
                  AccessLineIdParameters access_line_id_parameters = 1 [json_name = "access-line-id-parameters"];
               }
               oneof Option82OrAccessLineIdType {
                  Option82OrAccessLineIdType_Option82 option82_or_access_line_id_type_option82 = 1 [json_name = "option82"];
                  Option82OrAccessLineIdType_AccessLineId option82_or_access_line_id_type_access_line_id = 2 [json_name = "access-line-id"];
               }
            }
            Option82OrAccessLineIdParameter option82_or_access_line_id_parameter = 8 [json_name = "option82-or-access-line-id-parameter"];
         }
         repeated IncludeType include_type = 1 [json_name = "include-type"];
      }
      IncludeTypes include_types = 1 [json_name = "include-types"];
   }
   GlobalDefaultUserName global_default_user_name = 60 [json_name = "global-default-user-name"];
   message TemplateDefaultUserNames {
      message TemplateDefaultUserName {
         string template_name = 1 [json_name = "template-name"];
         message IncludeTypes {
            message IncludeType {
               enum Type {
                  INVALID_ENUM_VALUE_Type = 0;
                  Type_SYSNAME = 1;
                  Type_GATEWAYX_ADDRESS = 2;
                  Type_IPX_ADDRESS = 3;
                  Type_MACX_ADDRESS = 4;
                  Type_OPTION82X_ORX_ACCESSX_LINEX_ID = 5;
                  Type_OPTION60X_ORX_VENDORX_CLASS = 6;
                  Type_OPTION61X_ORX_CLIENTX_ID = 7;
                  Type_OPTION12 = 8;
                  Type_PEVLAN = 9;
                  Type_CEVLAN = 10;
                  Type_PORT = 11;
                  Type_SLOT = 12;
                  Type_SUBX_SLOT = 13;
                  Type_UPX_ID = 14;
               };
               Type type = 1 [json_name = "type"];
               string user_seperator = 2 [json_name = "user-seperator"];
               message Gateway {
                  string seperator = 1 [json_name = "seperator"];
               }
               Gateway gateway = 3 [json_name = "gateway"];
               message Ip {
                  string seperator = 1 [json_name = "seperator"];
               }
               Ip ip = 4 [json_name = "ip"];
               message Mac {
                  enum SeperatorType {
                     INVALID_ENUM_VALUE_SeperatorType = 0;
                     SeperatorType_SEPERATOR = 1;
                     SeperatorType_NOX_SEPERATOR = 2;
                  };
                  SeperatorType seperator_type = 1 [json_name = "seperator-type"];
                  string mac_seperator = 2 [json_name = "mac-seperator"];
               }
               Mac mac = 5 [json_name = "mac"];
               message Option61OrClientIdParameter {
                  enum Option61OrClientIdType {
                     INVALID_ENUM_VALUE_Option61OrClientIdType = 0;
                     Option61OrClientIdType_OPTION61 = 1;
                     Option61OrClientIdType_CLIENTX_ID = 2;
                  };
                  Option61OrClientIdType option61_or_client_id_type = 1 [json_name = "option61-or-client-id-type"];
               }
               Option61OrClientIdParameter option61_or_client_id_parameter = 6 [json_name = "option61-or-client-id-parameter"];
               message Option60OrVendorClassParameter {
                  enum Option60OrVendorClassType {
                     INVALID_ENUM_VALUE_Option60OrVendorClassType = 0;
                     Option60OrVendorClassType_OPTION60 = 1;
                     Option60OrVendorClassType_VENDORX_CLASS = 2;
                  };
                  Option60OrVendorClassType option60_or_vendor_class_type = 1 [json_name = "option60-or-vendor-class-type"];
                  message OptionType_Cn {
                     bool enable = 1 [json_name = "enable"];
                  }
                  message OptionType_Option {
                     uint32 offset_value = 1 [json_name = "offset-value"];
                     message SubType_Length {
                        uint32 vendor_class_length = 1 [json_name = "vendor-class-length"];
                     }
                     message SubType_SubOption {
                        uint32 vendor_class_sub_option = 1 [json_name = "vendor-class-sub-option"];
                        uint32 vendor_class_sub_offset = 2 [json_name = "vendor-class-sub-offset"];
                        uint32 vendor_class_sub_length = 3 [json_name = "vendor-class-sub-length"];
                     }
                     oneof SubType {
                        SubType_Length sub_type_length = 2 [json_name = "length"];
                        SubType_SubOption sub_type_sub_option = 3 [json_name = "sub-option"];
                     }
                  }
                  oneof OptionType {
                     OptionType_Cn option_type_cn = 2 [json_name = "cn"];
                     OptionType_Option option_type_option = 3 [json_name = "option"];
                  }
               }
               Option60OrVendorClassParameter option60_or_vendor_class_parameter = 7 [json_name = "option60-or-vendor-class-parameter"];
               message Option82OrAccessLineIdParameter {
                  message Option82OrAccessLineIdType_Option82 {
                     uint32 first_sub_option_value = 1 [json_name = "first-sub-option-value"];
                     uint32 first_sub_offset = 2 [json_name = "first-sub-offset"];
                     enum FirstParseMode {
                        INVALID_ENUM_VALUE_FirstParseMode = 0;
                        FirstParseMode_STRING = 1;
                        FirstParseMode_BINARY = 2;
                        FirstParseMode_HEX = 3;
                        FirstParseMode_AUTOX_IDENTIFY = 4;
                     };
                     FirstParseMode first_parse_mode = 3 [json_name = "first-parse-mode"];
                     uint32 first_sub_length = 4 [json_name = "first-sub-length"];
                     uint32 first_sub_binary_length = 5 [json_name = "first-sub-binary-length"];
                     enum FirstHexClass {
                        INVALID_ENUM_VALUE_FirstHexClass = 0;
                        FirstHexClass_CLASS1 = 1;
                        FirstHexClass_CLASS2 = 2;
                        FirstHexClass_CLASS3 = 3;
                     };
                     FirstHexClass first_hex_class = 6 [json_name = "first-hex-class"];
                     string first_sub_user_name_separator = 7 [json_name = "first-sub-user-name-separator"];
                     uint32 second_sub_option_value = 8 [json_name = "second-sub-option-value"];
                     uint32 second_sub_offset = 9 [json_name = "second-sub-offset"];
                     enum SecondParseMode {
                        INVALID_ENUM_VALUE_SecondParseMode = 0;
                        SecondParseMode_STRING = 1;
                        SecondParseMode_BINARY = 2;
                        SecondParseMode_HEX = 3;
                        SecondParseMode_AUTOX_IDENTIFY = 4;
                     };
                     SecondParseMode second_parse_mode = 10 [json_name = "second-parse-mode"];
                     uint32 second_sub_length = 11 [json_name = "second-sub-length"];
                     uint32 second_sub_binary_length = 12 [json_name = "second-sub-binary-length"];
                     enum SecondHexClass {
                        INVALID_ENUM_VALUE_SecondHexClass = 0;
                        SecondHexClass_CLASS1 = 1;
                        SecondHexClass_CLASS2 = 2;
                        SecondHexClass_CLASS3 = 3;
                     };
                     SecondHexClass second_hex_class = 13 [json_name = "second-hex-class"];
                     string second_sub_user_name_separator = 14 [json_name = "second-sub-user-name-separator"];
                     uint32 third_sub_option_value = 15 [json_name = "third-sub-option-value"];
                     uint32 third_sub_offset = 16 [json_name = "third-sub-offset"];
                     enum ThirdParseMode {
                        INVALID_ENUM_VALUE_ThirdParseMode = 0;
                        ThirdParseMode_STRING = 1;
                        ThirdParseMode_BINARY = 2;
                        ThirdParseMode_HEX = 3;
                        ThirdParseMode_AUTOX_IDENTIFY = 4;
                     };
                     ThirdParseMode third_parse_mode = 17 [json_name = "third-parse-mode"];
                     uint32 third_sub_length = 18 [json_name = "third-sub-length"];
                     uint32 third_sub_binary_length = 19 [json_name = "third-sub-binary-length"];
                     enum ThirdHexClass {
                        INVALID_ENUM_VALUE_ThirdHexClass = 0;
                        ThirdHexClass_CLASS1 = 1;
                        ThirdHexClass_CLASS2 = 2;
                        ThirdHexClass_CLASS3 = 3;
                     };
                     ThirdHexClass third_hex_class = 20 [json_name = "third-hex-class"];
                     string third_sub_user_name_separator = 21 [json_name = "third-sub-user-name-separator"];
                     uint32 fourth_sub_option_value = 22 [json_name = "fourth-sub-option-value"];
                     uint32 fourth_sub_offset = 23 [json_name = "fourth-sub-offset"];
                     enum FourthParseMode {
                        INVALID_ENUM_VALUE_FourthParseMode = 0;
                        FourthParseMode_STRING = 1;
                        FourthParseMode_BINARY = 2;
                        FourthParseMode_HEX = 3;
                        FourthParseMode_AUTOX_IDENTIFY = 4;
                     };
                     FourthParseMode fourth_parse_mode = 24 [json_name = "fourth-parse-mode"];
                     uint32 fourth_sub_length = 25 [json_name = "fourth-sub-length"];
                     uint32 fourth_sub_binary_length = 26 [json_name = "fourth-sub-binary-length"];
                     enum FourthHexClass {
                        INVALID_ENUM_VALUE_FourthHexClass = 0;
                        FourthHexClass_CLASS1 = 1;
                        FourthHexClass_CLASS2 = 2;
                        FourthHexClass_CLASS3 = 3;
                     };
                     FourthHexClass fourth_hex_class = 27 [json_name = "fourth-hex-class"];
                     string fourth_sub_user_name_separator = 28 [json_name = "fourth-sub-user-name-separator"];
                  }
                  message Option82OrAccessLineIdType_AccessLineId {
                     message AccessLineIdParameters {
                        message AccessLineIdParameter {
                           enum OptionType {
                              OptionType_CIRCUITX_ID = 0;
                              OptionType_REMOTEX_ID = 1;
                           };
                           OptionType option_type = 1 [json_name = "option-type"];
                           uint32 sub_offset = 2 [json_name = "sub-offset"];
                           enum ParseMode {
                              INVALID_ENUM_VALUE_ParseMode = 0;
                              ParseMode_STRING = 1;
                              ParseMode_BINARY = 2;
                              ParseMode_HEX = 3;
                              ParseMode_AUTOX_IDENTIFY = 4;
                           };
                           ParseMode parse_mode = 3 [json_name = "parse-mode"];
                           uint32 sub_length = 4 [json_name = "sub-length"];
                           uint32 sub_binary_length = 5 [json_name = "sub-binary-length"];
                           enum HexClass {
                              INVALID_ENUM_VALUE_HexClass = 0;
                              HexClass_CLASS1 = 1;
                              HexClass_CLASS2 = 2;
                              HexClass_CLASS3 = 3;
                           };
                           HexClass hex_class = 6 [json_name = "hex-class"];
                           string sub_user_name_separator = 7 [json_name = "sub-user-name-separator"];
                        }
                        repeated AccessLineIdParameter access_line_id_parameter = 1 [json_name = "access-line-id-parameter"];
                     }
                     AccessLineIdParameters access_line_id_parameters = 1 [json_name = "access-line-id-parameters"];
                  }
                  oneof Option82OrAccessLineIdType {
                     Option82OrAccessLineIdType_Option82 option82_or_access_line_id_type_option82 = 1 [json_name = "option82"];
                     Option82OrAccessLineIdType_AccessLineId option82_or_access_line_id_type_access_line_id = 2 [json_name = "access-line-id"];
                  }
               }
               Option82OrAccessLineIdParameter option82_or_access_line_id_parameter = 8 [json_name = "option82-or-access-line-id-parameter"];
            }
            repeated IncludeType include_type = 1 [json_name = "include-type"];
         }
         IncludeTypes include_types = 2 [json_name = "include-types"];
      }
      repeated TemplateDefaultUserName template_default_user_name = 1 [json_name = "template-default-user-name"];
   }
   TemplateDefaultUserNames template_default_user_names = 61 [json_name = "template-default-user-names"];
   message CuMaxOnlineUserStatistics {
      message CuMaxOnlineUserStatistic {
         string upmng_instance = 1 [json_name = "upmng-instance"];
         uint32 max_online_users = 2 [json_name = "max-online-users"];
         string max_online_time = 3 [json_name = "max-online-time"];
         uint32 max_accounting_ready_users = 4 [json_name = "max-accounting-ready-users"];
         string max_accounting_ready_time = 5 [json_name = "max-accounting-ready-time"];
         uint32 max_normal_rui_local_users = 6 [json_name = "max-normal-rui-local-users"];
         string max_normal_rui_local_time = 7 [json_name = "max-normal-rui-local-time"];
         uint32 max_rui_remote_users = 8 [json_name = "max-rui-remote-users"];
         string max_rui_remote_time = 9 [json_name = "max-rui-remote-time"];
      }
      repeated CuMaxOnlineUserStatistic cu_max_online_user_statistic = 1 [json_name = "cu-max-online-user-statistic"];
   }
   CuMaxOnlineUserStatistics cu_max_online_user_statistics = 62 [json_name = "cu-max-online-user-statistics"];
   message AaaOnlineFailOrOfflineCuStatistics {
      message AaaOnlineFailOrOfflineCuStatistic {
         string upmng_instance = 1 [json_name = "upmng-instance"];
         enum RecordType {
            INVALID_ENUM_VALUE_RecordType = 0;
            RecordType_OFFLINEX_RECORD = 1;
            RecordType_ONLINEX_FAILX_RECORD = 2;
         };
         RecordType record_type = 2 [json_name = "record-type"];
         enum RecordOrder {
            INVALID_ENUM_VALUE_RecordOrder = 0;
            RecordOrder_MACX_ADDRESS = 1;
            RecordOrder_LINKX_INFO = 2;
         };
         RecordOrder record_order = 3 [json_name = "record-order"];
         uint32 top_number = 4 [json_name = "top-number"];
         uint32 hour = 5 [json_name = "hour"];
         uint32 minute = 6 [json_name = "minute"];
         uint32 second = 7 [json_name = "second"];
         string interface = 8 [json_name = "interface"];
         uint32 pevlan = 9 [json_name = "pevlan"];
         uint32 cevlan = 10 [json_name = "cevlan"];
         string mac = 11 [json_name = "mac"];
         uint32 times = 12 [json_name = "times"];
      }
      repeated AaaOnlineFailOrOfflineCuStatistic aaa_online_fail_or_offline_cu_statistic = 1 [json_name = "aaa-online-fail-or-offline-cu-statistic"];
   }
   AaaOnlineFailOrOfflineCuStatistics aaa_online_fail_or_offline_cu_statistics = 63 [json_name = "aaa-online-fail-or-offline-cu-statistics"];
}

