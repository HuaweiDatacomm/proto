syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-09-01 20:16:01
// ProtoYang-version 1
// module ietf-ipfix-psamp
// revision 2012-09-05
// namespace urn:ietf:params:xml:ns:yang:ietf-ipfix-psamp

package ietf_ipfix_psamp;

message Ipfix {
   message CollectingProcess {
      string name = 1 [json_name = "name"];
      message SctpCollector {
         string name = 1 [json_name = "name"];
         uint32 localPort = 2 [json_name = "localPort"];
         message TransportLayerSecurity {
            repeated string localCertificationAuthorityDN = 1 [json_name = "localCertificationAuthorityDN"];
            repeated string localSubjectDN = 2 [json_name = "localSubjectDN"];
            repeated string localSubjectFQDN = 3 [json_name = "localSubjectFQDN"];
            repeated string remoteCertificationAuthorityDN = 4 [json_name = "remoteCertificationAuthorityDN"];
            repeated string remoteSubjectDN = 5 [json_name = "remoteSubjectDN"];
            repeated string remoteSubjectFQDN = 6 [json_name = "remoteSubjectFQDN"];
         }
         TransportLayerSecurity transportLayerSecurity = 3 [json_name = "transportLayerSecurity"];
         message TransportSession {
            uint32 ipfixVersion = 1 [json_name = "ipfixVersion"];
            string sourceAddress = 2 [json_name = "sourceAddress"];
            string destinationAddress = 3 [json_name = "destinationAddress"];
            uint32 sourcePort = 4 [json_name = "sourcePort"];
            uint32 destinationPort = 5 [json_name = "destinationPort"];
            uint32 sctpAssocId = 6 [json_name = "sctpAssocId"];
            enum Status {
               Status_INACTIVE = 0;
               Status_ACTIVE = 1;
               Status_UNKNOWN = 2;
            };
            Status status = 7 [json_name = "status"];
            uint32 rate = 8 [json_name = "rate"];
            uint64 bytes = 9 [json_name = "bytes"];
            uint64 messages = 10 [json_name = "messages"];
            uint64 discardedMessages = 11 [json_name = "discardedMessages"];
            uint64 records = 12 [json_name = "records"];
            uint32 templates = 13 [json_name = "templates"];
            uint32 optionsTemplates = 14 [json_name = "optionsTemplates"];
            string transportSessionStartTime = 15 [json_name = "transportSessionStartTime"];
            string transportSessionDiscontinuityTime = 16 [json_name = "transportSessionDiscontinuityTime"];
            message Template {
               uint32 observationDomainId = 1 [json_name = "observationDomainId"];
               uint32 templateId = 2 [json_name = "templateId"];
               uint32 setId = 3 [json_name = "setId"];
               string accessTime = 4 [json_name = "accessTime"];
               uint64 templateDataRecords = 5 [json_name = "templateDataRecords"];
               string templateDiscontinuityTime = 6 [json_name = "templateDiscontinuityTime"];
               message Field6 {
                  uint32 ieId = 1 [json_name = "ieId"];
                  uint32 ieLength = 2 [json_name = "ieLength"];
                  uint32 ieEnterpriseNumber = 3 [json_name = "ieEnterpriseNumber"];
                  bool isFlowKey = 4 [json_name = "isFlowKey"];
                  bool isScope = 5 [json_name = "isScope"];
               }
               repeated Field6 field6 = 7 [json_name = "field"];
            }
            repeated Template template = 17 [json_name = "template"];
         }
         repeated TransportSession transportSession = 4 [json_name = "transportSession"];
         repeated string localIPAddress = 5 [json_name = "localIPAddress"];
      }
      repeated SctpCollector sctpCollector = 2 [json_name = "sctpCollector"];
      message UdpCollector {
         string name = 1 [json_name = "name"];
         uint32 localPort = 2 [json_name = "localPort"];
         message TransportLayerSecurity {
            repeated string localCertificationAuthorityDN = 1 [json_name = "localCertificationAuthorityDN"];
            repeated string localSubjectDN = 2 [json_name = "localSubjectDN"];
            repeated string localSubjectFQDN = 3 [json_name = "localSubjectFQDN"];
            repeated string remoteCertificationAuthorityDN = 4 [json_name = "remoteCertificationAuthorityDN"];
            repeated string remoteSubjectDN = 5 [json_name = "remoteSubjectDN"];
            repeated string remoteSubjectFQDN = 6 [json_name = "remoteSubjectFQDN"];
         }
         TransportLayerSecurity transportLayerSecurity = 3 [json_name = "transportLayerSecurity"];
         message TransportSession {
            uint32 ipfixVersion = 1 [json_name = "ipfixVersion"];
            string sourceAddress = 2 [json_name = "sourceAddress"];
            string destinationAddress = 3 [json_name = "destinationAddress"];
            uint32 sourcePort = 4 [json_name = "sourcePort"];
            uint32 destinationPort = 5 [json_name = "destinationPort"];
            uint32 sctpAssocId = 6 [json_name = "sctpAssocId"];
            enum Status {
               Status_INACTIVE = 0;
               Status_ACTIVE = 1;
               Status_UNKNOWN = 2;
            };
            Status status = 7 [json_name = "status"];
            uint32 rate = 8 [json_name = "rate"];
            uint64 bytes = 9 [json_name = "bytes"];
            uint64 messages = 10 [json_name = "messages"];
            uint64 discardedMessages = 11 [json_name = "discardedMessages"];
            uint64 records = 12 [json_name = "records"];
            uint32 templates = 13 [json_name = "templates"];
            uint32 optionsTemplates = 14 [json_name = "optionsTemplates"];
            string transportSessionStartTime = 15 [json_name = "transportSessionStartTime"];
            string transportSessionDiscontinuityTime = 16 [json_name = "transportSessionDiscontinuityTime"];
            message Template {
               uint32 observationDomainId = 1 [json_name = "observationDomainId"];
               uint32 templateId = 2 [json_name = "templateId"];
               uint32 setId = 3 [json_name = "setId"];
               string accessTime = 4 [json_name = "accessTime"];
               uint64 templateDataRecords = 5 [json_name = "templateDataRecords"];
               string templateDiscontinuityTime = 6 [json_name = "templateDiscontinuityTime"];
               message Field6 {
                  uint32 ieId = 1 [json_name = "ieId"];
                  uint32 ieLength = 2 [json_name = "ieLength"];
                  uint32 ieEnterpriseNumber = 3 [json_name = "ieEnterpriseNumber"];
                  bool isFlowKey = 4 [json_name = "isFlowKey"];
                  bool isScope = 5 [json_name = "isScope"];
               }
               repeated Field6 field6 = 7 [json_name = "field"];
            }
            repeated Template template = 17 [json_name = "template"];
         }
         repeated TransportSession transportSession = 4 [json_name = "transportSession"];
         repeated string localIPAddress = 5 [json_name = "localIPAddress"];
         uint32 templateLifeTime = 6 [json_name = "templateLifeTime"];
         uint32 optionsTemplateLifeTime = 7 [json_name = "optionsTemplateLifeTime"];
         uint32 templateLifePacket = 8 [json_name = "templateLifePacket"];
         uint32 optionsTemplateLifePacket = 9 [json_name = "optionsTemplateLifePacket"];
      }
      repeated UdpCollector udpCollector = 3 [json_name = "udpCollector"];
      message TcpCollector {
         string name = 1 [json_name = "name"];
         uint32 localPort = 2 [json_name = "localPort"];
         message TransportLayerSecurity {
            repeated string localCertificationAuthorityDN = 1 [json_name = "localCertificationAuthorityDN"];
            repeated string localSubjectDN = 2 [json_name = "localSubjectDN"];
            repeated string localSubjectFQDN = 3 [json_name = "localSubjectFQDN"];
            repeated string remoteCertificationAuthorityDN = 4 [json_name = "remoteCertificationAuthorityDN"];
            repeated string remoteSubjectDN = 5 [json_name = "remoteSubjectDN"];
            repeated string remoteSubjectFQDN = 6 [json_name = "remoteSubjectFQDN"];
         }
         TransportLayerSecurity transportLayerSecurity = 3 [json_name = "transportLayerSecurity"];
         message TransportSession {
            uint32 ipfixVersion = 1 [json_name = "ipfixVersion"];
            string sourceAddress = 2 [json_name = "sourceAddress"];
            string destinationAddress = 3 [json_name = "destinationAddress"];
            uint32 sourcePort = 4 [json_name = "sourcePort"];
            uint32 destinationPort = 5 [json_name = "destinationPort"];
            uint32 sctpAssocId = 6 [json_name = "sctpAssocId"];
            enum Status {
               Status_INACTIVE = 0;
               Status_ACTIVE = 1;
               Status_UNKNOWN = 2;
            };
            Status status = 7 [json_name = "status"];
            uint32 rate = 8 [json_name = "rate"];
            uint64 bytes = 9 [json_name = "bytes"];
            uint64 messages = 10 [json_name = "messages"];
            uint64 discardedMessages = 11 [json_name = "discardedMessages"];
            uint64 records = 12 [json_name = "records"];
            uint32 templates = 13 [json_name = "templates"];
            uint32 optionsTemplates = 14 [json_name = "optionsTemplates"];
            string transportSessionStartTime = 15 [json_name = "transportSessionStartTime"];
            string transportSessionDiscontinuityTime = 16 [json_name = "transportSessionDiscontinuityTime"];
            message Template {
               uint32 observationDomainId = 1 [json_name = "observationDomainId"];
               uint32 templateId = 2 [json_name = "templateId"];
               uint32 setId = 3 [json_name = "setId"];
               string accessTime = 4 [json_name = "accessTime"];
               uint64 templateDataRecords = 5 [json_name = "templateDataRecords"];
               string templateDiscontinuityTime = 6 [json_name = "templateDiscontinuityTime"];
               message Field6 {
                  uint32 ieId = 1 [json_name = "ieId"];
                  uint32 ieLength = 2 [json_name = "ieLength"];
                  uint32 ieEnterpriseNumber = 3 [json_name = "ieEnterpriseNumber"];
                  bool isFlowKey = 4 [json_name = "isFlowKey"];
                  bool isScope = 5 [json_name = "isScope"];
               }
               repeated Field6 field6 = 7 [json_name = "field"];
            }
            repeated Template template = 17 [json_name = "template"];
         }
         repeated TransportSession transportSession = 4 [json_name = "transportSession"];
         repeated string localIPAddress = 5 [json_name = "localIPAddress"];
      }
      repeated TcpCollector tcpCollector = 4 [json_name = "tcpCollector"];
      message FileReader {
         string name = 1 [json_name = "name"];
         string file = 2 [json_name = "file"];
         uint64 bytes = 3 [json_name = "bytes"];
         uint64 messages = 4 [json_name = "messages"];
         uint64 records = 5 [json_name = "records"];
         uint32 templates = 6 [json_name = "templates"];
         uint32 optionsTemplates = 7 [json_name = "optionsTemplates"];
         string fileReaderDiscontinuityTime = 8 [json_name = "fileReaderDiscontinuityTime"];
         message Template {
            uint32 observationDomainId = 1 [json_name = "observationDomainId"];
            uint32 templateId = 2 [json_name = "templateId"];
            uint32 setId = 3 [json_name = "setId"];
            string accessTime = 4 [json_name = "accessTime"];
            uint64 templateDataRecords = 5 [json_name = "templateDataRecords"];
            string templateDiscontinuityTime = 6 [json_name = "templateDiscontinuityTime"];
            message Field5 {
               uint32 ieId = 1 [json_name = "ieId"];
               uint32 ieLength = 2 [json_name = "ieLength"];
               uint32 ieEnterpriseNumber = 3 [json_name = "ieEnterpriseNumber"];
               bool isFlowKey = 4 [json_name = "isFlowKey"];
               bool isScope = 5 [json_name = "isScope"];
            }
            repeated Field5 field5 = 7 [json_name = "field"];
         }
         repeated Template template = 9 [json_name = "template"];
      }
      repeated FileReader fileReader = 5 [json_name = "fileReader"];
      repeated string exportingProcess = 6 [json_name = "exportingProcess"];
   }
   repeated CollectingProcess collectingProcess = 1 [json_name = "collectingProcess"];
   message ObservationPoint {
      string name = 1 [json_name = "name"];
      uint32 observationPointId = 2 [json_name = "observationPointId"];
      uint32 observationDomainId = 3 [json_name = "observationDomainId"];
      repeated string ifName = 4 [json_name = "ifName"];
      repeated uint32 ifIndex = 5 [json_name = "ifIndex"];
      repeated string entPhysicalName = 6 [json_name = "entPhysicalName"];
      repeated uint32 entPhysicalIndex = 7 [json_name = "entPhysicalIndex"];
      enum Direction {
         Direction_INGRESS = 0;
         Direction_EGRESS = 1;
         Direction_BOTH = 2;
      };
      Direction direction = 8 [json_name = "direction"];
      repeated string selectionProcess = 9 [json_name = "selectionProcess"];
   }
   repeated ObservationPoint observationPoint = 2 [json_name = "observationPoint"];
   message SelectionProcess {
      string name = 1 [json_name = "name"];
      message Selector {
         string name = 1 [json_name = "name"];
         message Method_SelectAll {
            bool selectAll5 = 1 [json_name = "selectAll"];
         }
         message Method_SampCountBased {
            message SampCountBased5 {
               uint32 packetInterval = 1 [json_name = "packetInterval"];
               uint32 packetSpace = 2 [json_name = "packetSpace"];
            }
            SampCountBased5 sampCountBased5 = 1 [json_name = "sampCountBased"];
         }
         message Method_SampTimeBased {
            message SampTimeBased5 {
               uint32 timeInterval = 1 [json_name = "timeInterval"];
               uint32 timeSpace = 2 [json_name = "timeSpace"];
            }
            SampTimeBased5 sampTimeBased5 = 1 [json_name = "sampTimeBased"];
         }
         message Method_SampRandOutOfN {
            message SampRandOutOfN5 {
               uint32 size = 1 [json_name = "size"];
               uint32 population = 2 [json_name = "population"];
            }
            SampRandOutOfN5 sampRandOutOfN5 = 1 [json_name = "sampRandOutOfN"];
         }
         message Method_SampUniProb {
            message SampUniProb5 {
               Decimal64 probability = 1 [json_name = "probability"];
            }
            SampUniProb5 sampUniProb5 = 1 [json_name = "sampUniProb"];
         }
         message Method_FilterMatch {
            message FilterMatch5 {
               message NameOrId_IeName {
                  string ieName7 = 1 [json_name = "ieName"];
               }
               message NameOrId_IeId {
                  uint32 ieId7 = 1 [json_name = "ieId"];
               }
               oneof NameOrId {
                  NameOrId_IeName nameOrId_ieName = 1 [json_name = "ieName"];
                  NameOrId_IeId nameOrId_ieId = 3 [json_name = "ieId"];
               }
               uint32 ieEnterpriseNumber = 2 [json_name = "ieEnterpriseNumber"];
               string value = 4 [json_name = "value"];
            }
            FilterMatch5 filterMatch5 = 1 [json_name = "filterMatch"];
         }
         message Method_FilterHash {
            message FilterHash5 {
               string hashFunction = 1 [json_name = "hashFunction"];
               uint64 initializerValue = 2 [json_name = "initializerValue"];
               uint64 ipPayloadOffset = 3 [json_name = "ipPayloadOffset"];
               uint64 ipPayloadSize = 4 [json_name = "ipPayloadSize"];
               bool digestOutput = 5 [json_name = "digestOutput"];
               uint64 outputRangeMin = 6 [json_name = "outputRangeMin"];
               uint64 outputRangeMax = 7 [json_name = "outputRangeMax"];
               message SelectedRange {
                  string name = 1 [json_name = "name"];
                  uint64 min = 2 [json_name = "min"];
                  uint64 max = 3 [json_name = "max"];
               }
               repeated SelectedRange selectedRange = 8 [json_name = "selectedRange"];
            }
            FilterHash5 filterHash5 = 1 [json_name = "filterHash"];
         }
         oneof Method_1 {
            Method_SelectAll Method_selectAll = 2 [json_name = "selectAll"];
            Method_SampCountBased Method_sampCountBased = 4 [json_name = "sampCountBased"];
            Method_SampTimeBased Method_sampTimeBased = 6 [json_name = "sampTimeBased"];
            Method_SampRandOutOfN Method_sampRandOutOfN = 8 [json_name = "sampRandOutOfN"];
            Method_SampUniProb Method_sampUniProb = 9 [json_name = "sampUniProb"];
            Method_FilterMatch Method_filterMatch = 10 [json_name = "filterMatch"];
            Method_FilterHash Method_filterHash = 11 [json_name = "filterHash"];
         }
         uint64 packetsObserved = 3 [json_name = "packetsObserved"];
         uint64 packetsDropped = 5 [json_name = "packetsDropped"];
         string selectorDiscontinuityTime = 7 [json_name = "selectorDiscontinuityTime"];
      }
      repeated Selector selector = 2 [json_name = "selector"];
      message SelectionSequence {
         uint32 observationDomainId = 1 [json_name = "observationDomainId"];
         uint64 selectionSequenceId = 2 [json_name = "selectionSequenceId"];
      }
      repeated SelectionSequence selectionSequence = 3 [json_name = "selectionSequence"];
      string cache = 4 [json_name = "cache"];
   }
   repeated SelectionProcess selectionProcess = 3 [json_name = "selectionProcess"];
   message Cache {
      string name = 1 [json_name = "name"];
      uint32 meteringProcessId = 2 [json_name = "meteringProcessId"];
      uint64 dataRecords = 3 [json_name = "dataRecords"];
      string cacheDiscontinuityTime = 4 [json_name = "cacheDiscontinuityTime"];
      message CacheType_ImmediateCache {
         message ImmediateCache4 {
            message CacheLayout {
               message CacheField {
                  string name = 1 [json_name = "name"];
                  message NameOrId_IeName {
                     string ieName8 = 1 [json_name = "ieName"];
                  }
                  message NameOrId_IeId {
                     uint32 ieId8 = 1 [json_name = "ieId"];
                  }
                  oneof NameOrId {
                     NameOrId_IeName nameOrId_ieName = 2 [json_name = "ieName"];
                     NameOrId_IeId nameOrId_ieId = 4 [json_name = "ieId"];
                  }
                  uint32 ieLength = 3 [json_name = "ieLength"];
                  uint32 ieEnterpriseNumber = 5 [json_name = "ieEnterpriseNumber"];
                  bool isFlowKey = 6 [json_name = "isFlowKey"];
               }
               repeated CacheField cacheField = 1 [json_name = "cacheField"];
            }
            CacheLayout cacheLayout = 1 [json_name = "cacheLayout"];
         }
         ImmediateCache4 immediateCache4 = 1 [json_name = "immediateCache"];
      }
      message CacheType_TimeoutCache {
         message TimeoutCache4 {
            uint32 maxFlows = 1 [json_name = "maxFlows"];
            uint32 activeTimeout = 2 [json_name = "activeTimeout"];
            uint32 idleTimeout = 3 [json_name = "idleTimeout"];
            uint32 exportInterval = 4 [json_name = "exportInterval"];
            uint32 activeFlows = 5 [json_name = "activeFlows"];
            uint32 unusedCacheEntries = 6 [json_name = "unusedCacheEntries"];
            message CacheLayout {
               message CacheField {
                  string name = 1 [json_name = "name"];
                  message NameOrId_IeName {
                     string ieName8 = 1 [json_name = "ieName"];
                  }
                  message NameOrId_IeId {
                     uint32 ieId8 = 1 [json_name = "ieId"];
                  }
                  oneof NameOrId {
                     NameOrId_IeName nameOrId_ieName = 2 [json_name = "ieName"];
                     NameOrId_IeId nameOrId_ieId = 4 [json_name = "ieId"];
                  }
                  uint32 ieLength = 3 [json_name = "ieLength"];
                  uint32 ieEnterpriseNumber = 5 [json_name = "ieEnterpriseNumber"];
                  bool isFlowKey = 6 [json_name = "isFlowKey"];
               }
               repeated CacheField cacheField = 1 [json_name = "cacheField"];
            }
            CacheLayout cacheLayout = 7 [json_name = "cacheLayout"];
         }
         TimeoutCache4 timeoutCache4 = 1 [json_name = "timeoutCache"];
      }
      message CacheType_NaturalCache {
         message NaturalCache4 {
            uint32 maxFlows = 1 [json_name = "maxFlows"];
            uint32 activeTimeout = 2 [json_name = "activeTimeout"];
            uint32 idleTimeout = 3 [json_name = "idleTimeout"];
            uint32 exportInterval = 4 [json_name = "exportInterval"];
            uint32 activeFlows = 5 [json_name = "activeFlows"];
            uint32 unusedCacheEntries = 6 [json_name = "unusedCacheEntries"];
            message CacheLayout {
               message CacheField {
                  string name = 1 [json_name = "name"];
                  message NameOrId_IeName {
                     string ieName8 = 1 [json_name = "ieName"];
                  }
                  message NameOrId_IeId {
                     uint32 ieId8 = 1 [json_name = "ieId"];
                  }
                  oneof NameOrId {
                     NameOrId_IeName nameOrId_ieName = 2 [json_name = "ieName"];
                     NameOrId_IeId nameOrId_ieId = 4 [json_name = "ieId"];
                  }
                  uint32 ieLength = 3 [json_name = "ieLength"];
                  uint32 ieEnterpriseNumber = 5 [json_name = "ieEnterpriseNumber"];
                  bool isFlowKey = 6 [json_name = "isFlowKey"];
               }
               repeated CacheField cacheField = 1 [json_name = "cacheField"];
            }
            CacheLayout cacheLayout = 7 [json_name = "cacheLayout"];
         }
         NaturalCache4 naturalCache4 = 1 [json_name = "naturalCache"];
      }
      message CacheType_PermanentCache {
         message PermanentCache4 {
            uint32 maxFlows = 1 [json_name = "maxFlows"];
            uint32 activeTimeout = 2 [json_name = "activeTimeout"];
            uint32 idleTimeout = 3 [json_name = "idleTimeout"];
            uint32 exportInterval = 4 [json_name = "exportInterval"];
            uint32 activeFlows = 5 [json_name = "activeFlows"];
            uint32 unusedCacheEntries = 6 [json_name = "unusedCacheEntries"];
            message CacheLayout {
               message CacheField {
                  string name = 1 [json_name = "name"];
                  message NameOrId_IeName {
                     string ieName8 = 1 [json_name = "ieName"];
                  }
                  message NameOrId_IeId {
                     uint32 ieId8 = 1 [json_name = "ieId"];
                  }
                  oneof NameOrId {
                     NameOrId_IeName nameOrId_ieName = 2 [json_name = "ieName"];
                     NameOrId_IeId nameOrId_ieId = 4 [json_name = "ieId"];
                  }
                  uint32 ieLength = 3 [json_name = "ieLength"];
                  uint32 ieEnterpriseNumber = 5 [json_name = "ieEnterpriseNumber"];
                  bool isFlowKey = 6 [json_name = "isFlowKey"];
               }
               repeated CacheField cacheField = 1 [json_name = "cacheField"];
            }
            CacheLayout cacheLayout = 7 [json_name = "cacheLayout"];
         }
         PermanentCache4 permanentCache4 = 1 [json_name = "permanentCache"];
      }
      oneof CacheType_1 {
         CacheType_ImmediateCache CacheType_immediateCache = 5 [json_name = "immediateCache"];
         CacheType_TimeoutCache CacheType_timeoutCache = 7 [json_name = "timeoutCache"];
         CacheType_NaturalCache CacheType_naturalCache = 8 [json_name = "naturalCache"];
         CacheType_PermanentCache CacheType_permanentCache = 9 [json_name = "permanentCache"];
      }
      repeated string exportingProcess = 6 [json_name = "exportingProcess"];
   }
   repeated Cache cache = 4 [json_name = "cache"];
   message ExportingProcess {
      string name = 1 [json_name = "name"];
      uint32 exportingProcessId = 2 [json_name = "exportingProcessId"];
      string exportMode = 3 [json_name = "exportMode"];
      message Destination {
         string name = 1 [json_name = "name"];
         message DestinationParameters_SctpExporter {
            message SctpExporter5 {
               uint32 ipfixVersion = 1 [json_name = "ipfixVersion"];
               uint32 destinationPort = 2 [json_name = "destinationPort"];
               message IndexOrName_IfIndex {
                  uint32 ifIndex7 = 1 [json_name = "ifIndex"];
               }
               message IndexOrName_IfName {
                  string ifName7 = 1 [json_name = "ifName"];
               }
               oneof IndexOrName {
                  IndexOrName_IfIndex indexOrName_ifIndex = 3 [json_name = "ifIndex"];
                  IndexOrName_IfName indexOrName_ifName = 5 [json_name = "ifName"];
               }
               uint32 sendBufferSize = 4 [json_name = "sendBufferSize"];
               uint32 rateLimit = 6 [json_name = "rateLimit"];
               message TransportLayerSecurity {
                  repeated string localCertificationAuthorityDN = 1 [json_name = "localCertificationAuthorityDN"];
                  repeated string localSubjectDN = 2 [json_name = "localSubjectDN"];
                  repeated string localSubjectFQDN = 3 [json_name = "localSubjectFQDN"];
                  repeated string remoteCertificationAuthorityDN = 4 [json_name = "remoteCertificationAuthorityDN"];
                  repeated string remoteSubjectDN = 5 [json_name = "remoteSubjectDN"];
                  repeated string remoteSubjectFQDN = 6 [json_name = "remoteSubjectFQDN"];
               }
               TransportLayerSecurity transportLayerSecurity = 7 [json_name = "transportLayerSecurity"];
               message TransportSession {
                  uint32 ipfixVersion = 1 [json_name = "ipfixVersion"];
                  string sourceAddress = 2 [json_name = "sourceAddress"];
                  string destinationAddress = 3 [json_name = "destinationAddress"];
                  uint32 sourcePort = 4 [json_name = "sourcePort"];
                  uint32 destinationPort = 5 [json_name = "destinationPort"];
                  uint32 sctpAssocId = 6 [json_name = "sctpAssocId"];
                  enum Status {
                     Status_INACTIVE = 0;
                     Status_ACTIVE = 1;
                     Status_UNKNOWN = 2;
                  };
                  Status status = 7 [json_name = "status"];
                  uint32 rate = 8 [json_name = "rate"];
                  uint64 bytes = 9 [json_name = "bytes"];
                  uint64 messages = 10 [json_name = "messages"];
                  uint64 discardedMessages = 11 [json_name = "discardedMessages"];
                  uint64 records = 12 [json_name = "records"];
                  uint32 templates = 13 [json_name = "templates"];
                  uint32 optionsTemplates = 14 [json_name = "optionsTemplates"];
                  string transportSessionStartTime = 15 [json_name = "transportSessionStartTime"];
                  string transportSessionDiscontinuityTime = 16 [json_name = "transportSessionDiscontinuityTime"];
                  message Template {
                     uint32 observationDomainId = 1 [json_name = "observationDomainId"];
                     uint32 templateId = 2 [json_name = "templateId"];
                     uint32 setId = 3 [json_name = "setId"];
                     string accessTime = 4 [json_name = "accessTime"];
                     uint64 templateDataRecords = 5 [json_name = "templateDataRecords"];
                     string templateDiscontinuityTime = 6 [json_name = "templateDiscontinuityTime"];
                     message Field8 {
                        uint32 ieId = 1 [json_name = "ieId"];
                        uint32 ieLength = 2 [json_name = "ieLength"];
                        uint32 ieEnterpriseNumber = 3 [json_name = "ieEnterpriseNumber"];
                        bool isFlowKey = 4 [json_name = "isFlowKey"];
                        bool isScope = 5 [json_name = "isScope"];
                     }
                     repeated Field8 field8 = 7 [json_name = "field"];
                  }
                  repeated Template template = 17 [json_name = "template"];
               }
               TransportSession transportSession = 8 [json_name = "transportSession"];
               repeated string sourceIPAddress = 9 [json_name = "sourceIPAddress"];
               repeated string destinationIPAddress = 10 [json_name = "destinationIPAddress"];
               uint32 timedReliability = 11 [json_name = "timedReliability"];
            }
            SctpExporter5 sctpExporter5 = 1 [json_name = "sctpExporter"];
         }
         message DestinationParameters_UdpExporter {
            message UdpExporter5 {
               uint32 ipfixVersion = 1 [json_name = "ipfixVersion"];
               uint32 destinationPort = 2 [json_name = "destinationPort"];
               message IndexOrName_IfIndex {
                  uint32 ifIndex7 = 1 [json_name = "ifIndex"];
               }
               message IndexOrName_IfName {
                  string ifName7 = 1 [json_name = "ifName"];
               }
               oneof IndexOrName {
                  IndexOrName_IfIndex indexOrName_ifIndex = 3 [json_name = "ifIndex"];
                  IndexOrName_IfName indexOrName_ifName = 5 [json_name = "ifName"];
               }
               uint32 sendBufferSize = 4 [json_name = "sendBufferSize"];
               uint32 rateLimit = 6 [json_name = "rateLimit"];
               message TransportLayerSecurity {
                  repeated string localCertificationAuthorityDN = 1 [json_name = "localCertificationAuthorityDN"];
                  repeated string localSubjectDN = 2 [json_name = "localSubjectDN"];
                  repeated string localSubjectFQDN = 3 [json_name = "localSubjectFQDN"];
                  repeated string remoteCertificationAuthorityDN = 4 [json_name = "remoteCertificationAuthorityDN"];
                  repeated string remoteSubjectDN = 5 [json_name = "remoteSubjectDN"];
                  repeated string remoteSubjectFQDN = 6 [json_name = "remoteSubjectFQDN"];
               }
               TransportLayerSecurity transportLayerSecurity = 7 [json_name = "transportLayerSecurity"];
               message TransportSession {
                  uint32 ipfixVersion = 1 [json_name = "ipfixVersion"];
                  string sourceAddress = 2 [json_name = "sourceAddress"];
                  string destinationAddress = 3 [json_name = "destinationAddress"];
                  uint32 sourcePort = 4 [json_name = "sourcePort"];
                  uint32 destinationPort = 5 [json_name = "destinationPort"];
                  uint32 sctpAssocId = 6 [json_name = "sctpAssocId"];
                  enum Status {
                     Status_INACTIVE = 0;
                     Status_ACTIVE = 1;
                     Status_UNKNOWN = 2;
                  };
                  Status status = 7 [json_name = "status"];
                  uint32 rate = 8 [json_name = "rate"];
                  uint64 bytes = 9 [json_name = "bytes"];
                  uint64 messages = 10 [json_name = "messages"];
                  uint64 discardedMessages = 11 [json_name = "discardedMessages"];
                  uint64 records = 12 [json_name = "records"];
                  uint32 templates = 13 [json_name = "templates"];
                  uint32 optionsTemplates = 14 [json_name = "optionsTemplates"];
                  string transportSessionStartTime = 15 [json_name = "transportSessionStartTime"];
                  string transportSessionDiscontinuityTime = 16 [json_name = "transportSessionDiscontinuityTime"];
                  message Template {
                     uint32 observationDomainId = 1 [json_name = "observationDomainId"];
                     uint32 templateId = 2 [json_name = "templateId"];
                     uint32 setId = 3 [json_name = "setId"];
                     string accessTime = 4 [json_name = "accessTime"];
                     uint64 templateDataRecords = 5 [json_name = "templateDataRecords"];
                     string templateDiscontinuityTime = 6 [json_name = "templateDiscontinuityTime"];
                     message Field8 {
                        uint32 ieId = 1 [json_name = "ieId"];
                        uint32 ieLength = 2 [json_name = "ieLength"];
                        uint32 ieEnterpriseNumber = 3 [json_name = "ieEnterpriseNumber"];
                        bool isFlowKey = 4 [json_name = "isFlowKey"];
                        bool isScope = 5 [json_name = "isScope"];
                     }
                     repeated Field8 field8 = 7 [json_name = "field"];
                  }
                  repeated Template template = 17 [json_name = "template"];
               }
               TransportSession transportSession = 8 [json_name = "transportSession"];
               string sourceIPAddress = 9 [json_name = "sourceIPAddress"];
               string destinationIPAddress = 10 [json_name = "destinationIPAddress"];
               uint32 maxPacketSize = 11 [json_name = "maxPacketSize"];
               uint32 templateRefreshTimeout = 12 [json_name = "templateRefreshTimeout"];
               uint32 optionsTemplateRefreshTimeout = 13 [json_name = "optionsTemplateRefreshTimeout"];
               uint32 templateRefreshPacket = 14 [json_name = "templateRefreshPacket"];
               uint32 optionsTemplateRefreshPacket = 15 [json_name = "optionsTemplateRefreshPacket"];
            }
            UdpExporter5 udpExporter5 = 1 [json_name = "udpExporter"];
         }
         message DestinationParameters_TcpExporter {
            message TcpExporter5 {
               uint32 ipfixVersion = 1 [json_name = "ipfixVersion"];
               uint32 destinationPort = 2 [json_name = "destinationPort"];
               message IndexOrName_IfIndex {
                  uint32 ifIndex7 = 1 [json_name = "ifIndex"];
               }
               message IndexOrName_IfName {
                  string ifName7 = 1 [json_name = "ifName"];
               }
               oneof IndexOrName {
                  IndexOrName_IfIndex indexOrName_ifIndex = 3 [json_name = "ifIndex"];
                  IndexOrName_IfName indexOrName_ifName = 5 [json_name = "ifName"];
               }
               uint32 sendBufferSize = 4 [json_name = "sendBufferSize"];
               uint32 rateLimit = 6 [json_name = "rateLimit"];
               message TransportLayerSecurity {
                  repeated string localCertificationAuthorityDN = 1 [json_name = "localCertificationAuthorityDN"];
                  repeated string localSubjectDN = 2 [json_name = "localSubjectDN"];
                  repeated string localSubjectFQDN = 3 [json_name = "localSubjectFQDN"];
                  repeated string remoteCertificationAuthorityDN = 4 [json_name = "remoteCertificationAuthorityDN"];
                  repeated string remoteSubjectDN = 5 [json_name = "remoteSubjectDN"];
                  repeated string remoteSubjectFQDN = 6 [json_name = "remoteSubjectFQDN"];
               }
               TransportLayerSecurity transportLayerSecurity = 7 [json_name = "transportLayerSecurity"];
               message TransportSession {
                  uint32 ipfixVersion = 1 [json_name = "ipfixVersion"];
                  string sourceAddress = 2 [json_name = "sourceAddress"];
                  string destinationAddress = 3 [json_name = "destinationAddress"];
                  uint32 sourcePort = 4 [json_name = "sourcePort"];
                  uint32 destinationPort = 5 [json_name = "destinationPort"];
                  uint32 sctpAssocId = 6 [json_name = "sctpAssocId"];
                  enum Status {
                     Status_INACTIVE = 0;
                     Status_ACTIVE = 1;
                     Status_UNKNOWN = 2;
                  };
                  Status status = 7 [json_name = "status"];
                  uint32 rate = 8 [json_name = "rate"];
                  uint64 bytes = 9 [json_name = "bytes"];
                  uint64 messages = 10 [json_name = "messages"];
                  uint64 discardedMessages = 11 [json_name = "discardedMessages"];
                  uint64 records = 12 [json_name = "records"];
                  uint32 templates = 13 [json_name = "templates"];
                  uint32 optionsTemplates = 14 [json_name = "optionsTemplates"];
                  string transportSessionStartTime = 15 [json_name = "transportSessionStartTime"];
                  string transportSessionDiscontinuityTime = 16 [json_name = "transportSessionDiscontinuityTime"];
                  message Template {
                     uint32 observationDomainId = 1 [json_name = "observationDomainId"];
                     uint32 templateId = 2 [json_name = "templateId"];
                     uint32 setId = 3 [json_name = "setId"];
                     string accessTime = 4 [json_name = "accessTime"];
                     uint64 templateDataRecords = 5 [json_name = "templateDataRecords"];
                     string templateDiscontinuityTime = 6 [json_name = "templateDiscontinuityTime"];
                     message Field8 {
                        uint32 ieId = 1 [json_name = "ieId"];
                        uint32 ieLength = 2 [json_name = "ieLength"];
                        uint32 ieEnterpriseNumber = 3 [json_name = "ieEnterpriseNumber"];
                        bool isFlowKey = 4 [json_name = "isFlowKey"];
                        bool isScope = 5 [json_name = "isScope"];
                     }
                     repeated Field8 field8 = 7 [json_name = "field"];
                  }
                  repeated Template template = 17 [json_name = "template"];
               }
               TransportSession transportSession = 8 [json_name = "transportSession"];
               string sourceIPAddress = 9 [json_name = "sourceIPAddress"];
               string destinationIPAddress = 10 [json_name = "destinationIPAddress"];
            }
            TcpExporter5 tcpExporter5 = 1 [json_name = "tcpExporter"];
         }
         message DestinationParameters_FileWriter {
            message FileWriter5 {
               uint32 ipfixVersion = 1 [json_name = "ipfixVersion"];
               string file = 2 [json_name = "file"];
               uint64 bytes = 3 [json_name = "bytes"];
               uint64 messages = 4 [json_name = "messages"];
               uint64 discardedMessages = 5 [json_name = "discardedMessages"];
               uint64 records = 6 [json_name = "records"];
               uint32 templates = 7 [json_name = "templates"];
               uint32 optionsTemplates = 8 [json_name = "optionsTemplates"];
               string fileWriterDiscontinuityTime = 9 [json_name = "fileWriterDiscontinuityTime"];
               message Template {
                  uint32 observationDomainId = 1 [json_name = "observationDomainId"];
                  uint32 templateId = 2 [json_name = "templateId"];
                  uint32 setId = 3 [json_name = "setId"];
                  string accessTime = 4 [json_name = "accessTime"];
                  uint64 templateDataRecords = 5 [json_name = "templateDataRecords"];
                  string templateDiscontinuityTime = 6 [json_name = "templateDiscontinuityTime"];
                  message Field7 {
                     uint32 ieId = 1 [json_name = "ieId"];
                     uint32 ieLength = 2 [json_name = "ieLength"];
                     uint32 ieEnterpriseNumber = 3 [json_name = "ieEnterpriseNumber"];
                     bool isFlowKey = 4 [json_name = "isFlowKey"];
                     bool isScope = 5 [json_name = "isScope"];
                  }
                  repeated Field7 field7 = 7 [json_name = "field"];
               }
               repeated Template template = 10 [json_name = "template"];
            }
            FileWriter5 fileWriter5 = 1 [json_name = "fileWriter"];
         }
         oneof DestinationParameters_1 {
            DestinationParameters_SctpExporter DestinationParameters_sctpExporter = 2 [json_name = "sctpExporter"];
            DestinationParameters_UdpExporter DestinationParameters_udpExporter = 3 [json_name = "udpExporter"];
            DestinationParameters_TcpExporter DestinationParameters_tcpExporter = 4 [json_name = "tcpExporter"];
            DestinationParameters_FileWriter DestinationParameters_fileWriter = 5 [json_name = "fileWriter"];
         }
      }
      repeated Destination destination = 4 [json_name = "destination"];
      message Options {
         string name = 1 [json_name = "name"];
         string optionsType = 2 [json_name = "optionsType"];
         uint32 optionsTimeout = 3 [json_name = "optionsTimeout"];
      }
      repeated Options options = 5 [json_name = "options"];
   }
   repeated ExportingProcess exportingProcess = 5 [json_name = "exportingProcess"];
}
message Decimal64 {
   int64 value = 1 [json_name = "value"];
   uint32 fraction_digits = 2 [json_name = "fraction-digits"];
}

