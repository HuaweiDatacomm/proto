syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-09-15 19:29:44
// ProtoYang-version 1
// module huawei-l2tpv3
// revision 2020-05-26
// revision 2020-04-24
// revision 2020-04-02
// revision 2020-03-13
// revision 2020-01-20
// revision 2019-11-06
// namespace urn:huawei:yang:huawei-l2tpv3

package huawei_l2tpv3;

message L2Tpv3 {
   message Pws {
      message Pw {
         string name = 1 [json_name = "name"];
         string source_interface = 2 [json_name = "source-interface"];
         message IpType_Ipv4 {
            string source_ip = 1 [json_name = "source-ip"];
            string destination_ip = 2 [json_name = "destination-ip"];
         }
         message IpType_Ipv6 {
            string source_ipv6 = 1 [json_name = "source-ipv6"];
            string destination_ipv6 = 2 [json_name = "destination-ipv6"];
         }
         oneof IpType {
            IpType_Ipv4 ip_type_ipv4 = 3 [json_name = "ipv4"];
            IpType_Ipv6 ip_type_ipv6 = 4 [json_name = "ipv6"];
         }
         uint32 local_session_id = 5 [json_name = "local-session-id"];
         uint32 remote_session_id = 6 [json_name = "remote-session-id"];
         message LocalCookie_Cipher {
            string local_cookie_cipher = 1 [json_name = "local-cookie-cipher"];
         }
         message LocalCookie_Plain {
            enum LocalCookieLength {
               INVALID_ENUM_VALUE_LocalCookieLength = 0;
               LocalCookieLength_X_4X_BYTES = 4;
               LocalCookieLength_X_8X_BYTES = 8;
            };
            LocalCookieLength local_cookie_length = 1 [json_name = "local-cookie-length"];
            string local_cookie_low = 2 [json_name = "local-cookie-low"];
            string local_cookie_high = 3 [json_name = "local-cookie-high"];
         }
         oneof LocalCookie {
            LocalCookie_Cipher local_cookie_cipher = 7 [json_name = "cipher"];
            LocalCookie_Plain local_cookie_plain = 8 [json_name = "plain"];
         }
         message LocalSecondaryCookie_Cipher {
            string local_secondary_cookie_cipher = 1 [json_name = "local-secondary-cookie-cipher"];
         }
         message LocalSecondaryCookie_Plain {
            enum LocalSecondaryCookieLength {
               INVALID_ENUM_VALUE_LocalSecondaryCookieLength = 0;
               LocalSecondaryCookieLength_X_4X_BYTES = 4;
               LocalSecondaryCookieLength_X_8X_BYTES = 8;
            };
            LocalSecondaryCookieLength local_secondary_cookie_length = 1 [json_name = "local-secondary-cookie-length"];
            string local_secondary_cookie_low = 2 [json_name = "local-secondary-cookie-low"];
            string local_secondary_cookie_high = 3 [json_name = "local-secondary-cookie-high"];
         }
         oneof LocalSecondaryCookie {
            LocalSecondaryCookie_Cipher local_secondary_cookie_cipher = 9 [json_name = "cipher"];
            LocalSecondaryCookie_Plain local_secondary_cookie_plain = 10 [json_name = "plain"];
         }
         message RemoteCookie_Cipher {
            string remote_cookie_cipher = 1 [json_name = "remote-cookie-cipher"];
         }
         message RemoteCookie_Plain {
            enum RemoteCookieLength {
               INVALID_ENUM_VALUE_RemoteCookieLength = 0;
               RemoteCookieLength_X_4X_BYTES = 4;
               RemoteCookieLength_X_8X_BYTES = 8;
            };
            RemoteCookieLength remote_cookie_length = 1 [json_name = "remote-cookie-length"];
            string remote_cookie_low = 2 [json_name = "remote-cookie-low"];
            string remote_cookie_high = 3 [json_name = "remote-cookie-high"];
         }
         oneof RemoteCookie {
            RemoteCookie_Cipher remote_cookie_cipher = 11 [json_name = "cipher"];
            RemoteCookie_Plain remote_cookie_plain = 12 [json_name = "plain"];
         }
         enum State {
            INVALID_ENUM_VALUE_State = 0;
            State_UP = 1;
            State_DOWN = 2;
         };
         State state = 13 [json_name = "state"];
         uint64 send_packet = 14 [json_name = "send-packet"];
         uint64 send_byte = 15 [json_name = "send-byte"];
         uint64 receive_packet = 16 [json_name = "receive-packet"];
         uint64 receive_byte = 17 [json_name = "receive-byte"];
         uint64 receive_drop_packet = 18 [json_name = "receive-drop-packet"];
         uint64 cookie_mismatch_drop_packet = 19 [json_name = "cookie-mismatch-drop-packet"];
         enum TunnelState {
            INVALID_ENUM_VALUE_TunnelState = 0;
            TunnelState_UP = 1;
            TunnelState_DOWN = 2;
         };
         TunnelState tunnel_state = 20 [json_name = "tunnel-state"];
         uint64 send_packets = 21 [json_name = "send-packets"];
         uint64 send_packet_byte = 22 [json_name = "send-packet-byte"];
         uint64 receive_packets = 23 [json_name = "receive-packets"];
         uint64 receive_packet_byte = 24 [json_name = "receive-packet-byte"];
         uint64 drop_packets = 25 [json_name = "drop-packets"];
         uint64 cookie_mismatch_packets = 26 [json_name = "cookie-mismatch-packets"];
      }
      repeated Pw pw = 1 [json_name = "pw"];
   }
   Pws pws = 1 [json_name = "pws"];
   message Instances {
      message Instance {
         string name = 1 [json_name = "name"];
         enum Type {
            INVALID_ENUM_VALUE_Type = 0;
            Type_LOCALX_CONNECT = 1;
            Type_NORMAL = 2;
         };
         Type type = 2 [json_name = "type"];
         string interface_name = 3 [json_name = "interface-name"];
         string out_interface_name = 4 [json_name = "out-interface-name"];
         message Pws {
            message Pw {
               string name = 1 [json_name = "name"];
               enum Role {
                  INVALID_ENUM_VALUE_Role = 0;
                  Role_PRIMARY = 1;
                  Role_INJECTED = 2;
               };
               Role role = 2 [json_name = "role"];
            }
            repeated Pw pw = 1 [json_name = "pw"];
         }
         Pws pws = 5 [json_name = "pws"];
      }
      repeated Instance instance = 1 [json_name = "instance"];
   }
   Instances instances = 2 [json_name = "instances"];
}

