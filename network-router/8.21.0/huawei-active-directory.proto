syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-09-01 20:16:01
// ProtoYang-version 1
// module huawei-active-directory
// revision 2020-04-09
// revision 2020-02-27
// namespace urn:huawei:yang:huawei-active-directory

package huawei_active_directory;

message ActiveDirectory {
   message AdServers {
      message AdServer {
         string name = 1 [json_name = "name"];
         string base_dn = 2 [json_name = "base-dn"];
         bool bind_user = 3 [json_name = "bind-user"];
         uint32 ldap_port = 4 [json_name = "ldap-port"];
         uint32 ldap_ssl_port = 5 [json_name = "ldap-ssl-port"];
         enum CipherSuite {
            INVALID_ENUM_VALUE_CipherSuite = 0;
            CipherSuite_RC4X_HMACX_MD5 = 1;
            CipherSuite_AES256X_HMACX_SHA1 = 2;
         };
         CipherSuite cipher_suite = 6 [json_name = "cipher-suite"];
         string user_filter = 7 [json_name = "user-filter"];
         string group_filter = 8 [json_name = "group-filter"];
         string mobile_number_filter = 9 [json_name = "mobile-number-filter"];
         string time_stamp_filter = 10 [json_name = "time-stamp-filter"];
         message IpAddressFilter {
            string ip_field = 1 [json_name = "ip-field"];
            string mask_field = 2 [json_name = "mask-field"];
         }
         IpAddressFilter ip_address_filter = 11 [json_name = "ip-address-filter"];
         message AuthenticationServer_UseIp {
            message PrimaryAuthenticationServer {
               string server_ip_address = 1 [json_name = "server-ip-address"];
               uint32 port = 2 [json_name = "port"];
               enum EncryptionType {
                  INVALID_ENUM_VALUE_EncryptionType = 0;
                  EncryptionType_LDAPX_OVERX_SSL = 1;
                  EncryptionType_NOX_SSL = 2;
               };
               EncryptionType encryption_type = 3 [json_name = "encryption-type"];
               string host_name = 4 [json_name = "host-name"];
            }
            PrimaryAuthenticationServer primary_authentication_server = 1 [json_name = "primary-authentication-server"];
            message SecondaryAuthenticationServer {
               string server_ip_address = 1 [json_name = "server-ip-address"];
               uint32 port = 2 [json_name = "port"];
               enum EncryptionType {
                  INVALID_ENUM_VALUE_EncryptionType = 0;
                  EncryptionType_LDAPX_OVERX_SSL = 1;
                  EncryptionType_NOX_SSL = 2;
               };
               EncryptionType encryption_type = 3 [json_name = "encryption-type"];
               string host_name = 4 [json_name = "host-name"];
            }
            SecondaryAuthenticationServer secondary_authentication_server = 2 [json_name = "secondary-authentication-server"];
            message ThirdlyAuthenticationServer {
               string server_ip_address = 1 [json_name = "server-ip-address"];
               uint32 port = 2 [json_name = "port"];
               enum EncryptionType {
                  INVALID_ENUM_VALUE_EncryptionType = 0;
                  EncryptionType_LDAPX_OVERX_SSL = 1;
                  EncryptionType_NOX_SSL = 2;
               };
               EncryptionType encryption_type = 3 [json_name = "encryption-type"];
               string host_name = 4 [json_name = "host-name"];
            }
            ThirdlyAuthenticationServer thirdly_authentication_server = 3 [json_name = "thirdly-authentication-server"];
         }
         message AuthenticationServer_UseUrl {
            message Url {
               string server_url = 1 [json_name = "server-url"];
               uint32 port = 2 [json_name = "port"];
               enum EncryptionType {
                  INVALID_ENUM_VALUE_EncryptionType = 0;
                  EncryptionType_LDAPX_OVERX_SSL = 1;
                  EncryptionType_NOX_SSL = 2;
               };
               EncryptionType encryption_type = 3 [json_name = "encryption-type"];
            }
            Url url = 1 [json_name = "url"];
         }
         oneof AuthenticationServer {
            AuthenticationServer_UseIp authentication_server_use_ip = 12 [json_name = "use-ip"];
            AuthenticationServer_UseUrl authentication_server_use_url = 13 [json_name = "use-url"];
         }
         message AccessParameters_ProhibitAnonymousAccess {
            bool with_base_dn = 1 [json_name = "with-base-dn"];
            message Manager {
               string manager_dn = 1 [json_name = "manager-dn"];
               string password = 2 [json_name = "password"];
               string repassword = 3 [json_name = "repassword"];
            }
            Manager manager = 2 [json_name = "manager"];
         }
         message AccessParameters_AllowAnonymousAccess {
            bool manager_anonymous_enable = 1 [json_name = "manager-anonymous-enable"];
         }
         oneof AccessParameters {
            AccessParameters_ProhibitAnonymousAccess access_parameters_prohibit_anonymous_access = 14 [json_name = "prohibit-anonymous-access"];
            AccessParameters_AllowAnonymousAccess access_parameters_allow_anonymous_access = 15 [json_name = "allow-anonymous-access"];
         }
         message SourceType_Loopback {
            int32 loopback_number = 1 [json_name = "loopback-number"];
         }
         message SourceType_SourceIp {
            string ip_address = 1 [json_name = "ip-address"];
         }
         message SourceType_Vlanif {
            int32 vlanif_id = 1 [json_name = "vlanif-id"];
         }
         oneof SourceType {
            SourceType_Loopback source_type_loopback = 16 [json_name = "loopback"];
            SourceType_SourceIp source_type_source_ip = 17 [json_name = "source-ip"];
            SourceType_Vlanif source_type_vlanif = 18 [json_name = "vlanif"];
         }
      }
      repeated AdServer ad_server = 1 [json_name = "ad-server"];
   }
   AdServers ad_servers = 1 [json_name = "ad-servers"];
}

