syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-09-06 10:11:52
// ProtoYang-version 1
// module huawei-bras-cu-controller
// revision 2019-12-08
// namespace urn:huawei:yang:huawei-bras-cu-controller

package huawei_bras_cu_controller;

message BrasCuController {
   message VmCapacity {
      uint32 vups_num = 1 [json_name = "vups-num"];
      uint32 ulpus_num = 2 [json_name = "ulpus-num"];
      uint32 dynamic_instance_vups_num = 3 [json_name = "dynamic-instance-vups-num"];
      uint32 static_instance_vups_num = 4 [json_name = "static-instance-vups-num"];
      uint32 max_vups_num = 5 [json_name = "max-vups-num"];
   }
   VmCapacity vm_capacity = 1 [json_name = "vm-capacity"];
   message UpBackupGroups {
      message UpBackupGroup {
         string name = 1 [json_name = "name"];
         repeated uint32 up_id = 2 [json_name = "up-id"];
      }
      repeated UpBackupGroup up_backup_group = 1 [json_name = "up-backup-group"];
   }
   UpBackupGroups up_backup_groups = 2 [json_name = "up-backup-groups"];
   message ResourceUps {
      message ResourceUp {
         uint32 up_id = 1 [json_name = "up-id"];
         repeated string remote_interface_name = 2 [json_name = "remote-interface-name"];
         message RemoteUpBoards {
            message RemoteUpBoard {
               uint32 board_id = 1 [json_name = "board-id"];
               message L2Tp {
                  message IcrqLimit {
                     uint32 set_value = 1 [json_name = "set-value"];
                  }
                  IcrqLimit icrq_limit = 1 [json_name = "icrq-limit"];
               }
               L2Tp l2tp = 2 [json_name = "l2tp"];
               message OutboundAccessUser {
               }
               OutboundAccessUser outbound_access_user = 3 [json_name = "outbound-access-user"];
            }
            repeated RemoteUpBoard remote_up_board = 1 [json_name = "remote-up-board"];
         }
         RemoteUpBoards remote_up_boards = 3 [json_name = "remote-up-boards"];
         message L2Tp {
            message LnsGroups {
               message LnsGroup {
                  string name = 1 [json_name = "name"];
                  message BindSources {
                     message BindSource {
                        uint32 loopback_number = 1 [json_name = "loopback-number"];
                     }
                     repeated BindSource bind_source = 1 [json_name = "bind-source"];
                  }
                  BindSources bind_sources = 2 [json_name = "bind-sources"];
                  message BindSlots {
                     message BindSlot {
                        string slot_id = 1 [json_name = "slot-id"];
                        message TunnelSession {
                           uint32 tunnel_number = 1 [json_name = "tunnel-number"];
                           uint32 session_number = 2 [json_name = "session-number"];
                        }
                        TunnelSession tunnel_session = 2 [json_name = "tunnel-session"];
                     }
                     repeated BindSlot bind_slot = 1 [json_name = "bind-slot"];
                  }
                  BindSlots bind_slots = 3 [json_name = "bind-slots"];
                  message GroupDescription {
                     string description_value = 1 [json_name = "description-value"];
                  }
                  GroupDescription group_description = 4 [json_name = "group-description"];
                  message LoadBalance {
                     enum Mode {
                        INVALID_ENUM_VALUE_Mode = 0;
                        Mode_BYX_TUNNEL = 1;
                        Mode_BYX_SESSION = 2;
                     };
                     Mode mode = 1 [json_name = "mode"];
                  }
                  LoadBalance load_balance = 5 [json_name = "load-balance"];
                  message MasterSlot {
                     string slot_id = 1 [json_name = "slot-id"];
                  }
                  MasterSlot master_slot = 6 [json_name = "master-slot"];
               }
               repeated LnsGroup lns_group = 1 [json_name = "lns-group"];
            }
            LnsGroups lns_groups = 1 [json_name = "lns-groups"];
            message SessionNumber {
               message Lacs {
                  message Lac {
                     string source_address = 1 [json_name = "source-address"];
                     string vpn_name = 2 [json_name = "vpn-name"];
                     uint32 number8 = 3 [json_name = "number"];
                  }
                  repeated Lac lac = 1 [json_name = "lac"];
               }
               Lacs lacs = 1 [json_name = "lacs"];
               message Lnses {
                  message Lns {
                     string source_address = 1 [json_name = "source-address"];
                     string vpn_name = 2 [json_name = "vpn-name"];
                     uint32 number8 = 3 [json_name = "number"];
                  }
                  repeated Lns lns = 1 [json_name = "lns"];
               }
               Lnses lnses = 2 [json_name = "lnses"];
               message Lnss {
                  message Lns {
                     string source_address = 1 [json_name = "source-address"];
                     string vpn_name = 2 [json_name = "vpn-name"];
                     uint32 number8 = 3 [json_name = "number"];
                  }
                  repeated Lns lns = 1 [json_name = "lns"];
               }
               Lnss lnss = 3 [json_name = "lnss"];
            }
            SessionNumber session_number = 2 [json_name = "session-number"];
            message UsedTunnel {
               uint32 number6 = 1 [json_name = "number"];
            }
            UsedTunnel used_tunnel = 3 [json_name = "used-tunnel"];
         }
         L2Tp l2tp = 4 [json_name = "l2tp"];
         message ResourceUpDescription {
            string up_description = 1 [json_name = "up-description"];
         }
         ResourceUpDescription resource_up_description = 5 [json_name = "resource-up-description"];
         message Brief {
            string sysname = 1 [json_name = "sysname"];
            string netconf_agent_ip = 2 [json_name = "netconf-agent-ip"];
         }
         Brief brief = 6 [json_name = "brief"];
         message CpChannel {
            message NetconfConnection {
               message BindPolicy {
                  string name = 1 [json_name = "name"];
               }
               BindPolicy bind_policy = 1 [json_name = "bind-policy"];
               message ResSftpDirectory {
                  string path_name = 1 [json_name = "path-name"];
               }
               ResSftpDirectory res_sftp_directory = 2 [json_name = "res-sftp-directory"];
            }
            NetconfConnection netconf_connection = 1 [json_name = "netconf-connection"];
            message CuspConnection {
               string agent_name = 1 [json_name = "agent-name"];
            }
            CuspConnection cusp_connection = 2 [json_name = "cusp-connection"];
            message VxlanConnection {
               uint32 vni = 1 [json_name = "vni"];
               string source_ip_address = 2 [json_name = "source-ip-address"];
               string destination_ip_address = 3 [json_name = "destination-ip-address"];
               string vpn_instance_name = 4 [json_name = "vpn-instance-name"];
            }
            VxlanConnection vxlan_connection = 3 [json_name = "vxlan-connection"];
         }
         CpChannel cp_channel = 7 [json_name = "cp-channel"];
         message CpToUp {
            message CuAgent {
               message CuspAgent {
                  string agent_name = 1 [json_name = "agent-name"];
               }
               CuspAgent cusp_agent = 1 [json_name = "cusp-agent"];
               message VxlanChannel {
                  uint32 vni = 1 [json_name = "vni"];
                  string source_ip_address = 2 [json_name = "source-ip-address"];
                  repeated string destination_ip_address = 3 [json_name = "destination-ip-address"];
                  string vpn_instance_name = 4 [json_name = "vpn-instance-name"];
               }
               VxlanChannel vxlan_channel = 2 [json_name = "vxlan-channel"];
            }
            CuAgent cu_agent = 1 [json_name = "cu-agent"];
            message UpCuspAgents {
               message UpCuspAgent {
                  string agent_name = 1 [json_name = "agent-name"];
                  string transport_address = 2 [json_name = "transport-address"];
                  string transport_vpn_name = 3 [json_name = "transport-vpn-name"];
                  uint32 echo_interval = 4 [json_name = "echo-interval"];
                  string keychain_name = 5 [json_name = "keychain-name"];
                  string ssl_policy_name = 6 [json_name = "ssl-policy-name"];
                  uint32 timeout_count = 7 [json_name = "timeout-count"];
                  uint32 congest_duration = 8 [json_name = "congest-duration"];
                  uint32 tcp_mss = 9 [json_name = "tcp-mss"];
                  message Connections {
                     message Connection {
                        string controller_ip = 1 [json_name = "controller-ip"];
                     }
                     repeated Connection connection = 1 [json_name = "connection"];
                  }
                  Connections connections = 10 [json_name = "connections"];
                  message Bfd {
                     uint32 multiplier = 1 [json_name = "multiplier"];
                     uint32 min_tx_interval = 2 [json_name = "min-tx-interval"];
                     uint32 min_rx_interval = 3 [json_name = "min-rx-interval"];
                     uint32 tos_exp = 4 [json_name = "tos-exp"];
                  }
                  Bfd bfd = 11 [json_name = "bfd"];
               }
               repeated UpCuspAgent up_cusp_agent = 1 [json_name = "up-cusp-agent"];
            }
            UpCuspAgents up_cusp_agents = 2 [json_name = "up-cusp-agents"];
         }
         CpToUp cp_to_up = 8 [json_name = "cp-to-up"];
         message CpNqaDetect {
            uint32 count = 1 [json_name = "count"];
            uint32 destination_port = 2 [json_name = "destination-port"];
            uint32 resume_threshold = 3 [json_name = "resume-threshold"];
            uint32 alarm_threshold = 4 [json_name = "alarm-threshold"];
            message DetectTimeType_MinuteLevel {
               uint32 minute_interval = 1 [json_name = "minute-interval"];
               uint32 minute_timeout = 2 [json_name = "minute-timeout"];
            }
            message DetectTimeType_SecondLevel {
               uint32 second_interval = 1 [json_name = "second-interval"];
               uint32 second_timeout = 2 [json_name = "second-timeout"];
            }
            oneof DetectTimeType {
               DetectTimeType_MinuteLevel detect_time_type_minute_level = 5 [json_name = "minute-level"];
               DetectTimeType_SecondLevel detect_time_type_second_level = 6 [json_name = "second-level"];
            }
         }
         CpNqaDetect cp_nqa_detect = 9 [json_name = "cp-nqa-detect"];
         message UpBlock {
            bool block_enable = 1 [json_name = "block-enable"];
         }
         UpBlock up_block = 10 [json_name = "up-block"];
         message SouthConflicts {
            message SouthConflict {
               uint32 index = 1 [json_name = "index"];
               string command = 2 [json_name = "command"];
               string reason = 3 [json_name = "reason"];
               string time = 4 [json_name = "time"];
               string view = 5 [json_name = "view"];
            }
            repeated SouthConflict south_conflict = 1 [json_name = "south-conflict"];
         }
         SouthConflicts south_conflicts = 11 [json_name = "south-conflicts"];
         message Pppox {
            message PppoeSessionSegment {
               uint32 start_session_id = 1 [json_name = "start-session-id"];
               uint32 end_session_id = 2 [json_name = "end-session-id"];
            }
            PppoeSessionSegment pppoe_session_segment = 1 [json_name = "pppoe-session-segment"];
         }
         Pppox pppox = 12 [json_name = "pppox"];
         message SouthConfigStatus {
            enum Status {
               Status_COMPLETED = 0;
               Status_BEINGX_DELIVERED = 1;
               Status_TUNNELX_ABNORMAL = 2;
            };
            Status status = 1 [json_name = "status"];
         }
         SouthConfigStatus south_config_status = 13 [json_name = "south-config-status"];
      }
      repeated ResourceUp resource_up = 1 [json_name = "resource-up"];
   }
   ResourceUps resource_ups = 3 [json_name = "resource-ups"];
   message HotProfiles {
      message HotProfile {
         string name = 1 [json_name = "name"];
         message BackupBasic {
            enum Ipv4AssignedMode {
               Ipv4AssignedMode_BYX_BACKUPX_PROFILE = 0;
               Ipv4AssignedMode_BYX_UP = 1;
            };
            Ipv4AssignedMode ipv4_assigned_mode = 1 [json_name = "ipv4-assigned-mode"];
            enum Ipv6AssignedMode {
               Ipv6AssignedMode_BYX_BACKUPX_PROFILE = 0;
               Ipv6AssignedMode_BYX_UP = 1;
            };
            Ipv6AssignedMode ipv6_assigned_mode = 2 [json_name = "ipv6-assigned-mode"];
            string nas_logic_port = 3 [json_name = "nas-logic-port"];
            bool fail_recovery_enable = 4 [json_name = "fail-recovery-enable"];
            uint32 delay_time = 5 [json_name = "delay-time"];
            enum BackupMode {
               BackupMode_MASTERX_SLAVE = 0;
               BackupMode_LOADX_BALANCEX_BYX_MAC = 1;
            };
            BackupMode backup_mode = 6 [json_name = "backup-mode"];
            message LoadBalance {
               message HashArithmetic {
                  enum ArithmeticType {
                     INVALID_ENUM_VALUE_ArithmeticType = 0;
                     ArithmeticType_CRC16 = 1;
                     ArithmeticType_CRC32 = 2;
                  };
                  ArithmeticType arithmetic_type = 1 [json_name = "arithmetic-type"];
                  uint32 mac_offset = 2 [json_name = "mac-offset"];
               }
               HashArithmetic hash_arithmetic = 1 [json_name = "hash-arithmetic"];
               message RemarkMacs {
                  message RemarkMac {
                     string address = 1 [json_name = "address"];
                     enum MacType {
                        INVALID_ENUM_VALUE_MacType = 0;
                        MacType_EVENX_MAC = 1;
                        MacType_ODDX_MAC = 2;
                     };
                     MacType mac_type = 2 [json_name = "mac-type"];
                  }
                  repeated RemarkMac remark_mac = 1 [json_name = "remark-mac"];
               }
               RemarkMacs remark_macs = 2 [json_name = "remark-macs"];
               message ByMacExtend {
                  bool pppoe_by_option105 = 1 [json_name = "pppoe-by-option105"];
                  bool ipoe_by_vlan = 2 [json_name = "ipoe-by-vlan"];
               }
               ByMacExtend by_mac_extend = 3 [json_name = "by-mac-extend"];
            }
            LoadBalance load_balance = 7 [json_name = "load-balance"];
            enum UpIpMode {
               INVALID_ENUM_VALUE_UpIpMode = 0;
               UpIpMode_ODDX_EVEN = 1;
            };
            UpIpMode up_ip_mode = 8 [json_name = "up-ip-mode"];
            bool sub_interface_switch_enable = 9 [json_name = "sub-interface-switch-enable"];
            uint32 virtual_router_id = 10 [json_name = "virtual-router-id"];
         }
         BackupBasic backup_basic = 2 [json_name = "backup-basic"];
         message BackupGroups {
            message BackupGroup {
               string master_interface = 1 [json_name = "master-interface"];
               string slave_interface = 2 [json_name = "slave-interface"];
            }
            repeated BackupGroup backup_group = 1 [json_name = "backup-group"];
         }
         BackupGroups backup_groups = 3 [json_name = "backup-groups"];
         message UpStatus {
            message MasterVup {
               uint32 up_id = 1 [json_name = "up-id"];
               enum State {
                  State_INIT = 0;
                  State_MASTER = 1;
                  State_SLAVE = 2;
               };
               State state = 2 [json_name = "state"];
               string interface = 3 [json_name = "interface"];
               enum TrackOddMacState {
                  TrackOddMacState_INIT = 0;
                  TrackOddMacState_MASTER = 1;
                  TrackOddMacState_SLAVE = 2;
               };
               TrackOddMacState track_odd_mac_state = 4 [json_name = "track-odd-mac-state"];
               enum TrackEvenMacState {
                  TrackEvenMacState_INIT = 0;
                  TrackEvenMacState_MASTER = 1;
                  TrackEvenMacState_SLAVE = 2;
               };
               TrackEvenMacState track_even_mac_state = 5 [json_name = "track-even-mac-state"];
               string track_odd_interface = 6 [json_name = "track-odd-interface"];
               string track_even_interface = 7 [json_name = "track-even-interface"];
            }
            MasterVup master_vup = 1 [json_name = "master-vup"];
            message SlaveVup {
               uint32 up_id = 1 [json_name = "up-id"];
               enum State {
                  State_INIT = 0;
                  State_MASTER = 1;
                  State_SLAVE = 2;
               };
               State state = 2 [json_name = "state"];
               string interface = 3 [json_name = "interface"];
               enum TrackOddMacState {
                  TrackOddMacState_INIT = 0;
                  TrackOddMacState_MASTER = 1;
                  TrackOddMacState_SLAVE = 2;
               };
               TrackOddMacState track_odd_mac_state = 4 [json_name = "track-odd-mac-state"];
               enum TrackEvenMacState {
                  TrackEvenMacState_INIT = 0;
                  TrackEvenMacState_MASTER = 1;
                  TrackEvenMacState_SLAVE = 2;
               };
               TrackEvenMacState track_even_mac_state = 5 [json_name = "track-even-mac-state"];
               string track_odd_interface = 6 [json_name = "track-odd-interface"];
               string track_even_interface = 7 [json_name = "track-even-interface"];
            }
            SlaveVup slave_vup = 2 [json_name = "slave-vup"];
         }
         UpStatus up_status = 4 [json_name = "up-status"];
      }
      repeated HotProfile hot_profile = 1 [json_name = "hot-profile"];
   }
   HotProfiles hot_profiles = 4 [json_name = "hot-profiles"];
   message OtherProfiles {
      message OtherProfile {
         string name = 1 [json_name = "name"];
         enum StandbyType {
            INVALID_ENUM_VALUE_StandbyType = 0;
            StandbyType_WARMX_STANDBY = 2;
            StandbyType_LOADX_BALANCE = 3;
            StandbyType_COLDX_STANDBY = 4;
            StandbyType_WARMX_STANDBYX_LOADBALANCE = 5;
         };
         StandbyType standby_type = 2 [json_name = "standby-type"];
         message BackupBasic {
            enum Ipv4AssignedMode {
               Ipv4AssignedMode_BYX_BACKUPX_PROFILE = 0;
               Ipv4AssignedMode_BYX_UP = 1;
            };
            Ipv4AssignedMode ipv4_assigned_mode = 1 [json_name = "ipv4-assigned-mode"];
            enum Ipv6AssignedMode {
               Ipv6AssignedMode_BYX_BACKUPX_PROFILE = 0;
               Ipv6AssignedMode_BYX_UP = 1;
            };
            Ipv6AssignedMode ipv6_assigned_mode = 2 [json_name = "ipv6-assigned-mode"];
            string nas_logic_port = 3 [json_name = "nas-logic-port"];
            bool sub_interface_enable = 4 [json_name = "sub-interface-enable"];
            enum LoadBalanceMode {
               LoadBalanceMode_BYX_SESSION = 0;
               LoadBalanceMode_BYX_INTERFACE = 1;
            };
            LoadBalanceMode load_balance_mode = 5 [json_name = "load-balance-mode"];
            uint32 virtual_mac_number = 6 [json_name = "virtual-mac-number"];
            uint32 preempt_time = 7 [json_name = "preempt-time"];
         }
         BackupBasic backup_basic = 3 [json_name = "backup-basic"];
         message MasterProfileInterfaces {
            message MasterProfileInterface {
               string name = 1 [json_name = "name"];
               uint32 virtual_router_id = 2 [json_name = "virtual-router-id"];
               message InterfaceStatus {
                  string status = 1 [json_name = "status"];
               }
               InterfaceStatus interface_status = 3 [json_name = "interface-status"];
            }
            repeated MasterProfileInterface master_profile_interface = 1 [json_name = "master-profile-interface"];
         }
         MasterProfileInterfaces master_profile_interfaces = 4 [json_name = "master-profile-interfaces"];
         message SlaveProfileInterfaces {
            message SlaveProfileInterface {
               string name = 1 [json_name = "name"];
               message InterfaceStatus {
                  string status = 1 [json_name = "status"];
               }
               InterfaceStatus interface_status = 2 [json_name = "interface-status"];
            }
            repeated SlaveProfileInterface slave_profile_interface = 1 [json_name = "slave-profile-interface"];
         }
         SlaveProfileInterfaces slave_profile_interfaces = 5 [json_name = "slave-profile-interfaces"];
         message ProfileStatus {
            bool in_switch = 1 [json_name = "in-switch"];
         }
         ProfileStatus profile_status = 6 [json_name = "profile-status"];
         message SubInterfaceMappings {
            message SubInterfaceMapping {
               string master_interface = 1 [json_name = "master-interface"];
               string slave_interface = 2 [json_name = "slave-interface"];
               string master_status = 3 [json_name = "master-status"];
               string slave_status = 4 [json_name = "slave-status"];
            }
            repeated SubInterfaceMapping sub_interface_mapping = 1 [json_name = "sub-interface-mapping"];
         }
         SubInterfaceMappings sub_interface_mappings = 7 [json_name = "sub-interface-mappings"];
      }
      repeated OtherProfile other_profile = 1 [json_name = "other-profile"];
   }
   OtherProfiles other_profiles = 5 [json_name = "other-profiles"];
   message ResourceUpmngs {
      message ResourceUpmng {
         string upmng_slot = 1 [json_name = "upmng-slot"];
         uint32 up_id = 2 [json_name = "up-id"];
         string agent_name = 3 [json_name = "agent-name"];
         string agent_ip = 4 [json_name = "agent-ip"];
      }
      repeated ResourceUpmng resource_upmng = 1 [json_name = "resource-upmng"];
   }
   ResourceUpmngs resource_upmngs = 6 [json_name = "resource-upmngs"];
   message ResourceUpaccs {
      message ResourceUpacc {
         string upacc_slot = 1 [json_name = "upacc-slot"];
         uint32 up_id = 2 [json_name = "up-id"];
         uint32 up_slot = 3 [json_name = "up-slot"];
      }
      repeated ResourceUpacc resource_upacc = 1 [json_name = "resource-upacc"];
   }
   ResourceUpaccs resource_upaccs = 7 [json_name = "resource-upaccs"];
   message ResourceUpboards {
      message ResourceUpboard {
         string board_id = 1 [json_name = "board-id"];
         enum PresentStatus {
            PresentStatus_UNPRESENT = 0;
            PresentStatus_PRESENT = 1;
         };
         PresentStatus present_status = 2 [json_name = "present-status"];
         enum RegisteredStatus {
            RegisteredStatus_UNREGISTERED = 0;
            RegisteredStatus_REGISTERED = 1;
         };
         RegisteredStatus registered_status = 3 [json_name = "registered-status"];
         enum BoardType {
            BoardType_LPU = 0;
         };
         BoardType board_type = 4 [json_name = "board-type"];
         enum DeployStatus {
            DeployStatus_UNDEPLOYED = 0;
            DeployStatus_DEPLOYED = 1;
         };
         DeployStatus deploy_status = 5 [json_name = "deploy-status"];
         string board_position = 6 [json_name = "board-position"];
         message Pppox {
            message PppoeSlotStatistic {
               uint32 active_sessions = 1 [json_name = "active-sessions"];
               uint32 total_sessions = 2 [json_name = "total-sessions"];
               uint32 receive_padi_packets = 3 [json_name = "receive-padi-packets"];
               uint32 discard_padi_packets = 4 [json_name = "discard-padi-packets"];
               uint32 send_pado_packets = 5 [json_name = "send-pado-packets"];
               uint32 receive_padr_packets = 6 [json_name = "receive-padr-packets"];
               uint32 discard_padr_packets = 7 [json_name = "discard-padr-packets"];
               uint32 send_pads_packets = 8 [json_name = "send-pads-packets"];
               uint32 discard_padr_same_mac = 9 [json_name = "discard-padr-same-mac"];
               uint32 receive_padt_packets = 10 [json_name = "receive-padt-packets"];
               uint32 discard_padt_packets = 11 [json_name = "discard-padt-packets"];
               uint32 send_padt_packets = 12 [json_name = "send-padt-packets"];
               uint32 send_padm_packets = 13 [json_name = "send-padm-packets"];
               uint32 send_padm_url_packets = 14 [json_name = "send-padm-url-packets"];
               uint32 send_padm_motm_packets = 15 [json_name = "send-padm-motm-packets"];
               uint32 send_padn_packets = 16 [json_name = "send-padn-packets"];
               uint32 receive_session_packets = 17 [json_name = "receive-session-packets"];
               uint32 discard_session_packets = 18 [json_name = "discard-session-packets"];
               uint32 send_session_packets = 19 [json_name = "send-session-packets"];
               uint32 receive_packets = 20 [json_name = "receive-packets"];
               uint32 discard_packets = 21 [json_name = "discard-packets"];
               uint32 invalid_version = 22 [json_name = "invalid-version"];
               uint32 invalid_pad_code = 23 [json_name = "invalid-pad-code"];
               uint32 invalid_pad_tags = 24 [json_name = "invalid-pad-tags"];
               uint32 invalid_pad_tag_length = 25 [json_name = "invalid-pad-tag-length"];
               uint32 invalid_pad_type = 26 [json_name = "invalid-pad-type"];
               uint32 invalid_padi_sessions = 27 [json_name = "invalid-padi-sessions"];
               uint32 invalid_padr_sessions = 28 [json_name = "invalid-padr-sessions"];
               uint32 invalid_pad_packet_length = 29 [json_name = "invalid-pad-packet-length"];
               uint32 other_invalid_pad_packets = 30 [json_name = "other-invalid-pad-packets"];
               uint32 total_invalid_pad_packets = 31 [json_name = "total-invalid-pad-packets"];
               uint32 send_null_pads_packets = 32 [json_name = "send-null-pads-packets"];
            }
            PppoeSlotStatistic pppoe_slot_statistic = 1 [json_name = "pppoe-slot-statistic"];
            message PppSlotStatistic {
               uint32 send_echo_request = 1 [json_name = "send-echo-request"];
               uint32 send_echo_reply = 2 [json_name = "send-echo-reply"];
               uint32 send_echo_failed = 3 [json_name = "send-echo-failed"];
               uint32 receive_echo_reply = 4 [json_name = "receive-echo-reply"];
               uint32 receive_echo_request = 5 [json_name = "receive-echo-request"];
               uint32 send_lcp_connection_request = 6 [json_name = "send-lcp-connection-request"];
               uint32 send_lcp_connection_nak = 7 [json_name = "send-lcp-connection-nak"];
               uint32 send_lcp_connection_rejection = 8 [json_name = "send-lcp-connection-rejection"];
               uint32 send_lcp_connection_ack = 9 [json_name = "send-lcp-connection-ack"];
               uint32 send_lcp_code_rejection = 10 [json_name = "send-lcp-code-rejection"];
               uint32 send_lcp_protocol_rejection = 11 [json_name = "send-lcp-protocol-rejection"];
               uint32 send_lcp_termination_request = 12 [json_name = "send-lcp-termination-request"];
               uint32 send_lcp_termination_ack = 13 [json_name = "send-lcp-termination-ack"];
               uint32 receive_lcp_connection_request = 14 [json_name = "receive-lcp-connection-request"];
               uint32 receive_lcp_connection_nak = 15 [json_name = "receive-lcp-connection-nak"];
               uint32 receive_lcp_connection_rejection = 16 [json_name = "receive-lcp-connection-rejection"];
               uint32 receive_lcp_connection_ack = 17 [json_name = "receive-lcp-connection-ack"];
               uint32 receive_lcp_code_rejection = 18 [json_name = "receive-lcp-code-rejection"];
               uint32 receive_lcp_protocol_rejection = 19 [json_name = "receive-lcp-protocol-rejection"];
               uint32 receive_lcp_termination_request = 20 [json_name = "receive-lcp-termination-request"];
               uint32 receive_lcp_termination_ack = 21 [json_name = "receive-lcp-termination-ack"];
               uint32 send_ipcp_connection_request = 22 [json_name = "send-ipcp-connection-request"];
               uint32 send_ipcp_connection_nak = 23 [json_name = "send-ipcp-connection-nak"];
               uint32 send_ipcp_connection_rejection = 24 [json_name = "send-ipcp-connection-rejection"];
               uint32 send_ipcp_connection_ack = 25 [json_name = "send-ipcp-connection-ack"];
               uint32 send_ipcp_code_rejection = 26 [json_name = "send-ipcp-code-rejection"];
               uint32 send_ipcp_protocol_rejection = 27 [json_name = "send-ipcp-protocol-rejection"];
               uint32 send_ipcp_termination_request = 28 [json_name = "send-ipcp-termination-request"];
               uint32 send_ipccp_termination_ack = 29 [json_name = "send-ipccp-termination-ack"];
               uint32 receive_ipcp_connection_request = 30 [json_name = "receive-ipcp-connection-request"];
               uint32 receive_ipcp_connection_nak = 31 [json_name = "receive-ipcp-connection-nak"];
               uint32 receive_ipcp_connection_rejection = 32 [json_name = "receive-ipcp-connection-rejection"];
               uint32 receive_ipcp_connection_ack = 33 [json_name = "receive-ipcp-connection-ack"];
               uint32 receive_ipcp_code_rejection = 34 [json_name = "receive-ipcp-code-rejection"];
               uint32 receive_ipcp_protocol_rejection = 35 [json_name = "receive-ipcp-protocol-rejection"];
               uint32 receive_ipcp_termination_request = 36 [json_name = "receive-ipcp-termination-request"];
               uint32 receive_ipcp_termination_ack = 37 [json_name = "receive-ipcp-termination-ack"];
               uint32 send_ip6cp_connection_request = 38 [json_name = "send-ip6cp-connection-request"];
               uint32 send_ip6cp_connection_nak = 39 [json_name = "send-ip6cp-connection-nak"];
               uint32 send_ip6cp_connection_rejection = 40 [json_name = "send-ip6cp-connection-rejection"];
               uint32 send_ip6cp_connection_ack = 41 [json_name = "send-ip6cp-connection-ack"];
               uint32 send_ip6cp_code_rejection = 42 [json_name = "send-ip6cp-code-rejection"];
               uint32 send_ip6cp_protocol_rejection = 43 [json_name = "send-ip6cp-protocol-rejection"];
               uint32 send_ip6cp_termination_request = 44 [json_name = "send-ip6cp-termination-request"];
               uint32 send_ip6cp_termination_ack = 45 [json_name = "send-ip6cp-termination-ack"];
               uint32 receive_ip6cp_connection_request = 46 [json_name = "receive-ip6cp-connection-request"];
               uint32 receive_ip6cp_connection_nak = 47 [json_name = "receive-ip6cp-connection-nak"];
               uint32 receive_ip6cp_connection_reject = 48 [json_name = "receive-ip6cp-connection-reject"];
               uint32 receive_ip6cp_connection_ack = 49 [json_name = "receive-ip6cp-connection-ack"];
               uint32 receive_ip6cp_code_rejection = 50 [json_name = "receive-ip6cp-code-rejection"];
               uint32 receive_ip6cp_protocol_rejection = 51 [json_name = "receive-ip6cp-protocol-rejection"];
               uint32 receive_ip6cp_termination_request = 52 [json_name = "receive-ip6cp-termination-request"];
               uint32 receive_ip6cp_termination_ack = 53 [json_name = "receive-ip6cp-termination-ack"];
               uint32 send_pap_authentication_ack = 54 [json_name = "send-pap-authentication-ack"];
               uint32 send_pap_authentication_nak = 55 [json_name = "send-pap-authentication-nak"];
               uint32 send_chap_challenge = 56 [json_name = "send-chap-challenge"];
               uint32 send_chap_authentication_ack = 57 [json_name = "send-chap-authentication-ack"];
               uint32 send_chap_authentication_fail = 58 [json_name = "send-chap-authentication-fail"];
               uint32 discard_dail_fast = 59 [json_name = "discard-dail-fast"];
               uint32 discard_chasten = 60 [json_name = "discard-chasten"];
               uint32 receive_pap_authentication_request = 61 [json_name = "receive-pap-authentication-request"];
               uint32 receive_chap_response = 62 [json_name = "receive-chap-response"];
            }
            PppSlotStatistic ppp_slot_statistic = 2 [json_name = "ppp-slot-statistic"];
         }
         Pppox pppox = 7 [json_name = "pppox"];
      }
      repeated ResourceUpboard resource_upboard = 1 [json_name = "resource-upboard"];
   }
   ResourceUpboards resource_upboards = 8 [json_name = "resource-upboards"];
   message ResourceVpns {
      message ResourceVpn {
         uint32 up_id = 1 [json_name = "up-id"];
         string identifier = 2 [json_name = "identifier"];
         string cp_vpn_name = 3 [json_name = "cp-vpn-name"];
         string up_vpn_name = 4 [json_name = "up-vpn-name"];
         string status = 5 [json_name = "status"];
      }
      repeated ResourceVpn resource_vpn = 1 [json_name = "resource-vpn"];
   }
   ResourceVpns resource_vpns = 9 [json_name = "resource-vpns"];
   message UpAbilitys {
      message UpAbility {
         string interface_name = 1 [json_name = "interface-name"];
         enum AccessType {
            INVALID_ENUM_VALUE_AccessType = 0;
            AccessType_LAYER2X_SUBSCRIBER = 1;
            AccessType_LAYER3X_SUBSCRIBER = 2;
            AccessType_LAYER2X_LEASELINE = 3;
            AccessType_LAYER3X_LEASELINE = 4;
         };
         AccessType access_type = 2 [json_name = "access-type"];
         bool support_backup = 3 [json_name = "support-backup"];
         enum StandbyType {
            StandbyType_HOTX_STANDBY = 0;
            StandbyType_WARMX_STANDBY = 1;
            StandbyType_LOADX_BALANCE = 2;
            StandbyType_COLDX_STANDBY = 3;
            StandbyType_WARMX_LOADBALANCE = 4;
         };
         StandbyType standby_type = 4 [json_name = "standby-type"];
         string profile_name = 5 [json_name = "profile-name"];
      }
      repeated UpAbility up_ability = 1 [json_name = "up-ability"];
   }
   UpAbilitys up_abilitys = 10 [json_name = "up-abilitys"];
   message CuInterfaceVersionCpSide {
      string interface_version = 1 [json_name = "interface-version"];
      string management_interface_version_first = 2 [json_name = "management-interface-version-first"];
      string management_interface_version_second = 3 [json_name = "management-interface-version-second"];
      string management_interface_version_third = 4 [json_name = "management-interface-version-third"];
      message ConnectedUpVersions {
         message ConnectedUpVersion {
            uint32 up_id = 1 [json_name = "up-id"];
            string up_version = 2 [json_name = "up-version"];
            string negotiation_result = 3 [json_name = "negotiation-result"];
         }
         repeated ConnectedUpVersion connected_up_version = 1 [json_name = "connected-up-version"];
      }
      ConnectedUpVersions connected_up_versions = 5 [json_name = "connected-up-versions"];
   }
   CuInterfaceVersionCpSide cu_interface_version_cp_side = 11 [json_name = "cu-interface-version-cp-side"];
   message CuspDownHold {
      uint32 hold_time = 1 [json_name = "hold-time"];
   }
   CuspDownHold cusp_down_hold = 12 [json_name = "cusp-down-hold"];
   message UpStatistics {
      uint32 total_up_number = 1 [json_name = "total-up-number"];
   }
   UpStatistics up_statistics = 13 [json_name = "up-statistics"];
   message CpVersion {
      string interface_version = 1 [json_name = "interface-version"];
      string management_interface_version_first = 2 [json_name = "management-interface-version-first"];
      string management_interface_version_second = 3 [json_name = "management-interface-version-second"];
      string management_interface_version_third = 4 [json_name = "management-interface-version-third"];
      message ConnectedUpVersions {
         message ConnectedUpVersion {
            uint32 up_id = 1 [json_name = "up-id"];
            string up_version = 2 [json_name = "up-version"];
            string negotiation_result = 3 [json_name = "negotiation-result"];
         }
         repeated ConnectedUpVersion connected_up_version = 1 [json_name = "connected-up-version"];
      }
      ConnectedUpVersions connected_up_versions = 5 [json_name = "connected-up-versions"];
   }
   CpVersion cp_version = 14 [json_name = "cp-version"];
   message GlobalAttribute {
      uint32 up_base_id = 1 [json_name = "up-base-id"];
   }
   GlobalAttribute global_attribute = 15 [json_name = "global-attribute"];
   message StaticUpmngInstances {
      message StaticUpmngInstance {
         string name = 1 [json_name = "name"];
         uint32 deploy_weight = 2 [json_name = "deploy-weight"];
         repeated uint32 up_id = 3 [json_name = "up-id"];
         repeated string up_backup_group = 4 [json_name = "up-backup-group"];
      }
      repeated StaticUpmngInstance static_upmng_instance = 1 [json_name = "static-upmng-instance"];
   }
   StaticUpmngInstances static_upmng_instances = 16 [json_name = "static-upmng-instances"];
   message UpmngInstances {
      message UpmngInstance {
         string name = 1 [json_name = "name"];
         uint32 instance_id = 2 [json_name = "instance-id"];
         enum InstanceType {
            InstanceType_DYNAMIC = 0;
            InstanceType_STATIC = 1;
         };
         InstanceType instance_type = 3 [json_name = "instance-type"];
         uint32 deploy_weight = 4 [json_name = "deploy-weight"];
         uint32 available_up_num = 5 [json_name = "available-up-num"];
         uint32 current_up_num = 6 [json_name = "current-up-num"];
         repeated string upmng_slot = 7 [json_name = "upmng-slot"];
         repeated uint32 up_id = 8 [json_name = "up-id"];
      }
      repeated UpmngInstance upmng_instance = 1 [json_name = "upmng-instance"];
   }
   UpmngInstances upmng_instances = 17 [json_name = "upmng-instances"];
   message WaitToRestore {
      uint32 restore_time = 1 [json_name = "restore-time"];
   }
   WaitToRestore wait_to_restore = 18 [json_name = "wait-to-restore"];
   message Ipv4AddressManage {
      message UpAuthorizationGroups {
         message UpAuthorizationGroup {
            string name = 1 [json_name = "name"];
            message Ups {
               message Up {
                  uint32 up_id = 1 [json_name = "up-id"];
               }
               repeated Up up = 1 [json_name = "up"];
            }
            Ups ups = 2 [json_name = "ups"];
         }
         repeated UpAuthorizationGroup up_authorization_group = 1 [json_name = "up-authorization-group"];
      }
      UpAuthorizationGroups up_authorization_groups = 1 [json_name = "up-authorization-groups"];
   }
   Ipv4AddressManage ipv4_address_manage = 19 [json_name = "ipv4-address-manage"];
   message Scaling {
      message BrasScale {
         bool enable = 1 [json_name = "enable"];
      }
      BrasScale bras_scale = 1 [json_name = "bras-scale"];
   }
   Scaling scaling = 20 [json_name = "scaling"];
}

