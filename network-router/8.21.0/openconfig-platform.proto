syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-09-22 09:44:42
// ProtoYang-version 1
// module openconfig-platform
// revision 2019-04-16
// revision 2018-11-21
// revision 2018-06-29
// revision 2018-06-03
// revision 2018-04-20
// revision 2018-01-30
// revision 2018-01-16
// revision 2017-12-14
// revision 2017-08-16
// revision 2016-12-22
// namespace http://openconfig.net/yang/platform

package openconfig_platform;

message Components {
   message Component {
      string name = 1 [json_name = "name"];
      message Config {
         string name = 1 [json_name = "name"];
      }
      Config config = 2 [json_name = "config"];
      message State {
         string name = 1 [json_name = "name"];
         string type = 2 [json_name = "type"];
         string id = 3 [json_name = "id"];
         string description = 4 [json_name = "description"];
         string mfg_name = 5 [json_name = "mfg-name"];
         string hardware_version = 6 [json_name = "hardware-version"];
         string firmware_version = 7 [json_name = "firmware-version"];
         string software_version = 8 [json_name = "software-version"];
         string serial_no = 9 [json_name = "serial-no"];
         string part_no = 10 [json_name = "part-no"];
         string oper_status = 11 [json_name = "oper-status"];
         message Temperature {
            Decimal64 instant = 1 [json_name = "instant"];
            Decimal64 avg = 2 [json_name = "avg"];
            Decimal64 min = 3 [json_name = "min"];
            Decimal64 max = 4 [json_name = "max"];
            uint64 interval = 5 [json_name = "interval"];
            bool alarm_status = 6 [json_name = "alarm-status"];
            uint32 alarm_threshold = 7 [json_name = "alarm-threshold"];
            string alarm_severity = 8 [json_name = "alarm-severity"];
            uint64 min_time = 9 [json_name = "min-time"];
            uint64 max_time = 10 [json_name = "max-time"];
         }
         Temperature temperature = 12 [json_name = "temperature"];
         message Memory {
            uint64 available = 1 [json_name = "available"];
            uint64 utilized = 2 [json_name = "utilized"];
         }
         Memory memory = 13 [json_name = "memory"];
         uint32 allocated_power = 14 [json_name = "allocated-power"];
         uint32 used_power = 15 [json_name = "used-power"];
         bool equipment_failure = 16 [json_name = "equipment-failure"];
         bool equipment_mismatch = 17 [json_name = "equipment-mismatch"];
         enum PresentStatus {
            PresentStatus_PRESENT = 0;
            PresentStatus_OFFLINE = 1;
         };
         PresentStatus present_status = 18 [json_name = "present-status"];
         enum AlarmStatus {
            AlarmStatus_NORMAL = 0;
            AlarmStatus_ABNORMAL = 1;
         };
         AlarmStatus alarm_status = 19 [json_name = "alarm-status"];
         string boot_loader_software_version = 20 [json_name = "boot-loader-software-version"];
         uint32 entity_id = 21 [json_name = "entity-id"];
         string location = 22 [json_name = "location"];
         string mfg_date = 23 [json_name = "mfg-date"];
         bool removable = 24 [json_name = "removable"];
         bool empty = 25 [json_name = "empty"];
         string parent = 26 [json_name = "parent"];
      }
      State state = 3 [json_name = "state"];
      message Properties {
         message Property {
            string name = 1 [json_name = "name"];
            message Config {
               string name = 1 [json_name = "name"];
               string value = 2 [json_name = "value"];
            }
            Config config = 2 [json_name = "config"];
            message State {
               string name = 1 [json_name = "name"];
               string value = 2 [json_name = "value"];
               bool configurable = 3 [json_name = "configurable"];
            }
            State state = 3 [json_name = "state"];
         }
         repeated Property property = 1 [json_name = "property"];
      }
      Properties properties = 4 [json_name = "properties"];
      message Subcomponents {
         message Subcomponent {
            string name = 1 [json_name = "name"];
            message Config {
               string name = 1 [json_name = "name"];
            }
            Config config = 2 [json_name = "config"];
            message State {
               string name = 1 [json_name = "name"];
            }
            State state = 3 [json_name = "state"];
         }
         repeated Subcomponent subcomponent = 1 [json_name = "subcomponent"];
      }
      Subcomponents subcomponents = 5 [json_name = "subcomponents"];
      message Chassis {
         message Config {
         }
         Config config = 1 [json_name = "config"];
         message State {
         }
         State state = 2 [json_name = "state"];
      }
      Chassis chassis = 6 [json_name = "chassis"];
      message Port {
         message Config {
         }
         Config config = 1 [json_name = "config"];
         message State {
         }
         State state = 2 [json_name = "state"];
         message BreakoutMode {
            message Config {
               uint32 num_channels = 1 [json_name = "num-channels"];
               string channel_speed = 2 [json_name = "channel-speed"];
            }
            Config config = 1 [json_name = "config"];
            message State {
               uint32 num_channels = 1 [json_name = "num-channels"];
               string channel_speed = 2 [json_name = "channel-speed"];
            }
            State state = 2 [json_name = "state"];
         }
         BreakoutMode breakout_mode = 3 [json_name = "breakout-mode"];
      }
      Port port = 7 [json_name = "port"];
      message PowerSupply {
         message Config {
            bool enabled = 1 [json_name = "enabled"];
         }
         Config config = 1 [json_name = "config"];
         message State {
            bool enabled = 1 [json_name = "enabled"];
            bytes capacity = 2 [json_name = "capacity"];
            bytes input_current = 3 [json_name = "input-current"];
            bytes input_voltage = 4 [json_name = "input-voltage"];
            bytes output_current = 5 [json_name = "output-current"];
            bytes output_voltage = 6 [json_name = "output-voltage"];
            bytes output_power = 7 [json_name = "output-power"];
         }
         State state = 2 [json_name = "state"];
      }
      PowerSupply power_supply = 8 [json_name = "power-supply"];
      message Fan {
         message Config {
         }
         Config config = 1 [json_name = "config"];
         message State {
            uint32 speed = 1 [json_name = "speed"];
         }
         State state = 2 [json_name = "state"];
      }
      Fan fan = 9 [json_name = "fan"];
      message Fabric {
         message Config {
         }
         Config config = 1 [json_name = "config"];
         message State {
         }
         State state = 2 [json_name = "state"];
      }
      Fabric fabric = 10 [json_name = "fabric"];
      message Storage {
         message Config {
         }
         Config config = 1 [json_name = "config"];
         message State {
         }
         State state = 2 [json_name = "state"];
      }
      Storage storage = 11 [json_name = "storage"];
      message Cpu {
         message Config {
         }
         Config config = 1 [json_name = "config"];
         message State {
         }
         State state = 2 [json_name = "state"];
         message Utilization {
            message State {
               uint32 instant = 1 [json_name = "instant"];
               uint32 avg = 2 [json_name = "avg"];
               uint32 min = 3 [json_name = "min"];
               uint32 max = 4 [json_name = "max"];
               uint64 interval = 5 [json_name = "interval"];
               uint64 min_time = 6 [json_name = "min-time"];
               uint64 max_time = 7 [json_name = "max-time"];
            }
            State state = 1 [json_name = "state"];
         }
         Utilization utilization = 3 [json_name = "utilization"];
      }
      Cpu cpu = 12 [json_name = "cpu"];
      message IntegratedCircuit {
         message Config {
         }
         Config config = 1 [json_name = "config"];
         message State {
         }
         State state = 2 [json_name = "state"];
      }
      IntegratedCircuit integrated_circuit = 13 [json_name = "integrated-circuit"];
      message Backplane {
         message Config {
         }
         Config config = 1 [json_name = "config"];
         message State {
         }
         State state = 2 [json_name = "state"];
      }
      Backplane backplane = 14 [json_name = "backplane"];
      message Linecard {
         message Config {
            enum PowerAdminState {
               PowerAdminState_POWER_ENABLED = 0;
               PowerAdminState_POWER_DISABLED = 1;
            };
            PowerAdminState power_admin_state = 1 [json_name = "power-admin-state"];
         }
         Config config = 1 [json_name = "config"];
         message State {
            enum PowerAdminState {
               PowerAdminState_POWER_ENABLED = 0;
               PowerAdminState_POWER_DISABLED = 1;
            };
            PowerAdminState power_admin_state = 1 [json_name = "power-admin-state"];
            string slot_id = 2 [json_name = "slot-id"];
         }
         State state = 2 [json_name = "state"];
      }
      Linecard linecard = 15 [json_name = "linecard"];
      message Transceiver {
         message Config {
            bool enabled = 1 [json_name = "enabled"];
            string form_factor_preconf = 2 [json_name = "form-factor-preconf"];
            string ethernet_pmd_preconf = 3 [json_name = "ethernet-pmd-preconf"];
         }
         Config config = 1 [json_name = "config"];
         message State {
            bool enabled = 1 [json_name = "enabled"];
            string form_factor_preconf = 2 [json_name = "form-factor-preconf"];
            string ethernet_pmd_preconf = 3 [json_name = "ethernet-pmd-preconf"];
            enum Present {
               Present_PRESENT = 0;
               Present_NOT_PRESENT = 1;
            };
            Present present = 4 [json_name = "present"];
            string form_factor = 5 [json_name = "form-factor"];
            string connector_type = 6 [json_name = "connector-type"];
            int32 internal_temp = 7 [json_name = "internal-temp"];
            string vendor = 8 [json_name = "vendor"];
            string vendor_part = 9 [json_name = "vendor-part"];
            string vendor_rev = 10 [json_name = "vendor-rev"];
            string ethernet_pmd = 11 [json_name = "ethernet-pmd"];
            string sonet_sdh_compliance_code = 12 [json_name = "sonet-sdh-compliance-code"];
            string otn_compliance_code = 13 [json_name = "otn-compliance-code"];
            string serial_no = 14 [json_name = "serial-no"];
            string date_code = 15 [json_name = "date-code"];
            bool fault_condition = 16 [json_name = "fault-condition"];
            message OutputPower {
               Decimal64 instant = 1 [json_name = "instant"];
               Decimal64 avg = 2 [json_name = "avg"];
               Decimal64 min = 3 [json_name = "min"];
               Decimal64 max = 4 [json_name = "max"];
               uint64 interval = 5 [json_name = "interval"];
               uint64 min_time = 6 [json_name = "min-time"];
               uint64 max_time = 7 [json_name = "max-time"];
            }
            OutputPower output_power = 17 [json_name = "output-power"];
            message InputPower {
               Decimal64 instant = 1 [json_name = "instant"];
               Decimal64 avg = 2 [json_name = "avg"];
               Decimal64 min = 3 [json_name = "min"];
               Decimal64 max = 4 [json_name = "max"];
               uint64 interval = 5 [json_name = "interval"];
               uint64 min_time = 6 [json_name = "min-time"];
               uint64 max_time = 7 [json_name = "max-time"];
            }
            InputPower input_power = 18 [json_name = "input-power"];
            message LaserBiasCurrent {
               Decimal64 instant = 1 [json_name = "instant"];
               Decimal64 avg = 2 [json_name = "avg"];
               Decimal64 min = 3 [json_name = "min"];
               Decimal64 max = 4 [json_name = "max"];
               uint64 interval = 5 [json_name = "interval"];
               uint64 min_time = 6 [json_name = "min-time"];
               uint64 max_time = 7 [json_name = "max-time"];
            }
            LaserBiasCurrent laser_bias_current = 19 [json_name = "laser-bias-current"];
         }
         State state = 2 [json_name = "state"];
         message PhysicalChannels {
            message Channel {
               uint32 index = 1 [json_name = "index"];
               message Config {
                  uint32 index = 1 [json_name = "index"];
                  string description = 2 [json_name = "description"];
                  bool tx_laser = 3 [json_name = "tx-laser"];
                  Decimal64 target_output_power = 4 [json_name = "target-output-power"];
               }
               Config config = 2 [json_name = "config"];
               message State {
                  uint32 index = 1 [json_name = "index"];
                  string description = 2 [json_name = "description"];
                  bool tx_laser = 3 [json_name = "tx-laser"];
                  Decimal64 target_output_power = 4 [json_name = "target-output-power"];
                  uint64 output_frequency = 5 [json_name = "output-frequency"];
                  message OutputPower {
                     Decimal64 instant = 1 [json_name = "instant"];
                     Decimal64 avg = 2 [json_name = "avg"];
                     Decimal64 min = 3 [json_name = "min"];
                     Decimal64 max = 4 [json_name = "max"];
                     uint64 interval = 5 [json_name = "interval"];
                     uint64 min_time = 6 [json_name = "min-time"];
                     uint64 max_time = 7 [json_name = "max-time"];
                  }
                  OutputPower output_power = 6 [json_name = "output-power"];
                  message InputPower {
                     Decimal64 instant = 1 [json_name = "instant"];
                     Decimal64 avg = 2 [json_name = "avg"];
                     Decimal64 min = 3 [json_name = "min"];
                     Decimal64 max = 4 [json_name = "max"];
                     uint64 interval = 5 [json_name = "interval"];
                     uint64 min_time = 6 [json_name = "min-time"];
                     uint64 max_time = 7 [json_name = "max-time"];
                  }
                  InputPower input_power = 7 [json_name = "input-power"];
                  message LaserBiasCurrent {
                     Decimal64 instant = 1 [json_name = "instant"];
                     Decimal64 avg = 2 [json_name = "avg"];
                     Decimal64 min = 3 [json_name = "min"];
                     Decimal64 max = 4 [json_name = "max"];
                     uint64 interval = 5 [json_name = "interval"];
                     uint64 min_time = 6 [json_name = "min-time"];
                     uint64 max_time = 7 [json_name = "max-time"];
                  }
                  LaserBiasCurrent laser_bias_current = 8 [json_name = "laser-bias-current"];
               }
               State state = 3 [json_name = "state"];
            }
            repeated Channel channel = 1 [json_name = "channel"];
         }
         PhysicalChannels physical_channels = 3 [json_name = "physical-channels"];
      }
      Transceiver transceiver = 16 [json_name = "transceiver"];
   }
   repeated Component component = 1 [json_name = "component"];
}
message Decimal64 {
   int64 value = 1 [json_name = "value"];
   uint32 fraction_digits = 2 [json_name = "fraction-digits"];
}

