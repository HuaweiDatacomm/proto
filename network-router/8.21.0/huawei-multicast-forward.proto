syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-08-03 16:01:26
// ProtoYang-version 1
// module huawei-multicast-forward
// revision 2020-06-13
// revision 2020-06-12
// revision 2020-04-01
// revision 2020-03-31
// revision 2020-03-17
// revision 2020-03-13
// revision 2020-03-12
// revision 2020-03-11
// revision 2020-03-10
// revision 2020-02-22
// revision 2020-02-16
// revision 2020-02-12
// revision 2020-01-22
// revision 2020-01-16
// revision 2019-12-28
// revision 2019-11-29
// revision 2019-11-28
// revision 2019-11-27
// revision 2019-11-26
// revision 2019-11-20
// revision 2019-11-01
// revision 2019-10-30
// revision 2019-10-22
// revision 2019-10-10
// revision 2019-03-30
// namespace urn:huawei:yang:huawei-multicast-forward

package huawei_multicast_forward;

service HuaweiMulticastForward {
   rpc GetMulticastForwardingDevice (GetMulticastForwardingDeviceRequest) returns (GetMulticastForwardingDeviceResponse);
   rpc GroupFastSwitch (GroupFastSwitchRequest) returns (Empty);
   rpc ResetBdEgressStatistics (ResetBdEgressStatisticsRequest) returns (Empty);
   rpc ResetL2EgressAllStatistics (ResetL2EgressAllStatisticsRequest) returns (Empty);
   rpc ResetL3EgressAllStatistics (ResetL3EgressAllStatisticsRequest) returns (Empty);
   rpc ResetL3EgressStatistics (ResetL3EgressStatisticsRequest) returns (Empty);
   rpc ResetVlanEgressStatistics (ResetVlanEgressStatisticsRequest) returns (Empty);
   rpc ResetVsiEgressStatistics (ResetVsiEgressStatisticsRequest) returns (Empty);
   rpc SendIgmpPacket (SendIgmpPacketRequest) returns (Empty);
   rpc SingleFastSwitch (SingleFastSwitchRequest) returns (Empty);
}
message GetMulticastForwardingDeviceRequest {
   string group_address = 1;
   string source_address = 2;
   uint32 trunk_id = 3;
   string vrf_name = 4;
}
message GroupFastSwitchRequest {
   string instance_group_id = 1;
   string outbound_group_id = 2;
   enum SwitchFieldType {
      SwitchFieldType_DEFAULT_FIELD = 0;
      SwitchFieldType_FIRST_FIELD = 1;
      SwitchFieldType_SECOND_FIELD = 2;
   };
   SwitchFieldType switch_field_type = 3;
   enum SwitchMode {
      SwitchMode_CLEAN_SWITCH = 0;
      SwitchMode_DEFAULT_SWITCH = 1;
   };
   SwitchMode switch_mode = 4;
}
message ResetBdEgressStatisticsRequest {
   uint32 bd_id = 1;
   string group_address = 2;
   string slot_id = 3;
   string source_address = 4;
}
message ResetL2EgressAllStatisticsRequest {
   string slot_id = 1;
}
message ResetL3EgressAllStatisticsRequest {
   string slot_id = 1;
}
message ResetL3EgressStatisticsRequest {
   string group_address = 1;
   string slot_id = 2;
   string source_address = 3;
   string vpn_name = 4;
}
message ResetVlanEgressStatisticsRequest {
   string group_address = 1;
   string slot_id = 2;
   string source_address = 3;
   string vlan_id = 4;
}
message ResetVsiEgressStatisticsRequest {
   string group_address = 1;
   string slot_id = 2;
   string source_address = 3;
   string vsi_name = 4;
}
message SendIgmpPacketRequest {
   string igmp_packet = 1;
   string interface_name = 2;
}
message SingleFastSwitchRequest {
   string instance_id = 1;
   string outbound_id = 2;
   enum SwitchFieldType {
      SwitchFieldType_DEFAULT_FIELD = 0;
      SwitchFieldType_FIRST_FIELD = 1;
      SwitchFieldType_SECOND_FIELD = 2;
   };
   SwitchFieldType switch_field_type = 3;
   enum SwitchMode {
      SwitchMode_CLEAN_SWITCH = 0;
      SwitchMode_DEFAULT_SWITCH = 1;
   };
   SwitchMode switch_mode = 4;
}
message GetMulticastForwardingDeviceResponse {
   string flow = 1;
}
message Empty { }
message MulticastForward {
   message EgressForwardMode {
      message Global {
         bool enable = 1 [json_name = "enable"];
      }
      Global global = 1 [json_name = "global"];
      repeated string slot = 2 [json_name = "slot"];
   }
   EgressForwardMode egress_forward_mode = 1 [json_name = "egress-forward-mode"];
   message Global {
      bool bw_car_enable = 1 [json_name = "bw-car-enable"];
      bool fragment_enable = 2 [json_name = "fragment-enable"];
      bool frr_revert_disable = 3 [json_name = "frr-revert-disable"];
      enum MonitorFrrCycle {
         INVALID_ENUM_VALUE_MonitorFrrCycle = 0;
         MonitorFrrCycle_X_20 = 20;
         MonitorFrrCycle_X_40 = 40;
         MonitorFrrCycle_X_100 = 100;
         MonitorFrrCycle_X_200 = 200;
         MonitorFrrCycle_X_500 = 500;
      };
      MonitorFrrCycle monitor_frr_cycle = 4 [json_name = "monitor-frr-cycle"];
      enum QosQueue1 {
         INVALID_ENUM_VALUE_QosQueue1 = 0;
         QosQueue1_BE = 1;
         QosQueue1_AF1 = 2;
      };
      QosQueue1 qos_queue1 = 5 [json_name = "qos-queue1"];
      enum QosQueue2 {
         INVALID_ENUM_VALUE_QosQueue2 = 0;
         QosQueue2_AF2 = 3;
         QosQueue2_AF3 = 4;
      };
      QosQueue2 qos_queue2 = 6 [json_name = "qos-queue2"];
      enum QosQueue3 {
         INVALID_ENUM_VALUE_QosQueue3 = 0;
         QosQueue3_AF4 = 5;
         QosQueue3_CS6 = 6;
      };
      QosQueue3 qos_queue3 = 7 [json_name = "qos-queue3"];
      enum QosQueue4 {
         INVALID_ENUM_VALUE_QosQueue4 = 0;
         QosQueue4_EF = 7;
         QosQueue4_CS7 = 8;
      };
      QosQueue4 qos_queue4 = 8 [json_name = "qos-queue4"];
      bool reliability_enhance_enable = 9 [json_name = "reliability-enhance-enable"];
      bool shaping_enable = 10 [json_name = "shaping-enable"];
      uint32 rui_port = 11 [json_name = "rui-port"];
   }
   Global global = 2 [json_name = "global"];
   message L2EgressStatistics {
      message BdEnables {
         message BdEnable {
            uint32 bd_id = 1 [json_name = "bd-id"];
            string group_address = 2 [json_name = "group-address"];
            string slot_id = 3 [json_name = "slot-id"];
            string source_address = 4 [json_name = "source-address"];
         }
         repeated BdEnable bd_enable = 1 [json_name = "bd-enable"];
      }
      BdEnables bd_enables = 1 [json_name = "bd-enables"];
      message BdStatistics {
         message BdStatistic {
            uint32 bd_id = 1 [json_name = "bd-id"];
            uint64 bit_rate = 2 [json_name = "bit-rate"];
            uint64 byte_number = 3 [json_name = "byte-number"];
            string group_address = 4 [json_name = "group-address"];
            string interface_name = 5 [json_name = "interface-name"];
            string interface_type = 6 [json_name = "interface-type"];
            uint64 packet_number = 7 [json_name = "packet-number"];
            uint64 packet_rate = 8 [json_name = "packet-rate"];
            string slot_id = 9 [json_name = "slot-id"];
            string source_address = 10 [json_name = "source-address"];
         }
         repeated BdStatistic bd_statistic = 1 [json_name = "bd-statistic"];
      }
      BdStatistics bd_statistics = 2 [json_name = "bd-statistics"];
      message EnableSlots {
         message EnableSlot {
            string slot_id = 1 [json_name = "slot-id"];
         }
         repeated EnableSlot enable_slot = 1 [json_name = "enable-slot"];
      }
      EnableSlots enable_slots = 3 [json_name = "enable-slots"];
      message VlanEnables {
         message VlanEnable {
            string group_address = 1 [json_name = "group-address"];
            string slot_id = 2 [json_name = "slot-id"];
            string source_address = 3 [json_name = "source-address"];
            uint32 vlan_id = 4 [json_name = "vlan-id"];
         }
         repeated VlanEnable vlan_enable = 1 [json_name = "vlan-enable"];
      }
      VlanEnables vlan_enables = 4 [json_name = "vlan-enables"];
      message VlanStatistics {
         message VlanStatistic {
            uint64 bit_rate = 1 [json_name = "bit-rate"];
            uint64 byte_number = 2 [json_name = "byte-number"];
            string group_address = 3 [json_name = "group-address"];
            string interface_name = 4 [json_name = "interface-name"];
            string interface_type = 5 [json_name = "interface-type"];
            uint64 packet_number = 6 [json_name = "packet-number"];
            uint64 packet_rate = 7 [json_name = "packet-rate"];
            string slot_id = 8 [json_name = "slot-id"];
            string source_address = 9 [json_name = "source-address"];
            uint32 vlan_id = 10 [json_name = "vlan-id"];
         }
         repeated VlanStatistic vlan_statistic = 1 [json_name = "vlan-statistic"];
      }
      VlanStatistics vlan_statistics = 5 [json_name = "vlan-statistics"];
      message VsiEnables {
         message VsiEnable {
            string group_address = 1 [json_name = "group-address"];
            string slot_id = 2 [json_name = "slot-id"];
            string source_address = 3 [json_name = "source-address"];
            string vsi_name = 4 [json_name = "vsi-name"];
         }
         repeated VsiEnable vsi_enable = 1 [json_name = "vsi-enable"];
      }
      VsiEnables vsi_enables = 6 [json_name = "vsi-enables"];
      message VsiStatistics {
         message VsiStatistic {
            uint64 bit_rate = 1 [json_name = "bit-rate"];
            uint64 byte_number = 2 [json_name = "byte-number"];
            string group_address = 3 [json_name = "group-address"];
            string interface_name = 4 [json_name = "interface-name"];
            string interface_type = 5 [json_name = "interface-type"];
            uint64 packet_number = 6 [json_name = "packet-number"];
            uint64 packet_rate = 7 [json_name = "packet-rate"];
            string slot_id = 8 [json_name = "slot-id"];
            string source_address = 9 [json_name = "source-address"];
            string vsi_name = 10 [json_name = "vsi-name"];
         }
         repeated VsiStatistic vsi_statistic = 1 [json_name = "vsi-statistic"];
      }
      VsiStatistics vsi_statistics = 7 [json_name = "vsi-statistics"];
   }
   L2EgressStatistics l2_egress_statistics = 3 [json_name = "l2-egress-statistics"];
   message L3EgressStatistics {
      message EnableSlots {
         message EnableSlot {
            string slot_id = 1 [json_name = "slot-id"];
         }
         repeated EnableSlot enable_slot = 1 [json_name = "enable-slot"];
      }
      EnableSlots enable_slots = 1 [json_name = "enable-slots"];
      message VpnEnables {
         message VpnEnable {
            string group_address = 1 [json_name = "group-address"];
            string slot_id = 2 [json_name = "slot-id"];
            string source_address = 3 [json_name = "source-address"];
            string vpn_name = 4 [json_name = "vpn-name"];
         }
         repeated VpnEnable vpn_enable = 1 [json_name = "vpn-enable"];
      }
      VpnEnables vpn_enables = 2 [json_name = "vpn-enables"];
      message VpnStatistics {
         message VpnStatistic {
            uint64 bit_rate = 1 [json_name = "bit-rate"];
            uint64 byte_number = 2 [json_name = "byte-number"];
            string group_address = 3 [json_name = "group-address"];
            string interface_name = 4 [json_name = "interface-name"];
            uint64 packet_number = 5 [json_name = "packet-number"];
            uint64 packet_rate = 6 [json_name = "packet-rate"];
            string slot_id = 7 [json_name = "slot-id"];
            string source_address = 8 [json_name = "source-address"];
            string vpn_name = 9 [json_name = "vpn-name"];
         }
         repeated VpnStatistic vpn_statistic = 1 [json_name = "vpn-statistic"];
      }
      VpnStatistics vpn_statistics = 3 [json_name = "vpn-statistics"];
   }
   L3EgressStatistics l3_egress_statistics = 4 [json_name = "l3-egress-statistics"];
   message McfwdEntrys {
      message McfwdEntry {
         enum AddressFamily {
            INVALID_ENUM_VALUE_AddressFamily = 0;
            AddressFamily_IPV4UNICAST = 1;
            AddressFamily_IPV6UNICAST = 2;
         };
         AddressFamily address_family = 1 [json_name = "address-family"];
         message ForwardInfors {
            message ForwardInfor {
               string active_time = 1 [json_name = "active-time"];
               uint32 bas_flag = 2 [json_name = "bas-flag"];
               string clone_source_adress = 3 [json_name = "clone-source-adress"];
               string flag = 4 [json_name = "flag"];
               uint64 forward_byte = 5 [json_name = "forward-byte"];
               uint64 forward_packet = 6 [json_name = "forward-packet"];
               uint64 forward_rate_bps = 7 [json_name = "forward-rate-bps"];
               uint64 forward_rate_pps = 8 [json_name = "forward-rate-pps"];
               string group_address = 9 [json_name = "group-address"];
               uint64 match_byte = 10 [json_name = "match-byte"];
               uint64 match_packet = 11 [json_name = "match-packet"];
               uint32 mid = 12 [json_name = "mid"];
               string mtoken = 13 [json_name = "mtoken"];
               string oif_name = 14 [json_name = "oif-name"];
               string sg_iif_name = 15 [json_name = "sg-iif-name"];
               string sg_up_exp_time = 16 [json_name = "sg-up-exp-time"];
               string sg_up_neighbor = 17 [json_name = "sg-up-neighbor"];
               string sg_up_time = 18 [json_name = "sg-up-time"];
               string source_address = 19 [json_name = "source-address"];
               string token = 20 [json_name = "token"];
               uint64 wrongif_packet = 21 [json_name = "wrongif-packet"];
            }
            repeated ForwardInfor forward_infor = 1 [json_name = "forward-infor"];
         }
         ForwardInfors forward_infors = 2 [json_name = "forward-infors"];
         string vrf_name = 3 [json_name = "vrf-name"];
      }
      repeated McfwdEntry mcfwd_entry = 1 [json_name = "mcfwd-entry"];
   }
   McfwdEntrys mcfwd_entrys = 5 [json_name = "mcfwd-entrys"];
   message MulticastOutgoingInterfaceStatics {
      message MulticastOutgoingInterfaceStatic {
         uint32 device_id = 1 [json_name = "device-id"];
         string ipv4_used_number = 2 [json_name = "ipv4-used-number"];
         string ipv6_used_number = 3 [json_name = "ipv6-used-number"];
         uint32 left_number = 4 [json_name = "left-number"];
         string others_number = 5 [json_name = "others-number"];
         enum ResourcePoolIndex {
            ResourcePoolIndex_X_0 = 0;
            ResourcePoolIndex_X_1 = 1;
            ResourcePoolIndex_NULL = 255;
         };
         ResourcePoolIndex resource_pool_index = 6 [json_name = "resource-pool-index"];
         string slot = 7 [json_name = "slot"];
         uint32 total_number = 8 [json_name = "total-number"];
         uint32 used_number = 9 [json_name = "used-number"];
      }
      repeated MulticastOutgoingInterfaceStatic multicast_outgoing_interface_static = 1 [json_name = "multicast-outgoing-interface-static"];
   }
   MulticastOutgoingInterfaceStatics multicast_outgoing_interface_statics = 6 [json_name = "multicast-outgoing-interface-statics"];
   message MulticastRemoteUsers {
      message MulticastRemoteUser {
         string flow = 1 [json_name = "flow"];
         string group_address = 2 [json_name = "group-address"];
         string source_address = 3 [json_name = "source-address"];
         uint32 trunk_id = 4 [json_name = "trunk-id"];
         string vrf_name = 5 [json_name = "vrf-name"];
      }
      repeated MulticastRemoteUser multicast_remote_user = 1 [json_name = "multicast-remote-user"];
   }
   MulticastRemoteUsers multicast_remote_users = 7 [json_name = "multicast-remote-users"];
   message MulticastSpeedStates {
      message MulticastSpeedState {
         uint32 ce_vid = 1 [json_name = "ce-vid"];
         enum FlowDirection {
            FlowDirection_INX_BOUND = 0;
            FlowDirection_OUTX_BOUND = 1;
         };
         FlowDirection flow_direction = 2 [json_name = "flow-direction"];
         string group_address = 3 [json_name = "group-address"];
         string interface_name = 4 [json_name = "interface-name"];
         message InterfaceStatistics {
            uint64 receive_byte = 1 [json_name = "receive-byte"];
            uint64 receive_byte_rate = 2 [json_name = "receive-byte-rate"];
            uint64 receive_packet = 3 [json_name = "receive-packet"];
            uint64 receive_packet_rate = 4 [json_name = "receive-packet-rate"];
         }
         InterfaceStatistics interface_statistics = 5 [json_name = "interface-statistics"];
         uint32 pe_vid = 6 [json_name = "pe-vid"];
         string source_address = 7 [json_name = "source-address"];
         uint32 vlan_id = 8 [json_name = "vlan-id"];
      }
      repeated MulticastSpeedState multicast_speed_state = 1 [json_name = "multicast-speed-state"];
   }
   MulticastSpeedStates multicast_speed_states = 8 [json_name = "multicast-speed-states"];
   message Nat {
      message Bind {
         message GroupBinds {
            message GroupBind {
               bool fast_mode_enable = 1 [json_name = "fast-mode-enable"];
               uint32 instance_group_id = 2 [json_name = "instance-group-id"];
               string instance_group_name = 3 [json_name = "instance-group-name"];
               uint32 outbound_group_id = 4 [json_name = "outbound-group-id"];
               string outbound_group_name = 5 [json_name = "outbound-group-name"];
               enum SwitchFieldType {
                  SwitchFieldType_DEFAULTX_FIELD = 0;
                  SwitchFieldType_FIRSTX_FIELD = 1;
                  SwitchFieldType_SECONDX_FIELD = 2;
               };
               SwitchFieldType switch_field_type = 6 [json_name = "switch-field-type"];
               enum SwitchMode {
                  SwitchMode_DEFAULTX_SWITCH = 0;
                  SwitchMode_CLEANX_SWITCH = 1;
               };
               SwitchMode switch_mode = 7 [json_name = "switch-mode"];
               uint32 switch_packet_offset = 8 [json_name = "switch-packet-offset"];
            }
            repeated GroupBind group_bind = 1 [json_name = "group-bind"];
         }
         GroupBinds group_binds = 1 [json_name = "group-binds"];
         message SingleBinds {
            message SingleBind {
               bool fast_mode_enable = 1 [json_name = "fast-mode-enable"];
               uint32 instance_id = 2 [json_name = "instance-id"];
               string instance_name = 3 [json_name = "instance-name"];
               uint32 outbound_id = 4 [json_name = "outbound-id"];
               string outbound_name = 5 [json_name = "outbound-name"];
               enum SwitchFieldType {
                  SwitchFieldType_DEFAULTX_FIELD = 0;
                  SwitchFieldType_FIRSTX_FIELD = 1;
                  SwitchFieldType_SECONDX_FIELD = 2;
               };
               SwitchFieldType switch_field_type = 6 [json_name = "switch-field-type"];
               enum SwitchMode {
                  SwitchMode_DEFAULTX_SWITCH = 0;
                  SwitchMode_CLEANX_SWITCH = 1;
               };
               SwitchMode switch_mode = 7 [json_name = "switch-mode"];
               uint32 switch_packet_offset = 8 [json_name = "switch-packet-offset"];
            }
            repeated SingleBind single_bind = 1 [json_name = "single-bind"];
         }
         SingleBinds single_binds = 2 [json_name = "single-binds"];
         message CleanSwitchInterval {
            uint32 interval = 1 [json_name = "interval"];
         }
         CleanSwitchInterval clean_switch_interval = 3 [json_name = "clean-switch-interval"];
      }
      Bind bind = 1 [json_name = "bind"];
      message InboundInterfaces {
         message InboundInterface {
            bool igmp_enable = 1 [json_name = "igmp-enable"];
            string interface_name = 2 [json_name = "interface-name"];
         }
         repeated InboundInterface inbound_interface = 1 [json_name = "inbound-interface"];
      }
      InboundInterfaces inbound_interfaces = 2 [json_name = "inbound-interfaces"];
      message InstanceGroups {
         message InstanceGroup {
            uint32 group_id = 1 [json_name = "group-id"];
            string group_name = 2 [json_name = "group-name"];
            message PartInstances {
               message PartInstance {
                  uint32 instance_id = 1 [json_name = "instance-id"];
                  string instance_name = 2 [json_name = "instance-name"];
                  uint32 part_id = 3 [json_name = "part-id"];
                  enum StreamType {
                     StreamType_DEFAULTX_STREAMX_TYPE = 0;
                     StreamType_VIDEOX_STREAM = 1;
                     StreamType_ANCILLARYX_DATA = 2;
                     StreamType_AUDIOX_STREAM = 3;
                  };
                  StreamType stream_type = 4 [json_name = "stream-type"];
               }
               repeated PartInstance part_instance = 1 [json_name = "part-instance"];
            }
            PartInstances part_instances = 3 [json_name = "part-instances"];
         }
         repeated InstanceGroup instance_group = 1 [json_name = "instance-group"];
      }
      InstanceGroups instance_groups = 3 [json_name = "instance-groups"];
      message Instances {
         message Instance {
            string behavior_name = 1 [json_name = "behavior-name"];
            uint32 instance_id = 2 [json_name = "instance-id"];
            string instance_name = 3 [json_name = "instance-name"];
            message Outbounds {
               message Outbound {
                  string destination_address = 1 [json_name = "destination-address"];
                  string dst_address_trans_mode = 2 [json_name = "dst-address-trans-mode"];
                  uint32 dst_udp_port = 3 [json_name = "dst-udp-port"];
                  string dst_udp_trans_mode = 4 [json_name = "dst-udp-trans-mode"];
                  string interface_name = 5 [json_name = "interface-name"];
                  uint32 outbound_id = 6 [json_name = "outbound-id"];
                  string outbound_name = 7 [json_name = "outbound-name"];
                  string rtp_ext_seq_num_trans_mode = 8 [json_name = "rtp-ext-seq-num-trans-mode"];
                  string rtp_seq_num_trans_mode = 9 [json_name = "rtp-seq-num-trans-mode"];
                  string rtp_ssrc_trans_mode = 10 [json_name = "rtp-ssrc-trans-mode"];
                  string source_address = 11 [json_name = "source-address"];
                  uint32 source_udp_port = 12 [json_name = "source-udp-port"];
                  string source_udp_trans_mode = 13 [json_name = "source-udp-trans-mode"];
                  string src_address_trans_mode = 14 [json_name = "src-address-trans-mode"];
                  string src_mac_trans_mode = 15 [json_name = "src-mac-trans-mode"];
               }
               repeated Outbound outbound = 1 [json_name = "outbound"];
            }
            Outbounds outbounds = 4 [json_name = "outbounds"];
            message SwitchingPacketOffset {
               uint32 offset_value = 1 [json_name = "offset-value"];
            }
            SwitchingPacketOffset switching_packet_offset = 5 [json_name = "switching-packet-offset"];
         }
         repeated Instance instance = 1 [json_name = "instance"];
      }
      Instances instances = 4 [json_name = "instances"];
      message OutboundGroups {
         message OutboundGroup {
            uint32 group_id = 1 [json_name = "group-id"];
            string group_name = 2 [json_name = "group-name"];
            message PartOutbounds {
               message PartOutbound {
                  uint32 outbound_id = 1 [json_name = "outbound-id"];
                  string outbound_name = 2 [json_name = "outbound-name"];
                  uint32 part_id = 3 [json_name = "part-id"];
                  enum StreamType {
                     StreamType_DEFAULTX_STREAMX_TYPE = 0;
                     StreamType_VIDEOX_STREAM = 1;
                     StreamType_ANCILLARYX_DATA = 2;
                     StreamType_AUDIOX_STREAM = 3;
                  };
                  StreamType stream_type = 4 [json_name = "stream-type"];
               }
               repeated PartOutbound part_outbound = 1 [json_name = "part-outbound"];
            }
            PartOutbounds part_outbounds = 3 [json_name = "part-outbounds"];
         }
         repeated OutboundGroup outbound_group = 1 [json_name = "outbound-group"];
      }
      OutboundGroups outbound_groups = 5 [json_name = "outbound-groups"];
      message Outbounds {
         message Outbound {
            string destination_address = 1 [json_name = "destination-address"];
            bool destination_address_trans_mode = 2 [json_name = "destination-address-trans-mode"];
            uint32 destination_udp_port = 3 [json_name = "destination-udp-port"];
            bool destination_udp_trans_mode = 4 [json_name = "destination-udp-trans-mode"];
            string interface_name = 5 [json_name = "interface-name"];
            uint32 outbound_id = 6 [json_name = "outbound-id"];
            string outbound_name = 7 [json_name = "outbound-name"];
            enum RtpExtSeqNumTransMode {
               RtpExtSeqNumTransMode_NOTX_TRANSLATE = 0;
               RtpExtSeqNumTransMode_AUTOX_TRANSLATE = 1;
            };
            RtpExtSeqNumTransMode rtp_ext_seq_num_trans_mode = 8 [json_name = "rtp-ext-seq-num-trans-mode"];
            enum RtpSeqNumTransMode {
               RtpSeqNumTransMode_NOTX_TRANSLATE = 0;
               RtpSeqNumTransMode_AUTOX_TRANSLATE = 1;
            };
            RtpSeqNumTransMode rtp_seq_num_trans_mode = 9 [json_name = "rtp-seq-num-trans-mode"];
            enum RtpSsrcTransMode {
               RtpSsrcTransMode_NOTX_TRANSLATE = 0;
               RtpSsrcTransMode_AUTOX_TRANSLATE = 1;
            };
            RtpSsrcTransMode rtp_ssrc_trans_mode = 10 [json_name = "rtp-ssrc-trans-mode"];
            string source_address = 11 [json_name = "source-address"];
            bool source_address_trans_mode = 12 [json_name = "source-address-trans-mode"];
            enum SourceMacTransMode {
               SourceMacTransMode_NOTX_TRANSLATE = 0;
               SourceMacTransMode_AUTOX_TRANSLATE = 1;
            };
            SourceMacTransMode source_mac_trans_mode = 13 [json_name = "source-mac-trans-mode"];
            uint32 source_udp_port = 14 [json_name = "source-udp-port"];
            bool source_udp_trans_mode = 15 [json_name = "source-udp-trans-mode"];
         }
         repeated Outbound outbound = 1 [json_name = "outbound"];
      }
      Outbounds outbounds = 6 [json_name = "outbounds"];
      bool ttl_decrease_disable = 7 [json_name = "ttl-decrease-disable"];
      message SourceAddresses {
         message SourceAddress {
            string vpn_name = 1 [json_name = "vpn-name"];
            string address = 2 [json_name = "address"];
         }
         repeated SourceAddress source_address = 1 [json_name = "source-address"];
      }
      SourceAddresses source_addresses = 8 [json_name = "source-addresses"];
   }
   Nat nat = 9 [json_name = "nat"];
   message SpatialMulticast {
      message BoardEnables {
         message BoardEnable {
            string slot = 1 [json_name = "slot"];
         }
         repeated BoardEnable board_enable = 1 [json_name = "board-enable"];
      }
      BoardEnables board_enables = 1 [json_name = "board-enables"];
      message ChannelBandwiths {
         message ChannelBandwith {
            uint64 bandwith_free = 1 [json_name = "bandwith-free"];
            uint64 bandwith_use = 2 [json_name = "bandwith-use"];
            uint32 sc_id = 3 [json_name = "sc-id"];
         }
         repeated ChannelBandwith channel_bandwith = 1 [json_name = "channel-bandwith"];
      }
      ChannelBandwiths channel_bandwiths = 2 [json_name = "channel-bandwiths"];
      message Ipv4MulticastBandwidthStates {
         message Ipv4MulticastBandwidthState {
            uint64 bandwidth = 1 [json_name = "bandwidth"];
            string group_address = 2 [json_name = "group-address"];
            uint32 sc_id = 3 [json_name = "sc-id"];
            string source_address = 4 [json_name = "source-address"];
            string vrf_name = 5 [json_name = "vrf-name"];
         }
         repeated Ipv4MulticastBandwidthState ipv4_multicast_bandwidth_state = 1 [json_name = "ipv4-multicast-bandwidth-state"];
      }
      Ipv4MulticastBandwidthStates ipv4_multicast_bandwidth_states = 3 [json_name = "ipv4-multicast-bandwidth-states"];
      message Ipv4MulticastBandwidths {
         message Ipv4MulticastBandwidth {
            uint64 bandwidth = 1 [json_name = "bandwidth"];
            string group_address = 2 [json_name = "group-address"];
            uint32 group_address_mask = 3 [json_name = "group-address-mask"];
            string source_address = 4 [json_name = "source-address"];
            string vrf_name = 5 [json_name = "vrf-name"];
         }
         repeated Ipv4MulticastBandwidth ipv4_multicast_bandwidth = 1 [json_name = "ipv4-multicast-bandwidth"];
      }
      Ipv4MulticastBandwidths ipv4_multicast_bandwidths = 4 [json_name = "ipv4-multicast-bandwidths"];
      message MplsBandwidths {
         message MplsBandwidth {
            uint64 bandwidth = 1 [json_name = "bandwidth"];
            enum ServiceType {
               INVALID_ENUM_VALUE_ServiceType = 0;
               ServiceType_P2MPTE = 4;
               ServiceType_MLDP = 5;
            };
            ServiceType service_type = 2 [json_name = "service-type"];
         }
         repeated MplsBandwidth mpls_bandwidth = 1 [json_name = "mpls-bandwidth"];
      }
      MplsBandwidths mpls_bandwidths = 5 [json_name = "mpls-bandwidths"];
      message VlanMulticastBandwidthStates {
         message VlanMulticastBandwidthState {
            uint64 bandwidth = 1 [json_name = "bandwidth"];
            string group_address = 2 [json_name = "group-address"];
            uint32 sc_id = 3 [json_name = "sc-id"];
            string source_address = 4 [json_name = "source-address"];
            uint32 vlan_id = 5 [json_name = "vlan-id"];
         }
         repeated VlanMulticastBandwidthState vlan_multicast_bandwidth_state = 1 [json_name = "vlan-multicast-bandwidth-state"];
      }
      VlanMulticastBandwidthStates vlan_multicast_bandwidth_states = 6 [json_name = "vlan-multicast-bandwidth-states"];
      message VlanMulticastBandwidths {
         message VlanMulticastBandwidth {
            uint64 bandwidth = 1 [json_name = "bandwidth"];
            string group_address = 2 [json_name = "group-address"];
            uint32 group_address_mask = 3 [json_name = "group-address-mask"];
            string source_address = 4 [json_name = "source-address"];
            uint32 vlan_id = 5 [json_name = "vlan-id"];
         }
         repeated VlanMulticastBandwidth vlan_multicast_bandwidth = 1 [json_name = "vlan-multicast-bandwidth"];
      }
      VlanMulticastBandwidths vlan_multicast_bandwidths = 7 [json_name = "vlan-multicast-bandwidths"];
      message VsiMulticastBandwidthStates {
         message VsiMulticastBandwidthState {
            uint64 bandwidth = 1 [json_name = "bandwidth"];
            string group_address = 2 [json_name = "group-address"];
            uint32 sc_id = 3 [json_name = "sc-id"];
            string source_address = 4 [json_name = "source-address"];
            string vsi_name = 5 [json_name = "vsi-name"];
         }
         repeated VsiMulticastBandwidthState vsi_multicast_bandwidth_state = 1 [json_name = "vsi-multicast-bandwidth-state"];
      }
      VsiMulticastBandwidthStates vsi_multicast_bandwidth_states = 8 [json_name = "vsi-multicast-bandwidth-states"];
      message VsiMulticastBandwidths {
         message VsiMulticastBandwidth {
            uint64 bandwidth = 1 [json_name = "bandwidth"];
            string group_address = 2 [json_name = "group-address"];
            uint32 group_address_mask = 3 [json_name = "group-address-mask"];
            string source_address = 4 [json_name = "source-address"];
            string vsi_name = 5 [json_name = "vsi-name"];
         }
         repeated VsiMulticastBandwidth vsi_multicast_bandwidth = 1 [json_name = "vsi-multicast-bandwidth"];
      }
      VsiMulticastBandwidths vsi_multicast_bandwidths = 9 [json_name = "vsi-multicast-bandwidths"];
   }
   SpatialMulticast spatial_multicast = 10 [json_name = "spatial-multicast"];
   message RandomDetect {
      bool enable = 1 [json_name = "enable"];
      message Rules {
         message Rule {
            string source_address = 1 [json_name = "source-address"];
            string group_address = 2 [json_name = "group-address"];
            string vpn_name = 3 [json_name = "vpn-name"];
            string mask = 4 [json_name = "mask"];
         }
         repeated Rule rule = 1 [json_name = "rule"];
      }
      Rules rules = 2 [json_name = "rules"];
      message SelectResults {
         message SelectResult {
            string slot = 1 [json_name = "slot"];
            string source_address = 2 [json_name = "source-address"];
            string group_address = 3 [json_name = "group-address"];
            string vpn_name = 4 [json_name = "vpn-name"];
            uint32 multicast_group_id = 5 [json_name = "multicast-group-id"];
         }
         repeated SelectResult select_result = 1 [json_name = "select-result"];
      }
      SelectResults select_results = 3 [json_name = "select-results"];
   }
   RandomDetect random_detect = 11 [json_name = "random-detect"];
   message StaticFrr {
      message StaticFrrEnables {
         message StaticFrrEnable {
            string source_address = 1 [json_name = "source-address"];
            string group_address = 2 [json_name = "group-address"];
            string vpn_name = 3 [json_name = "vpn-name"];
            string mask = 4 [json_name = "mask"];
         }
         repeated StaticFrrEnable static_frr_enable = 1 [json_name = "static-frr-enable"];
      }
      StaticFrrEnables static_frr_enables = 1 [json_name = "static-frr-enables"];
      message StaticFrrStatuss {
         message StaticFrrStatus {
            string source_address = 1 [json_name = "source-address"];
            string group_address = 2 [json_name = "group-address"];
            string vpn_name = 3 [json_name = "vpn-name"];
            enum Status {
               INVALID_ENUM_VALUE_Status = 0;
               Status_STATIC = 1;
               Status_DYNAMIC = 2;
            };
            Status status = 4 [json_name = "status"];
            enum FrrType {
               FrrType_INIT = 0;
               FrrType_NORMAL = 1;
               FrrType_NGMVPN = 2;
               FrrType_CLONE = 3;
            };
            FrrType frr_type = 5 [json_name = "frr-type"];
            uint32 master_id = 6 [json_name = "master-id"];
            uint32 backup_id = 7 [json_name = "backup-id"];
            string primary_interface_name = 8 [json_name = "primary-interface-name"];
            string backup_interface_name = 9 [json_name = "backup-interface-name"];
            string primary_source_address = 10 [json_name = "primary-source-address"];
            string backup_source_address = 11 [json_name = "backup-source-address"];
            string primary_root_address = 12 [json_name = "primary-root-address"];
            string backup_root_address = 13 [json_name = "backup-root-address"];
            enum ReceiveStatus {
               ReceiveStatus_BACKUP = 0;
               ReceiveStatus_PRIMARY = 1;
            };
            ReceiveStatus receive_status = 14 [json_name = "receive-status"];
            enum AddressFamily {
               AddressFamily_UNKNOWN = 0;
               AddressFamily_IPV4 = 1;
               AddressFamily_IPV6 = 2;
            };
            AddressFamily address_family = 15 [json_name = "address-family"];
         }
         repeated StaticFrrStatus static_frr_status = 1 [json_name = "static-frr-status"];
      }
      StaticFrrStatuss static_frr_statuss = 2 [json_name = "static-frr-statuss"];
   }
   StaticFrr static_frr = 12 [json_name = "static-frr"];
   message StandGroupMacSuppressions {
      enum StandGroupMacSuppression {
         StandGroupMacSuppression_DISABLE = 0;
         StandGroupMacSuppression_ENABLE = 1;
      };
      StandGroupMacSuppression stand_group_mac_suppression = 1 [json_name = "stand-group-mac-suppression"];
   }
   StandGroupMacSuppressions stand_group_mac_suppressions = 13 [json_name = "stand-group-mac-suppressions"];
   message MulticastShaping {
      message MulticastLists {
         message MulticastList {
            uint32 index = 1 [json_name = "index"];
            string name = 2 [json_name = "name"];
            uint32 cir = 3 [json_name = "cir"];
            uint32 pir = 4 [json_name = "pir"];
            uint32 queue_length = 5 [json_name = "queue-length"];
         }
         repeated MulticastList multicast_list = 1 [json_name = "multicast-list"];
      }
      MulticastLists multicast_lists = 1 [json_name = "multicast-lists"];
   }
   MulticastShaping multicast_shaping = 14 [json_name = "multicast-shaping"];
   message MacIpCheck {
      bool mac_ip_check_enable = 1 [json_name = "mac-ip-check-enable"];
   }
   MacIpCheck mac_ip_check = 15 [json_name = "mac-ip-check"];
}
message ResetBasMulticastRuiStatics {
}

