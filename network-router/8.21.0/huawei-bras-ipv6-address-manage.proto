syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-09-01 20:16:01
// ProtoYang-version 1
// module huawei-bras-ipv6-address-manage
// revision 2020-02-22
// revision 2020-01-19
// revision 2019-12-31
// revision 2019-12-30
// revision 2019-12-18
// revision 2019-12-11
// revision 2019-12-07
// revision 2019-11-09
// revision 2019-11-05
// revision 2019-10-17
// revision 2019-05-08
// namespace urn:huawei:yang:huawei-bras-ipv6-address-manage

package huawei_bras_ipv6_address_manage;

message BrasIpv6AddressManage {
   message Ipv6Prefixs {
      message Ipv6Prefix {
         string name = 1 [json_name = "name"];
         enum Type {
            INVALID_ENUM_VALUE_Type = 0;
            Type_LOCAL = 1;
            Type_DELEGATION = 2;
            Type_REMOTE = 3;
            Type_DYNAMIC = 4;
         };
         Type type = 2 [json_name = "type"];
         message Local {
            message OccupiedPolicy {
               message OccupiedPolicy6_UpId {
                  uint32 up_id = 1 [json_name = "up-id"];
               }
               message OccupiedPolicy6_UpBackupProfile {
                  string up_backup_profile = 1 [json_name = "up-backup-profile"];
               }
               message OccupiedPolicy6_HotStandbyUpGroup {
                  uint32 master_up = 1 [json_name = "master-up"];
                  uint32 slave_up = 2 [json_name = "slave-up"];
               }
               message OccupiedPolicy6_UpGroup {
                  uint32 master_up_id = 1 [json_name = "master-up-id"];
                  uint32 slave_up_id = 2 [json_name = "slave-up-id"];
               }
               oneof OccupiedPolicy6 {
                  OccupiedPolicy6_UpId occupied_policy_up_id = 1 [json_name = "up-id"];
                  OccupiedPolicy6_UpBackupProfile occupied_policy_up_backup_profile = 2 [json_name = "up-backup-profile"];
                  OccupiedPolicy6_HotStandbyUpGroup occupied_policy_hot_standby_up_group = 3 [json_name = "hot-standby-up-group"];
                  OccupiedPolicy6_UpGroup occupied_policy_up_group = 4 [json_name = "up-group"];
               }
            }
            OccupiedPolicy occupied_policy = 1 [json_name = "occupied-policy"];
            message PrefixAddress {
               string prefix = 1 [json_name = "prefix"];
            }
            PrefixAddress prefix_address = 2 [json_name = "prefix-address"];
            message VpnInstance {
               string name = 1 [json_name = "name"];
            }
            VpnInstance vpn_instance = 3 [json_name = "vpn-instance"];
            message ExcludeIpv6Addresss {
               message ExcludeIpv6Address {
                  string start_ipv6_address = 1 [json_name = "start-ipv6-address"];
                  string end_ipv6_address = 2 [json_name = "end-ipv6-address"];
               }
               repeated ExcludeIpv6Address exclude_ipv6_address = 1 [json_name = "exclude-ipv6-address"];
            }
            ExcludeIpv6Addresss exclude_ipv6_addresss = 4 [json_name = "exclude-ipv6-addresss"];
            message Lifetime {
               message PreferredLifetime_PreferredInfinite {
                  bool preferred_infinite = 1 [json_name = "preferred-infinite"];
               }
               message PreferredLifetime_PreferredTime {
                  uint32 preferred_day = 1 [json_name = "preferred-day"];
                  uint32 preferred_hour = 2 [json_name = "preferred-hour"];
                  uint32 preferred_minute = 3 [json_name = "preferred-minute"];
               }
               oneof PreferredLifetime {
                  PreferredLifetime_PreferredInfinite preferred_lifetime_preferred_infinite = 1 [json_name = "preferred-infinite"];
                  PreferredLifetime_PreferredTime preferred_lifetime_preferred_time = 2 [json_name = "preferred-time"];
               }
               message ValidLifetime_ValidInfinite {
                  bool valid_infinite = 1 [json_name = "valid-infinite"];
               }
               message ValidLifetime_ValidTime {
                  uint32 valid_day = 1 [json_name = "valid-day"];
                  uint32 valid_hour = 2 [json_name = "valid-hour"];
                  uint32 valid_minute = 3 [json_name = "valid-minute"];
               }
               oneof ValidLifetime {
                  ValidLifetime_ValidInfinite valid_lifetime_valid_infinite = 3 [json_name = "valid-infinite"];
                  ValidLifetime_ValidTime valid_lifetime_valid_time = 4 [json_name = "valid-time"];
               }
            }
            Lifetime lifetime = 5 [json_name = "lifetime"];
            message ReservedIpv6 {
               enum ReservedType {
                  INVALID_ENUM_VALUE_ReservedType = 0;
                  ReservedType_MAC = 1;
                  ReservedType_DUID = 2;
               };
               ReservedType reserved_type = 1 [json_name = "reserved-type"];
               bool lease = 2 [json_name = "lease"];
            }
            ReservedIpv6 reserved_ipv6 = 6 [json_name = "reserved-ipv6"];
            message FrameIpv6Lease {
               bool enable = 1 [json_name = "enable"];
            }
            FrameIpv6Lease frame_ipv6_lease = 7 [json_name = "frame-ipv6-lease"];
            message ConstantIndex {
               uint32 value = 1 [json_name = "value"];
            }
            ConstantIndex constant_index = 8 [json_name = "constant-index"];
         }
         Local local = 3 [json_name = "local"];
         message Delegation {
            message OccupiedPolicy {
               message OccupiedPolicy6_UpId {
                  uint32 up_id = 1 [json_name = "up-id"];
               }
               message OccupiedPolicy6_UpBackupProfile {
                  string up_backup_profile = 1 [json_name = "up-backup-profile"];
               }
               message OccupiedPolicy6_HotStandbyUpGroup {
                  uint32 master_up = 1 [json_name = "master-up"];
                  uint32 slave_up = 2 [json_name = "slave-up"];
               }
               message OccupiedPolicy6_UpGroup {
                  uint32 master_up_id = 1 [json_name = "master-up-id"];
                  uint32 slave_up_id = 2 [json_name = "slave-up-id"];
               }
               oneof OccupiedPolicy6 {
                  OccupiedPolicy6_UpId occupied_policy_up_id = 1 [json_name = "up-id"];
                  OccupiedPolicy6_UpBackupProfile occupied_policy_up_backup_profile = 2 [json_name = "up-backup-profile"];
                  OccupiedPolicy6_HotStandbyUpGroup occupied_policy_hot_standby_up_group = 3 [json_name = "hot-standby-up-group"];
                  OccupiedPolicy6_UpGroup occupied_policy_up_group = 4 [json_name = "up-group"];
               }
            }
            OccupiedPolicy occupied_policy = 1 [json_name = "occupied-policy"];
            message PrefixAddress {
               string prefix = 1 [json_name = "prefix"];
               uint32 prefix_length = 2 [json_name = "prefix-length"];
            }
            PrefixAddress prefix_address = 2 [json_name = "prefix-address"];
            message Dhcpv6UnshareOnly {
               bool enable = 1 [json_name = "enable"];
            }
            Dhcpv6UnshareOnly dhcpv6_unshare_only = 3 [json_name = "dhcpv6-unshare-only"];
            message VpnInstance {
               string name = 1 [json_name = "name"];
            }
            VpnInstance vpn_instance = 4 [json_name = "vpn-instance"];
            message ExcludeIpv6Addresss {
               message ExcludeIpv6Address {
                  string start_ipv6_address = 1 [json_name = "start-ipv6-address"];
                  string end_ipv6_address = 2 [json_name = "end-ipv6-address"];
               }
               repeated ExcludeIpv6Address exclude_ipv6_address = 1 [json_name = "exclude-ipv6-address"];
            }
            ExcludeIpv6Addresss exclude_ipv6_addresss = 5 [json_name = "exclude-ipv6-addresss"];
            message Lifetime {
               message PreferredLifetime_PreferredInfinite {
                  bool preferred_infinite = 1 [json_name = "preferred-infinite"];
               }
               message PreferredLifetime_PreferredTime {
                  uint32 preferred_day = 1 [json_name = "preferred-day"];
                  uint32 preferred_hour = 2 [json_name = "preferred-hour"];
                  uint32 preferred_minute = 3 [json_name = "preferred-minute"];
               }
               oneof PreferredLifetime {
                  PreferredLifetime_PreferredInfinite preferred_lifetime_preferred_infinite = 1 [json_name = "preferred-infinite"];
                  PreferredLifetime_PreferredTime preferred_lifetime_preferred_time = 2 [json_name = "preferred-time"];
               }
               message ValidLifetime_ValidInfinite {
                  bool valid_infinite = 1 [json_name = "valid-infinite"];
               }
               message ValidLifetime_ValidTime {
                  uint32 valid_day = 1 [json_name = "valid-day"];
                  uint32 valid_hour = 2 [json_name = "valid-hour"];
                  uint32 valid_minute = 3 [json_name = "valid-minute"];
               }
               oneof ValidLifetime {
                  ValidLifetime_ValidInfinite valid_lifetime_valid_infinite = 3 [json_name = "valid-infinite"];
                  ValidLifetime_ValidTime valid_lifetime_valid_time = 4 [json_name = "valid-time"];
               }
            }
            Lifetime lifetime = 6 [json_name = "lifetime"];
            message ReservedIpv6 {
               enum ReservedType {
                  INVALID_ENUM_VALUE_ReservedType = 0;
                  ReservedType_MAC = 1;
                  ReservedType_DUID = 2;
               };
               ReservedType reserved_type = 1 [json_name = "reserved-type"];
               bool lease = 2 [json_name = "lease"];
            }
            ReservedIpv6 reserved_ipv6 = 7 [json_name = "reserved-ipv6"];
            message FrameIpv6Lease {
               bool enable = 1 [json_name = "enable"];
            }
            FrameIpv6Lease frame_ipv6_lease = 8 [json_name = "frame-ipv6-lease"];
            message ConstantIndex {
               uint32 value = 1 [json_name = "value"];
            }
            ConstantIndex constant_index = 9 [json_name = "constant-index"];
            message SlaacUnshareOnly {
               bool enable = 1 [json_name = "enable"];
            }
            SlaacUnshareOnly slaac_unshare_only = 10 [json_name = "slaac-unshare-only"];
            message PdUnshareOnly {
               bool enable = 1 [json_name = "enable"];
            }
            PdUnshareOnly pd_unshare_only = 11 [json_name = "pd-unshare-only"];
            message ClientDuidBinds {
               message ClientDuidBind {
                  string client_duid = 1 [json_name = "client-duid"];
                  string prefix_address = 2 [json_name = "prefix-address"];
               }
               repeated ClientDuidBind client_duid_bind = 1 [json_name = "client-duid-bind"];
            }
            ClientDuidBinds client_duid_binds = 12 [json_name = "client-duid-binds"];
         }
         Delegation delegation = 4 [json_name = "delegation"];
         message Remote {
            message OccupiedPolicy {
               message OccupiedPolicy6_UpId {
                  uint32 up_id = 1 [json_name = "up-id"];
               }
               message OccupiedPolicy6_UpBackupProfile {
                  string up_backup_profile = 1 [json_name = "up-backup-profile"];
               }
               message OccupiedPolicy6_HotStandbyUpGroup {
                  uint32 master_up = 1 [json_name = "master-up"];
                  uint32 slave_up = 2 [json_name = "slave-up"];
               }
               message OccupiedPolicy6_UpGroup {
                  uint32 master_up_id = 1 [json_name = "master-up-id"];
                  uint32 slave_up_id = 2 [json_name = "slave-up-id"];
               }
               oneof OccupiedPolicy6 {
                  OccupiedPolicy6_UpId occupied_policy_up_id = 1 [json_name = "up-id"];
                  OccupiedPolicy6_UpBackupProfile occupied_policy_up_backup_profile = 2 [json_name = "up-backup-profile"];
                  OccupiedPolicy6_HotStandbyUpGroup occupied_policy_hot_standby_up_group = 3 [json_name = "hot-standby-up-group"];
                  OccupiedPolicy6_UpGroup occupied_policy_up_group = 4 [json_name = "up-group"];
               }
            }
            OccupiedPolicy occupied_policy = 1 [json_name = "occupied-policy"];
            message VpnInstance {
               string name = 1 [json_name = "name"];
            }
            VpnInstance vpn_instance = 2 [json_name = "vpn-instance"];
            message LinkAddress {
               string ipv6_address = 1 [json_name = "ipv6-address"];
            }
            LinkAddress link_address = 3 [json_name = "link-address"];
            message Dhcpv6Only {
               bool enable = 1 [json_name = "enable"];
            }
            Dhcpv6Only dhcpv6_only = 4 [json_name = "dhcpv6-only"];
            message LeaseManagement {
               bool enable = 1 [json_name = "enable"];
            }
            LeaseManagement lease_management = 5 [json_name = "lease-management"];
            message ReservedIpv6 {
               enum ReservedType {
                  INVALID_ENUM_VALUE_ReservedType = 0;
                  ReservedType_MAC = 1;
                  ReservedType_DUID = 2;
               };
               ReservedType reserved_type = 1 [json_name = "reserved-type"];
            }
            ReservedIpv6 reserved_ipv6 = 6 [json_name = "reserved-ipv6"];
            message Lock {
               bool enable = 1 [json_name = "enable"];
            }
            Lock lock = 7 [json_name = "lock"];
            message ConstantIndex {
               uint32 value = 1 [json_name = "value"];
            }
            ConstantIndex constant_index = 8 [json_name = "constant-index"];
            message SlaacUnshareOnly {
               bool enable = 1 [json_name = "enable"];
            }
            SlaacUnshareOnly slaac_unshare_only = 9 [json_name = "slaac-unshare-only"];
         }
         Remote remote = 5 [json_name = "remote"];
         message Dynamic {
            message PrefixLength {
               message ShareMode_Shared {
                  uint32 shared_initial = 1 [json_name = "shared-initial"];
                  uint32 shared_extend = 2 [json_name = "shared-extend"];
               }
               message ShareMode_Unshared {
                  uint32 unshared_initial = 1 [json_name = "unshared-initial"];
                  uint32 unshared_extend = 2 [json_name = "unshared-extend"];
                  uint32 unshared_delegating = 3 [json_name = "unshared-delegating"];
                  message SlaacUnshareOnly {
                     bool enable = 1 [json_name = "enable"];
                  }
                  SlaacUnshareOnly slaac_unshare_only = 4 [json_name = "slaac-unshare-only"];
                  message PdUnshareOnly {
                     bool enable = 1 [json_name = "enable"];
                  }
                  PdUnshareOnly pd_unshare_only = 5 [json_name = "pd-unshare-only"];
               }
               oneof ShareMode {
                  ShareMode_Shared share_mode_shared = 1 [json_name = "shared"];
                  ShareMode_Unshared share_mode_unshared = 2 [json_name = "unshared"];
               }
            }
            PrefixLength prefix_length = 1 [json_name = "prefix-length"];
            message VpnInstance {
               string name = 1 [json_name = "name"];
            }
            VpnInstance vpn_instance = 2 [json_name = "vpn-instance"];
            message ConstantIndex {
               uint32 value = 1 [json_name = "value"];
            }
            ConstantIndex constant_index = 3 [json_name = "constant-index"];
            message DapServer {
               string name = 1 [json_name = "name"];
            }
            DapServer dap_server = 4 [json_name = "dap-server"];
            message BindUpAuthorizationGroup {
               string name = 1 [json_name = "name"];
            }
            BindUpAuthorizationGroup bind_up_authorization_group = 5 [json_name = "bind-up-authorization-group"];
         }
         Dynamic dynamic = 6 [json_name = "dynamic"];
      }
      repeated Ipv6Prefix ipv6_prefix = 1 [json_name = "ipv6-prefix"];
   }
   Ipv6Prefixs ipv6_prefixs = 1 [json_name = "ipv6-prefixs"];
   message Ipv6Pools {
      message Ipv6Pool {
         string name = 1 [json_name = "name"];
         enum Type {
            INVALID_ENUM_VALUE_Type = 0;
            Type_LOCAL = 1;
            Type_DELEGATION = 2;
            Type_REMOTE = 3;
            Type_RELAY = 4;
         };
         Type type = 2 [json_name = "type"];
         bool rui_slave = 3 [json_name = "rui-slave"];
         message Local {
            message BindPrefix {
               string prefix_name = 1 [json_name = "prefix-name"];
            }
            BindPrefix bind_prefix = 1 [json_name = "bind-prefix"];
            message DnsServer {
               string ipv6_address1 = 1 [json_name = "ipv6-address1"];
               string ipv6_address2 = 2 [json_name = "ipv6-address2"];
            }
            DnsServer dns_server = 2 [json_name = "dns-server"];
            message DnsSearchList {
               string name = 1 [json_name = "name"];
            }
            DnsSearchList dns_search_list = 3 [json_name = "dns-search-list"];
            message RenewRebindTime {
               uint32 renew_time_percent = 1 [json_name = "renew-time-percent"];
               uint32 rebind_time_percent = 2 [json_name = "rebind-time-percent"];
            }
            RenewRebindTime renew_rebind_time = 4 [json_name = "renew-rebind-time"];
            message RapidCommit {
               bool enable = 1 [json_name = "enable"];
            }
            RapidCommit rapid_commit = 5 [json_name = "rapid-commit"];
            message Weight {
               uint32 value = 1 [json_name = "value"];
            }
            Weight weight = 6 [json_name = "weight"];
            message Preference {
               uint32 value = 1 [json_name = "value"];
            }
            Preference preference = 7 [json_name = "preference"];
            message Lock {
               bool drain = 1 [json_name = "drain"];
            }
            Lock lock = 8 [json_name = "lock"];
            message WaitRequestTime {
               uint32 value = 1 [json_name = "value"];
            }
            WaitRequestTime wait_request_time = 9 [json_name = "wait-request-time"];
            message Warning {
               uint32 threshold_value = 1 [json_name = "threshold-value"];
               bool exhaust = 2 [json_name = "exhaust"];
            }
            Warning warning = 10 [json_name = "warning"];
            message UnrTag {
               uint32 value = 1 [json_name = "value"];
            }
            UnrTag unr_tag = 11 [json_name = "unr-tag"];
            message Aftr {
               string name = 1 [json_name = "name"];
            }
            Aftr aftr = 12 [json_name = "aftr"];
            message ExportHostRoute {
               bool ipv6_address = 1 [json_name = "ipv6-address"];
            }
            ExportHostRoute export_host_route = 13 [json_name = "export-host-route"];
            message ConstantIndex {
               uint32 value = 1 [json_name = "value"];
            }
            ConstantIndex constant_index = 14 [json_name = "constant-index"];
            message UnicastOption {
               bool enable = 1 [json_name = "enable"];
            }
            UnicastOption unicast_option = 15 [json_name = "unicast-option"];
         }
         Local local = 4 [json_name = "local"];
         message Delegation {
            message BindPrefix {
               string prefix_name = 1 [json_name = "prefix-name"];
            }
            BindPrefix bind_prefix = 1 [json_name = "bind-prefix"];
            message DnsServer {
               string ipv6_address1 = 1 [json_name = "ipv6-address1"];
               string ipv6_address2 = 2 [json_name = "ipv6-address2"];
            }
            DnsServer dns_server = 2 [json_name = "dns-server"];
            message DnsSearchList {
               string name = 1 [json_name = "name"];
            }
            DnsSearchList dns_search_list = 3 [json_name = "dns-search-list"];
            message RenewRebindTime {
               uint32 renew_time_percent = 1 [json_name = "renew-time-percent"];
               uint32 rebind_time_percent = 2 [json_name = "rebind-time-percent"];
            }
            RenewRebindTime renew_rebind_time = 4 [json_name = "renew-rebind-time"];
            message RapidCommit {
               bool enable = 1 [json_name = "enable"];
            }
            RapidCommit rapid_commit = 5 [json_name = "rapid-commit"];
            message Weight {
               uint32 value = 1 [json_name = "value"];
            }
            Weight weight = 6 [json_name = "weight"];
            message Preference {
               uint32 value = 1 [json_name = "value"];
            }
            Preference preference = 7 [json_name = "preference"];
            message Lock {
               bool drain = 1 [json_name = "drain"];
            }
            Lock lock = 8 [json_name = "lock"];
            message WaitRequestTime {
               uint32 value = 1 [json_name = "value"];
            }
            WaitRequestTime wait_request_time = 9 [json_name = "wait-request-time"];
            message Warning {
               uint32 threshold_value = 1 [json_name = "threshold-value"];
               bool exhaust = 2 [json_name = "exhaust"];
            }
            Warning warning = 10 [json_name = "warning"];
            message UnrTag {
               uint32 value = 1 [json_name = "value"];
            }
            UnrTag unr_tag = 11 [json_name = "unr-tag"];
            message Aftr {
               string name = 1 [json_name = "name"];
            }
            Aftr aftr = 12 [json_name = "aftr"];
            message ExportHostRoute {
               bool ipv6_address = 1 [json_name = "ipv6-address"];
               bool pd_prefix = 2 [json_name = "pd-prefix"];
               bool nd_prefix = 3 [json_name = "nd-prefix"];
            }
            ExportHostRoute export_host_route = 13 [json_name = "export-host-route"];
            message ConstantIndex {
               uint32 value = 1 [json_name = "value"];
            }
            ConstantIndex constant_index = 14 [json_name = "constant-index"];
            message UnicastOption {
               bool enable = 1 [json_name = "enable"];
            }
            UnicastOption unicast_option = 15 [json_name = "unicast-option"];
         }
         Delegation delegation = 5 [json_name = "delegation"];
         message Remote {
            message BindPrefix {
               string prefix_name = 1 [json_name = "prefix-name"];
            }
            BindPrefix bind_prefix = 1 [json_name = "bind-prefix"];
            message Weight {
               uint32 value = 1 [json_name = "value"];
            }
            Weight weight = 2 [json_name = "weight"];
            message Preference {
               uint32 value = 1 [json_name = "value"];
            }
            Preference preference = 3 [json_name = "preference"];
            message Lock {
               bool drain = 1 [json_name = "drain"];
            }
            Lock lock = 4 [json_name = "lock"];
            message WaitRequestTime {
               uint32 value = 1 [json_name = "value"];
            }
            WaitRequestTime wait_request_time = 5 [json_name = "wait-request-time"];
            message Warning {
               uint32 threshold_value = 1 [json_name = "threshold-value"];
               bool exhaust = 2 [json_name = "exhaust"];
            }
            Warning warning = 6 [json_name = "warning"];
            message UnrTag {
               uint32 value = 1 [json_name = "value"];
            }
            UnrTag unr_tag = 7 [json_name = "unr-tag"];
            message ExportHostRoute {
               bool ipv6_address = 1 [json_name = "ipv6-address"];
               bool pd_prefix = 2 [json_name = "pd-prefix"];
               bool nd_prefix = 3 [json_name = "nd-prefix"];
            }
            ExportHostRoute export_host_route = 8 [json_name = "export-host-route"];
            message ConstantIndex {
               uint32 value = 1 [json_name = "value"];
            }
            ConstantIndex constant_index = 9 [json_name = "constant-index"];
            message Dhcpv6ServerGroup {
               string name = 1 [json_name = "name"];
            }
            Dhcpv6ServerGroup dhcpv6_server_group = 10 [json_name = "dhcpv6-server-group"];
         }
         Remote remote = 6 [json_name = "remote"];
         message Relay {
            message BindPrefix {
               string prefix_name = 1 [json_name = "prefix-name"];
            }
            BindPrefix bind_prefix = 1 [json_name = "bind-prefix"];
            message DnsServer {
               string ipv6_address1 = 1 [json_name = "ipv6-address1"];
               string ipv6_address2 = 2 [json_name = "ipv6-address2"];
            }
            DnsServer dns_server = 2 [json_name = "dns-server"];
            message DnsSearchList {
               string name = 1 [json_name = "name"];
            }
            DnsSearchList dns_search_list = 3 [json_name = "dns-search-list"];
            message RenewRebindTime {
               uint32 renew_time_percent = 1 [json_name = "renew-time-percent"];
               uint32 rebind_time_percent = 2 [json_name = "rebind-time-percent"];
            }
            RenewRebindTime renew_rebind_time = 4 [json_name = "renew-rebind-time"];
            message RapidCommit {
               bool enable = 1 [json_name = "enable"];
            }
            RapidCommit rapid_commit = 5 [json_name = "rapid-commit"];
            message Preference {
               uint32 value = 1 [json_name = "value"];
            }
            Preference preference = 6 [json_name = "preference"];
            message Lock {
               bool drain = 1 [json_name = "drain"];
            }
            Lock lock = 7 [json_name = "lock"];
            message WaitRequestTime {
               uint32 value = 1 [json_name = "value"];
            }
            WaitRequestTime wait_request_time = 8 [json_name = "wait-request-time"];
            message Warning {
               uint32 threshold_value = 1 [json_name = "threshold-value"];
               bool exhaust = 2 [json_name = "exhaust"];
            }
            Warning warning = 9 [json_name = "warning"];
            message UnrTag {
               uint32 value = 1 [json_name = "value"];
            }
            UnrTag unr_tag = 10 [json_name = "unr-tag"];
            message ConstantIndex {
               uint32 value = 1 [json_name = "value"];
            }
            ConstantIndex constant_index = 11 [json_name = "constant-index"];
            message UnicastOption {
               bool enable = 1 [json_name = "enable"];
            }
            UnicastOption unicast_option = 12 [json_name = "unicast-option"];
         }
         Relay relay = 7 [json_name = "relay"];
         message Usage {
            string vpn_instance = 1 [json_name = "vpn-instance"];
            uint32 address_total_number = 2 [json_name = "address-total-number"];
            uint32 address_used_number = 3 [json_name = "address-used-number"];
            uint32 address_used_radio = 4 [json_name = "address-used-radio"];
            uint32 ndra_total_number = 5 [json_name = "ndra-total-number"];
            uint32 ndra_used_number = 6 [json_name = "ndra-used-number"];
            uint32 ndra_used_radio = 7 [json_name = "ndra-used-radio"];
            uint32 delegation_total_number = 8 [json_name = "delegation-total-number"];
            uint32 delegation_used_number = 9 [json_name = "delegation-used-number"];
            uint32 delegation_used_radio = 10 [json_name = "delegation-used-radio"];
         }
         Usage usage = 8 [json_name = "usage"];
         message Statistic {
            int32 pool_index = 1 [json_name = "pool-index"];
            int32 address_idle_total_number = 2 [json_name = "address-idle-total-number"];
            int32 address_used_total_number = 3 [json_name = "address-used-total-number"];
            int32 prefix_idle_total_number = 4 [json_name = "prefix-idle-total-number"];
            int32 prefix_used_total_number = 5 [json_name = "prefix-used-total-number"];
            int32 address_total_number = 6 [json_name = "address-total-number"];
            int32 address_used_number = 7 [json_name = "address-used-number"];
            int32 address_idle_number = 8 [json_name = "address-idle-number"];
            int32 address_conflict_number = 9 [json_name = "address-conflict-number"];
            int32 address_excluded_number = 10 [json_name = "address-excluded-number"];
            int32 address_used_percent = 11 [json_name = "address-used-percent"];
            int32 ndra_total_number = 12 [json_name = "ndra-total-number"];
            int32 ndra_used_number = 13 [json_name = "ndra-used-number"];
            int32 ndra_free_number = 14 [json_name = "ndra-free-number"];
            int32 ndra_conflict_number = 15 [json_name = "ndra-conflict-number"];
            int32 ndra_excluded_number = 16 [json_name = "ndra-excluded-number"];
            int32 ndra_used_percent = 17 [json_name = "ndra-used-percent"];
            int32 pd_total_number = 18 [json_name = "pd-total-number"];
            int32 pd_used_number = 19 [json_name = "pd-used-number"];
            int32 pd_free_number = 20 [json_name = "pd-free-number"];
            int32 pd_conflict_number = 21 [json_name = "pd-conflict-number"];
            int32 pd_excluded_number = 22 [json_name = "pd-excluded-number"];
            int32 pd_used_percent = 23 [json_name = "pd-used-percent"];
         }
         Statistic statistic = 9 [json_name = "statistic"];
      }
      repeated Ipv6Pool ipv6_pool = 1 [json_name = "ipv6-pool"];
   }
   Ipv6Pools ipv6_pools = 2 [json_name = "ipv6-pools"];
   message Ipv6UnrRouteTag {
      uint32 delegated_ipv6_prefix_tag = 1 [json_name = "delegated-ipv6-prefix-tag"];
      uint32 delegated_pool_tag = 2 [json_name = "delegated-pool-tag"];
      uint32 framed_ipv6_address_tag = 3 [json_name = "framed-ipv6-address-tag"];
      uint32 framed_ipv6_prefix_tag = 4 [json_name = "framed-ipv6-prefix-tag"];
      uint32 framed_ipv6_route_tag = 5 [json_name = "framed-ipv6-route-tag"];
      uint32 local_pool_tag = 6 [json_name = "local-pool-tag"];
      uint32 relay_pool_tag = 7 [json_name = "relay-pool-tag"];
      uint32 remote_pool_tag = 8 [json_name = "remote-pool-tag"];
   }
   Ipv6UnrRouteTag ipv6_unr_route_tag = 3 [json_name = "ipv6-unr-route-tag"];
   message AddressAssignEui64 {
      bool enable = 1 [json_name = "enable"];
   }
   AddressAssignEui64 address_assign_eui_64 = 4 [json_name = "address-assign-eui-64"];
   message StatisticIncludeSharedUser {
      bool enable = 1 [json_name = "enable"];
   }
   StatisticIncludeSharedUser statistic_include_shared_user = 5 [json_name = "statistic-include-shared-user"];
   message PoolSelectAlgorithm {
      bool remote_loading_share = 1 [json_name = "remote-loading-share"];
      bool remote_round_robin = 2 [json_name = "remote-round-robin"];
      bool local_round_robin = 3 [json_name = "local-round-robin"];
   }
   PoolSelectAlgorithm pool_select_algorithm = 6 [json_name = "pool-select-algorithm"];
   message AutoBlock {
      bool enable = 1 [json_name = "enable"];
      bool slave_switch = 2 [json_name = "slave-switch"];
   }
   AutoBlock auto_block = 7 [json_name = "auto-block"];
   message StatisticsByDomains {
      message StatisticsByDomain {
         string domain_name = 1 [json_name = "domain-name"];
         message PoolUsage {
            uint32 address_total_number = 1 [json_name = "address-total-number"];
            uint32 address_used_number = 2 [json_name = "address-used-number"];
            uint32 address_used_radio = 3 [json_name = "address-used-radio"];
            uint32 ndra_total_number = 4 [json_name = "ndra-total-number"];
            uint32 ndra_used_number = 5 [json_name = "ndra-used-number"];
            uint32 ndra_used_radio = 6 [json_name = "ndra-used-radio"];
            uint32 delegation_total_number = 7 [json_name = "delegation-total-number"];
            uint32 delegation_used_number = 8 [json_name = "delegation-used-number"];
            uint32 delegation_used_radio = 9 [json_name = "delegation-used-radio"];
         }
         PoolUsage pool_usage = 2 [json_name = "pool-usage"];
         message UsageThreshold {
            enum ThresholdType {
               ThresholdType_ALLX_THRESHOLD = 0;
               ThresholdType_UPPERX_THRESHOLD = 1;
               ThresholdType_LOWERX_THRESHOLD = 2;
            };
            ThresholdType threshold_type = 1 [json_name = "threshold-type"];
            uint32 address_total_number = 2 [json_name = "address-total-number"];
            uint32 address_used_number = 3 [json_name = "address-used-number"];
            uint32 address_used_radio = 4 [json_name = "address-used-radio"];
            uint32 ndra_total_number = 5 [json_name = "ndra-total-number"];
            uint32 ndra_used_number = 6 [json_name = "ndra-used-number"];
            uint32 ndra_used_radio = 7 [json_name = "ndra-used-radio"];
            uint32 delegation_total_number = 8 [json_name = "delegation-total-number"];
            uint32 delegation_used_number = 9 [json_name = "delegation-used-number"];
            uint32 delegation_used_radio = 10 [json_name = "delegation-used-radio"];
         }
         UsageThreshold usage_threshold = 3 [json_name = "usage-threshold"];
         message CuPoolUsages {
            message CuPoolUsage {
               uint32 up_id = 1 [json_name = "up-id"];
               uint32 address_total_number = 2 [json_name = "address-total-number"];
               uint32 address_used_number = 3 [json_name = "address-used-number"];
               uint32 address_used_radio = 4 [json_name = "address-used-radio"];
               uint32 ndra_total_number = 5 [json_name = "ndra-total-number"];
               uint32 ndra_used_number = 6 [json_name = "ndra-used-number"];
               uint32 ndra_used_radio = 7 [json_name = "ndra-used-radio"];
               uint32 delegation_total_number = 8 [json_name = "delegation-total-number"];
               uint32 delegation_used_number = 9 [json_name = "delegation-used-number"];
               uint32 delegation_used_radio = 10 [json_name = "delegation-used-radio"];
            }
            repeated CuPoolUsage cu_pool_usage = 1 [json_name = "cu-pool-usage"];
         }
         CuPoolUsages cu_pool_usages = 4 [json_name = "cu-pool-usages"];
      }
      repeated StatisticsByDomain statistics_by_domain = 1 [json_name = "statistics-by-domain"];
   }
   StatisticsByDomains statistics_by_domains = 8 [json_name = "statistics-by-domains"];
   message PoolStatistics {
      enum StatisticalUnit {
         StatisticalUnit_DOMAIN = 0;
      };
      StatisticalUnit statistical_unit = 1 [json_name = "statistical-unit"];
      uint32 address_total_number = 2 [json_name = "address-total-number"];
      uint32 address_used_number = 3 [json_name = "address-used-number"];
      uint32 address_used_radio = 4 [json_name = "address-used-radio"];
      uint32 ndra_total_number = 5 [json_name = "ndra-total-number"];
      uint32 ndra_used_number = 6 [json_name = "ndra-used-number"];
      uint32 ndra_used_radio = 7 [json_name = "ndra-used-radio"];
      uint32 delegation_total_number = 8 [json_name = "delegation-total-number"];
      uint32 delegation_used_number = 9 [json_name = "delegation-used-number"];
      uint32 delegation_used_radio = 10 [json_name = "delegation-used-radio"];
   }
   PoolStatistics pool_statistics = 9 [json_name = "pool-statistics"];
   message StatisticsByVpnInstance {
      message Statistics {
         message Statistic {
            string vpn_instance = 1 [json_name = "vpn-instance"];
            message Usage {
               uint32 address_total_number = 1 [json_name = "address-total-number"];
               uint32 address_used_number = 2 [json_name = "address-used-number"];
               uint32 address_used_radio = 3 [json_name = "address-used-radio"];
               uint32 ndra_total_number = 4 [json_name = "ndra-total-number"];
               uint32 ndra_used_number = 5 [json_name = "ndra-used-number"];
               uint32 ndra_used_radio = 6 [json_name = "ndra-used-radio"];
               uint32 delegation_total_number = 7 [json_name = "delegation-total-number"];
               uint32 delegation_used_number = 8 [json_name = "delegation-used-number"];
               uint32 delegation_used_radio = 9 [json_name = "delegation-used-radio"];
            }
            Usage usage = 2 [json_name = "usage"];
            message UsageWarningThreshold {
               int32 total_number = 1 [json_name = "total-number"];
               int32 used_number = 2 [json_name = "used-number"];
               int32 idle_number = 3 [json_name = "idle-number"];
               int32 conflict_number = 4 [json_name = "conflict-number"];
               int32 exclude_number = 5 [json_name = "exclude-number"];
               int32 used_ratio = 6 [json_name = "used-ratio"];
            }
            UsageWarningThreshold usage_warning_threshold = 3 [json_name = "usage-warning-threshold"];
         }
         repeated Statistic statistic = 1 [json_name = "statistic"];
      }
      Statistics statistics = 1 [json_name = "statistics"];
      message TotalUsage {
         uint32 address_total_number = 1 [json_name = "address-total-number"];
         uint32 address_used_number = 2 [json_name = "address-used-number"];
         uint32 address_used_radio = 3 [json_name = "address-used-radio"];
         uint32 ndra_total_number = 4 [json_name = "ndra-total-number"];
         uint32 ndra_used_number = 5 [json_name = "ndra-used-number"];
         uint32 ndra_used_radio = 6 [json_name = "ndra-used-radio"];
         uint32 delegation_total_number = 7 [json_name = "delegation-total-number"];
         uint32 delegation_used_number = 8 [json_name = "delegation-used-number"];
         uint32 delegation_used_radio = 9 [json_name = "delegation-used-radio"];
      }
      TotalUsage total_usage = 2 [json_name = "total-usage"];
   }
   StatisticsByVpnInstance statistics_by_vpn_instance = 10 [json_name = "statistics-by-vpn-instance"];
   message GlobalStatistic {
      int32 total_pool_number = 1 [json_name = "total-pool-number"];
      int32 address_idle_total_number = 2 [json_name = "address-idle-total-number"];
      int32 address_used_total_number = 3 [json_name = "address-used-total-number"];
      int32 prefix_idle_total_number = 4 [json_name = "prefix-idle-total-number"];
      int32 prefix_used_total_number = 5 [json_name = "prefix-used-total-number"];
      int32 address_total_number = 6 [json_name = "address-total-number"];
      int32 address_used_number = 7 [json_name = "address-used-number"];
      int32 address_idle_number = 8 [json_name = "address-idle-number"];
      int32 address_conflict_number = 9 [json_name = "address-conflict-number"];
      int32 address_excluded_number = 10 [json_name = "address-excluded-number"];
      int32 address_used_percent = 11 [json_name = "address-used-percent"];
      int32 ndra_total_number = 12 [json_name = "ndra-total-number"];
      int32 ndra_used_number = 13 [json_name = "ndra-used-number"];
      int32 ndra_free_number = 14 [json_name = "ndra-free-number"];
      int32 ndra_conflict_number = 15 [json_name = "ndra-conflict-number"];
      int32 ndra_excluded_number = 16 [json_name = "ndra-excluded-number"];
      int32 ndra_used_percent = 17 [json_name = "ndra-used-percent"];
      int32 pd_total_number = 18 [json_name = "pd-total-number"];
      int32 pd_used_number = 19 [json_name = "pd-used-number"];
      int32 pd_free_number = 20 [json_name = "pd-free-number"];
      int32 pd_conflict_number = 21 [json_name = "pd-conflict-number"];
      int32 pd_excluded_number = 22 [json_name = "pd-excluded-number"];
      int32 pd_used_percent = 23 [json_name = "pd-used-percent"];
   }
   GlobalStatistic global_statistic = 11 [json_name = "global-statistic"];
   message ImportRibs {
      message ImportRib {
         string source_vpn_instance = 1 [json_name = "source-vpn-instance"];
         string destination_vpn_instance = 2 [json_name = "destination-vpn-instance"];
      }
      repeated ImportRib import_rib = 1 [json_name = "import-rib"];
   }
   ImportRibs import_ribs = 12 [json_name = "import-ribs"];
}

