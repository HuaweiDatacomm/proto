syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-08-03 16:01:26
// ProtoYang-version 1
// module ietf-yang-push
// revision 2018-10-22
// namespace urn:ietf:params:xml:ns:yang:ietf-yang-push

package ietf_yang_push;

message PushUpdate {
   uint32 id = 1 [json_name = "id"];
   message DatastoreContents {
   }
   DatastoreContents datastore_contents = 2 [json_name = "datastore-contents"];
   bool incomplete_update = 3 [json_name = "incomplete-update"];
}
message PushChangeUpdate {
   uint32 id = 1 [json_name = "id"];
   message DatastoreChanges {
      message YangPatch {
         string patch_id = 1 [json_name = "patch-id"];
         string comment = 2 [json_name = "comment"];
         message Edit {
            string edit_id = 1 [json_name = "edit-id"];
            enum Operation {
               Operation_CREATE = 0;
               Operation_DELETE = 1;
               Operation_INSERT = 2;
               Operation_MERGE = 3;
               Operation_MOVE = 4;
               Operation_REPLACE = 5;
               Operation_REMOVE = 6;
            };
            Operation operation = 2 [json_name = "operation"];
            string target = 3 [json_name = "target"];
            string point = 4 [json_name = "point"];
            enum Where {
               Where_BEFORE = 0;
               Where_AFTER = 1;
               Where_FIRST = 2;
               Where_LAST = 3;
            };
            Where where = 5 [json_name = "where"];
            message Value {
            }
            Value value = 6 [json_name = "value"];
         }
         repeated Edit edit = 3 [json_name = "edit"];
      }
      YangPatch yang_patch = 1 [json_name = "yang-patch"];
   }
   DatastoreChanges datastore_changes = 2 [json_name = "datastore-changes"];
   bool incomplete_update = 3 [json_name = "incomplete-update"];
}

