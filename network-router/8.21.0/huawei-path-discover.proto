syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-08-03 16:01:26
// ProtoYang-version 1
// module huawei-path-discover
// revision 2020-02-12
// namespace urn:huawei:yang:huawei-path-discover

package huawei_path_discover;

message PathDiscover {
   message IpPaths {
      message IpPath {
         string vpn_name = 1 [json_name = "vpn-name"];
         uint32 in_label = 2 [json_name = "in-label"];
         string destination = 3 [json_name = "destination"];
         string nexthop = 4 [json_name = "nexthop"];
         string out_interface_name = 5 [json_name = "out-interface-name"];
         string prefix = 6 [json_name = "prefix"];
         uint32 mask = 7 [json_name = "mask"];
         string prefix_output = 8 [json_name = "prefix-output"];
         uint32 mask_output = 9 [json_name = "mask-output"];
         string in_interface_name = 10 [json_name = "in-interface-name"];
         uint32 out_label = 11 [json_name = "out-label"];
         bool backup = 12 [json_name = "backup"];
         bool load_balance = 13 [json_name = "load-balance"];
         message RelayStates {
            message RelayState {
               string oid = 1 [json_name = "oid"];
               enum Type {
                  Type_LDP = 0;
                  Type_BGP = 1;
                  Type_TEX_TUNNEL = 2;
                  Type_TEX_LSP = 3;
                  Type_GRE = 4;
                  Type_IP = 5;
                  Type_L2VPN = 6;
                  Type_L3VPN = 7;
                  Type_BGPX_TUNNEL = 8;
                  Type_MPLSX_LOCALX_IFNETX_TUNNEL = 9;
                  Type_MPLSX_LOCALX_IFNET = 10;
                  Type_L3VPNX_TUNNEL = 11;
                  Type_TEX_TUNNELX_SLAVE = 12;
                  Type_LDPX_LSP = 13;
               };
               Type type = 2 [json_name = "type"];
               string tunnel_interface_name = 3 [json_name = "tunnel-interface-name"];
               string fec = 4 [json_name = "fec"];
               uint32 fec_mask = 5 [json_name = "fec-mask"];
               uint32 out_label = 6 [json_name = "out-label"];
               string out_interface_name = 7 [json_name = "out-interface-name"];
               string next_hop = 8 [json_name = "next-hop"];
               bool main = 9 [json_name = "main"];
               string ip_prefix = 10 [json_name = "ip-prefix"];
               uint32 ip_mask = 11 [json_name = "ip-mask"];
            }
            repeated RelayState relay_state = 1 [json_name = "relay-state"];
         }
         RelayStates relay_states = 14 [json_name = "relay-states"];
      }
      repeated IpPath ip_path = 1 [json_name = "ip-path"];
   }
   IpPaths ip_paths = 1 [json_name = "ip-paths"];
   message TunnelPaths {
      message TunnelPath {
         string relay_oid = 1 [json_name = "relay-oid"];
         enum RelayType {
            RelayType_LDP = 0;
            RelayType_BGP = 1;
            RelayType_TEX_TUNNEL = 2;
            RelayType_TEX_LSP = 3;
            RelayType_GRE = 4;
            RelayType_IP = 5;
            RelayType_L2VPN = 6;
            RelayType_L3VPN = 7;
            RelayType_BGPX_TUNNEL = 8;
            RelayType_MPLSX_LOCALX_IFNETX_TUNNEL = 9;
            RelayType_MPLSX_LOCALX_IFNET = 10;
            RelayType_L3VPNX_TUNNEL = 11;
            RelayType_TEX_TUNNELX_SLAVE = 12;
            RelayType_LDPX_LSP = 13;
         };
         RelayType relay_type = 2 [json_name = "relay-type"];
         string tunnel_interface_name = 3 [json_name = "tunnel-interface-name"];
         string fec = 4 [json_name = "fec"];
         uint32 fec_mask = 5 [json_name = "fec-mask"];
         uint32 out_label = 6 [json_name = "out-label"];
         string out_interface_name = 7 [json_name = "out-interface-name"];
         string next_hop = 8 [json_name = "next-hop"];
         bool main = 9 [json_name = "main"];
         string ip_prefix = 10 [json_name = "ip-prefix"];
         uint32 ip_mask = 11 [json_name = "ip-mask"];
         enum RelayTypeOutput {
            RelayTypeOutput_LDP = 0;
            RelayTypeOutput_BGP = 1;
            RelayTypeOutput_TEX_TUNNEL = 2;
            RelayTypeOutput_TEX_LSP = 3;
            RelayTypeOutput_GRE = 4;
            RelayTypeOutput_IP = 5;
            RelayTypeOutput_L2VPN = 6;
            RelayTypeOutput_L3VPN = 7;
            RelayTypeOutput_BGPX_TUNNEL = 8;
            RelayTypeOutput_MPLSX_LOCALX_IFNETX_TUNNEL = 9;
            RelayTypeOutput_MPLSX_LOCALX_IFNET = 10;
            RelayTypeOutput_L3VPNX_TUNNEL = 11;
            RelayTypeOutput_TEX_TUNNELX_SLAVE = 12;
            RelayTypeOutput_LDPX_LSP = 13;
         };
         RelayTypeOutput relay_type_output = 12 [json_name = "relay-type-output"];
         string tunnel_name_output = 13 [json_name = "tunnel-name-output"];
      }
      repeated TunnelPath tunnel_path = 1 [json_name = "tunnel-path"];
   }
   TunnelPaths tunnel_paths = 2 [json_name = "tunnel-paths"];
   message StackPaths {
      message StackPath {
         string state = 1 [json_name = "state"];
         string in_interface = 2 [json_name = "in-interface"];
         uint32 processed_stack_layer = 3 [json_name = "processed-stack-layer"];
         message RelayStates {
            message RelayState {
               string oid = 1 [json_name = "oid"];
               enum Type {
                  Type_LDP = 0;
                  Type_BGP = 1;
                  Type_TEX_TUNNEL = 2;
                  Type_TEX_LSP = 3;
                  Type_GRE = 4;
                  Type_IP = 5;
                  Type_L2VPN = 6;
                  Type_L3VPN = 7;
                  Type_BGPX_TUNNEL = 8;
                  Type_MPLSX_LOCALX_IFNETX_TUNNEL = 9;
                  Type_MPLSX_LOCALX_IFNET = 10;
                  Type_L3VPNX_TUNNEL = 11;
                  Type_TEX_TUNNELX_SLAVE = 12;
                  Type_LDPX_LSP = 13;
               };
               Type type = 2 [json_name = "type"];
               string tunnel_interface_name = 3 [json_name = "tunnel-interface-name"];
               string fec = 4 [json_name = "fec"];
               uint32 fec_mask = 5 [json_name = "fec-mask"];
               uint32 out_label = 6 [json_name = "out-label"];
               string out_interface_name = 7 [json_name = "out-interface-name"];
               string next_hop = 8 [json_name = "next-hop"];
               bool main = 9 [json_name = "main"];
               string ip_prefix = 10 [json_name = "ip-prefix"];
               uint32 ip_mask = 11 [json_name = "ip-mask"];
            }
            repeated RelayState relay_state = 1 [json_name = "relay-state"];
         }
         RelayStates relay_states = 4 [json_name = "relay-states"];
      }
      repeated StackPath stack_path = 1 [json_name = "stack-path"];
   }
   StackPaths stack_paths = 3 [json_name = "stack-paths"];
}

