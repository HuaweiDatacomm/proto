syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-08-31 09:28:06
// ProtoYang-version 1
// module openconfig-lacp
// revision 2017-05-05
// revision 2016-05-26
// namespace http://openconfig.net/yang/lacp

package openconfig_lacp;

message Lacp {
   message Config {
      uint32 system_priority = 1 [json_name = "system-priority"];
   }
   Config config = 1 [json_name = "config"];
   message Interfaces {
      message Interface {
         message Config {
            enum Interval {
               Interval_FAST = 0;
               Interval_SLOW = 1;
            };
            Interval interval = 1 [json_name = "interval"];
            enum LacpMode {
               LacpMode_ACTIVE = 0;
               LacpMode_PASSIVE = 1;
            };
            LacpMode lacp_mode = 2 [json_name = "lacp-mode"];
            string name = 3 [json_name = "name"];
            string system_id_mac = 4 [json_name = "system-id-mac"];
            uint32 system_priority = 5 [json_name = "system-priority"];
         }
         Config config = 1 [json_name = "config"];
         message Members {
            message Member {
               string interface6 = 1 [json_name = "interface"];
               message State {
                  enum Activity {
                     Activity_ACTIVE = 0;
                     Activity_PASSIVE = 1;
                  };
                  Activity activity = 1 [json_name = "activity"];
                  bool aggregatable = 2 [json_name = "aggregatable"];
                  bool collecting = 3 [json_name = "collecting"];
                  message Counters {
                     uint64 lacp_errors = 1 [json_name = "lacp-errors"];
                     uint64 lacp_in_pkts = 2 [json_name = "lacp-in-pkts"];
                     uint64 lacp_out_pkts = 3 [json_name = "lacp-out-pkts"];
                     uint64 lacp_rx_errors = 4 [json_name = "lacp-rx-errors"];
                     uint64 lacp_tx_errors = 5 [json_name = "lacp-tx-errors"];
                     uint64 lacp_unknown_errors = 6 [json_name = "lacp-unknown-errors"];
                  }
                  Counters counters = 4 [json_name = "counters"];
                  bool distributing = 5 [json_name = "distributing"];
                  string interface7 = 6 [json_name = "interface"];
                  uint32 oper_key = 7 [json_name = "oper-key"];
                  string partner_id = 8 [json_name = "partner-id"];
                  uint32 partner_key = 9 [json_name = "partner-key"];
                  uint32 partner_port_num = 10 [json_name = "partner-port-num"];
                  uint32 port_num = 11 [json_name = "port-num"];
                  enum Synchronization {
                     Synchronization_IN_SYNC = 0;
                     Synchronization_OUT_SYNC = 1;
                  };
                  Synchronization synchronization = 12 [json_name = "synchronization"];
                  string system_id = 13 [json_name = "system-id"];
                  enum Timeout {
                     Timeout_LONG = 0;
                     Timeout_SHORT = 1;
                  };
                  Timeout timeout = 14 [json_name = "timeout"];
               }
               State state = 2 [json_name = "state"];
            }
            repeated Member member = 1 [json_name = "member"];
         }
         Members members = 2 [json_name = "members"];
         string name = 3 [json_name = "name"];
         message State {
            enum Interval {
               Interval_FAST = 0;
               Interval_SLOW = 1;
            };
            Interval interval = 1 [json_name = "interval"];
            enum LacpMode {
               LacpMode_ACTIVE = 0;
               LacpMode_PASSIVE = 1;
            };
            LacpMode lacp_mode = 2 [json_name = "lacp-mode"];
            string name = 3 [json_name = "name"];
            string system_id_mac = 4 [json_name = "system-id-mac"];
            uint32 system_priority = 5 [json_name = "system-priority"];
         }
         State state = 4 [json_name = "state"];
      }
      repeated Interface interface = 1 [json_name = "interface"];
   }
   Interfaces interfaces = 2 [json_name = "interfaces"];
   message State {
      uint32 system_priority = 1 [json_name = "system-priority"];
   }
   State state = 3 [json_name = "state"];
}
message Decimal64 {
   int64 value = 1 [json_name = "value"];
   uint32 fraction_digits = 2 [json_name = "fraction-digits"];
}

