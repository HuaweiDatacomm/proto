syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2022-08-24 09:27:32
// ProtoYang-version 1
// module huawei-intelligent-uplink-select
// revision 2022-06-20
// namespace urn:huawei:yang:huawei-intelligent-uplink-select

package huawei_intelligent_uplink_select;

message IntelligentUplinkSelect {
   message PolicyBasedRoute {
      message Rules {
         message Rule {
            string name = 1 [json_name = "name"];
            string description = 2 [json_name = "description"];
            bool enable = 3 [json_name = "enable"];
            message Action {
               message Action6_MultiEgress {
                  message MultiEgress7 {
                     enum SelectionMode {
                        SelectionMode_WEIGHT = 0;
                        SelectionMode_PRIORITY = 1;
                        SelectionMode_BANDWIDTH = 2;
                     };
                     SelectionMode selection_mode = 1 [json_name = "selection-mode"];
                     string health_check = 2 [json_name = "health-check"];
                     string sla = 3 [json_name = "sla"];
                     message LoadBalanceHashMode {
                        bool destination_ip = 1 [json_name = "destination-ip"];
                        bool destination_port = 2 [json_name = "destination-port"];
                        bool source_ip = 3 [json_name = "source-ip"];
                        bool source_port = 4 [json_name = "source-port"];
                     }
                     LoadBalanceHashMode load_balance_hash_mode = 4 [json_name = "load-balance-hash-mode"];
                     message MemberInterfaces {
                        message MemberInterface {
                           string name = 1 [json_name = "name"];
                           uint32 weight = 2 [json_name = "weight"];
                           uint32 priority = 3 [json_name = "priority"];
                        }
                        repeated MemberInterface member_interface = 1 [json_name = "member-interface"];
                     }
                     MemberInterfaces member_interfaces = 5 [json_name = "member-interfaces"];
                  }
                  MultiEgress7 multi_egress = 1 [json_name = "multi-egress"];
               }
               message Action6_BasicRoute {
                  message BasicRoute7 {
                     string to_vsys = 1 [json_name = "to-vsys"];
                     string egress_interface = 2 [json_name = "egress-interface"];
                     repeated string nexthop_ipv4 = 3 [json_name = "nexthop-ipv4"];
                     string nexthop_ipv6 = 4 [json_name = "nexthop-ipv6"];
                     message EgressAndNexthop {
                        string egress = 1 [json_name = "egress"];
                        message NexthopType_Ipv4 {
                           string nexthop_ipv4 = 1 [json_name = "nexthop-ipv4"];
                        }
                        message NexthopType_Ipv6 {
                           string nexthop_ipv6 = 1 [json_name = "nexthop-ipv6"];
                        }
                        oneof NexthopType {
                           NexthopType_Ipv4 nexthop_type_ipv4 = 2 [json_name = "ipv4"];
                           NexthopType_Ipv6 nexthop_type_ipv6 = 3 [json_name = "ipv6"];
                        }
                     }
                     EgressAndNexthop egress_and_nexthop = 5 [json_name = "egress-and-nexthop"];
                  }
                  BasicRoute7 basic_route = 1 [json_name = "basic-route"];
               }
               message Action6_NoRoute {
                  bool no_route = 1 [json_name = "no-route"];
               }
               oneof Action6 {
                  Action6_MultiEgress action_multi_egress = 1 [json_name = "multi-egress"];
                  Action6_BasicRoute action_basic_route = 2 [json_name = "basic-route"];
                  Action6_NoRoute action_no_route = 3 [json_name = "no-route"];
               }
            }
            Action action = 4 [json_name = "action"];
            string time_range = 5 [json_name = "time-range"];
            string health_check = 6 [json_name = "health-check"];
            message Ingress_Interfaces {
               repeated string ingress_interface = 1 [json_name = "ingress-interface"];
            }
            message Ingress_Zones {
               repeated string source_zone = 1 [json_name = "source-zone"];
            }
            oneof Ingress {
               Ingress_Interfaces ingress_interfaces = 7 [json_name = "interfaces"];
               Ingress_Zones ingress_zones = 8 [json_name = "zones"];
            }
            message SourceAddress {
               repeated string address_object = 1 [json_name = "address-object"];
               repeated string address_group = 2 [json_name = "address-group"];
               message AddressIpv4S {
                  message AddressIpv4 {
                     string ipv4 = 1 [json_name = "ipv4"];
                     string mask = 2 [json_name = "mask"];
                  }
                  repeated AddressIpv4 address_ipv4 = 1 [json_name = "address-ipv4"];
               }
               AddressIpv4S address_ipv4s = 3 [json_name = "address-ipv4s"];
               message AddressIpv6S {
                  message AddressIpv6 {
                     string ipv6 = 1 [json_name = "ipv6"];
                     uint32 prefix_length = 2 [json_name = "prefix-length"];
                  }
                  repeated AddressIpv6 address_ipv6 = 1 [json_name = "address-ipv6"];
               }
               AddressIpv6S address_ipv6s = 4 [json_name = "address-ipv6s"];
               message AddressIpv4Ranges {
                  message AddressIpv4Range {
                     string start_ipv4 = 1 [json_name = "start-ipv4"];
                     string end_ipv4 = 2 [json_name = "end-ipv4"];
                  }
                  repeated AddressIpv4Range address_ipv4_range = 1 [json_name = "address-ipv4-range"];
               }
               AddressIpv4Ranges address_ipv4_ranges = 5 [json_name = "address-ipv4-ranges"];
               message AddressIpv6Ranges {
                  message AddressIpv6Range {
                     string start_ipv6 = 1 [json_name = "start-ipv6"];
                     string end_ipv6 = 2 [json_name = "end-ipv6"];
                  }
                  repeated AddressIpv6Range address_ipv6_range = 1 [json_name = "address-ipv6-range"];
               }
               AddressIpv6Ranges address_ipv6_ranges = 6 [json_name = "address-ipv6-ranges"];
               repeated string address_object_exclude = 7 [json_name = "address-object-exclude"];
               repeated string address_group_exclude = 8 [json_name = "address-group-exclude"];
               message AddressIpv4Excludes {
                  message AddressIpv4Exclude {
                     string ipv4 = 1 [json_name = "ipv4"];
                     string mask = 2 [json_name = "mask"];
                  }
                  repeated AddressIpv4Exclude address_ipv4_exclude = 1 [json_name = "address-ipv4-exclude"];
               }
               AddressIpv4Excludes address_ipv4_excludes = 9 [json_name = "address-ipv4-excludes"];
               message AddressIpv6Excludes {
                  message AddressIpv6Exclude {
                     string ipv6 = 1 [json_name = "ipv6"];
                     uint32 prefix_length = 2 [json_name = "prefix-length"];
                  }
                  repeated AddressIpv6Exclude address_ipv6_exclude = 1 [json_name = "address-ipv6-exclude"];
               }
               AddressIpv6Excludes address_ipv6_excludes = 10 [json_name = "address-ipv6-excludes"];
               message AddressIpv4RangeExcludes {
                  message AddressIpv4RangeExclude {
                     string start_ipv4 = 1 [json_name = "start-ipv4"];
                     string end_ipv4 = 2 [json_name = "end-ipv4"];
                  }
                  repeated AddressIpv4RangeExclude address_ipv4_range_exclude = 1 [json_name = "address-ipv4-range-exclude"];
               }
               AddressIpv4RangeExcludes address_ipv4_range_excludes = 11 [json_name = "address-ipv4-range-excludes"];
               message AddressIpv6RangeExcludes {
                  message AddressIpv6RangeExclude {
                     string start_ipv6 = 1 [json_name = "start-ipv6"];
                     string end_ipv6 = 2 [json_name = "end-ipv6"];
                  }
                  repeated AddressIpv6RangeExclude address_ipv6_range_exclude = 1 [json_name = "address-ipv6-range-exclude"];
               }
               AddressIpv6RangeExcludes address_ipv6_range_excludes = 12 [json_name = "address-ipv6-range-excludes"];
               repeated string domain_set = 13 [json_name = "domain-set"];
            }
            SourceAddress source_address = 9 [json_name = "source-address"];
            message DestinationAddress {
               repeated string address_object = 1 [json_name = "address-object"];
               repeated string address_group = 2 [json_name = "address-group"];
               message AddressIpv4S {
                  message AddressIpv4 {
                     string ipv4 = 1 [json_name = "ipv4"];
                     string mask = 2 [json_name = "mask"];
                  }
                  repeated AddressIpv4 address_ipv4 = 1 [json_name = "address-ipv4"];
               }
               AddressIpv4S address_ipv4s = 3 [json_name = "address-ipv4s"];
               message AddressIpv6S {
                  message AddressIpv6 {
                     string ipv6 = 1 [json_name = "ipv6"];
                     uint32 prefix_length = 2 [json_name = "prefix-length"];
                  }
                  repeated AddressIpv6 address_ipv6 = 1 [json_name = "address-ipv6"];
               }
               AddressIpv6S address_ipv6s = 4 [json_name = "address-ipv6s"];
               message AddressIpv4Ranges {
                  message AddressIpv4Range {
                     string start_ipv4 = 1 [json_name = "start-ipv4"];
                     string end_ipv4 = 2 [json_name = "end-ipv4"];
                  }
                  repeated AddressIpv4Range address_ipv4_range = 1 [json_name = "address-ipv4-range"];
               }
               AddressIpv4Ranges address_ipv4_ranges = 5 [json_name = "address-ipv4-ranges"];
               message AddressIpv6Ranges {
                  message AddressIpv6Range {
                     string start_ipv6 = 1 [json_name = "start-ipv6"];
                     string end_ipv6 = 2 [json_name = "end-ipv6"];
                  }
                  repeated AddressIpv6Range address_ipv6_range = 1 [json_name = "address-ipv6-range"];
               }
               AddressIpv6Ranges address_ipv6_ranges = 6 [json_name = "address-ipv6-ranges"];
               repeated string address_object_exclude = 7 [json_name = "address-object-exclude"];
               repeated string address_group_exclude = 8 [json_name = "address-group-exclude"];
               message AddressIpv4Excludes {
                  message AddressIpv4Exclude {
                     string ipv4 = 1 [json_name = "ipv4"];
                     string mask = 2 [json_name = "mask"];
                  }
                  repeated AddressIpv4Exclude address_ipv4_exclude = 1 [json_name = "address-ipv4-exclude"];
               }
               AddressIpv4Excludes address_ipv4_excludes = 9 [json_name = "address-ipv4-excludes"];
               message AddressIpv6Excludes {
                  message AddressIpv6Exclude {
                     string ipv6 = 1 [json_name = "ipv6"];
                     uint32 prefix_length = 2 [json_name = "prefix-length"];
                  }
                  repeated AddressIpv6Exclude address_ipv6_exclude = 1 [json_name = "address-ipv6-exclude"];
               }
               AddressIpv6Excludes address_ipv6_excludes = 10 [json_name = "address-ipv6-excludes"];
               message AddressIpv4RangeExcludes {
                  message AddressIpv4RangeExclude {
                     string start_ipv4 = 1 [json_name = "start-ipv4"];
                     string end_ipv4 = 2 [json_name = "end-ipv4"];
                  }
                  repeated AddressIpv4RangeExclude address_ipv4_range_exclude = 1 [json_name = "address-ipv4-range-exclude"];
               }
               AddressIpv4RangeExcludes address_ipv4_range_excludes = 11 [json_name = "address-ipv4-range-excludes"];
               message AddressIpv6RangeExcludes {
                  message AddressIpv6RangeExclude {
                     string start_ipv6 = 1 [json_name = "start-ipv6"];
                     string end_ipv6 = 2 [json_name = "end-ipv6"];
                  }
                  repeated AddressIpv6RangeExclude address_ipv6_range_exclude = 1 [json_name = "address-ipv6-range-exclude"];
               }
               AddressIpv6RangeExcludes address_ipv6_range_excludes = 12 [json_name = "address-ipv6-range-excludes"];
               repeated string domain_set = 13 [json_name = "domain-set"];
            }
            DestinationAddress destination_address = 10 [json_name = "destination-address"];
            message Service {
               repeated string service_object = 1 [json_name = "service-object"];
               repeated string service_group = 2 [json_name = "service-group"];
               message ServiceItems {
                  message ProtocolAndPorts {
                     message ProtocolAndPort {
                        enum Protocol {
                           INVALID_ENUM_VALUE_Protocol = 0;
                           Protocol_TCP = 6;
                           Protocol_UDP = 17;
                           Protocol_SCTP = 132;
                        };
                        Protocol protocol = 1 [json_name = "protocol"];
                        string source_port = 2 [json_name = "source-port"];
                        string dest_port = 3 [json_name = "dest-port"];
                     }
                     repeated ProtocolAndPort protocol_and_port = 1 [json_name = "protocol-and-port"];
                  }
                  ProtocolAndPorts protocol_and_ports = 1 [json_name = "protocol-and-ports"];
                  message Icmpv4S {
                     message Icmpv4 {
                        uint32 type = 1 [json_name = "type"];
                        string code = 2 [json_name = "code"];
                     }
                     repeated Icmpv4 icmpv4 = 1 [json_name = "icmpv4"];
                  }
                  Icmpv4S icmpv4s = 2 [json_name = "icmpv4s"];
                  message Icmpv6S {
                     message Icmpv6 {
                        uint32 type = 1 [json_name = "type"];
                        string code = 2 [json_name = "code"];
                     }
                     repeated Icmpv6 icmpv6 = 1 [json_name = "icmpv6"];
                  }
                  Icmpv6S icmpv6s = 3 [json_name = "icmpv6s"];
                  message Protocol {
                     repeated uint32 protocol_id = 1 [json_name = "protocol-id"];
                  }
                  Protocol protocol = 4 [json_name = "protocol"];
               }
               ServiceItems service_items = 3 [json_name = "service-items"];
               repeated string service_object_exclude = 4 [json_name = "service-object-exclude"];
               repeated string service_group_exclude = 5 [json_name = "service-group-exclude"];
               message ServiceItemsExclude {
                  message ProtocolAndPorts {
                     message ProtocolAndPort {
                        enum Protocol {
                           INVALID_ENUM_VALUE_Protocol = 0;
                           Protocol_TCP = 6;
                           Protocol_UDP = 17;
                           Protocol_SCTP = 132;
                        };
                        Protocol protocol = 1 [json_name = "protocol"];
                        string source_port = 2 [json_name = "source-port"];
                        string dest_port = 3 [json_name = "dest-port"];
                     }
                     repeated ProtocolAndPort protocol_and_port = 1 [json_name = "protocol-and-port"];
                  }
                  ProtocolAndPorts protocol_and_ports = 1 [json_name = "protocol-and-ports"];
                  message Icmpv4S {
                     message Icmpv4 {
                        uint32 type = 1 [json_name = "type"];
                        string code = 2 [json_name = "code"];
                     }
                     repeated Icmpv4 icmpv4 = 1 [json_name = "icmpv4"];
                  }
                  Icmpv4S icmpv4s = 2 [json_name = "icmpv4s"];
                  message Icmpv6S {
                     message Icmpv6 {
                        uint32 type = 1 [json_name = "type"];
                        string code = 2 [json_name = "code"];
                     }
                     repeated Icmpv6 icmpv6 = 1 [json_name = "icmpv6"];
                  }
                  Icmpv6S icmpv6s = 3 [json_name = "icmpv6s"];
                  message Protocol {
                     repeated uint32 protocol_id = 1 [json_name = "protocol-id"];
                  }
                  Protocol protocol = 4 [json_name = "protocol"];
               }
               ServiceItemsExclude service_items_exclude = 6 [json_name = "service-items-exclude"];
            }
            Service service = 11 [json_name = "service"];
            message User {
               repeated string ucl_group = 1 [json_name = "ucl-group"];
            }
            User user = 12 [json_name = "user"];
         }
         repeated Rule rule = 1 [json_name = "rule"];
      }
      Rules rules = 1 [json_name = "rules"];
   }
   PolicyBasedRoute policy_based_route = 1 [json_name = "policy-based-route"];
}

