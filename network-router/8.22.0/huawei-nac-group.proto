syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-08-03 16:01:26
// ProtoYang-version 1
// module huawei-nac-group
// revision 2021-01-28
// revision 2020-03-13
// namespace urn:huawei:yang:huawei-nac-group

package huawei_nac_group;

message NacGroup {
   message UclGroups {
      message UclGroup {
         string name = 1 [json_name = "name"];
         uint32 index = 2 [json_name = "index"];
         message Domains {
            message Domain {
               string domain_name = 1 [json_name = "domain-name"];
            }
            repeated Domain domain = 1 [json_name = "domain"];
         }
         Domains domains = 3 [json_name = "domains"];
         message Ips {
            message Ip {
               string ip6 = 1 [json_name = "ip"];
               message Subnet_PrefixLength {
                  uint32 prefix_length = 1 [json_name = "prefix-length"];
               }
               message Subnet_NetMask {
                  string net_mask = 1 [json_name = "net-mask"];
               }
               oneof Subnet {
                  Subnet_PrefixLength subnet_prefix_length = 2 [json_name = "prefix-length"];
                  Subnet_NetMask subnet_net_mask = 3 [json_name = "net-mask"];
               }
            }
            repeated Ip ip = 1 [json_name = "ip"];
         }
         Ips ips = 4 [json_name = "ips"];
         message IpEscapes {
            message IpEscape {
               string ip = 1 [json_name = "ip"];
               message Subnet_PrefixLength {
                  uint32 prefix_length = 1 [json_name = "prefix-length"];
               }
               message Subnet_NetMask {
                  string net_mask = 1 [json_name = "net-mask"];
               }
               oneof Subnet {
                  Subnet_PrefixLength subnet_prefix_length = 2 [json_name = "prefix-length"];
                  Subnet_NetMask subnet_net_mask = 3 [json_name = "net-mask"];
               }
            }
            repeated IpEscape ip_escape = 1 [json_name = "ip-escape"];
         }
         IpEscapes ip_escapes = 5 [json_name = "ip-escapes"];
         message Ipv6S {
            message Ipv6 {
               string ipv66 = 1 [json_name = "ipv6"];
               uint32 prefix_length = 2 [json_name = "prefix-length"];
            }
            repeated Ipv6 ipv6 = 1 [json_name = "ipv6"];
         }
         Ipv6S ipv6s = 6 [json_name = "ipv6s"];
      }
      repeated UclGroup ucl_group = 1 [json_name = "ucl-group"];
   }
   UclGroups ucl_groups = 1 [json_name = "ucl-groups"];
   message IpGroup {
      uint32 timer_heart_beat = 1 [json_name = "timer-heart-beat"];
      uint32 timer_reconnection = 2 [json_name = "timer-reconnection"];
      uint32 timer_down_delay = 3 [json_name = "timer-down-delay"];
      uint32 timer_up_delay = 4 [json_name = "timer-up-delay"];
      string grpc_client = 5 [json_name = "grpc-client"];
      message GroupService {
         string ip_address = 1 [json_name = "ip-address"];
         uint32 port = 2 [json_name = "port"];
         string pki_realm = 3 [json_name = "pki-realm"];
      }
      GroupService group_service = 6 [json_name = "group-service"];
   }
   IpGroup ip_group = 2 [json_name = "ip-group"];
   message NacGroup2 {
      message GlobalFilterApplys {
         message GlobalFilterApply {
            string acl_name = 1 [json_name = "acl-name"];
            enum Direction {
               Direction_INBOUND = 0;
               Direction_OUTBOUND = 1;
            };
            Direction direction = 2 [json_name = "direction"];
         }
         repeated GlobalFilterApply global_filter_apply = 1 [json_name = "global-filter-apply"];
      }
      GlobalFilterApplys global_filter_applys = 1 [json_name = "global-filter-applys"];
   }
   NacGroup2 nac_group = 3 [json_name = "nac-group"];
}

