syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2022-08-03 10:55:28
// ProtoYang-version 1
// module huawei-dns
// revision 2022-08-01
// revision 2022-05-25
// revision 2022-05-23
// revision 2022-01-29
// revision 2021-10-16
// revision 2021-09-03
// revision 2021-08-27
// revision 2021-08-17
// revision 2021-05-13
// revision 2021-01-19
// revision 2020-11-03
// revision 2020-06-30
// revision 2020-04-24
// namespace urn:huawei:yang:huawei-dns

package huawei_dns;

message Dns {
   message DnsDomains {
      message DnsDomain {
         string domain = 1;
         string vrfName = 2;
      }
      repeated DnsDomain dnsDomain = 1;
   }
   DnsDomains dnsDomains = 1;
   message DnsDynamicIpv4Hosts {
      message DnsDynamicIpv4Host {
         string alias = 1;
         string host = 2;
         string ipv4Addr = 3;
         enum QueryType {
            QueryType_INVERSE = 0;
            QueryType_STANDARD = 1;
         };
         QueryType queryType = 4;
         uint32 ttl = 5;
         string vrfName = 6;
      }
      repeated DnsDynamicIpv4Host dnsDynamicIpv4Host = 1;
   }
   DnsDynamicIpv4Hosts dnsDynamicIpv4Hosts = 2;
   message DnsDynamicIpv6Hosts {
      message DnsDynamicIpv6Host {
         string alias = 1;
         string host = 2;
         string ipv6Addr = 3;
         enum QueryType {
            QueryType_INVERSE = 0;
            QueryType_STANDARD = 1;
         };
         QueryType queryType = 4;
         uint32 ttl = 5;
         string vrfName = 6;
      }
      repeated DnsDynamicIpv6Host dnsDynamicIpv6Host = 1;
   }
   DnsDynamicIpv6Hosts dnsDynamicIpv6Hosts = 3;
   message DnsGlobalCfgs {
      message DnsGlobalCfg {
         enum DnsEnable {
            DnsEnable_FALSE = 0;
            DnsEnable_TRUE = 1;
         };
         DnsEnable dnsEnable = 1;
      }
      DnsGlobalCfg dnsGlobalCfg = 1;
   }
   DnsGlobalCfgs dnsGlobalCfgs = 4;
   message DnsIpv4Hosts {
      message DnsIpv4Host {
         string host = 1;
         string ipv4Addr = 2;
         string vrfName = 3;
      }
      repeated DnsIpv4Host dnsIpv4Host = 1;
   }
   DnsIpv4Hosts dnsIpv4Hosts = 5;
   message DnsIpv4Servers {
      message DnsIpv4Server {
         string ipv4Addr = 1;
         uint32 seqNo = 2;
         string vrfName = 3;
      }
      repeated DnsIpv4Server dnsIpv4Server = 1;
   }
   DnsIpv4Servers dnsIpv4Servers = 6;
   message DnsIpv6Hosts {
      message DnsIpv6Host {
         string host = 1;
         string ipv6Addr = 2;
         string vrfName = 3;
      }
      repeated DnsIpv6Host dnsIpv6Host = 1;
   }
   DnsIpv6Hosts dnsIpv6Hosts = 7;
   message DnsIpv6Servers {
      message DnsIpv6Server {
         string ifName = 1;
         string ipv6Addr = 2;
         uint32 seqNo = 3;
         string vrfName = 4;
      }
      repeated DnsIpv6Server dnsIpv6Server = 1;
   }
   DnsIpv6Servers dnsIpv6Servers = 8;
   message DnsPktStats {
      message DnsPktStat {
         uint32 discarded = 1;
         uint32 inputTotal = 2;
         uint32 outputTotal = 3;
         uint32 questionA = 4;
         uint32 questionAaaa = 5;
         uint32 questionPtr = 6;
         uint32 rrA = 7;
         uint32 rrAaaa = 8;
         uint32 rrCname = 9;
         uint32 rrPtr = 10;
         uint32 rrUnknown = 11;
         uint32 standard = 12;
      }
      repeated DnsPktStat dnsPktStat = 1;
      uint32 input_total = 2 [json_name = "input-total"];
      uint32 output_total = 3 [json_name = "output-total"];
      uint32 drop_total = 4 [json_name = "drop-total"];
      uint32 rr_a = 5 [json_name = "rr-a"];
      uint32 rr_aaaa = 6 [json_name = "rr-aaaa"];
      uint32 rr_ptr = 7 [json_name = "rr-ptr"];
      uint32 rr_cname = 8 [json_name = "rr-cname"];
      uint32 rr_unknown = 9 [json_name = "rr-unknown"];
      uint32 standard = 10 [json_name = "standard"];
      uint32 question_a = 11 [json_name = "question-a"];
      uint32 question_aaaa = 12 [json_name = "question-aaaa"];
      uint32 question_ptr = 13 [json_name = "question-ptr"];
      uint32 rcv_tcp_total = 14 [json_name = "rcv-tcp-total"];
      uint32 rcv_udp_total = 15 [json_name = "rcv-udp-total"];
      uint32 drop_tcp_total = 16 [json_name = "drop-tcp-total"];
      uint32 drop_udp_total = 17 [json_name = "drop-udp-total"];
      uint32 drop_len = 18 [json_name = "drop-len"];
      uint32 drop_id = 19 [json_name = "drop-id"];
      uint32 drop_server = 20 [json_name = "drop-server"];
      uint32 drop_code = 21 [json_name = "drop-code"];
      uint32 drop_tc = 22 [json_name = "drop-tc"];
      uint32 drop_query_cnt = 23 [json_name = "drop-query-cnt"];
      uint32 drop_answer_cnt = 24 [json_name = "drop-answer-cnt"];
      uint32 drop_expand_name = 25 [json_name = "drop-expand-name"];
      uint32 drop_class = 26 [json_name = "drop-class"];
      uint32 drop_other = 27 [json_name = "drop-other"];
      uint32 sent_udp_total = 28 [json_name = "sent-udp-total"];
      uint32 sent_tcp_total = 29 [json_name = "sent-tcp-total"];
   }
   DnsPktStats dns_pkt_stats = 9 [json_name = "dns-pkt-stats"];
   message DnsSrcIps {
      message DnsSrcIp {
         string sourceIpv4Addr = 1;
         string vrfName = 2;
      }
      repeated DnsSrcIp dnsSrcIp = 1;
   }
   DnsSrcIps dnsSrcIps = 10;
   message DnsSrcIpv6S {
      message DnsSrcIpv6 {
         string sourceIpv6Addr = 1;
         string vrfName = 2;
      }
      repeated DnsSrcIpv6 dnsSrcIpv6 = 1;
   }
   DnsSrcIpv6S dnsSrcIpv6s = 11;
   message DnsTimeouts {
      message DnsTimeout {
         uint32 intervalTime = 1;
      }
      DnsTimeout dnsTimeout = 1;
   }
   DnsTimeouts dnsTimeouts = 12;
   message DnsTryNumbers {
      message DnsTryNumber {
         uint32 tryNumber = 1;
      }
      DnsTryNumber dnsTryNumber = 1;
   }
   DnsTryNumbers dnsTryNumbers = 13;
   message Global {
      bool enable = 1 [json_name = "enable"];
   }
   Global global = 14 [json_name = "global"];
   message SrcIps {
      message SrcIp {
         string vrf_name = 1 [json_name = "vrf-name"];
         string source_ipv4_addr = 2 [json_name = "source-ipv4-addr"];
      }
      repeated SrcIp src_ip = 1 [json_name = "src-ip"];
   }
   SrcIps src_ips = 15 [json_name = "src-ips"];
   message Timeout {
      uint32 interval_time = 1 [json_name = "interval-time"];
   }
   Timeout timeout = 16 [json_name = "timeout"];
   message TryNumber {
      uint32 probe_count = 1 [json_name = "probe-count"];
   }
   TryNumber try_number = 17 [json_name = "try-number"];
   message Domains {
      message Domain {
         string vpn = 1 [json_name = "vpn"];
         string name = 2 [json_name = "name"];
      }
      repeated Domain domain = 1 [json_name = "domain"];
   }
   Domains domains = 18 [json_name = "domains"];
   message Ipv4Servers {
      message Ipv4Server {
         string vpn = 1 [json_name = "vpn"];
         string address = 2 [json_name = "address"];
         string tls_policy_name = 3 [json_name = "tls-policy-name"];
      }
      repeated Ipv4Server ipv4_server = 1 [json_name = "ipv4-server"];
   }
   Ipv4Servers ipv4_servers = 19 [json_name = "ipv4-servers"];
   message Ipv6Sources {
      message Ipv6Source {
         string vpn = 1 [json_name = "vpn"];
         string ipv6_source_addr = 2 [json_name = "ipv6-source-addr"];
      }
      repeated Ipv6Source ipv6_source = 1 [json_name = "ipv6-source"];
   }
   Ipv6Sources ipv6_sources = 20 [json_name = "ipv6-sources"];
   message Ipv4Hosts {
      message Ipv4Host {
         string vpn = 1 [json_name = "vpn"];
         string host = 2 [json_name = "host"];
         string address = 3 [json_name = "address"];
      }
      repeated Ipv4Host ipv4_host = 1 [json_name = "ipv4-host"];
   }
   Ipv4Hosts ipv4_hosts = 21 [json_name = "ipv4-hosts"];
   message Ipv6Hosts {
      message Ipv6Host {
         string vpn = 1 [json_name = "vpn"];
         string host = 2 [json_name = "host"];
         string ipv6_address = 3 [json_name = "ipv6-address"];
      }
      repeated Ipv6Host ipv6_host = 1 [json_name = "ipv6-host"];
   }
   Ipv6Hosts ipv6_hosts = 22 [json_name = "ipv6-hosts"];
   message Ipv6Servers {
      message Ipv6Server {
         string vpn = 1 [json_name = "vpn"];
         string ipv6_address = 2 [json_name = "ipv6-address"];
         string if_name = 3 [json_name = "if-name"];
         string tls_policy_name = 4 [json_name = "tls-policy-name"];
      }
      repeated Ipv6Server ipv6_server = 1 [json_name = "ipv6-server"];
   }
   Ipv6Servers ipv6_servers = 23 [json_name = "ipv6-servers"];
   message DnsRelay {
      bool enable = 1 [json_name = "enable"];
      bool ipv6_enable = 2 [json_name = "ipv6-enable"];
   }
   DnsRelay dns_relay = 24 [json_name = "dns-relay"];
   message QueryHostIps {
      message QueryHostIp {
         string host_name = 1 [json_name = "host-name"];
         string ip_address = 2 [json_name = "ip-address"];
      }
      repeated QueryHostIp query_host_ip = 1 [json_name = "query-host-ip"];
   }
   QueryHostIps query_host_ips = 25 [json_name = "query-host-ips"];
   message DeviceDomain {
      string domain_name = 1 [json_name = "domain-name"];
   }
   DeviceDomain device_domain = 26 [json_name = "device-domain"];
   message DnsProxy {
      bool enable = 1 [json_name = "enable"];
      message PacketStatistics {
         uint32 receive_client_packets = 1 [json_name = "receive-client-packets"];
         uint32 sent_client_packets = 2 [json_name = "sent-client-packets"];
         uint32 drop_client_packets = 3 [json_name = "drop-client-packets"];
         uint32 receive_server_packets = 4 [json_name = "receive-server-packets"];
         uint32 sent_server_packets = 5 [json_name = "sent-server-packets"];
         uint32 drop_server_packets = 6 [json_name = "drop-server-packets"];
      }
      PacketStatistics packet_statistics = 2 [json_name = "packet-statistics"];
      message NatSessions {
         message NatSession {
            enum Direction {
               INVALID_ENUM_VALUE_Direction = 0;
               Direction_INBOUND = 1;
               Direction_OUTBOUND = 2;
            };
            Direction direction = 1 [json_name = "direction"];
            string vrf_name = 2 [json_name = "vrf-name"];
            uint32 source_port = 3 [json_name = "source-port"];
            uint32 destination_port = 4 [json_name = "destination-port"];
            string source_addr = 5 [json_name = "source-addr"];
            string destination_addr = 6 [json_name = "destination-addr"];
            string nat_vrf_name = 7 [json_name = "nat-vrf-name"];
            uint32 nat_source_port = 8 [json_name = "nat-source-port"];
            uint32 nat_destination_port = 9 [json_name = "nat-destination-port"];
            string nat_source_addr = 10 [json_name = "nat-source-addr"];
            string nat_destination_addr = 11 [json_name = "nat-destination-addr"];
            uint32 total_matched_packets = 12 [json_name = "total-matched-packets"];
         }
         repeated NatSession nat_session = 1 [json_name = "nat-session"];
      }
      NatSessions nat_sessions = 3 [json_name = "nat-sessions"];
   }
   DnsProxy dns_proxy = 27 [json_name = "dns-proxy"];
   message ProxyClientSrcIps {
      message ProxyClientSrcIp {
         string vrf_name = 1 [json_name = "vrf-name"];
         string source_ipv4_addr = 2 [json_name = "source-ipv4-addr"];
      }
      repeated ProxyClientSrcIp proxy_client_src_ip = 1 [json_name = "proxy-client-src-ip"];
   }
   ProxyClientSrcIps proxy_client_src_ips = 28 [json_name = "proxy-client-src-ips"];
   message QueryHostIpv6S {
      message QueryHostIpv6 {
         string host_name = 1 [json_name = "host-name"];
         string vpn = 2 [json_name = "vpn"];
         repeated string ipv6_address = 3 [json_name = "ipv6-address"];
      }
      repeated QueryHostIpv6 query_host_ipv6 = 1 [json_name = "query-host-ipv6"];
   }
   QueryHostIpv6S query_host_ipv6s = 29 [json_name = "query-host-ipv6s"];
}

