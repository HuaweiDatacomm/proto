syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-08-03 16:01:26
// ProtoYang-version 1
// module huawei-bgp-lsp
// revision 2020-03-13
// revision 2020-01-02
// revision 2019-03-22
// namespace urn:huawei:yang:huawei-bgp-lsp

package huawei_bgp_lsp;

message BgpLsp {
   message Bfd {
      message Parameters {
         bool enable = 1 [json_name = "enable"];
         uint32 min_tx_interval = 2 [json_name = "min-tx-interval"];
         uint32 min_rx_interval = 3 [json_name = "min-rx-interval"];
         uint32 detection_multiplier = 4 [json_name = "detection-multiplier"];
         enum Trigger {
            Trigger_NONE = 0;
            Trigger_HOST = 1;
            Trigger_IPX_PREFIX = 2;
         };
         Trigger trigger = 5 [json_name = "trigger"];
         string trigger_ip_prefix_name = 6 [json_name = "trigger-ip-prefix-name"];
      }
      Parameters parameters = 1 [json_name = "parameters"];
      message Sessions {
         message Session {
            string fec_address = 1 [json_name = "fec-address"];
            string out_if_name = 2 [json_name = "out-if-name"];
            string next_hop = 3 [json_name = "next-hop"];
            uint32 index = 4 [json_name = "index"];
            uint32 discriminator = 5 [json_name = "discriminator"];
            enum State {
               State_ADMINX_DOWN = 0;
               State_DOWN = 1;
               State_INIT = 2;
               State_UP = 3;
            };
            State state = 6 [json_name = "state"];
            uint32 min_tx_interval = 7 [json_name = "min-tx-interval"];
            uint32 min_rx_interval = 8 [json_name = "min-rx-interval"];
            uint32 detection_multiplier = 9 [json_name = "detection-multiplier"];
            uint32 age = 10 [json_name = "age"];
         }
         repeated Session session = 1 [json_name = "session"];
      }
      Sessions sessions = 2 [json_name = "sessions"];
   }
   Bfd bfd = 1 [json_name = "bfd"];
   message States {
      message State {
         string vrf_name = 1 [json_name = "vrf-name"];
         enum Af {
            INVALID_ENUM_VALUE_Af = 0;
            Af_IPV4UNI = 1;
            Af_IPV4MULTI = 2;
            Af_IPV4VPN = 3;
            Af_IPV4LABELUNI = 4;
            Af_IPV6UNI = 5;
            Af_IPV6VPN = 6;
            Af_IPV4FLOW = 7;
            Af_L2VPNAD = 8;
            Af_EVPN = 9;
            Af_MVPN = 10;
            Af_VPNTARGET = 11;
            Af_IPV4VPNMCAST = 12;
            Af_LS = 13;
            Af_MDT = 14;
            Af_IPV6FLOW = 15;
            Af_MVPNV6 = 16;
            Af_VPNV4FLOW = 17;
            Af_VPNV6FLOW = 18;
            Af_RPD = 19;
            Af_IPV4SRPOLICY = 20;
            Af_IPV6SRPOLICY = 21;
            Af_IPV4SDWAN = 22;
         };
         Af af = 2 [json_name = "af"];
         string destination_address = 3 [json_name = "destination-address"];
         uint32 prefix_length = 4 [json_name = "prefix-length"];
         uint32 index = 5 [json_name = "index"];
         enum Type {
            INVALID_ENUM_VALUE_Type = 0;
            Type_INGRESS = 1;
            Type_TRANSIT = 2;
            Type_EGRESS = 4;
         };
         Type type = 6 [json_name = "type"];
         string indirect_id = 7 [json_name = "indirect-id"];
         enum FrrType {
            INVALID_ENUM_VALUE_FrrType = 0;
            FrrType_PRIMARY = 1;
            FrrType_BACKUP = 2;
         };
         FrrType frr_type = 8 [json_name = "frr-type"];
         string nexthop = 9 [json_name = "nexthop"];
         string inbound_if_name = 10 [json_name = "inbound-if-name"];
         string outbound_if_name = 11 [json_name = "outbound-if-name"];
         uint32 mtu = 12 [json_name = "mtu"];
         uint32 duration = 13 [json_name = "duration"];
         uint32 in_label = 14 [json_name = "in-label"];
         uint32 out_label = 15 [json_name = "out-label"];
         string out_tunnel_index = 16 [json_name = "out-tunnel-index"];
         enum LabelOperation {
            LabelOperation_PUSH = 0;
            LabelOperation_SWAP = 1;
            LabelOperation_POP = 2;
            LabelOperation_SWAPPUSH = 3;
            LabelOperation_POPGO = 4;
         };
         LabelOperation label_operation = 17 [json_name = "label-operation"];
         enum QosPriorityMode {
            QosPriorityMode_NULL = 0;
            QosPriorityMode_PIPE = 1;
            QosPriorityMode_UNIFORM = 2;
         };
         QosPriorityMode qos_priority_mode = 18 [json_name = "qos-priority-mode"];
         string tunnel_id = 19 [json_name = "tunnel-id"];
         string route_distinguisher = 20 [json_name = "route-distinguisher"];
         message Tunnels {
            message Tunnel {
               string value = 1 [json_name = "value"];
            }
            repeated Tunnel tunnel = 1 [json_name = "tunnel"];
         }
         Tunnels tunnels = 21 [json_name = "tunnels"];
      }
      repeated State state = 1 [json_name = "state"];
   }
   States states = 2 [json_name = "states"];
}

