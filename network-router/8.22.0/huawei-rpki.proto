syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2022-02-17 15:28:00
// ProtoYang-version 1
// module huawei-rpki
// revision 2022-01-24
// revision 2020-12-09
// namespace urn:huawei:yang:huawei-rpki

package huawei_rpki;

message Rpki {
   message Rpki2 {
      message RegionValidation {
         message Regions {
            message Region {
               uint32 id = 1 [json_name = "id"];
               string description = 2 [json_name = "description"];
               repeated string as = 3 [json_name = "as"];
            }
            repeated Region region = 1 [json_name = "region"];
         }
         Regions regions = 1 [json_name = "regions"];
         message Confederations {
            message Confederation {
               uint32 id = 1 [json_name = "id"];
               string description = 2 [json_name = "description"];
               repeated uint32 region_id = 3 [json_name = "region-id"];
            }
            repeated Confederation confederation = 1 [json_name = "confederation"];
         }
         Confederations confederations = 2 [json_name = "confederations"];
      }
      RegionValidation region_validation = 1 [json_name = "region-validation"];
      message OriginValidation {
         message StaticRecords {
            message StaticRecord {
               string address = 1 [json_name = "address"];
               uint32 mask_length = 2 [json_name = "mask-length"];
               uint32 max_length = 3 [json_name = "max-length"];
               string origin_as = 4 [json_name = "origin-as"];
            }
            repeated StaticRecord static_record = 1 [json_name = "static-record"];
         }
         StaticRecords static_records = 1 [json_name = "static-records"];
      }
      OriginValidation origin_validation = 2 [json_name = "origin-validation"];
      message Status {
         message Sessions {
            message Session {
               string vpn_name = 1 [json_name = "vpn-name"];
               string remote_address = 2 [json_name = "remote-address"];
               uint32 remote_port = 3 [json_name = "remote-port"];
               string local_address = 4 [json_name = "local-address"];
               uint32 local_port = 5 [json_name = "local-port"];
               uint32 id = 6 [json_name = "id"];
               uint32 serial_number = 7 [json_name = "serial-number"];
               enum State {
                  State_IDLE = 0;
                  State_CONNECTING = 1;
                  State_SYN = 2;
                  State_ESTABLISHED = 3;
               };
               State state = 8 [json_name = "state"];
               uint32 age = 9 [json_name = "age"];
               uint32 refresh_time = 10 [json_name = "refresh-time"];
               uint32 aging_time = 11 [json_name = "aging-time"];
               uint32 ipv4_record_count = 12 [json_name = "ipv4-record-count"];
               uint32 ipv6_record_count = 13 [json_name = "ipv6-record-count"];
            }
            repeated Session session = 1 [json_name = "session"];
         }
         Sessions sessions = 1 [json_name = "sessions"];
         message Roas {
            message Roa {
               string vpn_name = 1 [json_name = "vpn-name"];
               string address = 2 [json_name = "address"];
               uint32 mask_length = 3 [json_name = "mask-length"];
               uint32 max_length = 4 [json_name = "max-length"];
               string session = 5 [json_name = "session"];
               string origin_as = 6 [json_name = "origin-as"];
            }
            repeated Roa roa = 1 [json_name = "roa"];
         }
         Roas roas = 2 [json_name = "roas"];
      }
      Status status = 3 [json_name = "status"];
   }
   Rpki2 rpki2 = 1 [json_name = "rpki"];
}

