syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2022-05-12 10:30:20
// ProtoYang-version 1
// module huawei-vxlan-ext
// revision 2022-05-05
// revision 2021-12-04
// revision 2020-06-19
// revision 2020-01-21
// namespace urn:huawei:yang:huawei-vxlan-ext

package huawei_vxlan_ext;

message VxlanExt {
   message ForceRedirects {
      message ForceRedirect {
         uint32 vni_begin = 1 [json_name = "vni-begin"];
         uint32 vni_end = 2 [json_name = "vni-end"];
         string if_name = 3 [json_name = "if-name"];
      }
      repeated ForceRedirect force_redirect = 1 [json_name = "force-redirect"];
   }
   ForceRedirects force_redirects = 1 [json_name = "force-redirects"];
   message Nvo3OspfEnable {
      bool ospf_enable = 1 [json_name = "ospf-enable"];
      bool ospfv3_enable = 2 [json_name = "ospfv3-enable"];
   }
   Nvo3OspfEnable nvo3_ospf_enable = 2 [json_name = "nvo3-ospf-enable"];
   message Nvo3OspfDiscard {
      bool ospf_discard = 1 [json_name = "ospf-discard"];
      bool ospfv3_discard = 2 [json_name = "ospfv3-discard"];
   }
   Nvo3OspfDiscard nvo3_ospf_discard = 3 [json_name = "nvo3-ospf-discard"];
   message BridgeDomainSuperMode {
      bool enable = 1 [json_name = "enable"];
   }
   BridgeDomainSuperMode bridge_domain_super_mode = 4 [json_name = "bridge-domain-super-mode"];
   message Nvo3BumHash {
   }
   Nvo3BumHash nvo3_bum_hash = 5 [json_name = "nvo3-bum-hash"];
}

