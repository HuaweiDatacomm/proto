syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-08-03 16:01:26
// ProtoYang-version 1
// module huawei-monitor-group
// revision 2020-03-09
// revision 2019-04-28
// namespace urn:huawei:yang:huawei-monitor-group

package huawei_monitor_group;

message MonitorGroup {
   message Groups {
      message Group {
         string name = 1 [json_name = "name"];
         uint32 trigger_up_delay = 2 [json_name = "trigger-up-delay"];
         enum EnableStatus {
            EnableStatus_INACTIVE = 0;
            EnableStatus_ACTIVE = 1;
         };
         EnableStatus enable_status = 3 [json_name = "enable-status"];
         message BindingIfs {
            message BindingIf {
               string if_name = 1 [json_name = "if-name"];
               uint32 down_weight = 2 [json_name = "down-weight"];
               uint32 ifindex = 3 [json_name = "ifindex"];
               enum PhyStatus {
                  PhyStatus_DOWN = 0;
                  PhyStatus_UP = 1;
                  PhyStatus_NORMAL = 255;
               };
               PhyStatus phy_status = 4 [json_name = "phy-status"];
               enum BfdStatus {
                  BfdStatus_DOWN = 0;
                  BfdStatus_UP = 1;
                  BfdStatus_NORMAL = 255;
               };
               BfdStatus bfd_status = 5 [json_name = "bfd-status"];
               string last_phyup_time = 6 [json_name = "last-phyup-time"];
               string last_phydown_time = 7 [json_name = "last-phydown-time"];
               string last_bfdup_time = 8 [json_name = "last-bfdup-time"];
               string last_bfddown_time = 9 [json_name = "last-bfddown-time"];
               enum ValidFlag {
                  ValidFlag_INVALID = 0;
                  ValidFlag_VALID = 1;
               };
               ValidFlag valid_flag = 10 [json_name = "valid-flag"];
            }
            repeated BindingIf binding_if = 1 [json_name = "binding-if"];
         }
         BindingIfs binding_ifs = 4 [json_name = "binding-ifs"];
         uint32 index = 5 [json_name = "index"];
         uint32 down_weight = 6 [json_name = "down-weight"];
         uint32 weight_sum = 7 [json_name = "weight-sum"];
         uint32 max_track_weight = 8 [json_name = "max-track-weight"];
         uint32 binding_if_num = 9 [json_name = "binding-if-num"];
         uint32 tracked_if_num = 10 [json_name = "tracked-if-num"];
      }
      repeated Group group = 1 [json_name = "group"];
   }
   Groups groups = 1 [json_name = "groups"];
}

