syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2022-10-18 21:35:44
// ProtoYang-version 1
// module huawei-diagnostic-tools
// revision 2022-10-18
// revision 2022-09-22
// revision 2022-07-16
// revision 2022-06-12
// revision 2022-06-11
// revision 2022-05-27
// revision 2022-05-20
// revision 2022-05-09
// revision 2022-04-27
// revision 2022-04-06
// revision 2022-03-19
// revision 2022-03-10
// revision 2022-03-07
// revision 2022-03-03
// revision 2022-02-28
// revision 2022-02-23
// revision 2022-02-22
// revision 2022-02-08
// revision 2022-01-08
// revision 2022-01-04
// revision 2021-10-11
// revision 2021-08-05
// revision 2021-06-11
// revision 2021-05-11
// revision 2021-01-20
// revision 2021-01-11
// revision 2021-01-04
// revision 2020-09-10
// revision 2020-08-24
// revision 2020-07-04
// revision 2020-01-14
// revision 2019-11-05
// namespace urn:huawei:yang:huawei-diagnostic-tools

package huawei_diagnostic_tools;

message DiagnosticTools {
   message Ipv4 {
      message PingResults {
         message PingResult {
            string test_name = 1 [json_name = "test-name"];
            uint32 packet_recv = 2 [json_name = "packet-recv"];
            uint32 packet_send = 3 [json_name = "packet-send"];
            uint32 loss_ratio = 4 [json_name = "loss-ratio"];
            uint32 rtt_min = 5 [json_name = "rtt-min"];
            uint32 rtt_max = 6 [json_name = "rtt-max"];
            uint32 average_rtt = 7 [json_name = "average-rtt"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 8 [json_name = "status"];
            enum ErrorType {
               ErrorType_SUCCESS = 0;
               ErrorType_FAILED = 1;
            };
            ErrorType error_type = 9 [json_name = "error-type"];
            message Details {
               message Detail {
                  uint32 index = 1 [json_name = "index"];
                  string ip_addr = 2 [json_name = "ip-addr"];
                  uint32 packet_size = 3 [json_name = "packet-size"];
                  uint32 ttl = 4 [json_name = "ttl"];
                  uint32 rtt = 5 [json_name = "rtt"];
                  bool is_delete = 6 [json_name = "is-delete"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 7 [json_name = "result-type"];
                  string system_time = 8 [json_name = "system-time"];
                  string incoming_if_name = 9 [json_name = "incoming-if-name"];
                  string incoming_phy_if_name = 10 [json_name = "incoming-phy-if-name"];
                  message RecordRoutes {
                     message RecordRoute {
                        uint32 router_index = 1 [json_name = "router-index"];
                        string router_address = 2 [json_name = "router-address"];
                     }
                     repeated RecordRoute record_route = 1 [json_name = "record-route"];
                  }
                  RecordRoutes record_routes = 11 [json_name = "record-routes"];
                  enum ErrorCode {
                     INVALID_ENUM_VALUE_ErrorCode = 0;
                     ErrorCode_NOX_ROUTE = 1;
                     ErrorCode_NOX_ARP = 2;
                     ErrorCode_OUTX_IFX_DOWN = 3;
                     ErrorCode_SENDX_FAIL = 4;
                     ErrorCode_ICMPX_IDX_ERROR = 5;
                     ErrorCode_SEQUENCEX_ERROR = 6;
                     ErrorCode_MTUX_ERROR = 7;
                     ErrorCode_NETWORKX_UNREACHABLE = 8;
                     ErrorCode_HOSTX_UNREACHABLE = 9;
                     ErrorCode_PROTOCOLX_UNREACHABLE = 10;
                     ErrorCode_PORTX_UNREACHABLE = 11;
                     ErrorCode_FRAGMENTATIONX_NEED = 12;
                     ErrorCode_SOURCEX_ROUTINGX_FAILED = 13;
                     ErrorCode_DESTINATIONX_NETWORKX_UNKNOWN = 14;
                     ErrorCode_DESTINATIONX_HOSTX_UNKNOWN = 15;
                     ErrorCode_TTLX_EXCEEDEDX_TRANSIT = 16;
                     ErrorCode_TTLX_EXCEEDEDX_REASSEMBLY = 17;
                     ErrorCode_IPX_HEADERX_BAD = 18;
                     ErrorCode_OTHERX_ICMPX_ERROR = 200;
                  };
                  ErrorCode error_code = 12 [json_name = "error-code"];
                  uint32 response_mtu = 13 [json_name = "response-mtu"];
                  uint32 actural_icmp_id = 14 [json_name = "actural-icmp-id"];
                  uint32 expect_icmp_id = 15 [json_name = "expect-icmp-id"];
                  uint32 actural_sequence = 16 [json_name = "actural-sequence"];
                  uint32 expect_sequence = 17 [json_name = "expect-sequence"];
                  uint32 icmp_error_code = 18 [json_name = "icmp-error-code"];
                  uint32 icmp_error_type = 19 [json_name = "icmp-error-type"];
                  uint32 path_reason = 20 [json_name = "path-reason"];
                  message RouteRecords {
                     message RouteRecord {
                        string route_address = 1 [json_name = "route-address"];
                     }
                     repeated RouteRecord route_record = 1 [json_name = "route-record"];
                  }
                  RouteRecords route_records = 21 [json_name = "route-records"];
                  string response_vrf_name = 22 [json_name = "response-vrf-name"];
               }
               repeated Detail detail = 1 [json_name = "detail"];
            }
            Details details = 10 [json_name = "details"];
            string host_name = 11 [json_name = "host-name"];
         }
         repeated PingResult ping_result = 1 [json_name = "ping-result"];
      }
      PingResults ping_results = 1 [json_name = "ping-results"];
      message TraceResults {
         message TraceResult {
            string test_name = 1 [json_name = "test-name"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 2 [json_name = "status"];
            enum ErrorType {
               ErrorType_SUCCESS = 0;
               ErrorType_FAILED = 1;
            };
            ErrorType error_type = 3 [json_name = "error-type"];
            message Details {
               message Detail {
                  uint32 hop_index = 1 [json_name = "hop-index"];
                  uint32 ttl = 2 [json_name = "ttl"];
                  uint32 rtt = 3 [json_name = "rtt"];
                  string ds_ip_addr = 4 [json_name = "ds-ip-addr"];
                  bool is_delete = 5 [json_name = "is-delete"];
               }
               repeated Detail detail = 1 [json_name = "detail"];
            }
            Details details = 4 [json_name = "details"];
            message Hops {
               message Hop {
                  uint32 hop_index = 1 [json_name = "hop-index"];
                  message Probes {
                     message Probe {
                        uint32 probe_index = 1 [json_name = "probe-index"];
                        uint32 rtt = 2 [json_name = "rtt"];
                        string replier = 3 [json_name = "replier"];
                        string host_name = 4 [json_name = "host-name"];
                        enum ResultType {
                           ResultType_SUCCESS = 0;
                           ResultType_TIMEOUT = 1;
                           ResultType_FAILED = 2;
                        };
                        ResultType result_type = 5 [json_name = "result-type"];
                        message MplsLabels {
                           message MplsLabel {
                              uint32 label_count_index = 1 [json_name = "label-count-index"];
                              uint32 label_value = 2 [json_name = "label-value"];
                              uint32 label_exp = 3 [json_name = "label-exp"];
                              uint32 label_stack_bottom = 4 [json_name = "label-stack-bottom"];
                              uint32 label_ttl = 5 [json_name = "label-ttl"];
                           }
                           repeated MplsLabel mpls_label = 1 [json_name = "mpls-label"];
                        }
                        MplsLabels mpls_labels = 6 [json_name = "mpls-labels"];
                        string as_num = 7 [json_name = "as-num"];
                        string response_vrf_name = 8 [json_name = "response-vrf-name"];
                     }
                     repeated Probe probe = 1 [json_name = "probe"];
                     bool is_delete = 2 [json_name = "is-delete"];
                  }
                  Probes probes = 2 [json_name = "probes"];
                  bool is_delete = 3 [json_name = "is-delete"];
               }
               repeated Hop hop = 1 [json_name = "hop"];
            }
            Hops hops = 5 [json_name = "hops"];
            string host_name = 6 [json_name = "host-name"];
         }
         repeated TraceResult trace_result = 1 [json_name = "trace-result"];
      }
      TraceResults trace_results = 2 [json_name = "trace-results"];
   }
   Ipv4 ipv4 = 1 [json_name = "ipv4"];
   message Ipv6 {
      message PingResults {
         message PingResult {
            string test_name = 1 [json_name = "test-name"];
            uint32 packet_recv = 2 [json_name = "packet-recv"];
            uint32 packet_send = 3 [json_name = "packet-send"];
            uint32 loss_ratio = 4 [json_name = "loss-ratio"];
            uint32 rtt_min = 5 [json_name = "rtt-min"];
            uint32 rtt_max = 6 [json_name = "rtt-max"];
            uint32 average_rtt = 7 [json_name = "average-rtt"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 8 [json_name = "status"];
            enum ErrorType {
               ErrorType_SUCCESS = 0;
               ErrorType_FAILED = 1;
            };
            ErrorType error_type = 9 [json_name = "error-type"];
            message PingResultDetails {
               message PingResultDetail {
                  uint32 index = 1 [json_name = "index"];
                  string dest_ip_addr = 2 [json_name = "dest-ip-addr"];
                  uint32 packet_size = 3 [json_name = "packet-size"];
                  uint32 ttl = 4 [json_name = "ttl"];
                  uint32 rtt = 5 [json_name = "rtt"];
                  bool is_delete = 6 [json_name = "is-delete"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 7 [json_name = "result-type"];
                  string system_time = 8 [json_name = "system-time"];
                  string incoming_if_name = 9 [json_name = "incoming-if-name"];
                  string incoming_phy_if_name = 10 [json_name = "incoming-phy-if-name"];
                  enum ErrorCode {
                     INVALID_ENUM_VALUE_ErrorCode = 0;
                     ErrorCode_NOX_ROUTE6 = 1;
                     ErrorCode_NOX_ND = 2;
                     ErrorCode_OUTX_IFX_DOWN = 3;
                     ErrorCode_SENDX_FAIL = 4;
                     ErrorCode_ICMPX_IDX_ERROR = 5;
                     ErrorCode_SEQUENCEX_ERROR = 6;
                     ErrorCode_NOROUTEX_UNREACHABLE = 7;
                     ErrorCode_PROHIBITED = 8;
                     ErrorCode_ADDRX_UNREACHABLE = 9;
                     ErrorCode_PORTX_UNREACHABLE = 10;
                     ErrorCode_PACKETX_TOOX_BIG = 11;
                     ErrorCode_HOPX_LIMIT = 12;
                     ErrorCode_REASSEMBLYX_TIMEOUT = 13;
                     ErrorCode_ERRONEOUSX_HEADER = 14;
                     ErrorCode_UNRECOGNIZEDX_HEADER = 15;
                     ErrorCode_UNRECOGNIZEDX_OPTION = 16;
                     ErrorCode_OTHERX_ICMPX_ERROR = 200;
                  };
                  ErrorCode error_code = 11 [json_name = "error-code"];
                  uint32 actural_icmp_id = 12 [json_name = "actural-icmp-id"];
                  uint32 expect_icmp_id = 13 [json_name = "expect-icmp-id"];
                  uint32 actural_sequence = 14 [json_name = "actural-sequence"];
                  uint32 expect_sequence = 15 [json_name = "expect-sequence"];
                  uint32 icmp_error_code = 16 [json_name = "icmp-error-code"];
                  uint32 icmp_error_type = 17 [json_name = "icmp-error-type"];
                  uint32 path_reason = 18 [json_name = "path-reason"];
               }
               repeated PingResultDetail ping_result_detail = 1 [json_name = "ping-result-detail"];
            }
            PingResultDetails ping_result_details = 10 [json_name = "ping-result-details"];
            string host_name = 11 [json_name = "host-name"];
         }
         repeated PingResult ping_result = 1 [json_name = "ping-result"];
      }
      PingResults ping_results = 1 [json_name = "ping-results"];
      message TraceResults {
         message TraceResult {
            string test_name = 1 [json_name = "test-name"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 2 [json_name = "status"];
            enum ErrorType {
               ErrorType_SUCCESS = 0;
               ErrorType_FAILED = 1;
            };
            ErrorType error_type = 3 [json_name = "error-type"];
            message TraceResultDetails {
               message TraceResultDetail {
                  uint32 index = 1 [json_name = "index"];
                  uint32 ttl = 2 [json_name = "ttl"];
                  uint32 rtt = 3 [json_name = "rtt"];
                  string dest_ip_addr = 4 [json_name = "dest-ip-addr"];
                  bool is_delete = 5 [json_name = "is-delete"];
               }
               repeated TraceResultDetail trace_result_detail = 1 [json_name = "trace-result-detail"];
            }
            TraceResultDetails trace_result_details = 4 [json_name = "trace-result-details"];
            message Hops {
               message Hop {
                  uint32 hop_index = 1 [json_name = "hop-index"];
                  bool is_delete = 2 [json_name = "is-delete"];
                  message Probes {
                     message Probe {
                        uint32 probe_index = 1 [json_name = "probe-index"];
                        uint32 rtt = 2 [json_name = "rtt"];
                        string replier = 3 [json_name = "replier"];
                        enum ResultType {
                           ResultType_SUCCESS = 0;
                           ResultType_TIMEOUT = 1;
                           ResultType_FAILED = 2;
                        };
                        ResultType result_type = 4 [json_name = "result-type"];
                        uint32 srh_segment_left = 5 [json_name = "srh-segment-left"];
                        message MplsLabels {
                           message MplsLabel {
                              uint32 label_index = 1 [json_name = "label-index"];
                              uint32 label_value = 2 [json_name = "label-value"];
                              uint32 label_exp = 3 [json_name = "label-exp"];
                              uint32 label_stack_bottom = 4 [json_name = "label-stack-bottom"];
                              uint32 label_ttl = 5 [json_name = "label-ttl"];
                           }
                           repeated MplsLabel mpls_label = 1 [json_name = "mpls-label"];
                        }
                        MplsLabels mpls_labels = 6 [json_name = "mpls-labels"];
                        message SrhSids {
                           message SrhSid {
                              uint32 sid_index = 1 [json_name = "sid-index"];
                              string sid = 2 [json_name = "sid"];
                           }
                           repeated SrhSid srh_sid = 1 [json_name = "srh-sid"];
                        }
                        SrhSids srh_sids = 7 [json_name = "srh-sids"];
                        uint32 slice_id = 8 [json_name = "slice-id"];
                     }
                     repeated Probe probe = 1 [json_name = "probe"];
                  }
                  Probes probes = 3 [json_name = "probes"];
               }
               repeated Hop hop = 1 [json_name = "hop"];
            }
            Hops hops = 5 [json_name = "hops"];
            string host_name = 6 [json_name = "host-name"];
         }
         repeated TraceResult trace_result = 1 [json_name = "trace-result"];
      }
      TraceResults trace_results = 2 [json_name = "trace-results"];
   }
   Ipv6 ipv6 = 2 [json_name = "ipv6"];
   message Lsp {
      message PingResults {
         message PingResult {
            string test_name = 1 [json_name = "test-name"];
            string tunnel_name = 2 [json_name = "tunnel-name"];
            uint32 packet_send = 3 [json_name = "packet-send"];
            uint32 packet_recv = 4 [json_name = "packet-recv"];
            uint32 loss_ratio = 5 [json_name = "loss-ratio"];
            uint32 rtt_min = 6 [json_name = "rtt-min"];
            uint32 rtt_max = 7 [json_name = "rtt-max"];
            uint32 rtt_average = 8 [json_name = "rtt-average"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 9 [json_name = "status"];
            enum ErrorType {
               ErrorType_SUCCESS = 0;
               ErrorType_FAILED = 1;
            };
            ErrorType error_type = 10 [json_name = "error-type"];
            message PingResultDetails {
               message PingResultDetail {
                  uint32 index = 1 [json_name = "index"];
                  string dest_ip_addr = 2 [json_name = "dest-ip-addr"];
                  uint32 packet_size = 3 [json_name = "packet-size"];
                  uint32 rtt = 4 [json_name = "rtt"];
                  uint32 ttl = 5 [json_name = "ttl"];
                  enum RetCode {
                     RetCode_NONE = 0;
                     RetCode_MALFORMED = 1;
                     RetCode_UNKNOWN = 2;
                     RetCode_EGRESS = 3;
                     RetCode_NOX_MAPPING = 4;
                     RetCode_DSX_MISMATCH = 5;
                     RetCode_NOX_UPX_INTERFACE = 6;
                     RetCode_RESERVED = 7;
                     RetCode_LABELX_SWITCH = 8;
                     RetCode_NOX_MPLSX_FORWARDING = 9;
                     RetCode_NOX_MAPPINGX_LABEL = 10;
                     RetCode_NOX_ENTRY = 11;
                     RetCode_NOX_PROTOCOL = 12;
                     RetCode_PREMATUREX_TERMINATION = 13;
                     RetCode_SEEX_DDMAPX_TLV = 14;
                     RetCode_FECX_CHANGE = 15;
                  };
                  RetCode ret_code = 6 [json_name = "ret-code"];
                  uint32 sub_code = 7 [json_name = "sub-code"];
                  bool is_delete = 8 [json_name = "is-delete"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 9 [json_name = "result-type"];
               }
               repeated PingResultDetail ping_result_detail = 1 [json_name = "ping-result-detail"];
            }
            PingResultDetails ping_result_details = 11 [json_name = "ping-result-details"];
            uint32 path_index = 12 [json_name = "path-index"];
            message SrtePolicyResults {
               enum PathStatus {
                  PathStatus_PROCESSING = 0;
                  PathStatus_FINISHED = 1;
               };
               PathStatus path_status = 1 [json_name = "path-status"];
               uint32 preference = 2 [json_name = "preference"];
               enum PathType {
                  PathType_UNKNOWN = 0;
                  PathType_MAINX_PATH = 1;
                  PathType_BACKUPX_PATH = 2;
               };
               PathType path_type = 3 [json_name = "path-type"];
               enum ProtocolOrigin {
                  INVALID_ENUM_VALUE_ProtocolOrigin = 0;
                  ProtocolOrigin_PECP = 10;
                  ProtocolOrigin_BGP = 20;
                  ProtocolOrigin_LOCAL = 30;
                  ProtocolOrigin_UNKNOWN = 255;
               };
               ProtocolOrigin protocol_origin = 4 [json_name = "protocol-origin"];
               uint32 asn = 5 [json_name = "asn"];
               string node_address = 6 [json_name = "node-address"];
               uint32 discriminator = 7 [json_name = "discriminator"];
               uint32 segment_list_id = 8 [json_name = "segment-list-id"];
               uint32 xc_index = 9 [json_name = "xc-index"];
            }
            SrtePolicyResults srte_policy_results = 13 [json_name = "srte-policy-results"];
         }
         repeated PingResult ping_result = 1 [json_name = "ping-result"];
      }
      PingResults ping_results = 1 [json_name = "ping-results"];
      message TraceResults {
         message TraceResult {
            string test_name = 1 [json_name = "test-name"];
            string tunnel_name = 2 [json_name = "tunnel-name"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 3 [json_name = "status"];
            enum ErrorType {
               ErrorType_SUCCESS = 0;
               ErrorType_FAILED = 1;
            };
            ErrorType error_type = 4 [json_name = "error-type"];
            message TraceResultDetails {
               message TraceResultDetail {
                  uint32 hop_index = 1 [json_name = "hop-index"];
                  string ds_ip_addr = 2 [json_name = "ds-ip-addr"];
                  string down_stream_ip_addr = 3 [json_name = "down-stream-ip-addr"];
                  uint32 rtt = 4 [json_name = "rtt"];
                  enum Type {
                     INVALID_ENUM_VALUE_Type = 0;
                     Type_INGRESS = 1;
                     Type_TRANSIT = 2;
                     Type_EGRESS = 3;
                  };
                  Type type = 5 [json_name = "type"];
                  uint32 ttl = 6 [json_name = "ttl"];
                  uint32 ds_label = 7 [json_name = "ds-label"];
                  uint32 ret_code = 8 [json_name = "ret-code"];
                  bool is_delete = 9 [json_name = "is-delete"];
                  message Downstreams {
                     message Downstream {
                        uint32 ds_label = 1 [json_name = "ds-label"];
                     }
                     repeated Downstream downstream = 1 [json_name = "downstream"];
                  }
                  Downstreams downstreams = 10 [json_name = "downstreams"];
               }
               repeated TraceResultDetail trace_result_detail = 1 [json_name = "trace-result-detail"];
            }
            TraceResultDetails trace_result_details = 5 [json_name = "trace-result-details"];
            uint32 path_index = 6 [json_name = "path-index"];
            message Hops {
               message Hop {
                  uint32 hop_index = 1 [json_name = "hop-index"];
                  string replier = 2 [json_name = "replier"];
                  uint32 rtt = 3 [json_name = "rtt"];
                  enum Type {
                     INVALID_ENUM_VALUE_Type = 0;
                     Type_INGRESS = 1;
                     Type_TRANSIT = 2;
                     Type_EGRESS = 3;
                  };
                  Type type = 4 [json_name = "type"];
                  enum ReturnCode {
                     ReturnCode_NONE = 0;
                     ReturnCode_MALFORMED = 1;
                     ReturnCode_UNKNOWN = 2;
                     ReturnCode_EGRESS = 3;
                     ReturnCode_NOX_MAPPING = 4;
                     ReturnCode_DSX_MISMATCH = 5;
                     ReturnCode_NOX_UPX_INTERFACE = 6;
                     ReturnCode_RESERVED = 7;
                     ReturnCode_LABELX_SWITCH = 8;
                     ReturnCode_NOX_MPLSX_FORWARDING = 9;
                     ReturnCode_NOX_MAPPINGX_LABEL = 10;
                     ReturnCode_NOX_ENTRY = 11;
                     ReturnCode_NOX_PROTOCOL = 12;
                     ReturnCode_PREMATUREX_TERMINATION = 13;
                     ReturnCode_SEEX_DDMAPX_TLV = 14;
                     ReturnCode_FECX_CHANGE = 15;
                  };
                  ReturnCode return_code = 5 [json_name = "return-code"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 6 [json_name = "result-type"];
                  bool is_delete = 7 [json_name = "is-delete"];
                  message Downstreams {
                     message Downstream {
                        uint32 ds_index = 1 [json_name = "ds-index"];
                        string ds_address = 2 [json_name = "ds-address"];
                        message DsLabelLists {
                           message DsLabelList {
                              uint32 label_index = 1 [json_name = "label-index"];
                              uint32 ds_label = 2 [json_name = "ds-label"];
                           }
                           repeated DsLabelList ds_label_list = 1 [json_name = "ds-label-list"];
                        }
                        DsLabelLists ds_label_lists = 3 [json_name = "ds-label-lists"];
                     }
                     repeated Downstream downstream = 1 [json_name = "downstream"];
                  }
                  Downstreams downstreams = 8 [json_name = "downstreams"];
               }
               repeated Hop hop = 1 [json_name = "hop"];
            }
            Hops hops = 7 [json_name = "hops"];
            message SrtePolicyResults {
               enum PathStatus {
                  PathStatus_PROCESSING = 0;
                  PathStatus_FINISHED = 1;
               };
               PathStatus path_status = 1 [json_name = "path-status"];
               uint32 preference = 2 [json_name = "preference"];
               enum PathType {
                  PathType_UNKNOWN = 0;
                  PathType_MAINX_PATH = 1;
                  PathType_BACKUPX_PATH = 2;
               };
               PathType path_type = 3 [json_name = "path-type"];
               enum ProtocolOrigin {
                  INVALID_ENUM_VALUE_ProtocolOrigin = 0;
                  ProtocolOrigin_PECP = 10;
                  ProtocolOrigin_BGP = 20;
                  ProtocolOrigin_LOCAL = 30;
                  ProtocolOrigin_UNKNOWN = 255;
               };
               ProtocolOrigin protocol_origin = 4 [json_name = "protocol-origin"];
               uint32 asn = 5 [json_name = "asn"];
               string node_address = 6 [json_name = "node-address"];
               uint32 discriminator = 7 [json_name = "discriminator"];
               uint32 segment_list_id = 8 [json_name = "segment-list-id"];
               uint32 xc_index = 9 [json_name = "xc-index"];
            }
            SrtePolicyResults srte_policy_results = 8 [json_name = "srte-policy-results"];
         }
         repeated TraceResult trace_result = 1 [json_name = "trace-result"];
      }
      TraceResults trace_results = 2 [json_name = "trace-results"];
   }
   Lsp lsp = 3 [json_name = "lsp"];
   message Srv6 {
      message MultiPathTePingResults {
         message MultiPathTePingResult {
            string test_name = 1 [json_name = "test-name"];
            string path_index = 2 [json_name = "path-index"];
            uint32 packet_recv = 3 [json_name = "packet-recv"];
            uint32 packet_send = 4 [json_name = "packet-send"];
            uint32 loss_ratio = 5 [json_name = "loss-ratio"];
            uint32 rtt_min = 6 [json_name = "rtt-min"];
            uint32 rtt_max = 7 [json_name = "rtt-max"];
            uint32 average_rtt = 8 [json_name = "average-rtt"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 9 [json_name = "status"];
            enum PathStatus {
               PathStatus_PROCESSING = 0;
               PathStatus_FINISHED = 1;
            };
            PathStatus path_status = 10 [json_name = "path-status"];
            enum ErrorType {
               ErrorType_SUCCESS = 0;
               ErrorType_FAILED = 1;
            };
            ErrorType error_type = 11 [json_name = "error-type"];
            uint32 preference = 12 [json_name = "preference"];
            enum PathType {
               PathType_UNKNOWN = 0;
               PathType_PRIMARY = 1;
               PathType_BACKUP = 2;
            };
            PathType path_type = 13 [json_name = "path-type"];
            enum ProtocolOrigin {
               INVALID_ENUM_VALUE_ProtocolOrigin = 0;
               ProtocolOrigin_PECP = 10;
               ProtocolOrigin_BGP = 20;
               ProtocolOrigin_LOCAL = 30;
               ProtocolOrigin_UNKNOWN = 255;
            };
            ProtocolOrigin protocol_origin = 14 [json_name = "protocol-origin"];
            string node_address = 15 [json_name = "node-address"];
            uint32 asn_no = 16 [json_name = "asn-no"];
            uint32 discriminator = 17 [json_name = "discriminator"];
            uint32 segment_list_id = 18 [json_name = "segment-list-id"];
            uint32 xc_index = 19 [json_name = "xc-index"];
            string end_op = 20 [json_name = "end-op"];
            message TePingResultDetails {
               message TePingResultDetail {
                  uint32 index = 1 [json_name = "index"];
                  string dest_ipv6_addr = 2 [json_name = "dest-ipv6-addr"];
                  uint32 packet_size = 3 [json_name = "packet-size"];
                  uint32 hop_limit = 4 [json_name = "hop-limit"];
                  uint32 rtt = 5 [json_name = "rtt"];
                  bool is_delete = 6 [json_name = "is-delete"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 7 [json_name = "result-type"];
               }
               repeated TePingResultDetail te_ping_result_detail = 1 [json_name = "te-ping-result-detail"];
            }
            TePingResultDetails te_ping_result_details = 21 [json_name = "te-ping-result-details"];
         }
         repeated MultiPathTePingResult multi_path_te_ping_result = 1 [json_name = "multi-path-te-ping-result"];
      }
      MultiPathTePingResults multi_path_te_ping_results = 1 [json_name = "multi-path-te-ping-results"];
      message MultiPathTeTraceResults {
         message MultiPathTeTraceResult {
            string test_name = 1 [json_name = "test-name"];
            string path_index = 2 [json_name = "path-index"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 3 [json_name = "status"];
            enum ErrorType {
               ErrorType_SUCCESS = 0;
               ErrorType_FAILED = 1;
            };
            ErrorType error_type = 4 [json_name = "error-type"];
            uint32 preference = 5 [json_name = "preference"];
            enum PathType {
               PathType_UNKNOWN = 0;
               PathType_PRIMARY = 1;
               PathType_BACKUP = 2;
            };
            PathType path_type = 6 [json_name = "path-type"];
            enum ProtocolOrigin {
               INVALID_ENUM_VALUE_ProtocolOrigin = 0;
               ProtocolOrigin_PECP = 10;
               ProtocolOrigin_BGP = 20;
               ProtocolOrigin_LOCAL = 30;
               ProtocolOrigin_UNKNOWN = 255;
            };
            ProtocolOrigin protocol_origin = 7 [json_name = "protocol-origin"];
            string node_address = 8 [json_name = "node-address"];
            uint32 asn_no = 9 [json_name = "asn-no"];
            uint32 discriminator = 10 [json_name = "discriminator"];
            uint32 segment_list_id = 11 [json_name = "segment-list-id"];
            uint32 xc_index = 12 [json_name = "xc-index"];
            enum PathStatus {
               PathStatus_PROCESSING = 0;
               PathStatus_FINISHED = 1;
            };
            PathStatus path_status = 13 [json_name = "path-status"];
            string end_op = 14 [json_name = "end-op"];
            message TeTraceResultDetails {
               message TeTraceResultDetail {
                  uint32 hop_limit = 1 [json_name = "hop-limit"];
                  uint32 rtt = 2 [json_name = "rtt"];
                  string dest_ipv6_addr = 3 [json_name = "dest-ipv6-addr"];
                  uint32 type = 4 [json_name = "type"];
                  bool is_delete = 5 [json_name = "is-delete"];
                  uint32 srh_sl = 6 [json_name = "srh-sl"];
                  message TeTraceSrhSidInfos {
                     message TeTraceSrhSidInfo {
                        uint32 sid_index = 1 [json_name = "sid-index"];
                        uint32 sid = 2 [json_name = "sid"];
                     }
                     repeated TeTraceSrhSidInfo te_trace_srh_sid_info = 1 [json_name = "te-trace-srh-sid-info"];
                  }
                  TeTraceSrhSidInfos te_trace_srh_sid_infos = 7 [json_name = "te-trace-srh-sid-infos"];
               }
               repeated TeTraceResultDetail te_trace_result_detail = 1 [json_name = "te-trace-result-detail"];
            }
            TeTraceResultDetails te_trace_result_details = 15 [json_name = "te-trace-result-details"];
         }
         repeated MultiPathTeTraceResult multi_path_te_trace_result = 1 [json_name = "multi-path-te-trace-result"];
      }
      MultiPathTeTraceResults multi_path_te_trace_results = 2 [json_name = "multi-path-te-trace-results"];
      message PingResults {
         message PingResult {
            string test_name = 1 [json_name = "test-name"];
            uint32 path_index = 2 [json_name = "path-index"];
            uint32 packet_receive = 3 [json_name = "packet-receive"];
            uint32 packet_send = 4 [json_name = "packet-send"];
            uint32 loss_ratio = 5 [json_name = "loss-ratio"];
            uint32 rtt_min = 6 [json_name = "rtt-min"];
            uint32 rtt_max = 7 [json_name = "rtt-max"];
            uint32 rtt_average = 8 [json_name = "rtt-average"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 9 [json_name = "status"];
            enum PathStatus {
               PathStatus_PROCESSING = 0;
               PathStatus_FINISHED = 1;
            };
            PathStatus path_status = 10 [json_name = "path-status"];
            uint32 preference = 11 [json_name = "preference"];
            enum PathType {
               PathType_UNKNOWN = 0;
               PathType_PRIMARY = 1;
               PathType_BACKUP = 2;
            };
            PathType path_type = 12 [json_name = "path-type"];
            enum ProtocolOrigin {
               INVALID_ENUM_VALUE_ProtocolOrigin = 0;
               ProtocolOrigin_PECP = 10;
               ProtocolOrigin_BGP = 20;
               ProtocolOrigin_LOCAL = 30;
               ProtocolOrigin_UNKNOWN = 255;
            };
            ProtocolOrigin protocol_origin = 13 [json_name = "protocol-origin"];
            string node_address = 14 [json_name = "node-address"];
            uint32 asn_no = 15 [json_name = "asn-no"];
            uint32 discriminator = 16 [json_name = "discriminator"];
            uint32 segment_list_id = 17 [json_name = "segment-list-id"];
            uint32 xc_index = 18 [json_name = "xc-index"];
            string end_op = 19 [json_name = "end-op"];
            message Probes {
               message Probe {
                  uint32 sequence = 1 [json_name = "sequence"];
                  string replier = 2 [json_name = "replier"];
                  uint32 data_bytes = 3 [json_name = "data-bytes"];
                  uint32 hop_limit = 4 [json_name = "hop-limit"];
                  uint32 rtt = 5 [json_name = "rtt"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 6 [json_name = "result-type"];
                  bool is_delete = 7 [json_name = "is-delete"];
               }
               repeated Probe probe = 1 [json_name = "probe"];
            }
            Probes probes = 20 [json_name = "probes"];
            string destination = 21 [json_name = "destination"];
            message SegmentLists {
               message SegmentList {
                  string segment = 1 [json_name = "segment"];
               }
               repeated SegmentList segment_list = 1 [json_name = "segment-list"];
            }
            SegmentLists segment_lists = 22 [json_name = "segment-lists"];
         }
         repeated PingResult ping_result = 1 [json_name = "ping-result"];
      }
      PingResults ping_results = 3 [json_name = "ping-results"];
      message TraceResults {
         message TraceResult {
            string test_name = 1 [json_name = "test-name"];
            uint32 path_index = 2 [json_name = "path-index"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 3 [json_name = "status"];
            uint32 preference = 4 [json_name = "preference"];
            enum PathType {
               PathType_UNKNOWN = 0;
               PathType_PRIMARY = 1;
               PathType_BACKUP = 2;
            };
            PathType path_type = 5 [json_name = "path-type"];
            enum ProtocolOrigin {
               INVALID_ENUM_VALUE_ProtocolOrigin = 0;
               ProtocolOrigin_PECP = 10;
               ProtocolOrigin_BGP = 20;
               ProtocolOrigin_LOCAL = 30;
               ProtocolOrigin_UNKNOWN = 255;
            };
            ProtocolOrigin protocol_origin = 6 [json_name = "protocol-origin"];
            string node_address = 7 [json_name = "node-address"];
            uint32 asn_no = 8 [json_name = "asn-no"];
            uint32 discriminator = 9 [json_name = "discriminator"];
            uint32 segment_list_id = 10 [json_name = "segment-list-id"];
            uint32 xc_index = 11 [json_name = "xc-index"];
            enum PathStatus {
               PathStatus_PROCESSING = 0;
               PathStatus_FINISHED = 1;
            };
            PathStatus path_status = 12 [json_name = "path-status"];
            string end_op = 13 [json_name = "end-op"];
            message Hops {
               message Hop {
                  uint32 hop_index = 1 [json_name = "hop-index"];
                  uint32 rtt = 2 [json_name = "rtt"];
                  string replier = 3 [json_name = "replier"];
                  enum Type {
                     INVALID_ENUM_VALUE_Type = 0;
                     Type_INGRESS = 1;
                     Type_TRANSIT = 2;
                     Type_EGRESS = 3;
                  };
                  Type type = 4 [json_name = "type"];
                  uint32 srh_sl = 5 [json_name = "srh-sl"];
                  message SrhSidLists {
                     message SrhSidList {
                        string sid = 1 [json_name = "sid"];
                     }
                     repeated SrhSidList srh_sid_list = 1 [json_name = "srh-sid-list"];
                  }
                  SrhSidLists srh_sid_lists = 6 [json_name = "srh-sid-lists"];
                  bool is_delete = 7 [json_name = "is-delete"];
                  uint32 slice_id = 8 [json_name = "slice-id"];
               }
               repeated Hop hop = 1 [json_name = "hop"];
            }
            Hops hops = 14 [json_name = "hops"];
            string destination = 15 [json_name = "destination"];
            message SegmentLists {
               message SegmentList {
                  string segment = 1 [json_name = "segment"];
               }
               repeated SegmentList segment_list = 1 [json_name = "segment-list"];
            }
            SegmentLists segment_lists = 16 [json_name = "segment-lists"];
         }
         repeated TraceResult trace_result = 1 [json_name = "trace-result"];
      }
      TraceResults trace_results = 4 [json_name = "trace-results"];
   }
   Srv6 srv6 = 4 [json_name = "srv6"];
   message Evpn {
      message VpwsPingResults {
         message VpwsPingResult {
            string test_name = 1 [json_name = "test-name"];
            uint32 local_ce_id = 2 [json_name = "local-ce-id"];
            uint32 remote_ce_id = 3 [json_name = "remote-ce-id"];
            uint32 packet_send = 4 [json_name = "packet-send"];
            uint32 packet_recv = 5 [json_name = "packet-recv"];
            uint32 loss_ratio = 6 [json_name = "loss-ratio"];
            uint32 rtt_min = 7 [json_name = "rtt-min"];
            uint32 rtt_max = 8 [json_name = "rtt-max"];
            uint32 rtt_average = 9 [json_name = "rtt-average"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 10 [json_name = "status"];
            enum ErrorType {
               ErrorType_SUCCESS = 0;
               ErrorType_FAILED = 1;
            };
            ErrorType error_type = 11 [json_name = "error-type"];
            message PingResultDetails {
               message PingResultDetail {
                  uint32 index = 1 [json_name = "index"];
                  uint32 packet_size = 2 [json_name = "packet-size"];
                  uint32 rtt = 3 [json_name = "rtt"];
                  bool is_delete = 4 [json_name = "is-delete"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 5 [json_name = "result-type"];
                  string dest_ip_addr = 6 [json_name = "dest-ip-addr"];
               }
               repeated PingResultDetail ping_result_detail = 1 [json_name = "ping-result-detail"];
            }
            PingResultDetails ping_result_details = 12 [json_name = "ping-result-details"];
            uint32 packet_receive = 13 [json_name = "packet-receive"];
            message Probes {
               message Probe {
                  uint32 sequence = 1 [json_name = "sequence"];
                  string replier = 2 [json_name = "replier"];
                  uint32 data_bytes = 3 [json_name = "data-bytes"];
                  uint32 rtt = 4 [json_name = "rtt"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 5 [json_name = "result-type"];
                  bool is_delete = 6 [json_name = "is-delete"];
               }
               repeated Probe probe = 1 [json_name = "probe"];
            }
            Probes probes = 14 [json_name = "probes"];
            uint32 path_index = 15 [json_name = "path-index"];
            enum TunnelType {
               TunnelType_UNKNOWN = 0;
               TunnelType_MPLS = 1;
               TunnelType_SRV6X_BE = 2;
               TunnelType_SRV6X_TEX_POLICY = 3;
               TunnelType_SRV6X_FLOWX_GROUP = 4;
               TunnelType_VXLAN = 5;
               TunnelType_VXLAN6 = 6;
            };
            TunnelType tunnel_type = 16 [json_name = "tunnel-type"];
            enum PathType {
               PathType_UNKNOWN = 0;
               PathType_PRIMARY = 1;
               PathType_BACKUP = 2;
            };
            PathType path_type = 17 [json_name = "path-type"];
            string next_hop = 18 [json_name = "next-hop"];
         }
         repeated VpwsPingResult vpws_ping_result = 1 [json_name = "vpws-ping-result"];
      }
      VpwsPingResults vpws_ping_results = 1 [json_name = "vpws-ping-results"];
      message VpwsTraceResults {
         message VpwsTraceResult {
            string test_name = 1 [json_name = "test-name"];
            uint32 local_ce_id = 2 [json_name = "local-ce-id"];
            uint32 remote_ce_id = 3 [json_name = "remote-ce-id"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 4 [json_name = "status"];
            enum ErrorType {
               ErrorType_SUCCESS = 0;
               ErrorType_FAILED = 1;
            };
            ErrorType error_type = 5 [json_name = "error-type"];
            message TraceResultDetails {
               message TraceResultDetail {
                  uint32 index = 1 [json_name = "index"];
                  string dest_ip_addr = 2 [json_name = "dest-ip-addr"];
                  uint32 rtt = 3 [json_name = "rtt"];
                  enum Type {
                     INVALID_ENUM_VALUE_Type = 0;
                     Type_INGRESS = 1;
                     Type_TRANSIT = 2;
                     Type_EGRESS = 3;
                  };
                  Type type = 4 [json_name = "type"];
                  uint32 ttl = 5 [json_name = "ttl"];
                  string ds_ip_addr = 6 [json_name = "ds-ip-addr"];
                  uint32 ds_label = 7 [json_name = "ds-label"];
                  uint32 ret_code = 8 [json_name = "ret-code"];
                  bool is_delete = 9 [json_name = "is-delete"];
               }
               repeated TraceResultDetail trace_result_detail = 1 [json_name = "trace-result-detail"];
            }
            TraceResultDetails trace_result_details = 6 [json_name = "trace-result-details"];
            message Hops {
               message Hop {
                  uint32 hop_index = 1 [json_name = "hop-index"];
                  string replier = 2 [json_name = "replier"];
                  uint32 rtt = 3 [json_name = "rtt"];
                  enum Type {
                     INVALID_ENUM_VALUE_Type = 0;
                     Type_INGRESS = 1;
                     Type_TRANSIT = 2;
                     Type_EGRESS = 3;
                  };
                  Type type = 4 [json_name = "type"];
                  uint32 return_code = 5 [json_name = "return-code"];
                  string ds_address = 6 [json_name = "ds-address"];
                  message DsLabelLists {
                     message DsLabelList {
                        uint32 ds_label = 1 [json_name = "ds-label"];
                     }
                     repeated DsLabelList ds_label_list = 1 [json_name = "ds-label-list"];
                  }
                  DsLabelLists ds_label_lists = 7 [json_name = "ds-label-lists"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 8 [json_name = "result-type"];
                  bool is_delete = 9 [json_name = "is-delete"];
               }
               repeated Hop hop = 1 [json_name = "hop"];
            }
            Hops hops = 7 [json_name = "hops"];
            uint32 path_index = 8 [json_name = "path-index"];
            enum TunnelType {
               TunnelType_UNKNOWN = 0;
               TunnelType_MPLS = 1;
               TunnelType_SRV6X_BE = 2;
               TunnelType_SRV6X_TEX_POLICY = 3;
               TunnelType_SRV6X_FLOWX_GROUP = 4;
               TunnelType_VXLAN = 5;
               TunnelType_VXLAN6 = 6;
            };
            TunnelType tunnel_type = 9 [json_name = "tunnel-type"];
            enum PathType {
               PathType_UNKNOWN = 0;
               PathType_PRIMARY = 1;
               PathType_BACKUP = 2;
            };
            PathType path_type = 10 [json_name = "path-type"];
            string next_hop = 11 [json_name = "next-hop"];
         }
         repeated VpwsTraceResult vpws_trace_result = 1 [json_name = "vpws-trace-result"];
      }
      VpwsTraceResults vpws_trace_results = 2 [json_name = "vpws-trace-results"];
      message MacPingResults {
         message MacPingResult {
            string test_name = 1 [json_name = "test-name"];
            string evpn_name = 2 [json_name = "evpn-name"];
            uint32 bd_id = 3 [json_name = "bd-id"];
            string mac = 4 [json_name = "mac"];
            uint32 packet_send = 5 [json_name = "packet-send"];
            uint32 packet_receive = 6 [json_name = "packet-receive"];
            uint32 loss_ratio = 7 [json_name = "loss-ratio"];
            uint32 rtt_min = 8 [json_name = "rtt-min"];
            uint32 rtt_max = 9 [json_name = "rtt-max"];
            uint32 rtt_average = 10 [json_name = "rtt-average"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 11 [json_name = "status"];
            message Probes {
               message Probe {
                  uint32 sequence = 1 [json_name = "sequence"];
                  string replier = 2 [json_name = "replier"];
                  uint32 data_bytes = 3 [json_name = "data-bytes"];
                  uint32 rtt = 4 [json_name = "rtt"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 5 [json_name = "result-type"];
                  bool is_delete = 6 [json_name = "is-delete"];
               }
               repeated Probe probe = 1 [json_name = "probe"];
            }
            Probes probes = 12 [json_name = "probes"];
         }
         repeated MacPingResult mac_ping_result = 1 [json_name = "mac-ping-result"];
      }
      MacPingResults mac_ping_results = 3 [json_name = "mac-ping-results"];
      message MultiMacPingResults {
         message MultiMacPingResult {
            string test_name = 1 [json_name = "test-name"];
            uint32 path_index = 2 [json_name = "path-index"];
            string evpn_name = 3 [json_name = "evpn-name"];
            uint32 bd_id = 4 [json_name = "bd-id"];
            string mac = 5 [json_name = "mac"];
            uint32 packet_send = 6 [json_name = "packet-send"];
            uint32 packet_receive = 7 [json_name = "packet-receive"];
            uint32 loss_ratio = 8 [json_name = "loss-ratio"];
            uint32 rtt_min = 9 [json_name = "rtt-min"];
            uint32 rtt_max = 10 [json_name = "rtt-max"];
            uint32 rtt_average = 11 [json_name = "rtt-average"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 12 [json_name = "status"];
            enum PathStatus {
               PathStatus_PROCESSING = 0;
               PathStatus_FINISHED = 1;
            };
            PathStatus path_status = 13 [json_name = "path-status"];
            enum TunnelType {
               TunnelType_UNKNOWN = 0;
               TunnelType_MPLS = 1;
               TunnelType_SRV6X_BE = 2;
               TunnelType_SRV6X_TEX_POLICY = 3;
               TunnelType_SRV6X_FLOWX_GROUP = 4;
               TunnelType_VXLAN = 5;
               TunnelType_VXLAN6 = 6;
            };
            TunnelType tunnel_type = 14 [json_name = "tunnel-type"];
            string peer_address = 15 [json_name = "peer-address"];
            message Probes {
               message Probe {
                  uint32 sequence = 1 [json_name = "sequence"];
                  string replier = 2 [json_name = "replier"];
                  uint32 data_bytes = 3 [json_name = "data-bytes"];
                  uint32 rtt = 4 [json_name = "rtt"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 5 [json_name = "result-type"];
                  bool is_delete = 6 [json_name = "is-delete"];
               }
               repeated Probe probe = 1 [json_name = "probe"];
            }
            Probes probes = 16 [json_name = "probes"];
         }
         repeated MultiMacPingResult multi_mac_ping_result = 1 [json_name = "multi-mac-ping-result"];
      }
      MultiMacPingResults multi_mac_ping_results = 4 [json_name = "multi-mac-ping-results"];
      message MacTraceResults {
         message MacTraceResult {
            string test_name = 1 [json_name = "test-name"];
            uint32 path_index = 2 [json_name = "path-index"];
            string evpn_name = 3 [json_name = "evpn-name"];
            uint32 bd_id = 4 [json_name = "bd-id"];
            string mac = 5 [json_name = "mac"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 6 [json_name = "status"];
            enum PathStatus {
               PathStatus_PROCESSING = 0;
               PathStatus_FINISHED = 1;
            };
            PathStatus path_status = 7 [json_name = "path-status"];
            enum TunnelType {
               TunnelType_UNKNOWN = 0;
               TunnelType_MPLS = 1;
               TunnelType_SRV6X_BE = 2;
               TunnelType_SRV6X_TEX_POLICY = 3;
               TunnelType_SRV6X_FLOWX_GROUP = 4;
               TunnelType_VXLAN = 5;
               TunnelType_VXLAN6 = 6;
            };
            TunnelType tunnel_type = 8 [json_name = "tunnel-type"];
            string peer_address = 9 [json_name = "peer-address"];
            message Hops {
               message Hop {
                  uint32 hop_index = 1 [json_name = "hop-index"];
                  uint32 packet_index = 2 [json_name = "packet-index"];
                  string replier = 3 [json_name = "replier"];
                  uint32 rtt = 4 [json_name = "rtt"];
                  enum Type {
                     INVALID_ENUM_VALUE_Type = 0;
                     Type_INGRESS = 1;
                     Type_TRANSIT = 2;
                     Type_EGRESS = 3;
                  };
                  Type type = 5 [json_name = "type"];
                  enum RetCode {
                     RetCode_NONE = 0;
                     RetCode_MALFORMED = 1;
                     RetCode_UNKNOWN = 2;
                     RetCode_EGRESS = 3;
                     RetCode_NOX_MAPPING = 4;
                     RetCode_DSX_MISMATCH = 5;
                     RetCode_NOX_UPX_INTERFACE = 6;
                     RetCode_RESERVED = 7;
                     RetCode_LABELX_SWITCH = 8;
                     RetCode_NOX_MPLSX_FORWARDING = 9;
                     RetCode_NOX_MAPPINGX_LABEL = 10;
                     RetCode_NOX_ENTRY = 11;
                     RetCode_NOX_PROTOCOL = 12;
                     RetCode_PREMATUREX_TERMINATION = 13;
                     RetCode_SEEX_DDMAPX_TLV = 14;
                     RetCode_FECX_CHANGE = 15;
                  };
                  RetCode ret_code = 6 [json_name = "ret-code"];
                  string ds_address = 7 [json_name = "ds-address"];
                  message DsLabelLists {
                     message DsLabelList {
                        uint32 label_index = 1 [json_name = "label-index"];
                        uint32 ds_label = 2 [json_name = "ds-label"];
                     }
                     repeated DsLabelList ds_label_list = 1 [json_name = "ds-label-list"];
                  }
                  DsLabelLists ds_label_lists = 8 [json_name = "ds-label-lists"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 9 [json_name = "result-type"];
                  bool is_hit = 10 [json_name = "is-hit"];
                  bool is_delete = 11 [json_name = "is-delete"];
               }
               repeated Hop hop = 1 [json_name = "hop"];
            }
            Hops hops = 10 [json_name = "hops"];
         }
         repeated MacTraceResult mac_trace_result = 1 [json_name = "mac-trace-result"];
      }
      MacTraceResults mac_trace_results = 5 [json_name = "mac-trace-results"];
      message MultiVpwsPingResults {
         message MultiVpwsPingResult {
            string test_name = 1 [json_name = "test-name"];
            uint32 path_index = 2 [json_name = "path-index"];
            uint32 local_ce_id = 3 [json_name = "local-ce-id"];
            uint32 remote_ce_id = 4 [json_name = "remote-ce-id"];
            uint32 packet_send = 5 [json_name = "packet-send"];
            uint32 packet_receive = 6 [json_name = "packet-receive"];
            uint32 loss_ratio = 7 [json_name = "loss-ratio"];
            uint32 rtt_min = 8 [json_name = "rtt-min"];
            uint32 rtt_max = 9 [json_name = "rtt-max"];
            uint32 rtt_average = 10 [json_name = "rtt-average"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 11 [json_name = "status"];
            enum TunnelType {
               TunnelType_UNKNOWN = 0;
               TunnelType_MPLS = 1;
               TunnelType_SRV6X_BE = 2;
               TunnelType_SRV6X_TEX_POLICY = 3;
               TunnelType_SRV6X_FLOWX_GROUP = 4;
               TunnelType_VXLAN = 5;
               TunnelType_VXLAN6 = 6;
            };
            TunnelType tunnel_type = 12 [json_name = "tunnel-type"];
            enum PathType {
               PathType_UNKNOWN = 0;
               PathType_PRIMARY = 1;
               PathType_BACKUP = 2;
            };
            PathType path_type = 13 [json_name = "path-type"];
            string next_hop = 14 [json_name = "next-hop"];
            message Probes {
               message Probe {
                  uint32 sequence = 1 [json_name = "sequence"];
                  string replier = 2 [json_name = "replier"];
                  uint32 data_bytes = 3 [json_name = "data-bytes"];
                  uint32 rtt = 4 [json_name = "rtt"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 5 [json_name = "result-type"];
                  bool is_delete = 6 [json_name = "is-delete"];
               }
               repeated Probe probe = 1 [json_name = "probe"];
            }
            Probes probes = 15 [json_name = "probes"];
         }
         repeated MultiVpwsPingResult multi_vpws_ping_result = 1 [json_name = "multi-vpws-ping-result"];
      }
      MultiVpwsPingResults multi_vpws_ping_results = 6 [json_name = "multi-vpws-ping-results"];
      message MultiVpwsTraceResults {
         message MultiVpwsTraceResult {
            string test_name = 1 [json_name = "test-name"];
            uint32 path_index = 2 [json_name = "path-index"];
            uint32 local_ce_id = 3 [json_name = "local-ce-id"];
            uint32 remote_ce_id = 4 [json_name = "remote-ce-id"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 5 [json_name = "status"];
            enum TunnelType {
               TunnelType_UNKNOWN = 0;
               TunnelType_MPLS = 1;
               TunnelType_SRV6X_BE = 2;
               TunnelType_SRV6X_TEX_POLICY = 3;
               TunnelType_SRV6X_FLOWX_GROUP = 4;
               TunnelType_VXLAN = 5;
               TunnelType_VXLAN6 = 6;
            };
            TunnelType tunnel_type = 6 [json_name = "tunnel-type"];
            enum PathType {
               PathType_UNKNOWN = 0;
               PathType_PRIMARY = 1;
               PathType_BACKUP = 2;
            };
            PathType path_type = 7 [json_name = "path-type"];
            string next_hop = 8 [json_name = "next-hop"];
            message Hops {
               message Hop {
                  uint32 hop_index = 1 [json_name = "hop-index"];
                  string replier = 2 [json_name = "replier"];
                  uint32 rtt = 3 [json_name = "rtt"];
                  enum Type {
                     INVALID_ENUM_VALUE_Type = 0;
                     Type_INGRESS = 1;
                     Type_TRANSIT = 2;
                     Type_EGRESS = 3;
                  };
                  Type type = 4 [json_name = "type"];
                  uint32 return_code = 5 [json_name = "return-code"];
                  string ds_address = 6 [json_name = "ds-address"];
                  message DsLabelLists {
                     message DsLabelList {
                        uint32 ds_label = 1 [json_name = "ds-label"];
                     }
                     repeated DsLabelList ds_label_list = 1 [json_name = "ds-label-list"];
                  }
                  DsLabelLists ds_label_lists = 7 [json_name = "ds-label-lists"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 8 [json_name = "result-type"];
                  bool is_delete = 9 [json_name = "is-delete"];
               }
               repeated Hop hop = 1 [json_name = "hop"];
            }
            Hops hops = 9 [json_name = "hops"];
         }
         repeated MultiVpwsTraceResult multi_vpws_trace_result = 1 [json_name = "multi-vpws-trace-result"];
      }
      MultiVpwsTraceResults multi_vpws_trace_results = 7 [json_name = "multi-vpws-trace-results"];
   }
   Evpn evpn = 5 [json_name = "evpn"];
   message Tcp {
      message PingResults {
         message PingResult {
            string test_name = 1 [json_name = "test-name"];
            uint32 packet_send = 2 [json_name = "packet-send"];
            uint32 packet_receive = 3 [json_name = "packet-receive"];
            uint32 loss_ratio = 4 [json_name = "loss-ratio"];
            uint32 rtt_min = 5 [json_name = "rtt-min"];
            uint32 rtt_max = 6 [json_name = "rtt-max"];
            uint32 rtt_average = 7 [json_name = "rtt-average"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 8 [json_name = "status"];
            message Probes {
               message Probe {
                  uint32 sequence = 1 [json_name = "sequence"];
                  string replier = 2 [json_name = "replier"];
                  uint32 rtt = 3 [json_name = "rtt"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 4 [json_name = "result-type"];
                  bool is_delete = 5 [json_name = "is-delete"];
               }
               repeated Probe probe = 1 [json_name = "probe"];
            }
            Probes probes = 9 [json_name = "probes"];
         }
         repeated PingResult ping_result = 1 [json_name = "ping-result"];
      }
      PingResults ping_results = 1 [json_name = "ping-results"];
   }
   Tcp tcp = 6 [json_name = "tcp"];
   message Gmac {
      message PingResults {
         message PingResult {
            string test_name = 1 [json_name = "test-name"];
            uint32 packet_send = 2 [json_name = "packet-send"];
            uint32 packet_receive = 3 [json_name = "packet-receive"];
            uint32 loss_ratio = 4 [json_name = "loss-ratio"];
            uint32 rtt_min = 5 [json_name = "rtt-min"];
            uint32 rtt_max = 6 [json_name = "rtt-max"];
            uint32 rtt_average = 7 [json_name = "rtt-average"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 8 [json_name = "status"];
            message Probes {
               message Probe {
                  uint32 sequence = 1 [json_name = "sequence"];
                  string dest_mac = 2 [json_name = "dest-mac"];
                  uint32 data_bytes = 3 [json_name = "data-bytes"];
                  uint32 rtt = 4 [json_name = "rtt"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 5 [json_name = "result-type"];
                  bool is_delete = 6 [json_name = "is-delete"];
               }
               repeated Probe probe = 1 [json_name = "probe"];
            }
            Probes probes = 9 [json_name = "probes"];
         }
         repeated PingResult ping_result = 1 [json_name = "ping-result"];
      }
      PingResults ping_results = 1 [json_name = "ping-results"];
   }
   Gmac gmac = 7 [json_name = "gmac"];
   message Bier {
      message Ipv6PingResults {
         message Ipv6PingResult {
            string test_name = 1 [json_name = "test-name"];
            uint32 bfr_id = 2 [json_name = "bfr-id"];
            string dest_ip_addr = 3 [json_name = "dest-ip-addr"];
            uint32 packet_send = 4 [json_name = "packet-send"];
            uint32 packet_recv = 5 [json_name = "packet-recv"];
            uint32 loss_ratio = 6 [json_name = "loss-ratio"];
            uint32 rtt_min = 7 [json_name = "rtt-min"];
            uint32 rtt_max = 8 [json_name = "rtt-max"];
            uint32 average_rtt = 9 [json_name = "average-rtt"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 10 [json_name = "status"];
            enum ErrorType {
               ErrorType_SUCCESS = 0;
               ErrorType_FAILED = 1;
            };
            ErrorType error_type = 11 [json_name = "error-type"];
            message Details {
               message Detail {
                  uint32 index = 1 [json_name = "index"];
                  uint32 packet_size = 2 [json_name = "packet-size"];
                  uint32 ttl = 3 [json_name = "ttl"];
                  uint32 rtt = 4 [json_name = "rtt"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 5 [json_name = "result-type"];
                  bool is_delete = 6 [json_name = "is-delete"];
               }
               repeated Detail detail = 1 [json_name = "detail"];
            }
            Details details = 12 [json_name = "details"];
         }
         repeated Ipv6PingResult ipv6_ping_result = 1 [json_name = "ipv6-ping-result"];
      }
      Ipv6PingResults ipv6_ping_results = 1 [json_name = "ipv6-ping-results"];
      message Ipv6TraceResults {
         message Ipv6TraceResult {
            string test_name = 1 [json_name = "test-name"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 2 [json_name = "status"];
            message HopResults {
               message HopResult {
                  uint32 ttl = 1 [json_name = "ttl"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 2 [json_name = "result-type"];
                  bool is_delete = 3 [json_name = "is-delete"];
                  message Packets {
                     message Packet {
                        uint32 packet_index = 1 [json_name = "packet-index"];
                        uint32 rtt = 2 [json_name = "rtt"];
                        string replier_ip_addr = 3 [json_name = "replier-ip-addr"];
                        uint32 replier_bfr_id = 4 [json_name = "replier-bfr-id"];
                        enum TransitType {
                           INVALID_ENUM_VALUE_TransitType = 0;
                           TransitType_INGRESS = 1;
                           TransitType_TRANSIT = 2;
                           TransitType_BUD = 3;
                           TransitType_EGRESS = 4;
                        };
                        TransitType transit_type = 5 [json_name = "transit-type"];
                     }
                     repeated Packet packet = 1 [json_name = "packet"];
                  }
                  Packets packets = 4 [json_name = "packets"];
               }
               repeated HopResult hop_result = 1 [json_name = "hop-result"];
            }
            HopResults hop_results = 3 [json_name = "hop-results"];
         }
         repeated Ipv6TraceResult ipv6_trace_result = 1 [json_name = "ipv6-trace-result"];
      }
      Ipv6TraceResults ipv6_trace_results = 2 [json_name = "ipv6-trace-results"];
   }
   Bier bier = 8 [json_name = "bier"];
   message Lblt {
      message LbResults {
         message LbResult {
            string test_name = 1 [json_name = "test-name"];
            uint32 packet_receive = 2 [json_name = "packet-receive"];
            uint32 packet_send = 3 [json_name = "packet-send"];
            uint32 loss_ratio = 4 [json_name = "loss-ratio"];
            uint32 rtt_min = 5 [json_name = "rtt-min"];
            uint32 rtt_max = 6 [json_name = "rtt-max"];
            uint32 rtt_average = 7 [json_name = "rtt-average"];
            enum Status {
               Status_TESTING = 0;
               Status_FINISHED = 1;
               Status_STOPPED = 2;
            };
            Status status = 8 [json_name = "status"];
            enum ErrorType {
               ErrorType_SUCCESS = 0;
               ErrorType_TIMEOUT = 1;
               ErrorType_FAILED = 2;
               ErrorType_LOCALX_MAC = 3;
               ErrorType_NOX_MACX_FORX_RMEP = 4;
               ErrorType_NOX_MDX_ORX_MA = 5;
               ErrorType_MACX_OUTX_IFX_ERR = 6;
            };
            ErrorType error_type = 9 [json_name = "error-type"];
            message Details {
               message Detail {
                  uint32 index = 1 [json_name = "index"];
                  string rmep_mac = 2 [json_name = "rmep-mac"];
                  uint32 bytes = 3 [json_name = "bytes"];
                  uint32 rtt = 4 [json_name = "rtt"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                  };
                  ResultType result_type = 5 [json_name = "result-type"];
               }
               repeated Detail detail = 1 [json_name = "detail"];
            }
            Details details = 10 [json_name = "details"];
         }
         repeated LbResult lb_result = 1 [json_name = "lb-result"];
      }
      LbResults lb_results = 1 [json_name = "lb-results"];
      message LtResults {
         message LtResult {
            string test_name = 1 [json_name = "test-name"];
            enum Status {
               Status_TESTING = 0;
               Status_FINISHED = 1;
               Status_STOPPED = 2;
            };
            Status status = 2 [json_name = "status"];
            enum ErrorType {
               ErrorType_SUCCESS = 0;
               ErrorType_TIMEOUT = 1;
               ErrorType_FAILED = 2;
               ErrorType_LOCALX_MAC = 3;
               ErrorType_NOX_MACX_FORX_RMEP = 4;
               ErrorType_NOX_MDX_ORX_MA = 5;
               ErrorType_MACX_OUTX_IFX_ERR = 6;
            };
            ErrorType error_type = 3 [json_name = "error-type"];
            message Details {
               message Detail {
                  uint32 hop_index = 1 [json_name = "hop-index"];
                  string ingress_mac = 2 [json_name = "ingress-mac"];
                  string ingress_port = 3 [json_name = "ingress-port"];
                  enum IngressAction {
                     IngressAction_FORWARDX_SUCCESS = 0;
                     IngressAction_FORWARDX_FAIL = 1;
                     IngressAction_INVALID = 2;
                  };
                  IngressAction ingress_action = 4 [json_name = "ingress-action"];
                  string egress_mac = 5 [json_name = "egress-mac"];
                  string egress_port = 6 [json_name = "egress-port"];
                  enum EgressAction {
                     EgressAction_FORWARDX_SUCCESS = 0;
                     EgressAction_FORWARDX_FAIL = 1;
                     EgressAction_INVALID = 2;
                  };
                  EgressAction egress_action = 7 [json_name = "egress-action"];
                  enum RelayAction {
                     RelayAction_FORWARD = 0;
                     RelayAction_HIT = 1;
                  };
                  RelayAction relay_action = 8 [json_name = "relay-action"];
                  enum IsMep {
                     IsMep_NOX_MEP = 0;
                     IsMep_ISX_MEP = 1;
                  };
                  IsMep is_mep = 9 [json_name = "is-mep"];
               }
               repeated Detail detail = 1 [json_name = "detail"];
            }
            Details details = 4 [json_name = "details"];
         }
         repeated LtResult lt_result = 1 [json_name = "lt-result"];
      }
      LtResults lt_results = 2 [json_name = "lt-results"];
   }
   Lblt lblt = 9 [json_name = "lblt"];
   message Pwe3 {
      message PingResults {
         message PingResult {
            string test_name = 1 [json_name = "test-name"];
            enum PwType {
               INVALID_ENUM_VALUE_PwType = 0;
               PwType_ATMX_AAL5X_SDU = 2;
               PwType_ATMX_TRANSX_CELL = 3;
               PwType_VLAN = 4;
               PwType_ETHERNET = 5;
               PwType_HDLC = 6;
               PwType_PPP = 7;
               PwType_ATMX_NTO1X_VCC = 9;
               PwType_ATMX_NTO1X_VPC = 10;
               PwType_IPX_LAYER2 = 11;
               PwType_ATMX_1TO1X_VCC = 12;
               PwType_ATMX_1TO1X_VPC = 13;
               PwType_CEP = 16;
               PwType_SATOPX_E1 = 17;
               PwType_CESOPSNX_BASIC = 21;
               PwType_IPX_INTERWORKING = 64;
            };
            PwType pw_type = 2 [json_name = "pw-type"];
            uint32 pw_id = 3 [json_name = "pw-id"];
            string peer_address = 4 [json_name = "peer-address"];
            uint32 sender_ve_id = 5 [json_name = "sender-ve-id"];
            uint32 remote_ve_id = 6 [json_name = "remote-ve-id"];
            uint32 packet_send = 7 [json_name = "packet-send"];
            uint32 packet_receive = 8 [json_name = "packet-receive"];
            uint32 loss_ratio = 9 [json_name = "loss-ratio"];
            uint32 rtt_min = 10 [json_name = "rtt-min"];
            uint32 rtt_max = 11 [json_name = "rtt-max"];
            uint32 rtt_average = 12 [json_name = "rtt-average"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 13 [json_name = "status"];
            message Probes {
               message Probe {
                  uint32 sequence = 1 [json_name = "sequence"];
                  string replier = 2 [json_name = "replier"];
                  uint32 data_bytes = 3 [json_name = "data-bytes"];
                  uint32 rtt = 4 [json_name = "rtt"];
                  uint32 ttl = 5 [json_name = "ttl"];
                  uint32 return_code = 6 [json_name = "return-code"];
                  uint32 return_subcode = 7 [json_name = "return-subcode"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 8 [json_name = "result-type"];
                  bool is_delete = 9 [json_name = "is-delete"];
               }
               repeated Probe probe = 1 [json_name = "probe"];
            }
            Probes probes = 14 [json_name = "probes"];
         }
         repeated PingResult ping_result = 1 [json_name = "ping-result"];
      }
      PingResults ping_results = 1 [json_name = "ping-results"];
      message TraceResults {
         message TraceResult {
            string test_name = 1 [json_name = "test-name"];
            enum PwType {
               INVALID_ENUM_VALUE_PwType = 0;
               PwType_ATMX_AAL5X_SDU = 2;
               PwType_ATMX_TRANSX_CELL = 3;
               PwType_VLAN = 4;
               PwType_ETHERNET = 5;
               PwType_HDLC = 6;
               PwType_PPP = 7;
               PwType_ATMX_NTO1X_VCC = 9;
               PwType_ATMX_NTO1X_VPC = 10;
               PwType_IPX_LAYER2 = 11;
               PwType_ATMX_1TO1X_VCC = 12;
               PwType_ATMX_1TO1X_VPC = 13;
               PwType_CEP = 16;
               PwType_SATOPX_E1 = 17;
               PwType_CESOPSNX_BASIC = 21;
               PwType_IPX_INTERWORKING = 64;
            };
            PwType pw_type = 2 [json_name = "pw-type"];
            uint32 pw_id = 3 [json_name = "pw-id"];
            string peer_address = 4 [json_name = "peer-address"];
            uint32 sender_ve_id = 5 [json_name = "sender-ve-id"];
            uint32 remote_ve_id = 6 [json_name = "remote-ve-id"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 7 [json_name = "status"];
            message Hops {
               message Hop {
                  uint32 hop_index = 1 [json_name = "hop-index"];
                  uint32 ttl = 2 [json_name = "ttl"];
                  string replier = 3 [json_name = "replier"];
                  uint32 rtt = 4 [json_name = "rtt"];
                  enum TransmitType {
                     INVALID_ENUM_VALUE_TransmitType = 0;
                     TransmitType_INGRESS = 1;
                     TransmitType_TRANSIT = 2;
                     TransmitType_EGRESS = 3;
                  };
                  TransmitType transmit_type = 5 [json_name = "transmit-type"];
                  string ds_address = 6 [json_name = "ds-address"];
                  uint32 return_code = 7 [json_name = "return-code"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 8 [json_name = "result-type"];
                  bool is_delete = 9 [json_name = "is-delete"];
                  message DsLabelLists {
                     message DsLabelList {
                        uint32 label_index = 1 [json_name = "label-index"];
                        uint32 ds_label = 2 [json_name = "ds-label"];
                     }
                     repeated DsLabelList ds_label_list = 1 [json_name = "ds-label-list"];
                  }
                  DsLabelLists ds_label_lists = 10 [json_name = "ds-label-lists"];
               }
               repeated Hop hop = 1 [json_name = "hop"];
            }
            Hops hops = 8 [json_name = "hops"];
         }
         repeated TraceResult trace_result = 1 [json_name = "trace-result"];
      }
      TraceResults trace_results = 2 [json_name = "trace-results"];
   }
   Pwe3 pwe3 = 10 [json_name = "pwe3"];
   message Vpls {
      message MacPingResults {
         message MacPingResult {
            string test_name = 1 [json_name = "test-name"];
            uint32 packet_send = 2 [json_name = "packet-send"];
            uint32 packet_receive = 3 [json_name = "packet-receive"];
            uint32 loss_ratio = 4 [json_name = "loss-ratio"];
            uint32 rtt_min = 5 [json_name = "rtt-min"];
            uint32 rtt_max = 6 [json_name = "rtt-max"];
            uint32 rtt_average = 7 [json_name = "rtt-average"];
            string replier_pe_addr = 8 [json_name = "replier-pe-addr"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 9 [json_name = "status"];
            message Probes {
               message Probe {
                  uint32 sequence = 1 [json_name = "sequence"];
                  string replier = 2 [json_name = "replier"];
                  uint32 data_bytes = 3 [json_name = "data-bytes"];
                  uint32 rtt = 4 [json_name = "rtt"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 5 [json_name = "result-type"];
                  bool is_delete = 6 [json_name = "is-delete"];
               }
               repeated Probe probe = 1 [json_name = "probe"];
            }
            Probes probes = 10 [json_name = "probes"];
         }
         repeated MacPingResult mac_ping_result = 1 [json_name = "mac-ping-result"];
      }
      MacPingResults mac_ping_results = 1 [json_name = "mac-ping-results"];
      message VsiPingResults {
         message VsiPingResult {
            string test_name = 1 [json_name = "test-name"];
            enum PwType {
               INVALID_ENUM_VALUE_PwType = 0;
               PwType_ATMX_AAL5X_SDU = 2;
               PwType_ATMX_TRANSX_CELL = 3;
               PwType_VLAN = 4;
               PwType_ETHERNET = 5;
               PwType_HDLC = 6;
               PwType_PPP = 7;
               PwType_ATMX_NTO1X_VCC = 9;
               PwType_ATMX_NTO1X_VPC = 10;
               PwType_IPX_LAYER2 = 11;
               PwType_ATMX_1TO1X_VCC = 12;
               PwType_ATMX_1TO1X_VPC = 13;
               PwType_CEP = 16;
               PwType_SATOPX_E1 = 17;
               PwType_CESOPSNX_BASIC = 21;
               PwType_IPX_INTERWORKING = 64;
            };
            PwType pw_type = 2 [json_name = "pw-type"];
            uint32 pw_id = 3 [json_name = "pw-id"];
            uint32 sender_ve_id = 4 [json_name = "sender-ve-id"];
            uint32 remote_ve_id = 5 [json_name = "remote-ve-id"];
            uint32 packet_send = 6 [json_name = "packet-send"];
            uint32 packet_receive = 7 [json_name = "packet-receive"];
            uint32 loss_ratio = 8 [json_name = "loss-ratio"];
            uint32 rtt_min = 9 [json_name = "rtt-min"];
            uint32 rtt_max = 10 [json_name = "rtt-max"];
            uint32 rtt_average = 11 [json_name = "rtt-average"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 12 [json_name = "status"];
            message Probes {
               message Probe {
                  uint32 sequence = 1 [json_name = "sequence"];
                  string replier = 2 [json_name = "replier"];
                  uint32 data_bytes = 3 [json_name = "data-bytes"];
                  uint32 rtt = 4 [json_name = "rtt"];
                  uint32 return_code = 5 [json_name = "return-code"];
                  uint32 return_subcode = 6 [json_name = "return-subcode"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 7 [json_name = "result-type"];
                  bool is_delete = 8 [json_name = "is-delete"];
               }
               repeated Probe probe = 1 [json_name = "probe"];
            }
            Probes probes = 13 [json_name = "probes"];
         }
         repeated VsiPingResult vsi_ping_result = 1 [json_name = "vsi-ping-result"];
      }
      VsiPingResults vsi_ping_results = 2 [json_name = "vsi-ping-results"];
      message VsiTraceResults {
         message VsiTraceResult {
            string test_name = 1 [json_name = "test-name"];
            enum PwType {
               INVALID_ENUM_VALUE_PwType = 0;
               PwType_ATMX_AAL5X_SDU = 2;
               PwType_ATMX_TRANSX_CELL = 3;
               PwType_VLAN = 4;
               PwType_ETHERNET = 5;
               PwType_HDLC = 6;
               PwType_PPP = 7;
               PwType_ATMX_NTO1X_VCC = 9;
               PwType_ATMX_NTO1X_VPC = 10;
               PwType_IPX_LAYER2 = 11;
               PwType_ATMX_1TO1X_VCC = 12;
               PwType_ATMX_1TO1X_VPC = 13;
               PwType_CEP = 16;
               PwType_SATOPX_E1 = 17;
               PwType_CESOPSNX_BASIC = 21;
               PwType_IPX_INTERWORKING = 64;
            };
            PwType pw_type = 2 [json_name = "pw-type"];
            uint32 pw_id = 3 [json_name = "pw-id"];
            uint32 sender_ve_id = 4 [json_name = "sender-ve-id"];
            uint32 remote_ve_id = 5 [json_name = "remote-ve-id"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 6 [json_name = "status"];
            message Hops {
               message Hop {
                  uint32 hop_index = 1 [json_name = "hop-index"];
                  string replier = 2 [json_name = "replier"];
                  uint32 rtt = 3 [json_name = "rtt"];
                  enum TransmitType {
                     INVALID_ENUM_VALUE_TransmitType = 0;
                     TransmitType_INGRESS = 1;
                     TransmitType_TRANSIT = 2;
                     TransmitType_EGRESS = 3;
                  };
                  TransmitType transmit_type = 4 [json_name = "transmit-type"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 5 [json_name = "result-type"];
                  bool is_delete = 6 [json_name = "is-delete"];
                  enum ReturnCode {
                     ReturnCode_NONE = 0;
                     ReturnCode_MALFORMED = 1;
                     ReturnCode_UNKNOWN = 2;
                     ReturnCode_EGRESS = 3;
                     ReturnCode_NOX_MAPPING = 4;
                     ReturnCode_DSX_MISMATCH = 5;
                     ReturnCode_NOX_UPX_INTERFACE = 6;
                     ReturnCode_RESERVED = 7;
                     ReturnCode_LABELX_SWITCH = 8;
                     ReturnCode_NOX_MPLSX_FORWARDING = 9;
                     ReturnCode_NOX_MAPPINGX_LABEL = 10;
                     ReturnCode_NOX_ENTRY = 11;
                     ReturnCode_NOX_PROTOCOL = 12;
                     ReturnCode_PREMATUREX_TERMINATION = 13;
                     ReturnCode_SEEX_DDMAPX_TLV = 14;
                     ReturnCode_FECX_CHANGE = 15;
                  };
                  ReturnCode return_code = 7 [json_name = "return-code"];
                  message Downstreams {
                     message Downstream {
                        uint32 ds_index = 1 [json_name = "ds-index"];
                        string ds_address = 2 [json_name = "ds-address"];
                        message DsLabelLists {
                           message DsLabelList {
                              uint32 label_index = 1 [json_name = "label-index"];
                              uint32 ds_label = 2 [json_name = "ds-label"];
                           }
                           repeated DsLabelList ds_label_list = 1 [json_name = "ds-label-list"];
                        }
                        DsLabelLists ds_label_lists = 3 [json_name = "ds-label-lists"];
                     }
                     repeated Downstream downstream = 1 [json_name = "downstream"];
                  }
                  Downstreams downstreams = 8 [json_name = "downstreams"];
               }
               repeated Hop hop = 1 [json_name = "hop"];
            }
            Hops hops = 7 [json_name = "hops"];
         }
         repeated VsiTraceResult vsi_trace_result = 1 [json_name = "vsi-trace-result"];
      }
      VsiTraceResults vsi_trace_results = 3 [json_name = "vsi-trace-results"];
   }
   Vpls vpls = 11 [json_name = "vpls"];
   message Vxlan {
      message PingResults {
         message PingResult {
            string test_name = 1 [json_name = "test-name"];
            uint32 packet_send = 2 [json_name = "packet-send"];
            uint32 packet_recv = 3 [json_name = "packet-recv"];
            uint32 loss_ratio = 4 [json_name = "loss-ratio"];
            uint32 rtt_min = 5 [json_name = "rtt-min"];
            uint32 rtt_max = 6 [json_name = "rtt-max"];
            uint32 rtt_average = 7 [json_name = "rtt-average"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 8 [json_name = "status"];
            message Probes {
               message Probe {
                  uint32 index = 1 [json_name = "index"];
                  string replier = 2 [json_name = "replier"];
                  uint32 packet_size = 3 [json_name = "packet-size"];
                  uint32 rtt = 4 [json_name = "rtt"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 5 [json_name = "result-type"];
                  bool is_delete = 6 [json_name = "is-delete"];
               }
               repeated Probe probe = 1 [json_name = "probe"];
            }
            Probes probes = 9 [json_name = "probes"];
         }
         repeated PingResult ping_result = 1 [json_name = "ping-result"];
      }
      PingResults ping_results = 1 [json_name = "ping-results"];
      message TraceResults {
         message TraceResult {
            string test_name = 1 [json_name = "test-name"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 2 [json_name = "status"];
            message Hops {
               message Hop {
                  uint32 hop_index = 1 [json_name = "hop-index"];
                  uint32 ttl = 2 [json_name = "ttl"];
                  string replier = 3 [json_name = "replier"];
                  uint32 rtt = 4 [json_name = "rtt"];
                  string ingress_port = 5 [json_name = "ingress-port"];
                  string egress_port = 6 [json_name = "egress-port"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 7 [json_name = "result-type"];
                  bool is_delete = 8 [json_name = "is-delete"];
               }
               repeated Hop hop = 1 [json_name = "hop"];
            }
            Hops hops = 3 [json_name = "hops"];
         }
         repeated TraceResult trace_result = 1 [json_name = "trace-result"];
      }
      TraceResults trace_results = 2 [json_name = "trace-results"];
   }
   Vxlan vxlan = 12 [json_name = "vxlan"];
   message Arp {
      message PingIpResults {
         message PingIpResult {
            string test_name = 1 [json_name = "test-name"];
            string ip_address = 2 [json_name = "ip-address"];
            string mac_address = 3 [json_name = "mac-address"];
         }
         repeated PingIpResult ping_ip_result = 1 [json_name = "ping-ip-result"];
      }
      PingIpResults ping_ip_results = 1 [json_name = "ping-ip-results"];
      message PingMacResults {
         message PingMacResult {
            string test_name = 1 [json_name = "test-name"];
            uint32 packet_receive = 2 [json_name = "packet-receive"];
            uint32 packet_send = 3 [json_name = "packet-send"];
            string ip_address = 4 [json_name = "ip-address"];
            string mac_address = 5 [json_name = "mac-address"];
         }
         repeated PingMacResult ping_mac_result = 1 [json_name = "ping-mac-result"];
      }
      PingMacResults ping_mac_results = 2 [json_name = "ping-mac-results"];
      message IpPingResults {
         message IpPingResult {
            string test_name = 1 [json_name = "test-name"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 2 [json_name = "status"];
            bool is_used = 3 [json_name = "is-used"];
            string ip_addr = 4 [json_name = "ip-addr"];
            string mac_address = 5 [json_name = "mac-address"];
            uint32 packet_recv = 6 [json_name = "packet-recv"];
            uint32 packet_send = 7 [json_name = "packet-send"];
         }
         repeated IpPingResult ip_ping_result = 1 [json_name = "ip-ping-result"];
      }
      IpPingResults ip_ping_results = 3 [json_name = "ip-ping-results"];
      message MacPingResults {
         message MacPingResult {
            string test_name = 1 [json_name = "test-name"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 2 [json_name = "status"];
            bool is_used = 3 [json_name = "is-used"];
            string ip_address = 4 [json_name = "ip-address"];
            string mac_address = 5 [json_name = "mac-address"];
            uint32 packet_recv = 6 [json_name = "packet-recv"];
            uint32 packet_send = 7 [json_name = "packet-send"];
         }
         repeated MacPingResult mac_ping_result = 1 [json_name = "mac-ping-result"];
      }
      MacPingResults mac_ping_results = 4 [json_name = "mac-ping-results"];
   }
   Arp arp = 13 [json_name = "arp"];
   message Ce {
      message PingResults {
         message PingResult {
            string test_name = 1 [json_name = "test-name"];
            string mac = 2 [json_name = "mac"];
            string ip_address = 3 [json_name = "ip-address"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 4 [json_name = "status"];
            enum ResultType {
               ResultType_SUCCESS = 0;
               ResultType_TIMEOUT = 1;
               ResultType_FAILED = 2;
            };
            ResultType result_type = 5 [json_name = "result-type"];
         }
         repeated PingResult ping_result = 1 [json_name = "ping-result"];
      }
      PingResults ping_results = 1 [json_name = "ping-results"];
   }
   Ce ce = 14 [json_name = "ce"];
   message Mcast {
      message TraceResults {
         message TraceResult {
            string test_name = 1 [json_name = "test-name"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 2 [json_name = "status"];
            enum ErrorType {
               ErrorType_SUCCESS = 0;
               ErrorType_FAILED = 1;
            };
            ErrorType error_type = 3 [json_name = "error-type"];
            message Hops {
               message Hop {
                  int32 hop_index = 1 [json_name = "hop-index"];
                  string reverse_path = 2 [json_name = "reverse-path"];
                  uint32 fwd_ttl = 3 [json_name = "fwd-ttl"];
                  enum Protocol {
                     Protocol_UNKNOWN = 0;
                     Protocol_DVMRP = 1;
                     Protocol_MOSPF = 2;
                     Protocol_PIM = 3;
                     Protocol_CBT = 4;
                     Protocol_PIMX_SPECIAL = 5;
                     Protocol_PIMX_STATIC = 6;
                     Protocol_DVMRPX_STATIC = 7;
                     Protocol_PIMX_MBGP = 8;
                     Protocol_CBTX_SPECIAL = 9;
                     Protocol_CBTX_STATIC = 10;
                     Protocol_PIMX_ASSERT = 11;
                  };
                  Protocol protocol = 4 [json_name = "protocol"];
                  string incoming_if_address = 5 [json_name = "incoming-if-address"];
                  uint32 input_packet_rate = 6 [json_name = "input-packet-rate"];
                  string outgoing_if_address = 7 [json_name = "outgoing-if-address"];
                  uint32 output_packet_rate = 8 [json_name = "output-packet-rate"];
                  uint32 fwd_packet_rate = 9 [json_name = "fwd-packet-rate"];
                  string previous_hop_address = 10 [json_name = "previous-hop-address"];
                  uint32 input_packet_cout = 11 [json_name = "input-packet-cout"];
                  uint32 output_packet_count = 12 [json_name = "output-packet-count"];
                  enum FwdCode {
                     FwdCode_NOX_ERROR = 0;
                     FwdCode_WRONGX_IF = 1;
                     FwdCode_PRUNEX_SENT = 2;
                     FwdCode_PRUNEX_RCVD = 3;
                     FwdCode_SCOPED = 4;
                     FwdCode_NOX_ROUTE = 5;
                     FwdCode_WRONGX_LASTX_HOP = 6;
                     FwdCode_NOTX_FORWARDING = 7;
                     FwdCode_REACHEDX_RP = 8;
                     FwdCode_RPFX_IF = 9;
                     FwdCode_NOX_MULTICAST = 10;
                     FwdCode_INFOX_HIDDEN = 11;
                     FwdCode_NOX_SPACE = 129;
                     FwdCode_OLDX_ROUTER = 130;
                     FwdCode_ADMINX_PROHIB = 131;
                  };
                  FwdCode fwd_code = 13 [json_name = "fwd-code"];
                  uint32 loss_ratio = 14 [json_name = "loss-ratio"];
                  bool is_delete = 15 [json_name = "is-delete"];
               }
               repeated Hop hop = 1 [json_name = "hop"];
            }
            Hops hops = 4 [json_name = "hops"];
         }
         repeated TraceResult trace_result = 1 [json_name = "trace-result"];
      }
      TraceResults trace_results = 1 [json_name = "trace-results"];
   }
   Mcast mcast = 15 [json_name = "mcast"];
   message P2Mp {
      message PingResults {
         message PingResult {
            string test_name = 1 [json_name = "test-name"];
            string tunnel_name = 2 [json_name = "tunnel-name"];
            string root_address = 3 [json_name = "root-address"];
            string opaque_value = 4 [json_name = "opaque-value"];
            uint32 packet_send = 5 [json_name = "packet-send"];
            uint32 packet_receive = 6 [json_name = "packet-receive"];
            uint32 loss_ratio = 7 [json_name = "loss-ratio"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 8 [json_name = "status"];
            message Probes {
               message Probe {
                  uint32 index = 1 [json_name = "index"];
                  uint32 sequence = 2 [json_name = "sequence"];
                  string reply_adress = 3 [json_name = "reply-adress"];
                  uint32 data_bytes = 4 [json_name = "data-bytes"];
                  uint32 rtt = 5 [json_name = "rtt"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 6 [json_name = "result-type"];
                  bool is_delete = 7 [json_name = "is-delete"];
                  string reply_address = 8 [json_name = "reply-address"];
                  enum ReturnCode {
                     ReturnCode_NONE = 0;
                     ReturnCode_MALFORMED = 1;
                     ReturnCode_UNKNOWN = 2;
                     ReturnCode_EGRESS = 3;
                     ReturnCode_NOX_MAPPING = 4;
                     ReturnCode_DSX_MISMATCH = 5;
                     ReturnCode_NOX_UPX_INTERFACE = 6;
                     ReturnCode_RESERVED = 7;
                     ReturnCode_LABELX_SWITCH = 8;
                     ReturnCode_NOX_MPLSX_FORWARDING = 9;
                     ReturnCode_NOX_MAPPINGX_LABEL = 10;
                     ReturnCode_NOX_ENTRY = 11;
                     ReturnCode_NOX_PROTOCOL = 12;
                     ReturnCode_PREMATUREX_TERMINATION = 13;
                     ReturnCode_SEEX_DDMAPX_TLV = 14;
                     ReturnCode_FECX_CHANGE = 15;
                  };
                  ReturnCode return_code = 9 [json_name = "return-code"];
                  uint32 sub_code = 10 [json_name = "sub-code"];
               }
               repeated Probe probe = 1 [json_name = "probe"];
            }
            Probes probes = 9 [json_name = "probes"];
            uint32 rtt_min = 10 [json_name = "rtt-min"];
            uint32 rtt_max = 11 [json_name = "rtt-max"];
            uint32 rtt_average = 12 [json_name = "rtt-average"];
         }
         repeated PingResult ping_result = 1 [json_name = "ping-result"];
      }
      PingResults ping_results = 1 [json_name = "ping-results"];
      message TraceResults {
         message TraceResult {
            string test_name = 1 [json_name = "test-name"];
            string tunnel_name = 2 [json_name = "tunnel-name"];
            string root_ip_address = 3 [json_name = "root-ip-address"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 4 [json_name = "status"];
            message Hops {
               message Hop {
                  uint32 index = 1 [json_name = "index"];
                  uint32 ttl = 2 [json_name = "ttl"];
                  string replier = 3 [json_name = "replier"];
                  uint32 rtt = 4 [json_name = "rtt"];
                  enum Type {
                     INVALID_ENUM_VALUE_Type = 0;
                     Type_INGRESS = 1;
                     Type_TRANSIT = 2;
                     Type_BUD = 3;
                     Type_BRANCH = 4;
                     Type_EGRESS = 5;
                  };
                  Type type = 5 [json_name = "type"];
                  enum ReturnCode {
                     ReturnCode_NONE = 0;
                     ReturnCode_MALFORMED = 1;
                     ReturnCode_UNKNOWN = 2;
                     ReturnCode_EGRESS = 3;
                     ReturnCode_NOX_MAPPING = 4;
                     ReturnCode_DSX_MISMATCH = 5;
                     ReturnCode_NOX_UPX_INTERFACE = 6;
                     ReturnCode_RESERVED = 7;
                     ReturnCode_LABELX_SWITCH = 8;
                     ReturnCode_NOX_MPLSX_FORWARDING = 9;
                     ReturnCode_NOX_MAPPINGX_LABEL = 10;
                     ReturnCode_NOX_ENTRY = 11;
                     ReturnCode_NOX_PROTOCOL = 12;
                     ReturnCode_PREMATUREX_TERMINATION = 13;
                     ReturnCode_SEEX_DDMAPX_TLV = 14;
                     ReturnCode_FECX_CHANGE = 15;
                  };
                  ReturnCode return_code = 6 [json_name = "return-code"];
                  string ds_address = 7 [json_name = "ds-address"];
                  message DsLabelLists {
                     message DsLabelList {
                        uint32 ds_label = 1 [json_name = "ds-label"];
                     }
                     repeated DsLabelList ds_label_list = 1 [json_name = "ds-label-list"];
                  }
                  DsLabelLists ds_label_lists = 8 [json_name = "ds-label-lists"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 9 [json_name = "result-type"];
                  bool is_delete = 10 [json_name = "is-delete"];
                  message Downstreams {
                     message Downstream {
                        uint32 ds_index = 1 [json_name = "ds-index"];
                        string ds_address = 2 [json_name = "ds-address"];
                        message DsLabelLists {
                           message DsLabelList {
                              uint32 label_index = 1 [json_name = "label-index"];
                              uint32 ds_label = 2 [json_name = "ds-label"];
                           }
                           repeated DsLabelList ds_label_list = 1 [json_name = "ds-label-list"];
                        }
                        DsLabelLists ds_label_lists = 3 [json_name = "ds-label-lists"];
                     }
                     repeated Downstream downstream = 1 [json_name = "downstream"];
                  }
                  Downstreams downstreams = 11 [json_name = "downstreams"];
               }
               repeated Hop hop = 1 [json_name = "hop"];
            }
            Hops hops = 5 [json_name = "hops"];
         }
         repeated TraceResult trace_result = 1 [json_name = "trace-result"];
      }
      TraceResults trace_results = 2 [json_name = "trace-results"];
   }
   P2Mp p2mp = 16 [json_name = "p2mp"];
   message PadsDiagnose {
      message PadsDiagnoses {
         message PadsDiagnose4 {
            enum TestType {
               TestType_IPV4PING = 0;
            };
            TestType test_type = 1 [json_name = "test-type"];
            string test_name = 2 [json_name = "test-name"];
            enum ErrorCode {
               INVALID_ENUM_VALUE_ErrorCode = 0;
               ErrorCode_NOX_RESULT = 1;
               ErrorCode_LOCALX_ADDRESS = 2;
               ErrorCode_SUCCESS = 3;
            };
            ErrorCode error_code = 3 [json_name = "error-code"];
            message PacketResults {
               message PacketResult {
                  uint32 index = 1 [json_name = "index"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 2 [json_name = "result-type"];
                  message StageResults {
                     message StageResult {
                        enum StageType {
                           INVALID_ENUM_VALUE_StageType = 0;
                           StageType_SOCKX_SEND = 1;
                           StageType_LDMX_SEND = 2;
                           StageType_LDMX_RECEIVE = 3;
                           StageType_SOCKX_RECEIVE = 4;
                        };
                        StageType stage_type = 1 [json_name = "stage-type"];
                        string in_time = 2 [json_name = "in-time"];
                        string out_time = 3 [json_name = "out-time"];
                        string stage_result = 4 [json_name = "stage-result"];
                     }
                     repeated StageResult stage_result = 1 [json_name = "stage-result"];
                  }
                  StageResults stage_results = 3 [json_name = "stage-results"];
               }
               repeated PacketResult packet_result = 1 [json_name = "packet-result"];
            }
            PacketResults packet_results = 4 [json_name = "packet-results"];
         }
         repeated PadsDiagnose4 pads_diagnose = 1 [json_name = "pads-diagnose"];
      }
      PadsDiagnoses pads_diagnoses = 1 [json_name = "pads-diagnoses"];
   }
   PadsDiagnose pads_diagnose = 17 [json_name = "pads-diagnose"];
   message Ring {
      message PingResults {
         message PingResult {
            string test_name = 1 [json_name = "test-name"];
            uint32 ring_id = 2 [json_name = "ring-id"];
            uint32 direction = 3 [json_name = "direction"];
            uint32 source_node_id = 4 [json_name = "source-node-id"];
            uint32 dest_node_id = 5 [json_name = "dest-node-id"];
            uint32 packet_send = 6 [json_name = "packet-send"];
            uint32 packet_receive = 7 [json_name = "packet-receive"];
            uint32 loss_ratio = 8 [json_name = "loss-ratio"];
            uint32 rtt_min = 9 [json_name = "rtt-min"];
            uint32 rtt_max = 10 [json_name = "rtt-max"];
            uint32 rtt_average = 11 [json_name = "rtt-average"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 12 [json_name = "status"];
            message Probes {
               message Probe {
                  uint32 sequence = 1 [json_name = "sequence"];
                  string replier = 2 [json_name = "replier"];
                  uint32 data_bytes = 3 [json_name = "data-bytes"];
                  uint32 rtt = 4 [json_name = "rtt"];
                  uint32 ttl = 5 [json_name = "ttl"];
                  uint32 return_code = 6 [json_name = "return-code"];
                  uint32 return_subcode = 7 [json_name = "return-subcode"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 8 [json_name = "result-type"];
                  bool is_delete = 9 [json_name = "is-delete"];
               }
               repeated Probe probe = 1 [json_name = "probe"];
            }
            Probes probes = 13 [json_name = "probes"];
         }
         repeated PingResult ping_result = 1 [json_name = "ping-result"];
      }
      PingResults ping_results = 1 [json_name = "ping-results"];
      message TraceResults {
         message TraceResult {
            string test_name = 1 [json_name = "test-name"];
            uint32 ring_id = 2 [json_name = "ring-id"];
            uint32 direction = 3 [json_name = "direction"];
            uint32 source_node_id = 4 [json_name = "source-node-id"];
            uint32 dest_node_id = 5 [json_name = "dest-node-id"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 6 [json_name = "status"];
            message Hops {
               message Hop {
                  uint32 hop_index = 1 [json_name = "hop-index"];
                  string replier = 2 [json_name = "replier"];
                  uint32 response_node_id = 3 [json_name = "response-node-id"];
                  uint32 rtt = 4 [json_name = "rtt"];
                  enum Type {
                     INVALID_ENUM_VALUE_Type = 0;
                     Type_INGRESS = 1;
                     Type_TRANSIT = 2;
                     Type_EGRESS = 3;
                  };
                  Type type = 5 [json_name = "type"];
                  uint32 return_code = 6 [json_name = "return-code"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 7 [json_name = "result-type"];
                  bool is_delete = 8 [json_name = "is-delete"];
               }
               repeated Hop hop = 1 [json_name = "hop"];
            }
            Hops hops = 7 [json_name = "hops"];
         }
         repeated TraceResult trace_result = 1 [json_name = "trace-result"];
      }
      TraceResults trace_results = 2 [json_name = "trace-results"];
   }
   Ring ring = 18 [json_name = "ring"];
   message Ipv4Multipath {
      message TraceResults {
         message TraceResult {
            string test_name = 1 [json_name = "test-name"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 2 [json_name = "status"];
            message Paths {
               message Path {
                  uint32 path_index = 1 [json_name = "path-index"];
                  uint32 dest_port = 2 [json_name = "dest-port"];
                  message Hops {
                     message Hop {
                        uint32 hop_index = 1 [json_name = "hop-index"];
                        bool is_delete = 2 [json_name = "is-delete"];
                        message Probes {
                           message Probe {
                              uint32 probe_index = 1 [json_name = "probe-index"];
                              string replier = 2 [json_name = "replier"];
                              uint32 rtt = 3 [json_name = "rtt"];
                              uint32 type = 4 [json_name = "type"];
                              uint32 code = 5 [json_name = "code"];
                              string error_info = 6 [json_name = "error-info"];
                              enum ResultType {
                                 ResultType_SUCCESS = 0;
                                 ResultType_TIMEOUT = 1;
                                 ResultType_FAILED = 2;
                              };
                              ResultType result_type = 7 [json_name = "result-type"];
                           }
                           repeated Probe probe = 1 [json_name = "probe"];
                        }
                        Probes probes = 3 [json_name = "probes"];
                        string replier = 4 [json_name = "replier"];
                        uint32 rtt = 5 [json_name = "rtt"];
                        uint32 type = 6 [json_name = "type"];
                        uint32 code = 7 [json_name = "code"];
                        string error_info = 8 [json_name = "error-info"];
                        enum ResultType {
                           ResultType_SUCCESS = 0;
                           ResultType_TIMEOUT = 1;
                           ResultType_FAILED = 2;
                        };
                        ResultType result_type = 9 [json_name = "result-type"];
                     }
                     repeated Hop hop = 1 [json_name = "hop"];
                  }
                  Hops hops = 3 [json_name = "hops"];
               }
               repeated Path path = 1 [json_name = "path"];
            }
            Paths paths = 3 [json_name = "paths"];
            enum PathDetectResult {
               INVALID_ENUM_VALUE_PathDetectResult = 0;
               PathDetectResult_PATHX_NOTX_FOUND = 1;
            };
            PathDetectResult path_detect_result = 4 [json_name = "path-detect-result"];
         }
         repeated TraceResult trace_result = 1 [json_name = "trace-result"];
      }
      TraceResults trace_results = 1 [json_name = "trace-results"];
   }
   Ipv4Multipath ipv4_multipath = 19 [json_name = "ipv4-multipath"];
   message Ipv6Multipath {
      message TraceResults {
         message TraceResult {
            string test_name = 1 [json_name = "test-name"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 2 [json_name = "status"];
            message Paths {
               message Path {
                  uint32 path_index = 1 [json_name = "path-index"];
                  uint32 dest_port = 2 [json_name = "dest-port"];
                  message Hops {
                     message Hop {
                        uint32 hop_index = 1 [json_name = "hop-index"];
                        bool is_delete = 2 [json_name = "is-delete"];
                        message Probes {
                           message Probe {
                              uint32 probe_index = 1 [json_name = "probe-index"];
                              string replier = 2 [json_name = "replier"];
                              uint32 rtt = 3 [json_name = "rtt"];
                              uint32 type = 4 [json_name = "type"];
                              uint32 code = 5 [json_name = "code"];
                              string error_info = 6 [json_name = "error-info"];
                              enum ResultType {
                                 ResultType_SUCCESS = 0;
                                 ResultType_TIMEOUT = 1;
                                 ResultType_FAILED = 2;
                              };
                              ResultType result_type = 7 [json_name = "result-type"];
                           }
                           repeated Probe probe = 1 [json_name = "probe"];
                        }
                        Probes probes = 3 [json_name = "probes"];
                        string replier = 4 [json_name = "replier"];
                        uint32 rtt = 5 [json_name = "rtt"];
                        uint32 type = 6 [json_name = "type"];
                        uint32 code = 7 [json_name = "code"];
                        string error_info = 8 [json_name = "error-info"];
                        enum ResultType {
                           ResultType_SUCCESS = 0;
                           ResultType_TIMEOUT = 1;
                           ResultType_FAILED = 2;
                        };
                        ResultType result_type = 9 [json_name = "result-type"];
                     }
                     repeated Hop hop = 1 [json_name = "hop"];
                  }
                  Hops hops = 3 [json_name = "hops"];
               }
               repeated Path path = 1 [json_name = "path"];
            }
            Paths paths = 3 [json_name = "paths"];
            enum PathDetectResult {
               INVALID_ENUM_VALUE_PathDetectResult = 0;
               PathDetectResult_PATHX_NOTX_FOUND = 1;
            };
            PathDetectResult path_detect_result = 4 [json_name = "path-detect-result"];
         }
         repeated TraceResult trace_result = 1 [json_name = "trace-result"];
      }
      TraceResults trace_results = 1 [json_name = "trace-results"];
   }
   Ipv6Multipath ipv6_multipath = 20 [json_name = "ipv6-multipath"];
}
message DiagnosticToolsOutput {
   message Tcp {
      message PingResults {
         message PingResult {
            string test_name = 1 [json_name = "test-name"];
            uint32 packet_send = 2 [json_name = "packet-send"];
            uint32 packet_receive = 3 [json_name = "packet-receive"];
            uint32 loss_ratio = 4 [json_name = "loss-ratio"];
            uint32 rtt_min = 5 [json_name = "rtt-min"];
            uint32 rtt_max = 6 [json_name = "rtt-max"];
            uint32 rtt_average = 7 [json_name = "rtt-average"];
            enum Status {
               Status_PROCESSING = 0;
               Status_FINISHED = 1;
            };
            Status status = 8 [json_name = "status"];
            message Probes {
               message Probe {
                  uint32 sequence = 1 [json_name = "sequence"];
                  string replier = 2 [json_name = "replier"];
                  uint32 rtt = 3 [json_name = "rtt"];
                  enum ResultType {
                     ResultType_SUCCESS = 0;
                     ResultType_TIMEOUT = 1;
                     ResultType_FAILED = 2;
                  };
                  ResultType result_type = 4 [json_name = "result-type"];
                  bool is_delete = 5 [json_name = "is-delete"];
               }
               repeated Probe probe = 1 [json_name = "probe"];
            }
            Probes probes = 9 [json_name = "probes"];
         }
         repeated PingResult ping_result = 1 [json_name = "ping-result"];
      }
      PingResults ping_results = 1 [json_name = "ping-results"];
   }
   Tcp tcp = 1 [json_name = "tcp"];
}

