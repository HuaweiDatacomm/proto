syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2022-09-27 21:25:45
// ProtoYang-version 1
// module huawei-bras-l2tp-access
// revision 2022-09-20
// revision 2022-08-19
// revision 2022-06-14
// revision 2022-03-01
// revision 2019-12-21
// revision 2019-12-20
// revision 2019-12-15
// revision 2019-12-04
// revision 2019-12-03
// revision 2019-05-18
// namespace urn:huawei:yang:huawei-bras-l2tp-access

package huawei_bras_l2tp_access;

message BrasL2TpAccess {
   message L2TpGlobal {
      bool l2tp_enable = 1 [json_name = "l2tp-enable"];
      bool auto_reset_enable = 2 [json_name = "auto-reset-enable"];
      bool failover_enable = 3 [json_name = "failover-enable"];
   }
   L2TpGlobal l2tp_global = 1 [json_name = "l2tp-global"];
   message LacGlobal {
      bool session_limit_enable = 1 [json_name = "session-limit-enable"];
      uint32 tunnel_base_id = 2 [json_name = "tunnel-base-id"];
      uint32 aging_time = 3 [json_name = "aging-time"];
      bool calling_number_enable = 4 [json_name = "calling-number-enable"];
      bool calling_vlan_invalid = 5 [json_name = "calling-vlan-invalid"];
      enum StopccnChasten {
         StopccnChasten_ENABLE = 0;
         StopccnChasten_DISABLE = 1;
      };
      StopccnChasten stopccn_chasten = 6 [json_name = "stopccn-chasten"];
      bool speed_auto_adjustment_enable = 7 [json_name = "speed-auto-adjustment-enable"];
   }
   LacGlobal lac_global = 2 [json_name = "lac-global"];
   message LnsGlobal {
      message TunnelLimit {
         message Limit {
            uint32 set_value = 1 [json_name = "set-value"];
         }
         Limit limit = 1 [json_name = "limit"];
         message UsedIds {
            uint32 number5 = 1 [json_name = "number"];
         }
         UsedIds used_ids = 2 [json_name = "used-ids"];
      }
      TunnelLimit tunnel_limit = 1 [json_name = "tunnel-limit"];
      message LnsFastReplys {
         message LnsFastReply {
            string slot_id = 1 [json_name = "slot-id"];
         }
         repeated LnsFastReply lns_fast_reply = 1 [json_name = "lns-fast-reply"];
      }
      LnsFastReplys lns_fast_replys = 2 [json_name = "lns-fast-replys"];
      message SlotBlock {
         repeated string slot_id = 1 [json_name = "slot-id"];
      }
      SlotBlock slot_block = 3 [json_name = "slot-block"];
      message L2TpAaa {
         message LnsUserLimit {
            uint32 limit_value = 1 [json_name = "limit-value"];
         }
         LnsUserLimit lns_user_limit = 1 [json_name = "lns-user-limit"];
         message BgpOverLns {
            bool lns_enable = 1 [json_name = "lns-enable"];
         }
         BgpOverLns bgp_over_lns = 2 [json_name = "bgp-over-lns"];
      }
      L2TpAaa l2tp_aaa = 4 [json_name = "l2tp-aaa"];
      message OtherFunction {
         bool protocol_packet_enable = 1 [json_name = "protocol-packet-enable"];
         bool accm_enable = 2 [json_name = "accm-enable"];
      }
      OtherFunction other_function = 5 [json_name = "other-function"];
   }
   LnsGlobal lns_global = 3 [json_name = "lns-global"];
   message L2TpGroups {
      message L2TpGroup {
         string name = 1 [json_name = "name"];
         message L2TpTunnel {
            message Authentication {
               enum AuthenEnable {
                  AuthenEnable_ENABLE = 0;
                  AuthenEnable_STRICTX_ENABLE = 1;
                  AuthenEnable_DISABLE = 2;
               };
               AuthenEnable authen_enable = 1 [json_name = "authen-enable"];
               string password = 2 [json_name = "password"];
               bool aaa_auth_enable = 3 [json_name = "aaa-auth-enable"];
               bool radius_force_enable = 4 [json_name = "radius-force-enable"];
            }
            Authentication authentication = 1 [json_name = "authentication"];
            message OtherParameterSets {
               string tunnel_name = 1 [json_name = "tunnel-name"];
               string description = 2 [json_name = "description"];
               uint32 idle_cut = 3 [json_name = "idle-cut"];
               uint32 time_out = 4 [json_name = "time-out"];
               uint32 hello_time = 5 [json_name = "hello-time"];
               uint32 retransmit_time = 6 [json_name = "retransmit-time"];
               uint32 recive_window_size = 7 [json_name = "recive-window-size"];
               uint32 retrans_queue_length = 8 [json_name = "retrans-queue-length"];
               string inbound_name = 9 [json_name = "inbound-name"];
               string outbound_name = 10 [json_name = "outbound-name"];
            }
            OtherParameterSets other_parameter_sets = 2 [json_name = "other-parameter-sets"];
            message OtherFunctionSets {
               bool alarm_enable = 1 [json_name = "alarm-enable"];
               bool avp_nas_port_enable = 2 [json_name = "avp-nas-port-enable"];
               bool avp46_enable = 3 [json_name = "avp46-enable"];
               bool avp_cncrypte_enable = 4 [json_name = "avp-cncrypte-enable"];
               bool peer_hello_check_enable = 5 [json_name = "peer-hello-check-enable"];
            }
            OtherFunctionSets other_function_sets = 3 [json_name = "other-function-sets"];
         }
         L2TpTunnel l2tp_tunnel = 2 [json_name = "l2tp-tunnel"];
         message L2TpLac {
            message TunnelMode {
               message Mode_LoadShare {
                  bool load_share_enable = 1 [json_name = "load-share-enable"];
               }
               message Mode_Priority {
                  bool priority_enable = 1 [json_name = "priority-enable"];
               }
               message Mode_PerUser {
                  bool per_user_enable = 1 [json_name = "per-user-enable"];
               }
               oneof Mode {
                  Mode_LoadShare mode_load_share = 2 [json_name = "load-share"];
                  Mode_Priority mode_priority = 3 [json_name = "priority"];
                  Mode_PerUser mode_per_user = 4 [json_name = "per-user"];
               }
            }
            TunnelMode tunnel_mode = 1 [json_name = "tunnel-mode"];
            message SourceInterface {
               string name = 1 [json_name = "name"];
               bool rui_enable = 2 [json_name = "rui-enable"];
            }
            SourceInterface source_interface = 2 [json_name = "source-interface"];
            message StartL2Tp {
               message LnsIps {
                  message LnsIp {
                     string identifier_name = 1 [json_name = "identifier-name"];
                     string ip_address = 2 [json_name = "ip-address"];
                     uint32 weight = 3 [json_name = "weight"];
                     uint32 preference = 4 [json_name = "preference"];
                     string remote_name = 5 [json_name = "remote-name"];
                  }
                  repeated LnsIp lns_ip = 1 [json_name = "lns-ip"];
               }
               LnsIps lns_ips = 1 [json_name = "lns-ips"];
            }
            StartL2Tp start_l2tp = 3 [json_name = "start-l2tp"];
            message LocalNameLnsIps {
               message LocalNameLnsIp {
                  string ip_address = 1 [json_name = "ip-address"];
                  string local_name = 2 [json_name = "local-name"];
               }
               repeated LocalNameLnsIp local_name_lns_ip = 1 [json_name = "local-name-lns-ip"];
            }
            LocalNameLnsIps local_name_lns_ips = 4 [json_name = "local-name-lns-ips"];
            message BlockLnsIp {
               repeated string ip_address = 1 [json_name = "ip-address"];
            }
            BlockLnsIp block_lns_ip = 5 [json_name = "block-lns-ip"];
            message PasswordLnsIps {
               message PasswordLnsIp {
                  string ip_address = 1 [json_name = "ip-address"];
                  string password = 2 [json_name = "password"];
               }
               repeated PasswordLnsIp password_lns_ip = 1 [json_name = "password-lns-ip"];
            }
            PasswordLnsIps password_lns_ips = 6 [json_name = "password-lns-ips"];
            message AvpCallingNumber {
               message AvpEnable {
                  enum Status {
                     INVALID_ENUM_VALUE_Status = 0;
                     Status_ENABLE = 1;
                     Status_DISABLE = 2;
                  };
                  Status status = 1 [json_name = "status"];
               }
               AvpEnable avp_enable = 1 [json_name = "avp-enable"];
               message CallingNumberFormat {
                  message InterfaceExcludeSubslot {
                     bool exclude_enable = 1 [json_name = "exclude-enable"];
                  }
                  InterfaceExcludeSubslot interface_exclude_subslot = 2 [json_name = "interface-exclude-subslot"];
                  message Module_L2Tp {
                     message L2TpFormat {
                        message Format_Version1 {
                           bool version1_enable = 1 [json_name = "version1-enable"];
                           bool include_option82 = 2 [json_name = "include-option82"];
                        }
                        message Format_Version2 {
                           message IncludeAttributes {
                              message IncludeAttribute {
                                 enum AttributeType {
                                    INVALID_ENUM_VALUE_AttributeType = 0;
                                    AttributeType_OPTION82 = 1;
                                    AttributeType_USERX_MAC = 2;
                                    AttributeType_INTERFACE = 3;
                                    AttributeType_DOMAIN = 4;
                                    AttributeType_SYSTEMX_NAME = 5;
                                    AttributeType_VLAN = 6;
                                    AttributeType_AGENTX_CIRCUITX_ID = 7;
                                    AttributeType_AGENTX_REMOTEX_ID = 8;
                                    AttributeType_PEX_VLAN = 9;
                                    AttributeType_CEX_VLAN = 10;
                                 };
                                 AttributeType attribute_type = 1 [json_name = "attribute-type"];
                                 string delimiter = 2 [json_name = "delimiter"];
                              }
                              repeated IncludeAttribute include_attribute = 1 [json_name = "include-attribute"];
                           }
                           IncludeAttributes include_attributes = 1 [json_name = "include-attributes"];
                           string include_delimiter = 2 [json_name = "include-delimiter"];
                        }
                        message Format_Version3 {
                           bool version3_enable = 1 [json_name = "version3-enable"];
                        }
                        oneof Format {
                           Format_Version1 format_version1 = 1 [json_name = "version1"];
                           Format_Version2 format_version2 = 2 [json_name = "version2"];
                           Format_Version3 format_version3 = 3 [json_name = "version3"];
                        }
                     }
                     L2TpFormat l2tp_format = 1 [json_name = "l2tp-format"];
                  }
                  message Module_Aaa {
                     message AaaFormat {
                        message Format_Lli {
                           bool logical_line_id = 1 [json_name = "logical-line-id"];
                        }
                        message Format_RadiusForce {
                           bool radius_force = 1 [json_name = "radius-force"];
                        }
                        oneof Format {
                           Format_Lli format_lli = 1 [json_name = "lli"];
                           Format_RadiusForce format_radius_force = 2 [json_name = "radius-force"];
                        }
                     }
                     AaaFormat aaa_format = 1 [json_name = "aaa-format"];
                  }
                  oneof Module {
                     Module_L2Tp module_l2tp = 3 [json_name = "l2tp"];
                     Module_Aaa module_aaa = 4 [json_name = "aaa"];
                  }
               }
               CallingNumberFormat calling_number_format = 2 [json_name = "calling-number-format"];
            }
            AvpCallingNumber avp_calling_number = 7 [json_name = "avp-calling-number"];
            message OtherFunctionSets {
               uint32 session_limit = 1 [json_name = "session-limit"];
               bool mtu_enable = 2 [json_name = "mtu-enable"];
               bool mss_enable = 3 [json_name = "mss-enable"];
               enum AllowAddressChangeType {
                  INVALID_ENUM_VALUE_AllowAddressChangeType = 0;
                  AllowAddressChangeType_SETUPX_ONLY = 1;
                  AllowAddressChangeType_ALWAYS = 2;
               };
               AllowAddressChangeType allow_address_change_type = 4 [json_name = "allow-address-change-type"];
               bool trust_upstream_priority = 5 [json_name = "trust-upstream-priority"];
               uint32 sccrq_time = 6 [json_name = "sccrq-time"];
               uint32 dscp_value = 7 [json_name = "dscp-value"];
            }
            OtherFunctionSets other_function_sets = 8 [json_name = "other-function-sets"];
            message CpSourceInterfaces {
               message CpSourceInterface {
                  uint32 up_id_begin = 1 [json_name = "up-id-begin"];
                  uint32 up_id_end = 2 [json_name = "up-id-end"];
                  uint32 loopback_number = 3 [json_name = "loopback-number"];
               }
               repeated CpSourceInterface cp_source_interface = 1 [json_name = "cp-source-interface"];
            }
            CpSourceInterfaces cp_source_interfaces = 9 [json_name = "cp-source-interfaces"];
            message LacAccessLineInfo {
               bool agent_circuit_id = 1 [json_name = "agent-circuit-id"];
               bool agent_remote_id = 2 [json_name = "agent-remote-id"];
               bool actual_data_rate_upstream = 3 [json_name = "actual-data-rate-upstream"];
               bool actual_data_rate_downstream = 4 [json_name = "actual-data-rate-downstream"];
            }
            LacAccessLineInfo lac_access_line_info = 10 [json_name = "lac-access-line-info"];
         }
         L2TpLac l2tp_lac = 3 [json_name = "l2tp-lac"];
         message L2TpLns {
            message Allow {
               string virtual_template_number = 1 [json_name = "virtual-template-number"];
               string remote_name = 2 [json_name = "remote-name"];
               string lac_source_ip_address = 3 [json_name = "lac-source-ip-address"];
               enum GroupMatchMode {
                  GroupMatchMode_BYX_TUNNELX_NAME = 0;
                  GroupMatchMode_BYX_SOURCEX_IP = 1;
               };
               GroupMatchMode group_match_mode = 4 [json_name = "group-match-mode"];
            }
            Allow allow = 1 [json_name = "allow"];
            message Domain {
               enum SetType {
                  SetType_DEFAULT = 0;
                  SetType_FORCE = 1;
                  SetType_REPLACE = 2;
               };
               SetType set_type = 1 [json_name = "set-type"];
               string name = 2 [json_name = "name"];
               string roam_name = 3 [json_name = "roam-name"];
            }
            Domain domain = 2 [json_name = "domain"];
            message CallingStationId {
               bool agent_remote_id = 1 [json_name = "agent-remote-id"];
               bool translate_remote_id = 2 [json_name = "translate-remote-id"];
            }
            CallingStationId calling_station_id = 3 [json_name = "calling-station-id"];
            message OtherFunctionSets {
               bool cdn_send_delay_enable = 1 [json_name = "cdn-send-delay-enable"];
               bool renegotiation_lcp_enable = 2 [json_name = "renegotiation-lcp-enable"];
               bool lns_schedule_enable = 3 [json_name = "lns-schedule-enable"];
               enum MandatoryChap {
                  INVALID_ENUM_VALUE_MandatoryChap = 0;
                  MandatoryChap_MANDATORYX_CHAP = 1;
                  MandatoryChap_CHALLENGEX_LENGTH = 2;
               };
               MandatoryChap mandatory_chap = 4 [json_name = "mandatory-chap"];
               enum MandatoryLcp {
                  INVALID_ENUM_VALUE_MandatoryLcp = 0;
                  MandatoryLcp_MANDATORYX_LCP = 1;
                  MandatoryLcp_ONX_MISMATCH = 2;
                  MandatoryLcp_STRICT = 3;
               };
               MandatoryLcp mandatory_lcp = 5 [json_name = "mandatory-lcp"];
               enum QosMode {
                  INVALID_ENUM_VALUE_QosMode = 0;
                  QosMode_TUNNEL = 1;
                  QosMode_SESSION = 2;
               };
               QosMode qos_mode = 6 [json_name = "qos-mode"];
               uint32 sccrp_time = 7 [json_name = "sccrp-time"];
               uint32 dscp_value = 8 [json_name = "dscp-value"];
            }
            OtherFunctionSets other_function_sets = 4 [json_name = "other-function-sets"];
            message LnsAccessLineInfo {
               bool agent_circuit_id = 1 [json_name = "agent-circuit-id"];
               bool agent_remote_id = 2 [json_name = "agent-remote-id"];
               bool actual_data_rate_upstream = 3 [json_name = "actual-data-rate-upstream"];
               bool actual_data_rate_downstream = 4 [json_name = "actual-data-rate-downstream"];
            }
            LnsAccessLineInfo lns_access_line_info = 5 [json_name = "lns-access-line-info"];
            message SourceIpPasswords {
               message SourceIpPassword {
                  string start_ip_address = 1 [json_name = "start-ip-address"];
                  string end_ip_address = 2 [json_name = "end-ip-address"];
                  string password = 3 [json_name = "password"];
               }
               repeated SourceIpPassword source_ip_password = 1 [json_name = "source-ip-password"];
            }
            SourceIpPasswords source_ip_passwords = 6 [json_name = "source-ip-passwords"];
         }
         L2TpLns l2tp_lns = 4 [json_name = "l2tp-lns"];
         message Group {
            uint32 used_tunnel_number = 1 [json_name = "used-tunnel-number"];
            uint32 used_number = 2 [json_name = "used-number"];
            message LnsIpAddresses {
               message LnsIpAddress {
                  uint32 lns_index = 1 [json_name = "lns-index"];
                  string ip_address = 2 [json_name = "ip-address"];
                  uint32 tunnel_id = 3 [json_name = "tunnel-id"];
                  uint32 expire = 4 [json_name = "expire"];
                  enum State {
                     State_UNUSED = 0;
                     State_USED = 1;
                  };
                  State state = 5 [json_name = "state"];
               }
               repeated LnsIpAddress lns_ip_address = 1 [json_name = "lns-ip-address"];
            }
            LnsIpAddresses lns_ip_addresses = 3 [json_name = "lns-ip-addresses"];
            message LnsIpAddresss {
               message LnsIpAddress {
                  uint32 lns_index = 1 [json_name = "lns-index"];
                  string ip_address = 2 [json_name = "ip-address"];
                  uint32 tunnel_id = 3 [json_name = "tunnel-id"];
                  uint32 expire = 4 [json_name = "expire"];
                  enum State {
                     State_UNUSED = 0;
                     State_USED = 1;
                  };
                  State state = 5 [json_name = "state"];
               }
               repeated LnsIpAddress lns_ip_address = 1 [json_name = "lns-ip-address"];
            }
            LnsIpAddresss lns_ip_addresss = 4 [json_name = "lns-ip-addresss"];
         }
         Group group = 5 [json_name = "group"];
         message CpSourceInterface {
            message UpSources {
               message UpSource {
                  uint32 up_id = 1 [json_name = "up-id"];
                  string group_description = 2 [json_name = "group-description"];
                  enum GroupType {
                     GroupType_NONE = 0;
                     GroupType_ACCEPTX_DIALINX_L2TP = 1;
                     GroupType_REQUESTX_DIALINX_L2TP = 2;
                  };
                  GroupType group_type = 3 [json_name = "group-type"];
                  message Routes {
                     message Route {
                        string interface_name = 1 [json_name = "interface-name"];
                        string ip_address = 2 [json_name = "ip-address"];
                        uint32 vpn_route_forward_id = 3 [json_name = "vpn-route-forward-id"];
                     }
                     repeated Route route = 1 [json_name = "route"];
                  }
                  Routes routes = 4 [json_name = "routes"];
               }
               repeated UpSource up_source = 1 [json_name = "up-source"];
            }
            UpSources up_sources = 1 [json_name = "up-sources"];
         }
         CpSourceInterface cp_source_interface = 6 [json_name = "cp-source-interface"];
         message CpGroups {
            message CpGroup {
               uint32 up_group_id = 1 [json_name = "up-group-id"];
               uint32 used_tunnel_number = 2 [json_name = "used-tunnel-number"];
               uint32 used_number = 3 [json_name = "used-number"];
               message LnsIpAddresss {
                  message LnsIpAddress {
                     uint32 lns_index = 1 [json_name = "lns-index"];
                     string ip_address = 2 [json_name = "ip-address"];
                     uint32 tunnel_id = 3 [json_name = "tunnel-id"];
                     uint32 expire = 4 [json_name = "expire"];
                     enum State {
                        State_UNUSED = 0;
                        State_USED = 1;
                     };
                     State state = 5 [json_name = "state"];
                  }
                  repeated LnsIpAddress lns_ip_address = 1 [json_name = "lns-ip-address"];
               }
               LnsIpAddresss lns_ip_addresss = 4 [json_name = "lns-ip-addresss"];
            }
            repeated CpGroup cp_group = 1 [json_name = "cp-group"];
         }
         CpGroups cp_groups = 7 [json_name = "cp-groups"];
      }
      repeated L2TpGroup l2tp_group = 1 [json_name = "l2tp-group"];
   }
   L2TpGroups l2tp_groups = 4 [json_name = "l2tp-groups"];
   message LnsGroups {
      message LnsGroup {
         string group_name = 1 [json_name = "group-name"];
         message BindSources {
            message BindSource {
               string interface_name = 1 [json_name = "interface-name"];
            }
            repeated BindSource bind_source = 1 [json_name = "bind-source"];
         }
         BindSources bind_sources = 2 [json_name = "bind-sources"];
         message GroupDescription {
            string description_value = 1 [json_name = "description-value"];
         }
         GroupDescription group_description = 4 [json_name = "group-description"];
         message LoadBalance {
            enum Mode {
               INVALID_ENUM_VALUE_Mode = 0;
               Mode_BYX_TUNNEL = 1;
               Mode_BYX_SESSION = 2;
            };
            Mode mode = 1 [json_name = "mode"];
         }
         LoadBalance load_balance = 5 [json_name = "load-balance"];
         message MasterSlot {
            string slot_id = 1 [json_name = "slot-id"];
         }
         MasterSlot master_slot = 6 [json_name = "master-slot"];
         message BindBoard_BindSlots {
            message BindSlots5 {
               message BindSlot {
                  string slot_id = 1 [json_name = "slot-id"];
                  message TunnelSession {
                     uint32 tunnel_number = 1 [json_name = "tunnel-number"];
                     uint32 session_number = 2 [json_name = "session-number"];
                  }
                  TunnelSession tunnel_session = 2 [json_name = "tunnel-session"];
               }
               repeated BindSlot bind_slot = 1 [json_name = "bind-slot"];
            }
            BindSlots5 bind_slots = 1 [json_name = "bind-slots"];
         }
         message BindBoard_BindBackupGroups {
            message BindBackupGroups5 {
               message BindBackupGroup {
                  string name = 1 [json_name = "name"];
               }
               repeated BindBackupGroup bind_backup_group = 1 [json_name = "bind-backup-group"];
            }
            BindBackupGroups5 bind_backup_groups = 1 [json_name = "bind-backup-groups"];
         }
         oneof BindBoard {
            BindBoard_BindSlots bind_board_bind_slots = 7 [json_name = "bind-slots"];
            BindBoard_BindBackupGroups bind_board_bind_backup_groups = 8 [json_name = "bind-backup-groups"];
         }
      }
      repeated LnsGroup lns_group = 1 [json_name = "lns-group"];
   }
   LnsGroups lns_groups = 5 [json_name = "lns-groups"];
   message LnsBackupGroups {
      message LnsBackupGroup {
         string name = 1 [json_name = "name"];
         message BindSlots {
            string master_slot_id = 1 [json_name = "master-slot-id"];
            string slave_slot_id = 2 [json_name = "slave-slot-id"];
         }
         BindSlots bind_slots = 2 [json_name = "bind-slots"];
      }
      repeated LnsBackupGroup lns_backup_group = 1 [json_name = "lns-backup-group"];
   }
   LnsBackupGroups lns_backup_groups = 6 [json_name = "lns-backup-groups"];
   message Protocols {
      message Protocol {
         string vendor_name = 1 [json_name = "vendor-name"];
         int32 firmware_revision = 2 [json_name = "firmware-revision"];
         enum DrainTunnel {
            INVALID_ENUM_VALUE_DrainTunnel = 0;
            DrainTunnel_TRUE = 1;
            DrainTunnel_FALSE = 2;
         };
         DrainTunnel drain_tunnel = 3 [json_name = "drain-tunnel"];
         string schema_version = 4 [json_name = "schema-version"];
      }
      repeated Protocol protocol = 1 [json_name = "protocol"];
   }
   Protocols protocols = 7 [json_name = "protocols"];
   message LacTunnels {
      message LacTunnel {
         uint32 local_id = 1 [json_name = "local-id"];
         string local_name = 2 [json_name = "local-name"];
         uint32 remote_id = 3 [json_name = "remote-id"];
         string remote_name = 4 [json_name = "remote-name"];
         string status = 5 [json_name = "status"];
         string local_ip_address = 6 [json_name = "local-ip-address"];
         uint32 local_port = 7 [json_name = "local-port"];
         string remote_ip_address = 8 [json_name = "remote-ip-address"];
         uint32 remote_port = 9 [json_name = "remote-port"];
         string recall_ip_address = 10 [json_name = "recall-ip-address"];
         uint32 vrf = 11 [json_name = "vrf"];
         message Time {
            string start_date = 1 [json_name = "start-date"];
            string start_clock = 2 [json_name = "start-clock"];
            string continuance_length = 3 [json_name = "continuance-length"];
         }
         Time time = 12 [json_name = "time"];
         message Config {
            uint32 hello_interval = 1 [json_name = "hello-interval"];
            uint32 session_limit = 2 [json_name = "session-limit"];
            bool per_user_enable = 3 [json_name = "per-user-enable"];
            uint32 timeout = 4 [json_name = "timeout"];
            uint32 local_receive_window = 5 [json_name = "local-receive-window"];
            uint32 remote_receive_window = 6 [json_name = "remote-receive-window"];
            bool is_blocked = 7 [json_name = "is-blocked"];
            uint32 outer_dscp = 8 [json_name = "outer-dscp"];
            string group_name = 9 [json_name = "group-name"];
         }
         Config config = 13 [json_name = "config"];
         message Radius {
            uint32 session_limit = 1 [json_name = "session-limit"];
            uint32 vrf = 2 [json_name = "vrf"];
            string assignment_id = 3 [json_name = "assignment-id"];
         }
         Radius radius = 14 [json_name = "radius"];
         message Statistics {
            uint32 active_session_num = 1 [json_name = "active-session-num"];
            uint32 control_sent_num = 2 [json_name = "control-sent-num"];
            uint32 control_receive_num = 3 [json_name = "control-receive-num"];
            uint32 retrans_mission_num = 4 [json_name = "retrans-mission-num"];
         }
         Statistics statistics = 15 [json_name = "statistics"];
         message Redundant {
            string bas_interface_name = 1 [json_name = "bas-interface-name"];
            string remote_backup_profile = 2 [json_name = "remote-backup-profile"];
            string remote_backup_service = 3 [json_name = "remote-backup-service"];
            string status = 4 [json_name = "status"];
            string register = 5 [json_name = "register"];
            uint32 life = 6 [json_name = "life"];
         }
         Redundant redundant = 16 [json_name = "redundant"];
      }
      repeated LacTunnel lac_tunnel = 1 [json_name = "lac-tunnel"];
   }
   LacTunnels lac_tunnels = 8 [json_name = "lac-tunnels"];
   message LacSessions {
      message LacSession {
         uint32 local_tunnel_id = 1 [json_name = "local-tunnel-id"];
         uint32 local_session_id = 2 [json_name = "local-session-id"];
         uint32 remote_tunnel_id = 3 [json_name = "remote-tunnel-id"];
         uint32 remote_session_id = 4 [json_name = "remote-session-id"];
         string local_address = 5 [json_name = "local-address"];
         string remote_address = 6 [json_name = "remote-address"];
         string lns_reply_ip_address = 7 [json_name = "lns-reply-ip-address"];
         string local_tunnel_name = 8 [json_name = "local-tunnel-name"];
         string remote_tunnel_name = 9 [json_name = "remote-tunnel-name"];
         uint32 port = 10 [json_name = "port"];
         enum Status {
            Status_ESTABLISHING = 0;
            Status_UP = 1;
            Status_DOWN = 2;
         };
         Status status = 11 [json_name = "status"];
         uint32 serial_number = 12 [json_name = "serial-number"];
         uint32 id = 13 [json_name = "id"];
         string name = 14 [json_name = "name"];
         uint32 pppoe_id = 15 [json_name = "pppoe-id"];
         string mac_address = 16 [json_name = "mac-address"];
         message Redundant {
            string register = 1 [json_name = "register"];
            enum TrafficState {
               TrafficState_NORMAL = 0;
               TrafficState_ABNORMAL = 1;
            };
            TrafficState traffic_state = 2 [json_name = "traffic-state"];
            string state = 3 [json_name = "state"];
            string life = 4 [json_name = "life"];
            string forwarding_state = 5 [json_name = "forwarding-state"];
            string bas_interface_name = 6 [json_name = "bas-interface-name"];
            string remote_backup_profile = 7 [json_name = "remote-backup-profile"];
            string remote_backup_service = 8 [json_name = "remote-backup-service"];
         }
         Redundant redundant = 17 [json_name = "redundant"];
      }
      repeated LacSession lac_session = 1 [json_name = "lac-session"];
   }
   LacSessions lac_sessions = 9 [json_name = "lac-sessions"];
   message LnsTunnels {
      message LnsTunnel {
         string slot_id = 1 [json_name = "slot-id"];
         uint32 local_id = 2 [json_name = "local-id"];
         uint32 remote_id = 3 [json_name = "remote-id"];
         string remote_name = 4 [json_name = "remote-name"];
         string status = 5 [json_name = "status"];
         uint32 l2tp_group_id = 6 [json_name = "l2tp-group-id"];
         uint32 sessions_number = 7 [json_name = "sessions-number"];
         uint32 hello_interval = 8 [json_name = "hello-interval"];
         string remote_protocol_version = 9 [json_name = "remote-protocol-version"];
         uint32 authentication = 10 [json_name = "authentication"];
         string remote_vendor_name = 11 [json_name = "remote-vendor-name"];
         uint32 send_window_lower_ward = 12 [json_name = "send-window-lower-ward"];
         uint32 received_window_lower_ward = 13 [json_name = "received-window-lower-ward"];
         uint32 received_window_size = 14 [json_name = "received-window-size"];
         uint32 peer_framing_cap = 15 [json_name = "peer-framing-cap"];
         string peer_ip_address = 16 [json_name = "peer-ip-address"];
         string source_ip_address = 17 [json_name = "source-ip-address"];
         uint32 port = 18 [json_name = "port"];
         uint32 delay_ack_timer = 19 [json_name = "delay-ack-timer"];
         uint32 idle_cut_timer = 20 [json_name = "idle-cut-timer"];
         uint32 hello_timer = 21 [json_name = "hello-timer"];
         uint32 ctl_ack_timeout_number = 22 [json_name = "ctl-ack-timeout-number"];
         uint32 ctl_out_of_seq = 23 [json_name = "ctl-out-of-seq"];
         uint32 ctl_out_of_window = 24 [json_name = "ctl-out-of-window"];
         uint32 session_limit = 25 [json_name = "session-limit"];
         uint32 radius_session_limit = 26 [json_name = "radius-session-limit"];
         uint32 outer_dscp = 27 [json_name = "outer-dscp"];
         message Statistics {
            uint32 received_packets = 1 [json_name = "received-packets"];
            uint32 received_zlb = 2 [json_name = "received-zlb"];
            uint32 send_fail = 3 [json_name = "send-fail"];
            uint32 send_packets = 4 [json_name = "send-packets"];
            uint32 send_zlb = 5 [json_name = "send-zlb"];
            uint32 received_hello = 6 [json_name = "received-hello"];
            uint32 send_hello = 7 [json_name = "send-hello"];
            uint32 up_packet_high = 8 [json_name = "up-packet-high"];
            uint32 up_packet_low = 9 [json_name = "up-packet-low"];
            uint32 up_byte_high = 10 [json_name = "up-byte-high"];
            uint32 up_byte_low = 11 [json_name = "up-byte-low"];
            uint32 down_packet_high = 12 [json_name = "down-packet-high"];
            uint32 down_packet_low = 13 [json_name = "down-packet-low"];
            uint32 down_byte_high = 14 [json_name = "down-byte-high"];
            uint32 down_byte_low = 15 [json_name = "down-byte-low"];
         }
         Statistics statistics = 28 [json_name = "statistics"];
         message Time {
            string start_date = 1 [json_name = "start-date"];
            string start_clock = 2 [json_name = "start-clock"];
            string continuance_length = 3 [json_name = "continuance-length"];
         }
         Time time = 29 [json_name = "time"];
         message Failover {
            enum ProtocolNegotiationStatus {
               ProtocolNegotiationStatus_DISABLE = 0;
               ProtocolNegotiationStatus_ENABLE = 1;
            };
            ProtocolNegotiationStatus protocol_negotiation_status = 1 [json_name = "protocol-negotiation-status"];
            uint32 self_function = 2 [json_name = "self-function"];
            uint32 self_capability = 3 [json_name = "self-capability"];
            uint32 self_recovery_time = 4 [json_name = "self-recovery-time"];
            uint32 peer_function = 5 [json_name = "peer-function"];
            uint32 peer_capability = 6 [json_name = "peer-capability"];
            uint32 peer_recovery_time = 7 [json_name = "peer-recovery-time"];
         }
         Failover failover = 30 [json_name = "failover"];
      }
      repeated LnsTunnel lns_tunnel = 1 [json_name = "lns-tunnel"];
   }
   LnsTunnels lns_tunnels = 10 [json_name = "lns-tunnels"];
   message LnsSessions {
      message LnsSession {
         string slot_id = 1 [json_name = "slot-id"];
         uint32 local_tunnel_id = 2 [json_name = "local-tunnel-id"];
         uint32 local_session_id = 3 [json_name = "local-session-id"];
         enum Status {
            Status_ESTABLISHING = 0;
            Status_UP = 1;
            Status_DOWN = 2;
         };
         Status status = 4 [json_name = "status"];
         uint32 l2tp_group_id = 5 [json_name = "l2tp-group-id"];
         uint32 remote_tunnel_id = 6 [json_name = "remote-tunnel-id"];
         uint32 remote_session_id = 7 [json_name = "remote-session-id"];
         string local_address = 8 [json_name = "local-address"];
         string remote_address = 9 [json_name = "remote-address"];
         uint32 sequence = 10 [json_name = "sequence"];
         uint32 peer_framing_type = 11 [json_name = "peer-framing-type"];
         int32 peer_bearer_type = 12 [json_name = "peer-bearer-type"];
         uint32 ppp_id = 13 [json_name = "ppp-id"];
         uint32 interface_id = 14 [json_name = "interface-id"];
         uint32 window_idle_timer = 15 [json_name = "window-idle-timer"];
         uint32 ctrl_call_ack_timer = 16 [json_name = "ctrl-call-ack-timer"];
         uint32 result_code = 17 [json_name = "result-code"];
         uint32 trace_id = 18 [json_name = "trace-id"];
         uint32 outer_dscp = 19 [json_name = "outer-dscp"];
         string calling_number = 20 [json_name = "calling-number"];
         uint32 user_id = 21 [json_name = "user-id"];
         string user_name = 22 [json_name = "user-name"];
      }
      repeated LnsSession lns_session = 1 [json_name = "lns-session"];
   }
   LnsSessions lns_sessions = 11 [json_name = "lns-sessions"];
   message UserUrpfs {
      message UserUrpf {
         string slot_id = 1 [json_name = "slot-id"];
         message Ipv4 {
            uint32 high = 1 [json_name = "high"];
            uint32 low = 2 [json_name = "low"];
         }
         Ipv4 ipv4 = 2 [json_name = "ipv4"];
         message Ipv6 {
            uint32 high = 1 [json_name = "high"];
            uint32 low = 2 [json_name = "low"];
         }
         Ipv6 ipv6 = 3 [json_name = "ipv6"];
      }
      repeated UserUrpf user_urpf = 1 [json_name = "user-urpf"];
   }
   UserUrpfs user_urpfs = 12 [json_name = "user-urpfs"];
   message SessionNumber {
      message Lacs {
         message Lac {
            string source_address = 1 [json_name = "source-address"];
            string vpn_name = 2 [json_name = "vpn-name"];
            uint32 number5 = 3 [json_name = "number"];
         }
         repeated Lac lac = 1 [json_name = "lac"];
      }
      Lacs lacs = 1 [json_name = "lacs"];
      message Lnses {
         message Lns {
            string source_address = 1 [json_name = "source-address"];
            string vpn_name = 2 [json_name = "vpn-name"];
            uint32 number5 = 3 [json_name = "number"];
         }
         repeated Lns lns = 1 [json_name = "lns"];
      }
      Lnses lnses = 2 [json_name = "lnses"];
      message Lnss {
         message Lns {
            string source_address = 1 [json_name = "source-address"];
            string vpn_name = 2 [json_name = "vpn-name"];
            uint32 number5 = 3 [json_name = "number"];
         }
         repeated Lns lns = 1 [json_name = "lns"];
      }
      Lnss lnss = 3 [json_name = "lnss"];
   }
   SessionNumber session_number = 13 [json_name = "session-number"];
   message LacTunnelStatistics {
      message LacTunnelStatistic {
         uint32 local_id = 1 [json_name = "local-id"];
         string l2tp_group_name = 2 [json_name = "l2tp-group-name"];
         string local_name = 3 [json_name = "local-name"];
         string local_ip_address = 4 [json_name = "local-ip-address"];
         string remote_ip_address = 5 [json_name = "remote-ip-address"];
         uint64 send_sccrq_number = 6 [json_name = "send-sccrq-number"];
         uint64 receive_sccrp_number = 7 [json_name = "receive-sccrp-number"];
         uint64 receive_sccrp_error_number = 8 [json_name = "receive-sccrp-error-number"];
         uint64 send_scccn_number = 9 [json_name = "send-scccn-number"];
         uint64 send_icrq_number = 10 [json_name = "send-icrq-number"];
         uint64 receive_stopccn_number = 11 [json_name = "receive-stopccn-number"];
         uint64 receive_stopccn_error_number = 12 [json_name = "receive-stopccn-error-number"];
         uint64 send_stopccn_number = 13 [json_name = "send-stopccn-number"];
         uint64 receive_icrp_number = 14 [json_name = "receive-icrp-number"];
         uint64 receive_icrp_error_number = 15 [json_name = "receive-icrp-error-number"];
         uint64 send_iccn_number = 16 [json_name = "send-iccn-number"];
         uint64 receive_cdn_number = 17 [json_name = "receive-cdn-number"];
         uint64 receive_cdn_error_number = 18 [json_name = "receive-cdn-error-number"];
         uint64 send_cdn_number = 19 [json_name = "send-cdn-number"];
         uint64 receive_hello_number = 20 [json_name = "receive-hello-number"];
         uint64 receive_hello_error_number = 21 [json_name = "receive-hello-error-number"];
         uint64 send_hello_number = 22 [json_name = "send-hello-number"];
         uint64 receive_zlb_number = 23 [json_name = "receive-zlb-number"];
         uint64 receive_zlb_error_number = 24 [json_name = "receive-zlb-error-number"];
         uint64 send_zlb_number = 25 [json_name = "send-zlb-number"];
         uint64 rx_packets = 26 [json_name = "rx-packets"];
         uint32 rx_packets_rate = 27 [json_name = "rx-packets-rate"];
         uint64 rx_octets = 28 [json_name = "rx-octets"];
         uint32 rx_octets_rate = 29 [json_name = "rx-octets-rate"];
         uint64 tx_packets = 30 [json_name = "tx-packets"];
         uint32 tx_packets_rate = 31 [json_name = "tx-packets-rate"];
         uint64 tx_octets = 32 [json_name = "tx-octets"];
         uint32 tx_octets_rate = 33 [json_name = "tx-octets-rate"];
      }
      repeated LacTunnelStatistic lac_tunnel_statistic = 1 [json_name = "lac-tunnel-statistic"];
   }
   LacTunnelStatistics lac_tunnel_statistics = 14 [json_name = "lac-tunnel-statistics"];
   message LnsTunnelStatistics {
      message LnsTunnelStatistic {
         uint32 local_id = 1 [json_name = "local-id"];
         string l2tp_group_name = 2 [json_name = "l2tp-group-name"];
         string local_name = 3 [json_name = "local-name"];
         string local_ip_address = 4 [json_name = "local-ip-address"];
         string remote_ip_address = 5 [json_name = "remote-ip-address"];
         uint64 receive_sccrq_number = 6 [json_name = "receive-sccrq-number"];
         uint64 receive_sccrq_error_number = 7 [json_name = "receive-sccrq-error-number"];
         uint64 send_sccrp_number = 8 [json_name = "send-sccrp-number"];
         uint64 receive_scccn_number = 9 [json_name = "receive-scccn-number"];
         uint64 receive_scccn_error_number = 10 [json_name = "receive-scccn-error-number"];
         uint64 receive_stopccn_number = 11 [json_name = "receive-stopccn-number"];
         uint64 receive_stopccn_error_number = 12 [json_name = "receive-stopccn-error-number"];
         uint64 send_stopccn_number = 13 [json_name = "send-stopccn-number"];
         uint64 receive_icrq_number = 14 [json_name = "receive-icrq-number"];
         uint64 receive_icrq_error_number = 15 [json_name = "receive-icrq-error-number"];
         uint64 send_icrp_number = 16 [json_name = "send-icrp-number"];
         uint64 receive_iccn_number = 17 [json_name = "receive-iccn-number"];
         uint64 receive_iccn_error_number = 18 [json_name = "receive-iccn-error-number"];
         uint64 receive_hello_number = 19 [json_name = "receive-hello-number"];
         uint64 receive_hello_error_number = 20 [json_name = "receive-hello-error-number"];
         uint64 send_hello_number = 21 [json_name = "send-hello-number"];
         uint64 receive_zlb_number = 22 [json_name = "receive-zlb-number"];
         uint64 receive_zlb_error_number = 23 [json_name = "receive-zlb-error-number"];
         uint64 send_zlb_number = 24 [json_name = "send-zlb-number"];
         uint64 rx_packets = 25 [json_name = "rx-packets"];
         uint32 rx_packets_rate = 26 [json_name = "rx-packets-rate"];
         uint64 rx_octets = 27 [json_name = "rx-octets"];
         uint32 rx_octets_rate = 28 [json_name = "rx-octets-rate"];
         uint64 tx_packets = 29 [json_name = "tx-packets"];
         uint32 tx_packets_rate = 30 [json_name = "tx-packets-rate"];
         uint64 tx_octets = 31 [json_name = "tx-octets"];
         uint32 tx_octets_rate = 32 [json_name = "tx-octets-rate"];
      }
      repeated LnsTunnelStatistic lns_tunnel_statistic = 1 [json_name = "lns-tunnel-statistic"];
   }
   LnsTunnelStatistics lns_tunnel_statistics = 15 [json_name = "lns-tunnel-statistics"];
   message LnsTunnelBackups {
      message LnsTunnelBackup {
         string slot_id = 1 [json_name = "slot-id"];
         uint32 local_id = 2 [json_name = "local-id"];
         uint32 remote_id = 3 [json_name = "remote-id"];
         uint32 port = 4 [json_name = "port"];
         uint32 session_number = 5 [json_name = "session-number"];
         string remote_name = 6 [json_name = "remote-name"];
         string remote_address = 7 [json_name = "remote-address"];
      }
      repeated LnsTunnelBackup lns_tunnel_backup = 1 [json_name = "lns-tunnel-backup"];
   }
   LnsTunnelBackups lns_tunnel_backups = 16 [json_name = "lns-tunnel-backups"];
   message LnsSessionBackups {
      message LnsSessionBackup {
         string slot_id = 1 [json_name = "slot-id"];
         uint32 local_tunnel_id = 2 [json_name = "local-tunnel-id"];
         uint32 local_session_id = 3 [json_name = "local-session-id"];
         uint32 remote_session_id = 4 [json_name = "remote-session-id"];
         uint32 remote_tunnel_id = 5 [json_name = "remote-tunnel-id"];
         uint32 user_id = 6 [json_name = "user-id"];
         string user_name = 7 [json_name = "user-name"];
      }
      repeated LnsSessionBackup lns_session_backup = 1 [json_name = "lns-session-backup"];
   }
   LnsSessionBackups lns_session_backups = 17 [json_name = "lns-session-backups"];
   message LnsStatistics {
      uint32 current_up_tunnel_num = 1 [json_name = "current-up-tunnel-num"];
      uint32 current_up_session_num = 2 [json_name = "current-up-session-num"];
      uint64 total_established_tunnel_num = 3 [json_name = "total-established-tunnel-num"];
      uint64 total_established_session_num = 4 [json_name = "total-established-session-num"];
      uint64 total_down_tunnel_num = 5 [json_name = "total-down-tunnel-num"];
      uint64 total_down_session_num = 6 [json_name = "total-down-session-num"];
   }
   LnsStatistics lns_statistics = 18 [json_name = "lns-statistics"];
   message LnsSessionCallingNumbers {
      message LnsSessionCallingNumber {
         string calling_number = 1 [json_name = "calling-number"];
         uint32 local_session_id = 2 [json_name = "local-session-id"];
         uint32 local_tunnel_id = 3 [json_name = "local-tunnel-id"];
         string status = 4 [json_name = "status"];
         uint32 l2tp_group_id = 5 [json_name = "l2tp-group-id"];
         uint32 remote_session_id = 6 [json_name = "remote-session-id"];
         uint32 sequence = 7 [json_name = "sequence"];
         uint32 peer_framing_type = 8 [json_name = "peer-framing-type"];
         int32 peer_bearer_type = 9 [json_name = "peer-bearer-type"];
         string authentication_name = 10 [json_name = "authentication-name"];
         string ppp_id = 11 [json_name = "ppp-id"];
         uint32 interface_id = 12 [json_name = "interface-id"];
         bool window_idle_timer_flag = 13 [json_name = "window-idle-timer-flag"];
         bool ctrl_call_ack_timer_flag = 14 [json_name = "ctrl-call-ack-timer-flag"];
         uint32 result_code = 15 [json_name = "result-code"];
         uint32 trace_id = 16 [json_name = "trace-id"];
         string outer_dscp = 17 [json_name = "outer-dscp"];
      }
      repeated LnsSessionCallingNumber lns_session_calling_number = 1 [json_name = "lns-session-calling-number"];
   }
   LnsSessionCallingNumbers lns_session_calling_numbers = 19 [json_name = "lns-session-calling-numbers"];
   message RuiStatistics {
      message Tunnel {
         uint32 establish_receive = 1 [json_name = "establish-receive"];
         uint32 teardown_receive = 2 [json_name = "teardown-receive"];
         uint32 establish_send = 3 [json_name = "establish-send"];
         uint32 teardown_send = 4 [json_name = "teardown-send"];
         uint32 hello_packet_send = 5 [json_name = "hello-packet-send"];
         uint32 zlb_packet_send = 6 [json_name = "zlb-packet-send"];
         uint32 hello_packet_receive = 7 [json_name = "hello-packet-receive"];
         uint32 zlb_packet_receive = 8 [json_name = "zlb-packet-receive"];
         uint32 peer_hello = 9 [json_name = "peer-hello"];
         uint32 peer_zlb = 10 [json_name = "peer-zlb"];
      }
      Tunnel tunnel = 1 [json_name = "tunnel"];
      message Session {
         uint32 establish_receive = 1 [json_name = "establish-receive"];
         uint32 teardown_receive = 2 [json_name = "teardown-receive"];
         uint32 establish_send = 3 [json_name = "establish-send"];
         uint32 teardown_send = 4 [json_name = "teardown-send"];
      }
      Session session = 2 [json_name = "session"];
      message LastestReceivedMessage {
         uint32 tunnel_drop = 1 [json_name = "tunnel-drop"];
         uint32 tunnel_update = 2 [json_name = "tunnel-update"];
         uint32 tunnel_create = 3 [json_name = "tunnel-create"];
         uint32 tunnel_teardown = 4 [json_name = "tunnel-teardown"];
         uint32 hello_or_zlb = 5 [json_name = "hello-or-zlb"];
         uint32 session_drop = 6 [json_name = "session-drop"];
         uint32 session_update = 7 [json_name = "session-update"];
         uint32 session_create = 8 [json_name = "session-create"];
         uint32 session_teardown = 9 [json_name = "session-teardown"];
      }
      LastestReceivedMessage lastest_received_message = 3 [json_name = "lastest-received-message"];
      message LastestTunnelRecords {
         message LastestTunnelRecord {
            uint32 index = 1 [json_name = "index"];
            uint32 local_id = 2 [json_name = "local-id"];
            uint32 remote_id = 3 [json_name = "remote-id"];
            enum Type {
               Type_LASTX_TUNNELX_DROP = 0;
               Type_LASTX_TUNNELX_UPDATE = 1;
               Type_LASTX_TUNNELX_CREATE = 2;
               Type_LASTX_TUNNELX_TEARDOWN = 3;
               Type_LASTX_HELLOX_ORX_ZLB = 4;
            };
            Type type = 4 [json_name = "type"];
            string date = 5 [json_name = "date"];
            string time = 6 [json_name = "time"];
            string peer_ip_address = 7 [json_name = "peer-ip-address"];
            string source_ip_address = 8 [json_name = "source-ip-address"];
            string l2tp_group_name = 9 [json_name = "l2tp-group-name"];
            uint32 old_life = 10 [json_name = "old-life"];
            uint32 new_life = 11 [json_name = "new-life"];
         }
         repeated LastestTunnelRecord lastest_tunnel_record = 1 [json_name = "lastest-tunnel-record"];
      }
      LastestTunnelRecords lastest_tunnel_records = 4 [json_name = "lastest-tunnel-records"];
      message LastestSessionRecords {
         message LastestSessionRecord {
            uint32 index = 1 [json_name = "index"];
            uint32 local_session_id = 2 [json_name = "local-session-id"];
            uint32 remote_session_id = 3 [json_name = "remote-session-id"];
            uint32 local_tunnel_id = 4 [json_name = "local-tunnel-id"];
            uint32 remote_tunnel_id = 5 [json_name = "remote-tunnel-id"];
            enum Type {
               INVALID_ENUM_VALUE_Type = 0;
               Type_LASTX_SESSIONX_DROP = 5;
               Type_LASTX_SESSIONX_UPDATE = 6;
               Type_LASTX_SESSIONX_CREATE = 7;
               Type_LASTX_SESSIONX_TEARDOWN = 8;
            };
            Type type = 6 [json_name = "type"];
            string date = 7 [json_name = "date"];
            string time = 8 [json_name = "time"];
            string peer_ip_address = 9 [json_name = "peer-ip-address"];
            string source_ip_address = 10 [json_name = "source-ip-address"];
            string l2tp_group_name = 11 [json_name = "l2tp-group-name"];
            string pppoe_session_mac = 12 [json_name = "pppoe-session-mac"];
            uint32 pppoe_session_id = 13 [json_name = "pppoe-session-id"];
         }
         repeated LastestSessionRecord lastest_session_record = 1 [json_name = "lastest-session-record"];
      }
      LastestSessionRecords lastest_session_records = 5 [json_name = "lastest-session-records"];
   }
   RuiStatistics rui_statistics = 20 [json_name = "rui-statistics"];
   message CuLacTunnels {
      message CuLacTunnel {
         uint32 up_id = 1 [json_name = "up-id"];
         uint32 local_id = 2 [json_name = "local-id"];
         string local_name = 3 [json_name = "local-name"];
         uint32 remote_id = 4 [json_name = "remote-id"];
         string remote_name = 5 [json_name = "remote-name"];
         string status = 6 [json_name = "status"];
         string local_ip_address = 7 [json_name = "local-ip-address"];
         uint32 local_port = 8 [json_name = "local-port"];
         string remote_ip_address = 9 [json_name = "remote-ip-address"];
         uint32 remote_port = 10 [json_name = "remote-port"];
         string recall_ip_address = 11 [json_name = "recall-ip-address"];
         uint32 vrf = 12 [json_name = "vrf"];
         message Time {
            string start_date = 1 [json_name = "start-date"];
            string start_clock = 2 [json_name = "start-clock"];
            string continuance_length = 3 [json_name = "continuance-length"];
         }
         Time time = 13 [json_name = "time"];
         message Config {
            uint32 hello_interval = 1 [json_name = "hello-interval"];
            uint32 session_limit = 2 [json_name = "session-limit"];
            bool per_user_enable = 3 [json_name = "per-user-enable"];
            uint32 timeout = 4 [json_name = "timeout"];
            uint32 local_receive_window = 5 [json_name = "local-receive-window"];
            uint32 remote_receive_window = 6 [json_name = "remote-receive-window"];
            bool is_blocked = 7 [json_name = "is-blocked"];
            uint32 outer_dscp = 8 [json_name = "outer-dscp"];
            string group_name = 9 [json_name = "group-name"];
         }
         Config config = 14 [json_name = "config"];
         message Radius {
            uint32 session_limit = 1 [json_name = "session-limit"];
            uint32 vrf = 2 [json_name = "vrf"];
            string assignment_id = 3 [json_name = "assignment-id"];
         }
         Radius radius = 15 [json_name = "radius"];
         message Statistics {
            uint32 active_session_num = 1 [json_name = "active-session-num"];
            uint32 control_sent_num = 2 [json_name = "control-sent-num"];
            uint32 control_receive_num = 3 [json_name = "control-receive-num"];
            uint32 retrans_mission_num = 4 [json_name = "retrans-mission-num"];
         }
         Statistics statistics = 16 [json_name = "statistics"];
         message DisasterRecovery {
            string bas_interface_name = 1 [json_name = "bas-interface-name"];
            string status = 2 [json_name = "status"];
            string register = 3 [json_name = "register"];
            uint32 life = 4 [json_name = "life"];
         }
         DisasterRecovery disaster_recovery = 17 [json_name = "disaster-recovery"];
         message FailureRecovery {
            enum Protocol {
               Protocol_DISABLE = 0;
               Protocol_ENABLE = 1;
            };
            Protocol protocol = 1 [json_name = "protocol"];
            uint32 local_function = 2 [json_name = "local-function"];
            uint32 local_capability = 3 [json_name = "local-capability"];
            uint32 local_recovery_time = 4 [json_name = "local-recovery-time"];
            uint32 peer_function = 5 [json_name = "peer-function"];
            uint32 peer_capability = 6 [json_name = "peer-capability"];
            uint32 peer_recovery_time = 7 [json_name = "peer-recovery-time"];
         }
         FailureRecovery failure_recovery = 18 [json_name = "failure-recovery"];
      }
      repeated CuLacTunnel cu_lac_tunnel = 1 [json_name = "cu-lac-tunnel"];
   }
   CuLacTunnels cu_lac_tunnels = 21 [json_name = "cu-lac-tunnels"];
   message CuLacSessions {
      message CuLacSession {
         uint32 up_id = 1 [json_name = "up-id"];
         uint32 local_tunnel_id = 2 [json_name = "local-tunnel-id"];
         uint32 local_session_id = 3 [json_name = "local-session-id"];
         uint32 remote_tunnel_id = 4 [json_name = "remote-tunnel-id"];
         uint32 remote_session_id = 5 [json_name = "remote-session-id"];
         string local_address = 6 [json_name = "local-address"];
         string remote_address = 7 [json_name = "remote-address"];
         string lns_reply_ip_address = 8 [json_name = "lns-reply-ip-address"];
         string local_tunnel_name = 9 [json_name = "local-tunnel-name"];
         string remote_tunnel_name = 10 [json_name = "remote-tunnel-name"];
         uint32 port = 11 [json_name = "port"];
         enum Status {
            Status_ESTABLISHING = 0;
            Status_UP = 1;
            Status_DOWN = 2;
         };
         Status status = 12 [json_name = "status"];
         uint32 serial_number = 13 [json_name = "serial-number"];
         uint32 id = 14 [json_name = "id"];
         string name = 15 [json_name = "name"];
         uint32 pppoe_id = 16 [json_name = "pppoe-id"];
         string mac_address = 17 [json_name = "mac-address"];
         message DisasterRecovery {
            string register = 1 [json_name = "register"];
            enum TrafficState {
               TrafficState_NORMAL = 0;
               TrafficState_ABNORMAL = 1;
            };
            TrafficState traffic_state = 2 [json_name = "traffic-state"];
            string state = 3 [json_name = "state"];
            string life = 4 [json_name = "life"];
            string forwarding_state = 5 [json_name = "forwarding-state"];
            string bas_interface_name = 6 [json_name = "bas-interface-name"];
         }
         DisasterRecovery disaster_recovery = 18 [json_name = "disaster-recovery"];
      }
      repeated CuLacSession cu_lac_session = 1 [json_name = "cu-lac-session"];
   }
   CuLacSessions cu_lac_sessions = 22 [json_name = "cu-lac-sessions"];
   message L2TpFailover {
      bool enable = 1 [json_name = "enable"];
   }
   L2TpFailover l2tp_failover = 23 [json_name = "l2tp-failover"];
   message DisasterStatistics {
      message DisasterStatistic {
         uint32 up_id = 1 [json_name = "up-id"];
         message Tunnel {
            uint32 establish_receive = 1 [json_name = "establish-receive"];
            uint32 teardown_receive = 2 [json_name = "teardown-receive"];
            uint32 establish_send = 3 [json_name = "establish-send"];
            uint32 teardown_send = 4 [json_name = "teardown-send"];
            uint32 hello_packet_send = 5 [json_name = "hello-packet-send"];
            uint32 zlb_packet_send = 6 [json_name = "zlb-packet-send"];
            uint32 hello_packet_receive = 7 [json_name = "hello-packet-receive"];
            uint32 zlb_packet_receive = 8 [json_name = "zlb-packet-receive"];
            uint32 peer_hello = 9 [json_name = "peer-hello"];
            uint32 peer_zlb = 10 [json_name = "peer-zlb"];
         }
         Tunnel tunnel = 2 [json_name = "tunnel"];
         message Session {
            uint32 establish_receive = 1 [json_name = "establish-receive"];
            uint32 teardown_receive = 2 [json_name = "teardown-receive"];
            uint32 establish_send = 3 [json_name = "establish-send"];
            uint32 teardown_send = 4 [json_name = "teardown-send"];
         }
         Session session = 3 [json_name = "session"];
         message LastestReceivedMessage {
            uint32 tunnel_drop = 1 [json_name = "tunnel-drop"];
            uint32 tunnel_update = 2 [json_name = "tunnel-update"];
            uint32 tunnel_create = 3 [json_name = "tunnel-create"];
            uint32 tunnel_teardown = 4 [json_name = "tunnel-teardown"];
            uint32 hello_or_zlb = 5 [json_name = "hello-or-zlb"];
            uint32 session_drop = 6 [json_name = "session-drop"];
            uint32 session_update = 7 [json_name = "session-update"];
            uint32 session_create = 8 [json_name = "session-create"];
            uint32 session_teardown = 9 [json_name = "session-teardown"];
         }
         LastestReceivedMessage lastest_received_message = 4 [json_name = "lastest-received-message"];
         message LastestTunnelRecords {
            message LastestTunnelRecord {
               uint32 index = 1 [json_name = "index"];
               uint32 local_id = 2 [json_name = "local-id"];
               uint32 remote_id = 3 [json_name = "remote-id"];
               enum Type {
                  Type_LASTX_TUNNELX_DROP = 0;
                  Type_LASTX_TUNNELX_UPDATE = 1;
                  Type_LASTX_TUNNELX_CREATE = 2;
                  Type_LASTX_TUNNELX_TEARDOWN = 3;
                  Type_LASTX_HELLOX_ORX_ZLB = 4;
               };
               Type type = 4 [json_name = "type"];
               string date = 5 [json_name = "date"];
               string time = 6 [json_name = "time"];
               string peer_ip_address = 7 [json_name = "peer-ip-address"];
               string source_ip_address = 8 [json_name = "source-ip-address"];
               string l2tp_group_name = 9 [json_name = "l2tp-group-name"];
               uint32 old_life = 10 [json_name = "old-life"];
               uint32 new_life = 11 [json_name = "new-life"];
            }
            repeated LastestTunnelRecord lastest_tunnel_record = 1 [json_name = "lastest-tunnel-record"];
         }
         LastestTunnelRecords lastest_tunnel_records = 5 [json_name = "lastest-tunnel-records"];
         message LastestSessionRecords {
            message LastestSessionRecord {
               uint32 index = 1 [json_name = "index"];
               uint32 local_session_id = 2 [json_name = "local-session-id"];
               uint32 remote_session_id = 3 [json_name = "remote-session-id"];
               uint32 local_tunnel_id = 4 [json_name = "local-tunnel-id"];
               uint32 remote_tunnel_id = 5 [json_name = "remote-tunnel-id"];
               enum Type {
                  INVALID_ENUM_VALUE_Type = 0;
                  Type_LASTX_SESSIONX_DROP = 5;
                  Type_LASTX_SESSIONX_UPDATE = 6;
                  Type_LASTX_SESSIONX_CREATE = 7;
                  Type_LASTX_SESSIONX_TEARDOWN = 8;
               };
               Type type = 6 [json_name = "type"];
               string date = 7 [json_name = "date"];
               string time = 8 [json_name = "time"];
               string peer_ip_address = 9 [json_name = "peer-ip-address"];
               string source_ip_address = 10 [json_name = "source-ip-address"];
               string l2tp_group_name = 11 [json_name = "l2tp-group-name"];
               string pppoe_session_mac = 12 [json_name = "pppoe-session-mac"];
               uint32 pppoe_session_id = 13 [json_name = "pppoe-session-id"];
            }
            repeated LastestSessionRecord lastest_session_record = 1 [json_name = "lastest-session-record"];
         }
         LastestSessionRecords lastest_session_records = 6 [json_name = "lastest-session-records"];
      }
      repeated DisasterStatistic disaster_statistic = 1 [json_name = "disaster-statistic"];
   }
   DisasterStatistics disaster_statistics = 24 [json_name = "disaster-statistics"];
   message PimSmStatistics {
      message LnsTunnelItems {
         message LnsTunnelItem {
            uint32 local_id = 1 [json_name = "local-id"];
            uint32 user_id = 2 [json_name = "user-id"];
            string user_name = 3 [json_name = "user-name"];
            string interface_name = 4 [json_name = "interface-name"];
            string ipv4_address = 5 [json_name = "ipv4-address"];
            string vpn_name = 6 [json_name = "vpn-name"];
            uint32 pe_vlan_id = 7 [json_name = "pe-vlan-id"];
            uint32 ce_vlan_id = 8 [json_name = "ce-vlan-id"];
            string ipv6_address = 9 [json_name = "ipv6-address"];
            enum AccessType {
               INVALID_ENUM_VALUE_AccessType = 0;
               AccessType_PPPOLNS = 10;
            };
            AccessType access_type = 10 [json_name = "access-type"];
         }
         repeated LnsTunnelItem lns_tunnel_item = 1 [json_name = "lns-tunnel-item"];
      }
      LnsTunnelItems lns_tunnel_items = 1 [json_name = "lns-tunnel-items"];
      message LnsTunnelSlots {
         message LnsTunnelSlot {
            string slot_id = 1 [json_name = "slot-id"];
            uint32 local_id = 2 [json_name = "local-id"];
            string remote_address = 3 [json_name = "remote-address"];
            uint32 total_session_number = 4 [json_name = "total-session-number"];
            uint32 pim_sm_session_number = 5 [json_name = "pim-sm-session-number"];
            string remote_name = 6 [json_name = "remote-name"];
         }
         repeated LnsTunnelSlot lns_tunnel_slot = 1 [json_name = "lns-tunnel-slot"];
      }
      LnsTunnelSlots lns_tunnel_slots = 2 [json_name = "lns-tunnel-slots"];
   }
   PimSmStatistics pim_sm_statistics = 25 [json_name = "pim-sm-statistics"];
   message CpLacTunnels {
      message CpLacTunnel {
         uint32 up_id = 1 [json_name = "up-id"];
         uint32 local_id = 2 [json_name = "local-id"];
         string local_name = 3 [json_name = "local-name"];
         uint32 remote_id = 4 [json_name = "remote-id"];
         string remote_name = 5 [json_name = "remote-name"];
         string bas_interface_name = 6 [json_name = "bas-interface-name"];
         string status = 7 [json_name = "status"];
         string local_ip_address = 8 [json_name = "local-ip-address"];
         uint32 local_port = 9 [json_name = "local-port"];
         string remote_ip_address = 10 [json_name = "remote-ip-address"];
         uint32 remote_port = 11 [json_name = "remote-port"];
         string recall_ip_address = 12 [json_name = "recall-ip-address"];
         uint32 vrf = 13 [json_name = "vrf"];
         message Time {
            string start_date = 1 [json_name = "start-date"];
            string start_clock = 2 [json_name = "start-clock"];
            string continuance_length = 3 [json_name = "continuance-length"];
         }
         Time time = 14 [json_name = "time"];
         message Config {
            uint32 hello_interval = 1 [json_name = "hello-interval"];
            uint32 session_limit = 2 [json_name = "session-limit"];
            bool per_user_enable = 3 [json_name = "per-user-enable"];
            uint32 timeout = 4 [json_name = "timeout"];
            uint32 local_receive_window = 5 [json_name = "local-receive-window"];
            uint32 remote_receive_window = 6 [json_name = "remote-receive-window"];
            bool is_blocked = 7 [json_name = "is-blocked"];
            uint32 outer_dscp = 8 [json_name = "outer-dscp"];
            string group_name = 9 [json_name = "group-name"];
         }
         Config config = 15 [json_name = "config"];
         message Radius {
            uint32 session_limit = 1 [json_name = "session-limit"];
            uint32 vrf = 2 [json_name = "vrf"];
            string assignment_id = 3 [json_name = "assignment-id"];
         }
         Radius radius = 16 [json_name = "radius"];
         message Statistics {
            uint32 active_session_num = 1 [json_name = "active-session-num"];
            uint32 control_sent_num = 2 [json_name = "control-sent-num"];
            uint32 control_receive_num = 3 [json_name = "control-receive-num"];
            uint32 retrans_mission_num = 4 [json_name = "retrans-mission-num"];
            uint32 local_receive_buff = 5 [json_name = "local-receive-buff"];
            uint32 remote_receive_buff = 6 [json_name = "remote-receive-buff"];
         }
         Statistics statistics = 17 [json_name = "statistics"];
         message Failover {
            enum ProtocolNegotiationStatus {
               ProtocolNegotiationStatus_DISABLE = 0;
               ProtocolNegotiationStatus_ENABLE = 1;
            };
            ProtocolNegotiationStatus protocol_negotiation_status = 1 [json_name = "protocol-negotiation-status"];
            uint32 self_function = 2 [json_name = "self-function"];
            uint32 self_capability = 3 [json_name = "self-capability"];
            uint32 self_recovery_time = 4 [json_name = "self-recovery-time"];
            uint32 peer_function = 5 [json_name = "peer-function"];
            uint32 peer_capability = 6 [json_name = "peer-capability"];
            uint32 peer_recovery_time = 7 [json_name = "peer-recovery-time"];
            enum CurrentStatus {
               CurrentStatus_NOX_FAILOVER = 0;
               CurrentStatus_WAITINGX_FAILOVER = 1;
               CurrentStatus_DOINGX_FAILOVER = 2;
               CurrentStatus_DONEX_FAILOVER = 3;
            };
            CurrentStatus current_status = 8 [json_name = "current-status"];
            uint32 recovery_local_id = 9 [json_name = "recovery-local-id"];
            uint32 recovery_remote_id = 10 [json_name = "recovery-remote-id"];
         }
         Failover failover = 18 [json_name = "failover"];
         message Disaster {
            string register = 1 [json_name = "register"];
            string status = 2 [json_name = "status"];
            uint32 life = 3 [json_name = "life"];
         }
         Disaster disaster = 19 [json_name = "disaster"];
      }
      repeated CpLacTunnel cp_lac_tunnel = 1 [json_name = "cp-lac-tunnel"];
   }
   CpLacTunnels cp_lac_tunnels = 26 [json_name = "cp-lac-tunnels"];
   message CpLacSessions {
      message CpLacSession {
         uint32 up_id = 1 [json_name = "up-id"];
         uint32 local_tunnel_id = 2 [json_name = "local-tunnel-id"];
         uint32 local_session_id = 3 [json_name = "local-session-id"];
         uint32 remote_tunnel_id = 4 [json_name = "remote-tunnel-id"];
         uint32 remote_session_id = 5 [json_name = "remote-session-id"];
         string local_address = 6 [json_name = "local-address"];
         string remote_address = 7 [json_name = "remote-address"];
         string lns_reply_ip_address = 8 [json_name = "lns-reply-ip-address"];
         string local_tunnel_name = 9 [json_name = "local-tunnel-name"];
         string remote_tunnel_name = 10 [json_name = "remote-tunnel-name"];
         uint32 port = 11 [json_name = "port"];
         enum Status {
            Status_NORMAL = 0;
            Status_ABNORMAL = 1;
         };
         Status status = 12 [json_name = "status"];
         uint32 serial_number = 13 [json_name = "serial-number"];
         message User {
            uint32 id = 1 [json_name = "id"];
            string name = 2 [json_name = "name"];
            uint32 pppoe_id = 3 [json_name = "pppoe-id"];
            string mac_address = 4 [json_name = "mac-address"];
         }
         User user = 14 [json_name = "user"];
         message Disaster {
            string register = 1 [json_name = "register"];
            string state = 2 [json_name = "state"];
            string life = 3 [json_name = "life"];
            string forwarding_state = 4 [json_name = "forwarding-state"];
         }
         Disaster disaster = 15 [json_name = "disaster"];
      }
      repeated CpLacSession cp_lac_session = 1 [json_name = "cp-lac-session"];
   }
   CpLacSessions cp_lac_sessions = 27 [json_name = "cp-lac-sessions"];
   message PimSmTunnel {
      message Lacs {
         message Lac {
            uint32 local_id = 1 [json_name = "local-id"];
            uint32 user_id = 2 [json_name = "user-id"];
            string user_name = 3 [json_name = "user-name"];
            string interface_name = 4 [json_name = "interface-name"];
            string ipv4_address = 5 [json_name = "ipv4-address"];
            string vpn_name = 6 [json_name = "vpn-name"];
            uint32 pe_vlan_id = 7 [json_name = "pe-vlan-id"];
            uint32 ce_vlan_id = 8 [json_name = "ce-vlan-id"];
            string ipv6_address = 9 [json_name = "ipv6-address"];
            enum AccessType {
               INVALID_ENUM_VALUE_AccessType = 0;
               AccessType_PPPOLNS = 10;
            };
            AccessType access_type = 10 [json_name = "access-type"];
         }
         repeated Lac lac = 1 [json_name = "lac"];
      }
      Lacs lacs = 1 [json_name = "lacs"];
      message Lnss {
         message Lns {
            string slot_id = 1 [json_name = "slot-id"];
            uint32 local_id = 2 [json_name = "local-id"];
            string remote_address = 3 [json_name = "remote-address"];
            uint32 total_session_number = 4 [json_name = "total-session-number"];
            uint32 pim_sm_session_number = 5 [json_name = "pim-sm-session-number"];
            string remote_name = 6 [json_name = "remote-name"];
         }
         repeated Lns lns = 1 [json_name = "lns"];
      }
      Lnss lnss = 2 [json_name = "lnss"];
   }
   PimSmTunnel pim_sm_tunnel = 28 [json_name = "pim-sm-tunnel"];
   message CpLnsStatistics {
      message CpLnsStatistic {
         uint32 up_group = 1 [json_name = "up-group"];
         uint32 current_up_tunnel_num = 2 [json_name = "current-up-tunnel-num"];
         uint32 current_up_session_num = 3 [json_name = "current-up-session-num"];
         uint64 total_established_tunnel_num = 4 [json_name = "total-established-tunnel-num"];
         uint64 total_established_session_num = 5 [json_name = "total-established-session-num"];
         uint64 total_down_tunnel_num = 6 [json_name = "total-down-tunnel-num"];
         uint64 total_down_session_num = 7 [json_name = "total-down-session-num"];
         string upmng_instance = 8 [json_name = "upmng-instance"];
      }
      repeated CpLnsStatistic cp_lns_statistic = 1 [json_name = "cp-lns-statistic"];
   }
   CpLnsStatistics cp_lns_statistics = 29 [json_name = "cp-lns-statistics"];
   message CpDisasterStatisticss {
      message CpDisasterStatistics {
         uint32 up_id = 1 [json_name = "up-id"];
         message Tunnel {
            uint32 establish_receive = 1 [json_name = "establish-receive"];
            uint32 teardown_receive = 2 [json_name = "teardown-receive"];
            uint32 establish_send = 3 [json_name = "establish-send"];
            uint32 teardown_send = 4 [json_name = "teardown-send"];
            uint32 hello_packet_send = 5 [json_name = "hello-packet-send"];
            uint32 zlb_packet_send = 6 [json_name = "zlb-packet-send"];
            uint32 hello_packet_receive = 7 [json_name = "hello-packet-receive"];
            uint32 zlb_packet_receive = 8 [json_name = "zlb-packet-receive"];
            uint32 peer_hello = 9 [json_name = "peer-hello"];
            uint32 peer_zlb = 10 [json_name = "peer-zlb"];
         }
         Tunnel tunnel = 2 [json_name = "tunnel"];
         message Session {
            uint32 establish_receive = 1 [json_name = "establish-receive"];
            uint32 teardown_receive = 2 [json_name = "teardown-receive"];
            uint32 establish_send = 3 [json_name = "establish-send"];
            uint32 teardown_send = 4 [json_name = "teardown-send"];
         }
         Session session = 3 [json_name = "session"];
         message LastestReceivedMessage {
            uint32 tunnel_drop = 1 [json_name = "tunnel-drop"];
            uint32 tunnel_update = 2 [json_name = "tunnel-update"];
            uint32 tunnel_create = 3 [json_name = "tunnel-create"];
            uint32 tunnel_teardown = 4 [json_name = "tunnel-teardown"];
            uint32 hello_or_zlb = 5 [json_name = "hello-or-zlb"];
            uint32 session_drop = 6 [json_name = "session-drop"];
            uint32 session_update = 7 [json_name = "session-update"];
            uint32 session_create = 8 [json_name = "session-create"];
            uint32 session_teardown = 9 [json_name = "session-teardown"];
         }
         LastestReceivedMessage lastest_received_message = 4 [json_name = "lastest-received-message"];
         message LastestTunnelRecords {
            message LastestTunnelRecord {
               uint32 index = 1 [json_name = "index"];
               uint32 local_id = 2 [json_name = "local-id"];
               uint32 remote_id = 3 [json_name = "remote-id"];
               enum Type {
                  Type_LASTX_TUNNELX_DROP = 0;
                  Type_LASTX_TUNNELX_UPDATE = 1;
                  Type_LASTX_TUNNELX_CREATE = 2;
                  Type_LASTX_TUNNELX_TEARDOWN = 3;
                  Type_LASTX_HELLOX_ORX_ZLB = 4;
               };
               Type type = 4 [json_name = "type"];
               string date = 5 [json_name = "date"];
               string time = 6 [json_name = "time"];
               string peer_ip_address = 7 [json_name = "peer-ip-address"];
               string source_ip_address = 8 [json_name = "source-ip-address"];
               string l2tp_group_name = 9 [json_name = "l2tp-group-name"];
               uint32 old_life = 10 [json_name = "old-life"];
               uint32 new_life = 11 [json_name = "new-life"];
            }
            repeated LastestTunnelRecord lastest_tunnel_record = 1 [json_name = "lastest-tunnel-record"];
         }
         LastestTunnelRecords lastest_tunnel_records = 5 [json_name = "lastest-tunnel-records"];
         message LastestSessionRecords {
            message LastestSessionRecord {
               uint32 index = 1 [json_name = "index"];
               uint32 local_session_id = 2 [json_name = "local-session-id"];
               uint32 remote_session_id = 3 [json_name = "remote-session-id"];
               uint32 local_tunnel_id = 4 [json_name = "local-tunnel-id"];
               uint32 remote_tunnel_id = 5 [json_name = "remote-tunnel-id"];
               enum Type {
                  INVALID_ENUM_VALUE_Type = 0;
                  Type_LASTX_SESSIONX_DROP = 5;
                  Type_LASTX_SESSIONX_UPDATE = 6;
                  Type_LASTX_SESSIONX_CREATE = 7;
                  Type_LASTX_SESSIONX_TEARDOWN = 8;
               };
               Type type = 6 [json_name = "type"];
               string date = 7 [json_name = "date"];
               string time = 8 [json_name = "time"];
               string peer_ip_address = 9 [json_name = "peer-ip-address"];
               string source_ip_address = 10 [json_name = "source-ip-address"];
               string l2tp_group_name = 11 [json_name = "l2tp-group-name"];
               string pppoe_session_mac = 12 [json_name = "pppoe-session-mac"];
               uint32 pppoe_session_id = 13 [json_name = "pppoe-session-id"];
            }
            repeated LastestSessionRecord lastest_session_record = 1 [json_name = "lastest-session-record"];
         }
         LastestSessionRecords lastest_session_records = 6 [json_name = "lastest-session-records"];
      }
      repeated CpDisasterStatistics cp_disaster_statistics = 1 [json_name = "cp-disaster-statistics"];
   }
   CpDisasterStatisticss cp_disaster_statisticss = 30 [json_name = "cp-disaster-statisticss"];
}

