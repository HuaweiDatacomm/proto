syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-09-01 20:16:01
// ProtoYang-version 1
// module huawei-sflow
// revision 2021-02-01
// revision 2020-03-11
// namespace urn:huawei:yang:huawei-sflow

package huawei_sflow;

message Sflow {
   message SflowEnable {
      message Global {
         string agent_ipv4_address = 1 [json_name = "agent-ipv4-address"];
         string agent_ipv6_address = 2 [json_name = "agent-ipv6-address"];
         enum ExtendedRouteData {
            ExtendedRouteData_ENABLE = 0;
            ExtendedRouteData_DISABLE = 1;
         };
         ExtendedRouteData extended_route_data = 3 [json_name = "extended-route-data"];
         string source_ipv4_address = 4 [json_name = "source-ipv4-address"];
         string source_ipv6_address = 5 [json_name = "source-ipv6-address"];
      }
      Global global = 1 [json_name = "global"];
      message Collectors {
         message Collector {
            uint32 collector_id = 1 [json_name = "collector-id"];
            uint32 max_packet_length = 2 [json_name = "max-packet-length"];
            message IpServer {
               message IpType_Ipv4Address {
                  string ipv4_address = 1 [json_name = "ipv4-address"];
               }
               message IpType_Ipv6Address {
                  string ipv6_address = 1 [json_name = "ipv6-address"];
               }
               oneof IpType {
                  IpType_Ipv4Address ip_type_ipv4_address = 1 [json_name = "ipv4-address"];
                  IpType_Ipv6Address ip_type_ipv6_address = 2 [json_name = "ipv6-address"];
               }
               string vpn_name = 3 [json_name = "vpn-name"];
               uint32 udp_port = 4 [json_name = "udp-port"];
               uint32 dscp_value = 5 [json_name = "dscp-value"];
            }
            IpServer ip_server = 3 [json_name = "ip-server"];
            string description = 4 [json_name = "description"];
         }
         repeated Collector collector = 1 [json_name = "collector"];
      }
      Collectors collectors = 2 [json_name = "collectors"];
   }
   SflowEnable sflow_enable = 1 [json_name = "sflow-enable"];
   message SlotStatistics {
      message SlotStatistic {
         string slot_id = 1 [json_name = "slot-id"];
         uint32 collector_id = 2 [json_name = "collector-id"];
         uint64 packet_count = 3 [json_name = "packet-count"];
         uint64 flow_sample_count = 4 [json_name = "flow-sample-count"];
         uint64 inbound_flow_sample_count = 5 [json_name = "inbound-flow-sample-count"];
         uint64 outbound_flow_sample_count = 6 [json_name = "outbound-flow-sample-count"];
         uint64 counter_sample_count = 7 [json_name = "counter-sample-count"];
      }
      repeated SlotStatistic slot_statistic = 1 [json_name = "slot-statistic"];
   }
   SlotStatistics slot_statistics = 2 [json_name = "slot-statistics"];
   message InterfaceStatistics {
      message InterfaceStatistic {
         string interface_name = 1 [json_name = "interface-name"];
         enum Direction {
            Direction_INBOUND = 0;
            Direction_OUTBOUND = 1;
         };
         Direction direction = 2 [json_name = "direction"];
         string slot_id = 3 [json_name = "slot-id"];
         uint64 flow_sample_count = 4 [json_name = "flow-sample-count"];
      }
      repeated InterfaceStatistic interface_statistic = 1 [json_name = "interface-statistic"];
   }
   InterfaceStatistics interface_statistics = 3 [json_name = "interface-statistics"];
}

