syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2022-09-23 15:37:15
// ProtoYang-version 1
// module huawei-sec-healthcheck
// revision 2022-08-17
// namespace urn:huawei:yang:huawei-sec-healthcheck

package huawei_sec_healthcheck;

message SecHealthcheck {
   message Global {
      bool enable = 1 [json_name = "enable"];
      string domain_name = 2 [json_name = "domain-name"];
   }
   Global global = 1 [json_name = "global"];
   message Instances {
      message Instance {
         string name = 1 [json_name = "name"];
         uint32 least_active_link = 2 [json_name = "least-active-link"];
         uint32 failed_times = 3 [json_name = "failed-times"];
         uint32 interval = 4 [json_name = "interval"];
         string source_ip = 5 [json_name = "source-ip"];
         bool check_if_consistency = 6 [json_name = "check-if-consistency"];
         string vpn_instance = 7 [json_name = "vpn-instance"];
         message DestinationIps {
            message DestinationIp {
               string ip = 1 [json_name = "ip"];
               enum Protocol {
                  INVALID_ENUM_VALUE_Protocol = 0;
                  Protocol_DNS = 1;
                  Protocol_HTTP = 2;
                  Protocol_ICMP = 3;
                  Protocol_RADIUS = 4;
                  Protocol_TCP = 5;
                  Protocol_ICMP6 = 6;
               };
               Protocol protocol = 2 [json_name = "protocol"];
               string next_hop = 3 [json_name = "next-hop"];
               string interface = 4 [json_name = "interface"];
               uint32 port = 5 [json_name = "port"];
            }
            repeated DestinationIp destination_ip = 1 [json_name = "destination-ip"];
         }
         DestinationIps destination_ips = 8 [json_name = "destination-ips"];
         message DestinationDomains {
            message DestinationDomain {
               string domain_name = 1 [json_name = "domain-name"];
               enum Protocol {
                  INVALID_ENUM_VALUE_Protocol = 0;
                  Protocol_DNS = 1;
                  Protocol_HTTP = 2;
                  Protocol_ICMP = 3;
                  Protocol_RADIUS = 4;
                  Protocol_TCP = 5;
                  Protocol_ICMP6 = 6;
               };
               Protocol protocol = 2 [json_name = "protocol"];
               string next_hop = 3 [json_name = "next-hop"];
               string interface = 4 [json_name = "interface"];
               uint32 port = 5 [json_name = "port"];
            }
            repeated DestinationDomain destination_domain = 1 [json_name = "destination-domain"];
         }
         DestinationDomains destination_domains = 9 [json_name = "destination-domains"];
      }
      repeated Instance instance = 1 [json_name = "instance"];
   }
   Instances instances = 2 [json_name = "instances"];
   message SlaInstances {
      message SlaInstance {
         string name = 1 [json_name = "name"];
         uint32 delay = 2 [json_name = "delay"];
         uint32 jitter = 3 [json_name = "jitter"];
         uint32 loss = 4 [json_name = "loss"];
      }
      repeated SlaInstance sla_instance = 1 [json_name = "sla-instance"];
   }
   SlaInstances sla_instances = 3 [json_name = "sla-instances"];
}

