syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2022-01-30 10:58:47
// ProtoYang-version 1
// module huawei-bras-http-redirect
// revision 2022-01-27
// revision 2020-04-21
// revision 2020-03-27
// revision 2020-02-22
// revision 2020-01-20
// revision 2019-12-31
// revision 2019-12-27
// revision 2019-11-11
// revision 2019-04-16
// namespace urn:huawei:yang:huawei-bras-http-redirect

package huawei_bras_http_redirect;

message BrasHttpRedirect {
   message WebUrlProfiles {
      message WebUrlProfile {
         string name = 1 [json_name = "name"];
         message Url {
            string content = 1 [json_name = "content"];
         }
         Url url = 2 [json_name = "url"];
      }
      repeated WebUrlProfile web_url_profile = 1 [json_name = "web-url-profile"];
   }
   WebUrlProfiles web_url_profiles = 1 [json_name = "web-url-profiles"];
   message UrlOrDnss {
      message UrlOrDns {
         string url_string = 1 [json_name = "url-string"];
         bool deny_or_permit = 2 [json_name = "deny-or-permit"];
         message UrlDenyCounts {
            message UrlDenyCount {
               string slot_id = 1 [json_name = "slot-id"];
               uint32 deny_count = 2 [json_name = "deny-count"];
            }
            repeated UrlDenyCount url_deny_count = 1 [json_name = "url-deny-count"];
         }
         UrlDenyCounts url_deny_counts = 3 [json_name = "url-deny-counts"];
      }
      repeated UrlOrDns url_or_dns = 1 [json_name = "url-or-dns"];
   }
   UrlOrDnss url_or_dnss = 2 [json_name = "url-or-dnss"];
   message HttpRedirectProfiles {
      message HttpRedirectProfile {
         string name = 1 [json_name = "name"];
         enum WorkMode {
            INVALID_ENUM_VALUE_WorkMode = 0;
            WorkMode_GET = 1;
            WorkMode_POST = 2;
         };
         WorkMode work_mode = 2 [json_name = "work-mode"];
         string url = 3 [json_name = "url"];
         uint32 push_times = 4 [json_name = "push-times"];
         string user_ip_address_keyword = 5 [json_name = "user-ip-address-keyword"];
         enum UserIpEncryptAlgorithm {
            UserIpEncryptAlgorithm_SIMPLE = 0;
            UserIpEncryptAlgorithm_AES256X_GCM = 1;
         };
         UserIpEncryptAlgorithm user_ip_encrypt_algorithm = 6 [json_name = "user-ip-encrypt-algorithm"];
         string user_ip_encrypt_key = 7 [json_name = "user-ip-encrypt-key"];
      }
      repeated HttpRedirectProfile http_redirect_profile = 1 [json_name = "http-redirect-profile"];
   }
   HttpRedirectProfiles http_redirect_profiles = 3 [json_name = "http-redirect-profiles"];
   message PortalAgeTime {
      uint32 value = 1 [json_name = "value"];
   }
   PortalAgeTime portal_age_time = 4 [json_name = "portal-age-time"];
}

