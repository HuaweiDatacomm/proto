syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2022-09-26 17:42:32
// ProtoYang-version 1
// module huawei-wlan-ap
// revision 2022-08-19
// revision 2022-07-14
// revision 2022-07-05
// revision 2022-06-15
// revision 2022-04-08
// namespace urn:huawei:yang:huawei-wlan-ap

package huawei_wlan_ap;

message WlanAp {
   enum ApAuthMode {
      ApAuthMode_MAC = 0;
      ApAuthMode_SN = 1;
      ApAuthMode_NOX_AUTH = 2;
   };
   ApAuthMode ap_auth_mode = 1 [json_name = "ap-auth-mode"];
   message ApMacWhitelists {
      message ApMacWhitelist {
         string ap_mac = 1 [json_name = "ap-mac"];
      }
      repeated ApMacWhitelist ap_mac_whitelist = 1 [json_name = "ap-mac-whitelist"];
   }
   ApMacWhitelists ap_mac_whitelists = 2 [json_name = "ap-mac-whitelists"];
   message ApSnWhitelists {
      message ApSnWhitelist {
         string ap_sn = 1 [json_name = "ap-sn"];
      }
      repeated ApSnWhitelist ap_sn_whitelist = 1 [json_name = "ap-sn-whitelist"];
   }
   ApSnWhitelists ap_sn_whitelists = 3 [json_name = "ap-sn-whitelists"];
   message ApMacBlacklists {
      message ApMacBlacklist {
         string ap_mac = 1 [json_name = "ap-mac"];
      }
      repeated ApMacBlacklist ap_mac_blacklist = 1 [json_name = "ap-mac-blacklist"];
   }
   ApMacBlacklists ap_mac_blacklists = 4 [json_name = "ap-mac-blacklists"];
   message ApUserPassword {
      string user_name = 1 [json_name = "user-name"];
      string password = 2 [json_name = "password"];
   }
   ApUserPassword ap_user_password = 5 [json_name = "ap-user-password"];
   message ApTypes {
      message ApType {
         string type_name = 1 [json_name = "type-name"];
         uint32 type_id = 2 [json_name = "type-id"];
         enum State {
            State_DEFAULT = 0;
            State_CONFIGURED = 1;
         };
         State state = 3 [json_name = "state"];
      }
      repeated ApType ap_type = 1 [json_name = "ap-type"];
   }
   ApTypes ap_types = 6 [json_name = "ap-types"];
   string temp_mgmt_psk = 7 [json_name = "temp-mgmt-psk"];
   message ApInstances {
      message ApInstance {
         uint32 ap_id = 1 [json_name = "ap-id"];
         string ap_mac = 2 [json_name = "ap-mac"];
         string ap_sn = 3 [json_name = "ap-sn"];
         string ap_type = 4 [json_name = "ap-type"];
         string ap_name = 5 [json_name = "ap-name"];
         message BindingGroup {
            string binding_group = 1 [json_name = "binding-group"];
         }
         BindingGroup binding_group = 6 [json_name = "binding-group"];
         message RadioInstances {
            message RadioInstance {
               uint32 radio_id = 1 [json_name = "radio-id"];
               uint32 eirp = 2 [json_name = "eirp"];
               message ChannelInfo {
                  message Bandwidth_Bandwidth20Mhz {
                     bool bandwidth_20mhz = 1 [json_name = "bandwidth-20mhz"];
                  }
                  message Bandwidth_Bandwidth40MhzMinus {
                     bool bandwidth_40mhz_minus = 1 [json_name = "bandwidth-40mhz-minus"];
                  }
                  message Bandwidth_Bandwidth40MhzPlus {
                     bool bandwidth_40mhz_plus = 1 [json_name = "bandwidth-40mhz-plus"];
                  }
                  message Bandwidth_Bandwidth80Mhz {
                     bool bandwidth_80mhz = 1 [json_name = "bandwidth-80mhz"];
                  }
                  message Bandwidth_Bandwidth80Plus80Mhz {
                     bool bandwidth_80plus80mhz = 1 [json_name = "bandwidth-80plus80mhz"];
                  }
                  message Bandwidth_Bandwidth160Mhz {
                     bool bandwidth_160mhz = 1 [json_name = "bandwidth-160mhz"];
                  }
                  oneof Bandwidth {
                     Bandwidth_Bandwidth20Mhz bandwidth_bandwidth_20mhz = 1 [json_name = "bandwidth-20mhz"];
                     Bandwidth_Bandwidth40MhzMinus bandwidth_bandwidth_40mhz_minus = 2 [json_name = "bandwidth-40mhz-minus"];
                     Bandwidth_Bandwidth40MhzPlus bandwidth_bandwidth_40mhz_plus = 3 [json_name = "bandwidth-40mhz-plus"];
                     Bandwidth_Bandwidth80Mhz bandwidth_bandwidth_80mhz = 4 [json_name = "bandwidth-80mhz"];
                     Bandwidth_Bandwidth80Plus80Mhz bandwidth_bandwidth_80plus80mhz = 5 [json_name = "bandwidth-80plus80mhz"];
                     Bandwidth_Bandwidth160Mhz bandwidth_bandwidth_160mhz = 6 [json_name = "bandwidth-160mhz"];
                  }
                  uint32 channel = 7 [json_name = "channel"];
               }
               ChannelInfo channel_info = 3 [json_name = "channel-info"];
               enum AutoChannelSelect {
                  AutoChannelSelect_ENABLE = 0;
                  AutoChannelSelect_DISABLE = 1;
                  AutoChannelSelect_NOCFG = 2;
               };
               AutoChannelSelect auto_channel_select = 4 [json_name = "auto-channel-select"];
               enum AutoTxpowerSelect {
                  AutoTxpowerSelect_ENABLE = 0;
                  AutoTxpowerSelect_DISABLE = 1;
                  AutoTxpowerSelect_NOCFG = 2;
               };
               AutoTxpowerSelect auto_txpower_select = 5 [json_name = "auto-txpower-select"];
               enum Frequency {
                  Frequency_NONE = 0;
                  Frequency_X_2G = 1;
                  Frequency_X_5G = 2;
                  Frequency_X_6G = 3;
               };
               Frequency frequency = 6 [json_name = "frequency"];
               enum AutoBandwidthSelect {
                  AutoBandwidthSelect_NONE = 0;
                  AutoBandwidthSelect_DISABLE = 1;
                  AutoBandwidthSelect_ENABLE = 2;
               };
               AutoBandwidthSelect auto_bandwidth_select = 7 [json_name = "auto-bandwidth-select"];
               message BindingRadio2GInstance {
                  string binding_radio_2g_profile = 1 [json_name = "binding-radio-2g-profile"];
               }
               BindingRadio2GInstance binding_radio_2g_instance = 8 [json_name = "binding-radio-2g-instance"];
               message BindingRadio5GInstance {
                  string binding_radio_5g_profile = 1 [json_name = "binding-radio-5g-profile"];
               }
               BindingRadio5GInstance binding_radio_5g_instance = 9 [json_name = "binding-radio-5g-instance"];
               message VapInstances {
                  message VapInstance {
                     uint32 wlan_id = 1 [json_name = "wlan-id"];
                     string binding_vap_profile = 2 [json_name = "binding-vap-profile"];
                     message ServiceVlan {
                        uint32 service_vlan_id = 1 [json_name = "service-vlan-id"];
                        string service_vlan_pool = 2 [json_name = "service-vlan-pool"];
                     }
                     ServiceVlan service_vlan = 3 [json_name = "service-vlan"];
                  }
                  repeated VapInstance vap_instance = 1 [json_name = "vap-instance"];
               }
               VapInstances vap_instances = 10 [json_name = "vap-instances"];
               enum RadioSwitch {
                  RadioSwitch_DISABLE = 0;
                  RadioSwitch_ENABLE = 1;
               };
               RadioSwitch radio_switch = 11 [json_name = "radio-switch"];
               enum FlexibleRadio {
                  FlexibleRadio_DISABLE = 0;
                  FlexibleRadio_ENABLE = 1;
               };
               FlexibleRadio flexible_radio = 12 [json_name = "flexible-radio"];
               enum ChannelMonitor {
                  ChannelMonitor_DISABLE = 0;
                  ChannelMonitor_ENABLE = 1;
               };
               ChannelMonitor channel_monitor = 13 [json_name = "channel-monitor"];
               int32 antenna_gain = 14 [json_name = "antenna-gain"];
               enum WorkMode {
                  WorkMode_MONITOR = 0;
                  WorkMode_NORMAL = 1;
               };
               WorkMode work_mode = 15 [json_name = "work-mode"];
            }
            repeated RadioInstance radio_instance = 1 [json_name = "radio-instance"];
         }
         RadioInstances radio_instances = 7 [json_name = "radio-instances"];
         message BindingSystemProfile {
            string binding_system_profile = 1 [json_name = "binding-system-profile"];
         }
         BindingSystemProfile binding_system_profile = 8 [json_name = "binding-system-profile"];
         string location = 9 [json_name = "location"];
         message ApProvision {
            enum AddressMode {
               AddressMode_DHCP = 0;
               AddressMode_STATIC = 1;
            };
            AddressMode address_mode = 1 [json_name = "address-mode"];
            string ac_ip_list = 2 [json_name = "ac-ip-list"];
            message ApAddress {
               string ap_ip_address = 1 [json_name = "ap-ip-address"];
               uint32 sub_net_mask = 2 [json_name = "sub-net-mask"];
               string gate_way = 3 [json_name = "gate-way"];
            }
            ApAddress ap_address = 3 [json_name = "ap-address"];
            uint32 management_vlan = 4 [json_name = "management-vlan"];
            enum ApMode {
               ApMode_FIT = 0;
               ApMode_FAT = 1;
               ApMode_CLOUD = 2;
            };
            ApMode ap_mode = 5 [json_name = "ap-mode"];
         }
         ApProvision ap_provision = 10 [json_name = "ap-provision"];
         message ApBindingRegularDomianProfile {
            string binding_regular_domian_profile = 1 [json_name = "binding-regular-domian-profile"];
         }
         ApBindingRegularDomianProfile ap_binding_regular_domian_profile = 11 [json_name = "ap-binding-regular-domian-profile"];
         message EthTrunkInstances {
            message EthTrunkInstance {
               uint32 index = 1 [json_name = "index"];
               string bind_wiredport_profile = 2 [json_name = "bind-wiredport-profile"];
            }
            repeated EthTrunkInstance eth_trunk_instance = 1 [json_name = "eth-trunk-instance"];
         }
         EthTrunkInstances eth_trunk_instances = 12 [json_name = "eth-trunk-instances"];
         message EthernetInstances {
            message EthernetInstance {
               uint32 index = 1 [json_name = "index"];
               string bind_wiredport_profile = 2 [json_name = "bind-wiredport-profile"];
            }
            repeated EthernetInstance ethernet_instance = 1 [json_name = "ethernet-instance"];
         }
         EthernetInstances ethernet_instances = 13 [json_name = "ethernet-instances"];
         message GeInstances {
            message GeInstance {
               uint32 index = 1 [json_name = "index"];
               string bind_wiredport_profile = 2 [json_name = "bind-wiredport-profile"];
            }
            repeated GeInstance ge_instance = 1 [json_name = "ge-instance"];
         }
         GeInstances ge_instances = 14 [json_name = "ge-instances"];
         message MultigeInstances {
            message MultigeInstance {
               uint32 index = 1 [json_name = "index"];
               string bind_wiredport_profile = 2 [json_name = "bind-wiredport-profile"];
            }
            repeated MultigeInstance multige_instance = 1 [json_name = "multige-instance"];
         }
         MultigeInstances multige_instances = 15 [json_name = "multige-instances"];
         message XgeInstances {
            message XgeInstance {
               uint32 index = 1 [json_name = "index"];
               string bind_wiredport_profile = 2 [json_name = "bind-wiredport-profile"];
            }
            repeated XgeInstance xge_instance = 1 [json_name = "xge-instance"];
         }
         XgeInstances xge_instances = 16 [json_name = "xge-instances"];
      }
      repeated ApInstance ap_instance = 1 [json_name = "ap-instance"];
   }
   ApInstances ap_instances = 8 [json_name = "ap-instances"];
   message WmiServerInfos {
      message WmiServerInfo {
         string wmi_server_name = 1 [json_name = "wmi-server-name"];
         uint32 max_packet_size = 2 [json_name = "max-packet-size"];
         message IpPortInfo {
            string ip_address = 1 [json_name = "ip-address"];
            uint32 port = 2 [json_name = "port"];
         }
         IpPortInfo ip_port_info = 3 [json_name = "ip-port-info"];
         uint32 report_interval = 4 [json_name = "report-interval"];
         message LogReportModule {
            string mid = 1 [json_name = "mid"];
            string sub_module = 2 [json_name = "sub-module"];
         }
         LogReportModule log_report_module = 5 [json_name = "log-report-module"];
         message KeepalivePara {
            uint32 interval = 1 [json_name = "interval"];
            uint32 retry_interval = 2 [json_name = "retry-interval"];
            uint32 retry_number = 3 [json_name = "retry-number"];
         }
         KeepalivePara keepalive_para = 6 [json_name = "keepalive-para"];
         message CollectInterfaceData {
            enum Switch {
               Switch_ENABLE = 0;
               Switch_DISABLE = 1;
            };
            Switch switch = 1 [json_name = "switch"];
            uint32 interval = 2 [json_name = "interval"];
         }
         CollectInterfaceData collect_interface_data = 7 [json_name = "collect-interface-data"];
         message CollectNeighborDeviceData {
            enum Switch {
               Switch_ENABLE = 0;
               Switch_DISABLE = 1;
            };
            Switch switch = 1 [json_name = "switch"];
            uint32 interval = 2 [json_name = "interval"];
         }
         CollectNeighborDeviceData collect_neighbor_device_data = 8 [json_name = "collect-neighbor-device-data"];
         message CollectSsidData {
            enum Switch {
               Switch_ENABLE = 0;
               Switch_DISABLE = 1;
            };
            Switch switch = 1 [json_name = "switch"];
            uint32 interval = 2 [json_name = "interval"];
         }
         CollectSsidData collect_ssid_data = 9 [json_name = "collect-ssid-data"];
         message CollectRadioData {
            enum Switch {
               Switch_ENABLE = 0;
               Switch_DISABLE = 1;
            };
            Switch switch = 1 [json_name = "switch"];
            uint32 interval = 2 [json_name = "interval"];
         }
         CollectRadioData collect_radio_data = 10 [json_name = "collect-radio-data"];
         message CollectDeviceData {
            enum Switch {
               Switch_ENABLE = 0;
               Switch_DISABLE = 1;
            };
            Switch switch = 1 [json_name = "switch"];
            uint32 interval = 2 [json_name = "interval"];
         }
         CollectDeviceData collect_device_data = 11 [json_name = "collect-device-data"];
         message CollectCpcarData {
            enum Switch {
               Switch_ENABLE = 0;
               Switch_DISABLE = 1;
            };
            Switch switch = 1 [json_name = "switch"];
            uint32 interval = 2 [json_name = "interval"];
         }
         CollectCpcarData collect_cpcar_data = 12 [json_name = "collect-cpcar-data"];
         message CollectTerminalDhcpOptionData {
            enum Switch {
               Switch_ENABLE = 0;
               Switch_DISABLE = 1;
            };
            Switch switch = 1 [json_name = "switch"];
            uint32 interval = 2 [json_name = "interval"];
         }
         CollectTerminalDhcpOptionData collect_terminal_dhcp_option_data = 13 [json_name = "collect-terminal-dhcp-option-data"];
         message CollectTerminalHttpUaData {
            enum Switch {
               Switch_ENABLE = 0;
               Switch_DISABLE = 1;
            };
            Switch switch = 1 [json_name = "switch"];
            uint32 interval = 2 [json_name = "interval"];
         }
         CollectTerminalHttpUaData collect_terminal_http_ua_data = 14 [json_name = "collect-terminal-http-ua-data"];
         message CollectTerminalMdnsData {
            enum Switch {
               Switch_ENABLE = 0;
               Switch_DISABLE = 1;
            };
            Switch switch = 1 [json_name = "switch"];
            uint32 interval = 2 [json_name = "interval"];
         }
         CollectTerminalMdnsData collect_terminal_mdns_data = 15 [json_name = "collect-terminal-mdns-data"];
         message CollectLogData {
            enum Switch {
               Switch_ENABLE = 0;
               Switch_DISABLE = 1;
            };
            Switch switch = 1 [json_name = "switch"];
            uint32 interval = 2 [json_name = "interval"];
         }
         CollectLogData collect_log_data = 16 [json_name = "collect-log-data"];
         message CollectTerminalData {
            enum Switch {
               Switch_ENABLE = 0;
               Switch_DISABLE = 1;
            };
            Switch switch = 1 [json_name = "switch"];
            uint32 interval = 2 [json_name = "interval"];
         }
         CollectTerminalData collect_terminal_data = 17 [json_name = "collect-terminal-data"];
         message CollectLldpData {
            enum Switch {
               Switch_ENABLE = 0;
               Switch_DISABLE = 1;
            };
            Switch switch = 1 [json_name = "switch"];
         }
         CollectLldpData collect_lldp_data = 18 [json_name = "collect-lldp-data"];
      }
      repeated WmiServerInfo wmi_server_info = 1 [json_name = "wmi-server-info"];
   }
   WmiServerInfos wmi_server_infos = 9 [json_name = "wmi-server-infos"];
   message ApProvision {
      enum AddressMode {
         AddressMode_DHCP = 0;
         AddressMode_STATIC = 1;
      };
      AddressMode address_mode = 1 [json_name = "address-mode"];
      string ac_ip_list = 2 [json_name = "ac-ip-list"];
      message ApAddress {
         string ap_ip_address = 1 [json_name = "ap-ip-address"];
         uint32 sub_net_mask = 2 [json_name = "sub-net-mask"];
         string gate_way = 3 [json_name = "gate-way"];
      }
      ApAddress ap_address = 3 [json_name = "ap-address"];
      uint32 management_vlan = 4 [json_name = "management-vlan"];
      enum ApMode {
         ApMode_FIT = 0;
         ApMode_FAT = 1;
         ApMode_CLOUD = 2;
      };
      ApMode ap_mode = 5 [json_name = "ap-mode"];
   }
   ApProvision ap_provision = 10 [json_name = "ap-provision"];
}

