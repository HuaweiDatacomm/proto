syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2022-08-29 10:52:32
// ProtoYang-version 1
// module huawei-wlan-radio-2g-profile
// revision 2022-08-19
// revision 2022-07-15
// revision 2022-06-15
// revision 2022-04-08
// namespace urn:huawei:yang:huawei-wlan-radio-2g-profile

package huawei_wlan_radio_2g_profile;

message WlanRadio2GProfile {
   message Radio2GProfiles {
      message Radio2GProfile {
         string profile_name = 1 [json_name = "profile-name"];
         message Dot11BgBasicRateLists {
            message Dot11BgBasicRateList {
               enum BasicRate {
                  INVALID_ENUM_VALUE_BasicRate = 0;
                  BasicRate_X_1MBPS = 1;
                  BasicRate_X_2MBPS = 2;
                  BasicRate_X_5X_5MBPS = 5;
                  BasicRate_X_6MBPS = 6;
                  BasicRate_X_9MBPS = 9;
                  BasicRate_X_11MBPS = 11;
                  BasicRate_X_12MBPS = 12;
                  BasicRate_X_18MBPS = 18;
                  BasicRate_X_24MBPS = 24;
                  BasicRate_X_36MBPS = 36;
                  BasicRate_X_48MBPS = 48;
                  BasicRate_X_54MBPS = 54;
               };
               BasicRate basic_rate = 1 [json_name = "basic-rate"];
            }
            repeated Dot11BgBasicRateList dot11bg_basic_rate_list = 1 [json_name = "dot11bg-basic-rate-list"];
         }
         Dot11BgBasicRateLists dot11bg_basic_rate_lists = 2 [json_name = "dot11bg-basic-rate-lists"];
         message Dot11BgSupportRateLists {
            message Dot11BgSupportRateList {
               enum SupportRate {
                  INVALID_ENUM_VALUE_SupportRate = 0;
                  SupportRate_X_1MBPS = 1;
                  SupportRate_X_2MBPS = 2;
                  SupportRate_X_5X_5MBPS = 5;
                  SupportRate_X_6MBPS = 6;
                  SupportRate_X_9MBPS = 9;
                  SupportRate_X_11MBPS = 11;
                  SupportRate_X_12MBPS = 12;
                  SupportRate_X_18MBPS = 18;
                  SupportRate_X_24MBPS = 24;
                  SupportRate_X_36MBPS = 36;
                  SupportRate_X_48MBPS = 48;
                  SupportRate_X_54MBPS = 54;
               };
               SupportRate support_rate = 1 [json_name = "support-rate"];
            }
            repeated Dot11BgSupportRateList dot11bg_support_rate_list = 1 [json_name = "dot11bg-support-rate-list"];
         }
         Dot11BgSupportRateLists dot11bg_support_rate_lists = 3 [json_name = "dot11bg-support-rate-lists"];
         enum GuardIntervalMode {
            GuardIntervalMode_NORMAL = 0;
            GuardIntervalMode_SHORT = 1;
         };
         GuardIntervalMode guard_interval_mode = 4 [json_name = "guard-interval-mode"];
         enum GuardIntervalModeDot11Ax {
            GuardIntervalModeDot11Ax_DOT8 = 0;
            GuardIntervalModeDot11Ax_X_1DOT6 = 1;
            GuardIntervalModeDot11Ax_X_3DOT2 = 2;
         };
         GuardIntervalModeDot11Ax guard_interval_mode_dot11ax = 5 [json_name = "guard-interval-mode-dot11ax"];
         enum RtsCtsMode {
            RtsCtsMode_DISABLE = 0;
            RtsCtsMode_RTSX_CTS = 1;
            RtsCtsMode_CTSX_TOX_SELF = 2;
         };
         RtsCtsMode rts_cts_mode = 6 [json_name = "rts-cts-mode"];
         uint32 beacon_interval = 7 [json_name = "beacon-interval"];
         uint32 rts_cts_threshold = 8 [json_name = "rts-cts-threshold"];
         enum ShortPreamble {
            ShortPreamble_ENABLE = 0;
            ShortPreamble_DISABLE = 1;
         };
         ShortPreamble short_preamble = 9 [json_name = "short-preamble"];
         uint32 fragmentation_threshold = 10 [json_name = "fragmentation-threshold"];
         enum MulticastRate {
            INVALID_ENUM_VALUE_MulticastRate = 0;
            MulticastRate_X_1MBPS = 1;
            MulticastRate_X_2MBPS = 2;
            MulticastRate_X_5MBPS = 5;
            MulticastRate_X_6MBPS = 6;
            MulticastRate_X_9MBPS = 9;
            MulticastRate_X_11MBPS = 11;
            MulticastRate_X_12MBPS = 12;
            MulticastRate_X_18MBPS = 18;
            MulticastRate_X_24MBPS = 24;
            MulticastRate_X_36MBPS = 36;
            MulticastRate_X_48MBPS = 48;
            MulticastRate_X_54MBPS = 54;
         };
         MulticastRate multicast_rate = 11 [json_name = "multicast-rate"];
         message Edca {
            enum Wmm {
               Wmm_ENABLE = 0;
               Wmm_DISABLE = 1;
            };
            Wmm wmm = 1 [json_name = "wmm"];
            enum WmmMandatory {
               WmmMandatory_ENABLE = 0;
               WmmMandatory_DISABLE = 1;
            };
            WmmMandatory wmm_mandatory = 2 [json_name = "wmm-mandatory"];
            message WmmEdcaApAcvo {
               uint32 aifsn = 1 [json_name = "aifsn"];
               uint32 ecwmin = 2 [json_name = "ecwmin"];
               uint32 ecwmax = 3 [json_name = "ecwmax"];
               uint32 txoplimit = 4 [json_name = "txoplimit"];
               enum AckPolicy {
                  AckPolicy_NOMRAL = 0;
                  AckPolicy_NOACK = 1;
               };
               AckPolicy ack_policy = 5 [json_name = "ack-policy"];
            }
            WmmEdcaApAcvo wmm_edca_ap_acvo = 3 [json_name = "wmm-edca-ap-acvo"];
            message WmmEdcaApAcvi {
               uint32 aifsn = 1 [json_name = "aifsn"];
               uint32 ecwmin = 2 [json_name = "ecwmin"];
               uint32 ecwmax = 3 [json_name = "ecwmax"];
               uint32 txoplimit = 4 [json_name = "txoplimit"];
               enum AckPolicy {
                  AckPolicy_NOMRAL = 0;
                  AckPolicy_NOACK = 1;
               };
               AckPolicy ack_policy = 5 [json_name = "ack-policy"];
            }
            WmmEdcaApAcvi wmm_edca_ap_acvi = 4 [json_name = "wmm-edca-ap-acvi"];
            message WmmEdcaApAcbe {
               uint32 aifsn = 1 [json_name = "aifsn"];
               uint32 ecwmin = 2 [json_name = "ecwmin"];
               uint32 ecwmax = 3 [json_name = "ecwmax"];
               uint32 txoplimit = 4 [json_name = "txoplimit"];
               enum AckPolicy {
                  AckPolicy_NOMRAL = 0;
                  AckPolicy_NOACK = 1;
               };
               AckPolicy ack_policy = 5 [json_name = "ack-policy"];
            }
            WmmEdcaApAcbe wmm_edca_ap_acbe = 5 [json_name = "wmm-edca-ap-acbe"];
            message WmmEdcaApAcbk {
               uint32 aifsn = 1 [json_name = "aifsn"];
               uint32 ecwmin = 2 [json_name = "ecwmin"];
               uint32 ecwmax = 3 [json_name = "ecwmax"];
               uint32 txoplimit = 4 [json_name = "txoplimit"];
               enum AckPolicy {
                  AckPolicy_NOMRAL = 0;
                  AckPolicy_NOACK = 1;
               };
               AckPolicy ack_policy = 5 [json_name = "ack-policy"];
            }
            WmmEdcaApAcbk wmm_edca_ap_acbk = 6 [json_name = "wmm-edca-ap-acbk"];
         }
         Edca edca = 12 [json_name = "edca"];
         message SmartAntenna {
            enum SmartAntenna5 {
               SmartAntenna5_ENABLE = 0;
               SmartAntenna5_DISABLE = 1;
            };
            SmartAntenna5 smart_antenna = 1 [json_name = "smart-antenna"];
            enum ValidPerScopeHighPerThreshold {
               ValidPerScopeHighPerThreshold_X_50PERCENT = 0;
               ValidPerScopeHighPerThreshold_X_60PERCENT = 1;
               ValidPerScopeHighPerThreshold_X_70PERCENT = 2;
               ValidPerScopeHighPerThreshold_X_80PERCENT = 3;
               ValidPerScopeHighPerThreshold_X_90PERCENT = 4;
            };
            ValidPerScopeHighPerThreshold valid_per_scope_high_per_threshold = 2 [json_name = "valid-per-scope-high-per-threshold"];
            enum ValidPerScopeLowPerThreshold {
               ValidPerScopeLowPerThreshold_X_10PERCENT = 0;
               ValidPerScopeLowPerThreshold_X_20PERCENT = 1;
               ValidPerScopeLowPerThreshold_X_30PERCENT = 2;
            };
            ValidPerScopeLowPerThreshold valid_per_scope_low_per_threshold = 3 [json_name = "valid-per-scope-low-per-threshold"];
            uint32 training_mpdu_number = 4 [json_name = "training-mpdu-number"];
            enum ThroughputTriggeredTraining {
               ThroughputTriggeredTraining_X_10PERCENT = 0;
               ThroughputTriggeredTraining_X_20PERCENT = 1;
               ThroughputTriggeredTraining_X_30PERCENT = 2;
               ThroughputTriggeredTraining_X_40PERCENT = 3;
               ThroughputTriggeredTraining_X_50PERCENT = 4;
            };
            ThroughputTriggeredTraining throughput_triggered_training = 5 [json_name = "throughput-triggered-training"];
            message TrainingInterval_Auto {
               bool training_interval_auto = 1 [json_name = "training-interval-auto"];
            }
            message TrainingInterval_Interval {
               uint32 interval_value = 1 [json_name = "interval-value"];
            }
            oneof TrainingInterval {
               TrainingInterval_Auto training_interval_auto = 6 [json_name = "auto"];
               TrainingInterval_Interval training_interval_interval = 7 [json_name = "interval"];
            }
         }
         SmartAntenna smart_antenna = 13 [json_name = "smart-antenna"];
         enum AMpdu {
            AMpdu_ENABLE = 0;
            AMpdu_DISABLE = 1;
         };
         AMpdu a_mpdu = 14 [json_name = "a-mpdu"];
         enum AMsdu {
            INVALID_ENUM_VALUE_AMsdu = 0;
            AMsdu_ENABLE = 1;
            AMsdu_DISABLE = 2;
            AMsdu_AUTO = 3;
         };
         AMsdu a_msdu = 15 [json_name = "a-msdu"];
         enum WifiLight {
            INVALID_ENUM_VALUE_WifiLight = 0;
            WifiLight_SIGNALX_STRENGTH = 1;
            WifiLight_TRAFFIC = 2;
         };
         WifiLight wifi_light = 16 [json_name = "wifi-light"];
         uint32 vip_user_reservation_ratio = 17 [json_name = "vip-user-reservation-ratio"];
         message Radio2GProfileBindingAirscan {
            string binding_airscan_profile = 1 [json_name = "binding-airscan-profile"];
         }
         Radio2GProfileBindingAirscan radio_2g_profile_binding_airscan = 18 [json_name = "radio-2g-profile-binding-airscan"];
         message Radio2GBindingRrm {
            string binding_rrm_profile = 1 [json_name = "binding-rrm-profile"];
         }
         Radio2GBindingRrm radio_2g_binding_rrm = 19 [json_name = "radio-2g-binding-rrm"];
      }
      repeated Radio2GProfile radio_2g_profile = 1 [json_name = "radio-2g-profile"];
   }
   Radio2GProfiles radio_2g_profiles = 1 [json_name = "radio-2g-profiles"];
}

