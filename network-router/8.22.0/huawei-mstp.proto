syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2022-09-22 11:43:04
// ProtoYang-version 1
// module huawei-mstp
// revision 2022-09-13
// revision 2022-05-25
// revision 2022-05-12
// revision 2020-06-03
// revision 2020-04-13
// revision 2020-03-14
// revision 2020-02-05
// revision 2020-01-03
// revision 2019-04-23
// namespace urn:huawei:yang:huawei-mstp

package huawei_mstp;

message Mstp {
   message ErrorPktInfos {
      message ErrorPktInfo {
         string errorPktContent = 1;
         uint32 errorPktCount = 2;
         string errorPktTime = 3;
      }
      repeated ErrorPktInfo errorPktInfo = 1;
   }
   ErrorPktInfos errorPktInfos = 1;
   message Global {
      bool bpduFilterDef = 1;
      string bridge_address = 2 [json_name = "bridge-address"];
      bool edgePortDef = 3;
      bool tcnTrillEnable = 4;
      uint32 transmit_limit = 5 [json_name = "transmit-limit"];
      uint32 vlan_id = 6 [json_name = "vlan-id"];
      bool vstp_enable = 7 [json_name = "vstp-enable"];
      bool edge_port = 8 [json_name = "edge-port"];
      bool bpdu_filter = 9 [json_name = "bpdu-filter"];
      bool tc_notify_trill = 10 [json_name = "tc-notify-trill"];
      message PvidProtection {
         bool pvid_protection = 1 [json_name = "pvid-protection"];
      }
      PvidProtection pvid_protection = 11 [json_name = "pvid-protection"];
      bool vstp_portid_extension = 12 [json_name = "vstp-portid-extension"];
   }
   Global global = 2 [json_name = "global"];
   message Ports {
      message Port {
         enum BpduFilter {
            BpduFilter_DISABLE = 0;
            BpduFilter_ENABLE = 1;
            BpduFilter_UNDO = 2;
         };
         BpduFilter bpduFilter = 1;
         enum Compliance {
            Compliance_AUTO = 0;
            Compliance_DOT1S = 1;
            Compliance_LEGACY = 2;
         };
         Compliance compliance = 2;
         bool configDigestSnoop = 3;
         enum EdgePort {
            EdgePort_DEFAULT = 0;
            EdgePort_DISABLED = 1;
            EdgePort_ENABLED = 2;
         };
         EdgePort edgePort = 4;
         bool enable = 5;
         enum Encapsulation {
            Encapsulation_STP = 0;
            Encapsulation_VBST = 1;
         };
         Encapsulation encapsulation = 6;
         message Hvrptransport {
            bool hvrptransportenable = 1;
         }
         Hvrptransport hvrptransport = 7;
         string ifName = 8;
         bool loopProtection = 9;
         bool noAgreementCheck = 10;
         enum PointToPoint {
            PointToPoint_AUTO = 0;
            PointToPoint_FORCEFALSE = 1;
            PointToPoint_FORCETRUE = 2;
         };
         PointToPoint pointToPoint = 11;
         bool rootProtection = 12;
         enum TcNotifyTrill {
            TcNotifyTrill_DISABLE = 0;
            TcNotifyTrill_ENABLE = 1;
         };
         TcNotifyTrill tcNotifyTrill = 13;
         uint32 transmitLimit = 14;
         bool vplsSubIf = 15;
      }
      repeated Port port = 1;
   }
   Ports ports = 3;
   message Processs {
      message Process {
         bool bpdu_protection = 1 [json_name = "bpdu-protection"];
         uint32 bridgeDiameter = 2;
         message CistInfos {
            message CistInfo {
               bool bpduProtection = 1;
               string bridgeMac = 2;
               uint32 bridgePrio = 3;
               message CistPortInfos {
                  message CistPortInfo {
                     string desgBridgeMac = 1;
                     uint32 desgBridgePrio = 2;
                     uint32 desgPortId = 3;
                     uint32 desgPortPrio = 4;
                     uint32 forwardDelay = 5;
                     uint32 helloTime = 6;
                     string ifName = 7;
                     uint32 maxAge = 8;
                     uint32 messageAge = 9;
                     bool pointToPoint = 10;
                     uint32 portCost = 11;
                     enum PortCostStd {
                        PortCostStd_DOT1D = 0;
                        PortCostStd_DOT1T = 1;
                        PortCostStd_LEGACY = 2;
                     };
                     PortCostStd portCostStd = 12;
                     bool portEdge = 13;
                     uint32 portPriority = 14;
                     enum PortProtoType {
                        PortProtoType_AUTO = 0;
                        PortProtoType_DOT1S = 1;
                        PortProtoType_LEGACY = 2;
                     };
                     PortProtoType portProtoType = 15;
                     enum PortRole {
                        PortRole_ALTERNATE = 0;
                        PortRole_BACKUP = 1;
                        PortRole_DESIGNATED = 2;
                        PortRole_DISABLED = 3;
                        PortRole_MASTER = 4;
                        PortRole_ROOT = 5;
                     };
                     PortRole portRole = 16;
                     enum PortState {
                        PortState_DISABLED = 0;
                        PortState_DISCARDING = 1;
                        PortState_DOWN = 2;
                        PortState_FORWARDING = 3;
                        PortState_INACTIVE = 4;
                        PortState_LEARNING = 5;
                     };
                     PortState portState = 17;
                     enum PortStpMode {
                        PortStpMode_MSTP = 0;
                        PortStpMode_RSTP = 1;
                        PortStpMode_STP = 2;
                     };
                     PortStpMode portStpMode = 18;
                     enum ProtectionType {
                        ProtectionType_BPDU = 0;
                        ProtectionType_BPDUROOT = 1;
                        ProtectionType_LOOP = 2;
                        ProtectionType_LOOPBACK = 3;
                        ProtectionType_NONE = 4;
                        ProtectionType_ROOT = 5;
                     };
                     ProtectionType protectionType = 19;
                     uint32 remHop = 20;
                     uint32 rxConf = 21;
                     uint32 rxMst = 22;
                     uint32 rxRst = 23;
                     uint32 rxTcn = 24;
                     uint32 tcOrTcnReceive = 25;
                     uint32 tcOrTcnSend = 26;
                     uint32 transmitLimit = 27;
                     uint32 txConf = 28;
                     uint32 txMst = 29;
                     uint32 txRst = 30;
                     uint32 txTcn = 31;
                  }
                  repeated CistPortInfo cistPortInfo = 1;
               }
               CistPortInfos cistPortInfos = 4;
               uint32 erpc = 5;
               uint32 forwardDelay = 6;
               uint32 helloTime = 7;
               uint32 instanceId = 8;
               uint32 irpc = 9;
               uint32 maxAge = 10;
               uint32 maxHops = 11;
               message PwCistPortInfos {
                  message PwCistPortInfo {
                     string desgBridgeMac = 1;
                     uint32 desgBridgePrio = 2;
                     uint32 desgPortId = 3;
                     uint32 desgPortPrio = 4;
                     uint32 forwardDelay = 5;
                     uint32 helloTime = 6;
                     uint32 maxAge = 7;
                     uint32 messageAge = 8;
                     bool pointToPoint = 9;
                     uint32 portCost = 10;
                     enum PortCostStd {
                        PortCostStd_DOT1D = 0;
                        PortCostStd_DOT1T = 1;
                        PortCostStd_LEGACY = 2;
                     };
                     PortCostStd portCostStd = 11;
                     bool portEdge = 12;
                     uint32 portPriority = 13;
                     enum PortProtoType {
                        PortProtoType_AUTO = 0;
                        PortProtoType_DOT1S = 1;
                        PortProtoType_LEGACY = 2;
                     };
                     PortProtoType portProtoType = 14;
                     enum PortRole {
                        PortRole_ALTERNATE = 0;
                        PortRole_BACKUP = 1;
                        PortRole_DESIGNATED = 2;
                        PortRole_DISABLED = 3;
                        PortRole_MASTER = 4;
                        PortRole_ROOT = 5;
                     };
                     PortRole portRole = 15;
                     enum PortState {
                        PortState_DISABLED = 0;
                        PortState_DISCARDING = 1;
                        PortState_DOWN = 2;
                        PortState_FORWARDING = 3;
                        PortState_INACTIVE = 4;
                        PortState_LEARNING = 5;
                     };
                     PortState portState = 16;
                     enum PortStpMode {
                        PortStpMode_MSTP = 0;
                        PortStpMode_RSTP = 1;
                        PortStpMode_STP = 2;
                     };
                     PortStpMode portStpMode = 17;
                     enum ProtectionType {
                        ProtectionType_BPDU = 0;
                        ProtectionType_BPDUROOT = 1;
                        ProtectionType_LOOP = 2;
                        ProtectionType_LOOPBACK = 3;
                        ProtectionType_NONE = 4;
                        ProtectionType_ROOT = 5;
                     };
                     ProtectionType protectionType = 18;
                     string pwName = 19;
                     uint32 remHop = 20;
                     uint32 rxConf = 21;
                     uint32 rxMst = 22;
                     uint32 rxRst = 23;
                     uint32 rxTcn = 24;
                     uint32 tcOrTcnReceive = 25;
                     uint32 tcOrTcnSend = 26;
                     uint32 transmitLimit = 27;
                     uint32 txConf = 28;
                     uint32 txMst = 29;
                     uint32 txRst = 30;
                     uint32 txTcn = 31;
                     string vsiName = 32;
                  }
                  repeated PwCistPortInfo pwCistPortInfo = 1;
               }
               PwCistPortInfos pwCistPortInfos = 12;
               string regRootMac = 13;
               uint32 regRootPrio = 14;
               string rootMac = 15;
               uint32 rootPortId = 16;
               uint32 rootPortPrio = 17;
               uint32 rootPrio = 18;
               uint32 tcCountPerHello = 19;
               int32 tcFlag = 20;
               uint32 tcReceive = 21;
               string timeLastTc = 22;
            }
            repeated CistInfo cistInfo = 1;
         }
         CistInfos cistInfos = 3;
         enum ConvergeMode {
            ConvergeMode_FAST = 0;
            ConvergeMode_NORMAL = 1;
         };
         ConvergeMode convergeMode = 4;
         bool enable = 5 [json_name = "enable"];
         bool flush_capability = 6 [json_name = "flush-capability"];
         uint32 forward_delay = 7 [json_name = "forward-delay"];
         uint32 hello_time = 8 [json_name = "hello-time"];
         bool instVlanMode = 9;
         message InstVlans {
            message InstVlan {
               uint32 instanceId = 1;
               string vlans = 2;
            }
            repeated InstVlan instVlan = 1;
         }
         InstVlans instVlans = 10;
         uint32 interval = 11;
         bool link_share_protect = 12 [json_name = "link-share-protect"];
         uint32 max_age = 13 [json_name = "max-age"];
         uint32 max_hops = 14 [json_name = "max-hops"];
         enum Mode {
            Mode_STP = 0;
            Mode_RSTP = 2;
            Mode_MSTP = 3;
            Mode_VBST = 4;
         };
         Mode mode = 15 [json_name = "mode"];
         uint32 modulo = 16;
         message MstiInfos {
            message MstiInfo {
               string bridgeMac = 1;
               uint32 bridgePrio = 2;
               uint32 costToMaster = 3;
               uint32 instanceId = 4;
               uint32 irpc = 5;
               string masterBridgeMac = 6;
               uint32 masterBridgePri = 7;
               message MstiPortInfos {
                  message MstiPortInfo {
                     string desgBridgeMac = 1;
                     uint32 desgBridgePrio = 2;
                     uint32 desgPortId = 3;
                     uint32 desgPortPrio = 4;
                     string ifName = 5;
                     uint32 portCost = 6;
                     enum PortCostStd {
                        PortCostStd_DOT1D = 0;
                        PortCostStd_DOT1T = 1;
                        PortCostStd_LEGACY = 2;
                     };
                     PortCostStd portCostStd = 7;
                     uint32 portPriority = 8;
                     enum PortRole {
                        INVALID_ENUM_VALUE_PortRole = 0;
                        PortRole_DISABLED = 1;
                        PortRole_ALTERNATE = 2;
                        PortRole_BACKUP = 3;
                        PortRole_ROOT = 4;
                        PortRole_DESIGNATED = 5;
                        PortRole_MASTER = 6;
                     };
                     PortRole portRole = 9;
                     enum PortState {
                        INVALID_ENUM_VALUE_PortState = 0;
                        PortState_DOWN = 1;
                        PortState_DISABLED = 2;
                        PortState_FORWARDING = 3;
                        PortState_LEARNING = 4;
                        PortState_DISCARDING = 5;
                        PortState_INACTIVE = 6;
                     };
                     PortState portState = 10;
                     uint32 remHop = 11;
                     uint32 tcOrTcnReceive = 12;
                     uint32 tcOrTcnSend = 13;
                     string interface_name = 14 [json_name = "interface-name"];
                     PortRole port_role = 15 [json_name = "port-role"];
                     PortState port_state = 16 [json_name = "port-state"];
                  }
                  repeated MstiPortInfo mstiPortInfo = 1;
                  repeated MstiPortInfo msti_port_info = 2 [json_name = "msti-port-info"];
               }
               MstiPortInfos mstiPortInfos = 8;
               message PwMstiPortInfos {
                  message PwMstiPortInfo {
                     string desgBridgeMac = 1;
                     uint32 desgBridgePrio = 2;
                     uint32 desgPortId = 3;
                     uint32 desgPortPrio = 4;
                     uint32 portCost = 5;
                     enum PortCostStd {
                        PortCostStd_DOT1D = 0;
                        PortCostStd_DOT1T = 1;
                        PortCostStd_LEGACY = 2;
                     };
                     PortCostStd portCostStd = 6;
                     uint32 portPriority = 7;
                     enum PortRole {
                        PortRole_ALTERNATE = 0;
                        PortRole_BACKUP = 1;
                        PortRole_DESIGNATED = 2;
                        PortRole_DISABLED = 3;
                        PortRole_MASTER = 4;
                        PortRole_ROOT = 5;
                     };
                     PortRole portRole = 8;
                     enum PortState {
                        PortState_DISABLED = 0;
                        PortState_DISCARDING = 1;
                        PortState_DOWN = 2;
                        PortState_FORWARDING = 3;
                        PortState_INACTIVE = 4;
                        PortState_LEARNING = 5;
                     };
                     PortState portState = 9;
                     string pwName = 10;
                     uint32 remHop = 11;
                     uint32 tcOrTcnReceive = 12;
                     uint32 tcOrTcnSend = 13;
                     string vsiName = 14;
                  }
                  repeated PwMstiPortInfo pwMstiPortInfo = 1;
               }
               PwMstiPortInfos pwMstiPortInfos = 9;
               string regionRootMac = 10;
               uint32 regionRootPrio = 11;
               uint32 rootPortId = 12;
               uint32 rootPortPrio = 13;
               uint32 tcCountPerHello = 14;
               int32 tcFlag = 15;
               uint32 tcOrTcnReceive = 16;
               uint32 instance_id = 17 [json_name = "instance-id"];
               string bridge_id = 18 [json_name = "bridge-id"];
               string reg_root_id = 19 [json_name = "reg-root-id"];
               string root_port_id = 20 [json_name = "root-port-id"];
               string master_bridge = 21 [json_name = "master-bridge"];
               uint32 irpc_cost = 22 [json_name = "irpc-cost"];
               uint32 cost_to_master = 23 [json_name = "cost-to-master"];
               uint32 tc_receive_num = 24 [json_name = "tc-receive-num"];
               uint32 tc_count_pre_hello = 25 [json_name = "tc-count-pre-hello"];
               string last_change_interval = 26 [json_name = "last-change-interval"];
               string last_change_occurred = 27 [json_name = "last-change-occurred"];
               uint32 tc_number = 28 [json_name = "tc-number"];
               bool is_topo_changed = 29 [json_name = "is-topo-changed"];
               MstiPortInfos msti_port_infos = 30 [json_name = "msti-port-infos"];
            }
            repeated MstiInfo mstiInfo = 1;
            repeated MstiInfo msti_info = 2 [json_name = "msti-info"];
         }
         MstiInfos mstiInfos = 17;
         enum PathCostStandard {
            INVALID_ENUM_VALUE_PathCostStandard = 0;
            PathCostStandard_DOT1DX_1998 = 1;
            PathCostStandard_DOT1T = 2;
            PathCostStandard_LEGACY = 3;
         };
         PathCostStandard path_cost_standard = 18 [json_name = "path-cost-standard"];
         uint32 processId = 19;
         message ProcessInstances {
            message ProcessInstance {
               uint32 instanceId = 1;
               uint32 priority = 2;
               message ProcessInstancePorts {
                  message ProcessInstancePort {
                     uint32 cost = 1;
                     string ifName = 2;
                     uint32 priority = 3;
                  }
                  repeated ProcessInstancePort processInstancePort = 1;
               }
               ProcessInstancePorts processInstancePorts = 3;
               message ProcessInstancePwPorts {
                  message ProcessInstancePwPort {
                     uint32 cost = 1;
                     uint32 priority = 2;
                     string pwName = 3;
                     string vsiName = 4;
                  }
                  repeated ProcessInstancePwPort processInstancePwPort = 1;
               }
               ProcessInstancePwPorts processInstancePwPorts = 4;
               enum Root {
                  Root_NORMAL = 0;
                  Root_PRIMARY = 1;
                  Root_SECONDARY = 2;
               };
               Root root = 5;
            }
            repeated ProcessInstance processInstance = 1;
         }
         ProcessInstances processInstances = 20;
         message ProcessPorts {
            message ProcessPort {
               uint32 bpduVlan = 1;
               string ifName = 2;
               enum LinkShareFlag {
                  LinkShareFlag_LINKSHARE = 0;
                  LinkShareFlag_NOLINKSHARE = 1;
                  LinkShareFlag_SRVVLAN = 2;
               };
               LinkShareFlag linkShareFlag = 3;
               string serveVlan = 4;
            }
            repeated ProcessPort processPort = 1;
         }
         ProcessPorts processPorts = 21;
         message ProcessPwPorts {
            message ProcessPwPort {
               enum LinkShareFlag {
                  LinkShareFlag_LINKSHARE = 0;
                  LinkShareFlag_NOLINKSHARE = 1;
               };
               LinkShareFlag linkShareFlag = 1;
               string pwName = 2;
               string vsiName = 3;
            }
            repeated ProcessPwPort processPwPort = 1;
         }
         ProcessPwPorts processPwPorts = 22;
         string region_name = 23 [json_name = "region-name"];
         uint32 revision_level = 24 [json_name = "revision-level"];
         bool syncFlag = 25;
         bool tc_notify = 26 [json_name = "tc-notify"];
         bool tc_protection = 27 [json_name = "tc-protection"];
         uint32 tc_protection_threshold = 28 [json_name = "tc-protection-threshold"];
         uint32 timer_factor = 29 [json_name = "timer-factor"];
         bool timerParaMode = 30;
         uint32 id = 31 [json_name = "id"];
         uint32 tc_protection_interval = 32 [json_name = "tc-protection-interval"];
         message Instances {
            message Instance {
               uint32 id = 1 [json_name = "id"];
               uint32 priority = 2 [json_name = "priority"];
               enum RootType {
                  INVALID_ENUM_VALUE_RootType = 0;
                  RootType_NORMAL = 1;
                  RootType_PRIMARY = 2;
                  RootType_SECONDARY = 3;
               };
               RootType root_type = 3 [json_name = "root-type"];
               string vlan_mapping = 4 [json_name = "vlan-mapping"];
            }
            repeated Instance instance = 1 [json_name = "instance"];
         }
         Instances instances = 33 [json_name = "instances"];
         message DefaultInstance4 {
            uint32 priority = 1 [json_name = "priority"];
            enum RootType {
               INVALID_ENUM_VALUE_RootType = 0;
               RootType_NORMAL = 1;
               RootType_PRIMARY = 2;
               RootType_SECONDARY = 3;
            };
            RootType root_type = 2 [json_name = "root-type"];
            string vlan_mapping = 3 [json_name = "vlan-mapping"];
         }
         DefaultInstance4 default_instance4 = 34 [json_name = "default-instance"];
         message Cist {
            uint32 bridge_priority = 1 [json_name = "bridge-priority"];
            string bridge_mac_address = 2 [json_name = "bridge-mac-address"];
            uint32 hello_time = 3 [json_name = "hello-time"];
            uint32 max_age = 4 [json_name = "max-age"];
            uint32 forward_delay = 5 [json_name = "forward-delay"];
            uint32 max_hops = 6 [json_name = "max-hops"];
            uint32 root_priority = 7 [json_name = "root-priority"];
            string root_mac_address = 8 [json_name = "root-mac-address"];
            uint32 erpc = 9 [json_name = "erpc"];
            uint32 regional_root_priority = 10 [json_name = "regional-root-priority"];
            string regional_root_mac_address = 11 [json_name = "regional-root-mac-address"];
            uint32 irpc = 12 [json_name = "irpc"];
            uint32 root_port_priority = 13 [json_name = "root-port-priority"];
            uint32 root_port_id = 14 [json_name = "root-port-id"];
            bool bpdu_protection = 15 [json_name = "bpdu-protection"];
            uint32 tc_receive = 16 [json_name = "tc-receive"];
            uint32 tc_count_per_hello = 17 [json_name = "tc-count-per-hello"];
            string time_past_last_tc = 18 [json_name = "time-past-last-tc"];
            int32 tc_flag = 19 [json_name = "tc-flag"];
            message Ports {
               message Port {
                  string if_name = 1 [json_name = "if-name"];
                  uint32 tc_tcn_send = 2 [json_name = "tc-tcn-send"];
                  uint32 tc_tcn_receive = 3 [json_name = "tc-tcn-receive"];
                  uint32 tx_tcn = 4 [json_name = "tx-tcn"];
                  uint32 tx_configuration = 5 [json_name = "tx-configuration"];
                  uint32 tx_rst = 6 [json_name = "tx-rst"];
                  uint32 tx_mst = 7 [json_name = "tx-mst"];
                  uint32 rx_tcn = 8 [json_name = "rx-tcn"];
                  uint32 rx_configuration = 9 [json_name = "rx-configuration"];
                  uint32 rx_rst = 10 [json_name = "rx-rst"];
                  uint32 rx_mst = 11 [json_name = "rx-mst"];
                  enum PortCostStandard {
                     INVALID_ENUM_VALUE_PortCostStandard = 0;
                     PortCostStandard_DOT1DX_1998 = 1;
                     PortCostStandard_DOT1T = 2;
                     PortCostStandard_LEGACY = 3;
                  };
                  PortCostStandard port_cost_standard = 12 [json_name = "port-cost-standard"];
                  uint32 port_cost = 13 [json_name = "port-cost"];
                  uint32 designate_bridge_priority = 14 [json_name = "designate-bridge-priority"];
                  string designate_bridge_mac_address = 15 [json_name = "designate-bridge-mac-address"];
                  uint32 designate_port_priority = 16 [json_name = "designate-port-priority"];
                  uint32 designate_port_id = 17 [json_name = "designate-port-id"];
                  bool port_edge = 18 [json_name = "port-edge"];
                  uint32 port_priority = 19 [json_name = "port-priority"];
                  bool point_to_point = 20 [json_name = "point-to-point"];
                  uint32 transmit_limit = 21 [json_name = "transmit-limit"];
                  enum ProtectionType {
                     INVALID_ENUM_VALUE_ProtectionType = 0;
                     ProtectionType_NONE = 1;
                     ProtectionType_LOOPBACK = 2;
                     ProtectionType_BPDUX_ROOT = 3;
                     ProtectionType_ROOT = 4;
                     ProtectionType_BPDU = 5;
                     ProtectionType_LOOP = 6;
                  };
                  ProtectionType protection_type = 22 [json_name = "protection-type"];
                  enum StpMode {
                     StpMode_STP = 0;
                     StpMode_RSTP = 2;
                     StpMode_MSTP = 3;
                     StpMode_VBST = 4;
                  };
                  StpMode stp_mode = 23 [json_name = "stp-mode"];
                  enum Compliance {
                     INVALID_ENUM_VALUE_Compliance = 0;
                     Compliance_AUTO = 1;
                     Compliance_DOT1S = 2;
                     Compliance_LEGACY = 3;
                  };
                  Compliance compliance = 24 [json_name = "compliance"];
                  uint32 hello_time = 25 [json_name = "hello-time"];
                  uint32 max_age = 26 [json_name = "max-age"];
                  uint32 forward_delay = 27 [json_name = "forward-delay"];
                  enum PortRole {
                     INVALID_ENUM_VALUE_PortRole = 0;
                     PortRole_DISABLED = 1;
                     PortRole_ALTERNATE = 2;
                     PortRole_BACKUP = 3;
                     PortRole_ROOT = 4;
                     PortRole_DESIGNATED = 5;
                     PortRole_MASTER = 6;
                  };
                  PortRole port_role = 28 [json_name = "port-role"];
                  enum PortState {
                     INVALID_ENUM_VALUE_PortState = 0;
                     PortState_DOWN = 1;
                     PortState_DISABLED = 2;
                     PortState_FORWARDING = 3;
                     PortState_LEARNING = 4;
                     PortState_DISCARDING = 5;
                     PortState_INACTIVE = 6;
                  };
                  PortState port_state = 29 [json_name = "port-state"];
                  uint32 remaining_hop = 30 [json_name = "remaining-hop"];
                  uint32 message_age = 31 [json_name = "message-age"];
               }
               repeated Port port = 1 [json_name = "port"];
            }
            Ports ports = 20 [json_name = "ports"];
            message PwPorts {
               message PwPort {
                  string vsi_name = 1 [json_name = "vsi-name"];
                  string pw_name = 2 [json_name = "pw-name"];
                  uint32 tc_tcn_send = 3 [json_name = "tc-tcn-send"];
                  uint32 tc_tcn_receive = 4 [json_name = "tc-tcn-receive"];
                  uint32 tx_tcn = 5 [json_name = "tx-tcn"];
                  uint32 tx_configuration = 6 [json_name = "tx-configuration"];
                  uint32 tx_rst = 7 [json_name = "tx-rst"];
                  uint32 tx_mst = 8 [json_name = "tx-mst"];
                  uint32 rx_tcn = 9 [json_name = "rx-tcn"];
                  uint32 rx_configuration = 10 [json_name = "rx-configuration"];
                  uint32 rx_rst = 11 [json_name = "rx-rst"];
                  uint32 rx_mst = 12 [json_name = "rx-mst"];
                  enum PortCostStandard {
                     INVALID_ENUM_VALUE_PortCostStandard = 0;
                     PortCostStandard_DOT1DX_1998 = 1;
                     PortCostStandard_DOT1T = 2;
                     PortCostStandard_LEGACY = 3;
                  };
                  PortCostStandard port_cost_standard = 13 [json_name = "port-cost-standard"];
                  uint32 port_cost = 14 [json_name = "port-cost"];
                  uint32 designate_bridge_priority = 15 [json_name = "designate-bridge-priority"];
                  string designate_bridge_mac_address = 16 [json_name = "designate-bridge-mac-address"];
                  uint32 designate_port_priority = 17 [json_name = "designate-port-priority"];
                  uint32 designate_port_id = 18 [json_name = "designate-port-id"];
                  bool port_edge = 19 [json_name = "port-edge"];
                  uint32 port_priority = 20 [json_name = "port-priority"];
                  bool point_to_point = 21 [json_name = "point-to-point"];
                  uint32 transmit_limit = 22 [json_name = "transmit-limit"];
                  enum ProtectionType {
                     INVALID_ENUM_VALUE_ProtectionType = 0;
                     ProtectionType_NONE = 1;
                     ProtectionType_LOOPBACK = 2;
                     ProtectionType_BPDUX_ROOT = 3;
                     ProtectionType_ROOT = 4;
                     ProtectionType_BPDU = 5;
                     ProtectionType_LOOP = 6;
                  };
                  ProtectionType protection_type = 23 [json_name = "protection-type"];
                  enum StpMode {
                     StpMode_STP = 0;
                     StpMode_RSTP = 2;
                     StpMode_MSTP = 3;
                     StpMode_VBST = 4;
                  };
                  StpMode stp_mode = 24 [json_name = "stp-mode"];
                  enum Compliance {
                     INVALID_ENUM_VALUE_Compliance = 0;
                     Compliance_AUTO = 1;
                     Compliance_DOT1S = 2;
                     Compliance_LEGACY = 3;
                  };
                  Compliance compliance = 25 [json_name = "compliance"];
                  uint32 hello_time = 26 [json_name = "hello-time"];
                  uint32 max_age = 27 [json_name = "max-age"];
                  uint32 forward_delay = 28 [json_name = "forward-delay"];
                  enum PortRole {
                     INVALID_ENUM_VALUE_PortRole = 0;
                     PortRole_DISABLED = 1;
                     PortRole_ALTERNATE = 2;
                     PortRole_BACKUP = 3;
                     PortRole_ROOT = 4;
                     PortRole_DESIGNATED = 5;
                     PortRole_MASTER = 6;
                  };
                  PortRole port_role = 29 [json_name = "port-role"];
                  enum PortState {
                     INVALID_ENUM_VALUE_PortState = 0;
                     PortState_DOWN = 1;
                     PortState_DISABLED = 2;
                     PortState_FORWARDING = 3;
                     PortState_LEARNING = 4;
                     PortState_DISCARDING = 5;
                     PortState_INACTIVE = 6;
                  };
                  PortState port_state = 30 [json_name = "port-state"];
                  uint32 remaining_hop = 31 [json_name = "remaining-hop"];
                  uint32 message_age = 32 [json_name = "message-age"];
               }
               repeated PwPort pw_port = 1 [json_name = "pw-port"];
            }
            PwPorts pw_ports = 21 [json_name = "pw-ports"];
         }
         Cist cist = 35 [json_name = "cist"];
         message Mstis {
            message Msti {
               uint32 instance_id = 1 [json_name = "instance-id"];
               string master_bridge_mac = 2 [json_name = "master-bridge-mac"];
               uint32 cost_to_master = 3 [json_name = "cost-to-master"];
               uint32 region_root_priority = 4 [json_name = "region-root-priority"];
               string region_root_mac = 5 [json_name = "region-root-mac"];
               uint32 irpc = 6 [json_name = "irpc"];
               uint32 root_port_priority = 7 [json_name = "root-port-priority"];
               uint32 root_port_id = 8 [json_name = "root-port-id"];
               uint32 master_bridge_priority = 9 [json_name = "master-bridge-priority"];
               uint32 bridge_priority = 10 [json_name = "bridge-priority"];
               string bridge_mac_address = 11 [json_name = "bridge-mac-address"];
               uint32 tc_count_per_hello = 12 [json_name = "tc-count-per-hello"];
               uint32 tc_tcn_receive = 13 [json_name = "tc-tcn-receive"];
               int32 tc_flag = 14 [json_name = "tc-flag"];
               message Ports {
                  message Port {
                     string if_name = 1 [json_name = "if-name"];
                     enum PortState {
                        INVALID_ENUM_VALUE_PortState = 0;
                        PortState_DOWN = 1;
                        PortState_DISABLED = 2;
                        PortState_FORWARDING = 3;
                        PortState_LEARNING = 4;
                        PortState_DISCARDING = 5;
                        PortState_INACTIVE = 6;
                     };
                     PortState port_state = 2 [json_name = "port-state"];
                     enum PortRole {
                        INVALID_ENUM_VALUE_PortRole = 0;
                        PortRole_DISABLED = 1;
                        PortRole_ALTERNATE = 2;
                        PortRole_BACKUP = 3;
                        PortRole_ROOT = 4;
                        PortRole_DESIGNATED = 5;
                        PortRole_MASTER = 6;
                     };
                     PortRole port_role = 3 [json_name = "port-role"];
                     uint32 port_priority = 4 [json_name = "port-priority"];
                     enum PortCostStandard {
                        INVALID_ENUM_VALUE_PortCostStandard = 0;
                        PortCostStandard_DOT1DX_1998 = 1;
                        PortCostStandard_DOT1T = 2;
                        PortCostStandard_LEGACY = 3;
                     };
                     PortCostStandard port_cost_standard = 5 [json_name = "port-cost-standard"];
                     uint32 port_cost = 6 [json_name = "port-cost"];
                     uint32 designate_bridge_priority = 7 [json_name = "designate-bridge-priority"];
                     string designate_bridge_mac_address = 8 [json_name = "designate-bridge-mac-address"];
                     uint32 designate_port_priority = 9 [json_name = "designate-port-priority"];
                     uint32 designate_port_id = 10 [json_name = "designate-port-id"];
                     uint32 remaining_hop = 11 [json_name = "remaining-hop"];
                     uint32 tc_tcn_send = 12 [json_name = "tc-tcn-send"];
                     uint32 tc_tcn_receive = 13 [json_name = "tc-tcn-receive"];
                  }
                  repeated Port port = 1 [json_name = "port"];
               }
               Ports ports = 15 [json_name = "ports"];
               message PwPorts {
                  message PwPort {
                     string vsi_name = 1 [json_name = "vsi-name"];
                     string pw_name = 2 [json_name = "pw-name"];
                     enum PortState {
                        INVALID_ENUM_VALUE_PortState = 0;
                        PortState_DOWN = 1;
                        PortState_DISABLED = 2;
                        PortState_FORWARDING = 3;
                        PortState_LEARNING = 4;
                        PortState_DISCARDING = 5;
                        PortState_INACTIVE = 6;
                     };
                     PortState port_state = 3 [json_name = "port-state"];
                     enum PortRole {
                        INVALID_ENUM_VALUE_PortRole = 0;
                        PortRole_DISABLED = 1;
                        PortRole_ALTERNATE = 2;
                        PortRole_BACKUP = 3;
                        PortRole_ROOT = 4;
                        PortRole_DESIGNATED = 5;
                        PortRole_MASTER = 6;
                     };
                     PortRole port_role = 4 [json_name = "port-role"];
                     uint32 port_priority = 5 [json_name = "port-priority"];
                     enum PortCostStandard {
                        INVALID_ENUM_VALUE_PortCostStandard = 0;
                        PortCostStandard_DOT1DX_1998 = 1;
                        PortCostStandard_DOT1T = 2;
                        PortCostStandard_LEGACY = 3;
                     };
                     PortCostStandard port_cost_standard = 6 [json_name = "port-cost-standard"];
                     uint32 port_cost = 7 [json_name = "port-cost"];
                     uint32 designate_bridge_priority = 8 [json_name = "designate-bridge-priority"];
                     string designate_bridge_mac_address = 9 [json_name = "designate-bridge-mac-address"];
                     uint32 designate_port_priority = 10 [json_name = "designate-port-priority"];
                     uint32 designate_port_id = 11 [json_name = "designate-port-id"];
                     uint32 remaining_hop = 12 [json_name = "remaining-hop"];
                     uint32 tc_tcn_send = 13 [json_name = "tc-tcn-send"];
                     uint32 tc_tcn_receive = 14 [json_name = "tc-tcn-receive"];
                  }
                  repeated PwPort pw_port = 1 [json_name = "pw-port"];
               }
               PwPorts pw_ports = 16 [json_name = "pw-ports"];
            }
            repeated Msti msti = 1 [json_name = "msti"];
         }
         Mstis mstis = 36 [json_name = "mstis"];
         message CistInfo {
            string bridge_id = 1 [json_name = "bridge-id"];
            string root_id = 2 [json_name = "root-id"];
            uint32 erpc_cost = 3 [json_name = "erpc-cost"];
            string regroot_id = 4 [json_name = "regroot-id"];
            uint32 irpc_cost = 5 [json_name = "irpc-cost"];
            uint32 active_hello_time = 6 [json_name = "active-hello-time"];
            uint32 active_max_age = 7 [json_name = "active-max-age"];
            uint32 active_forward_delay = 8 [json_name = "active-forward-delay"];
            uint32 active_max_hops = 9 [json_name = "active-max-hops"];
            string root_port_id = 10 [json_name = "root-port-id"];
            uint32 tc_tcn_receive_num = 11 [json_name = "tc-tcn-receive-num"];
            uint32 tc_count_pre_hello = 12 [json_name = "tc-count-pre-hello"];
            string last_change_interval = 13 [json_name = "last-change-interval"];
            uint32 tc_number = 14 [json_name = "tc-number"];
            bool is_topo_changed = 15 [json_name = "is-topo-changed"];
            message CistPortInfos {
               message CistPortInfo {
                  string interface_name = 1 [json_name = "interface-name"];
                  enum PortRole {
                     INVALID_ENUM_VALUE_PortRole = 0;
                     PortRole_DISABLED = 1;
                     PortRole_ALTERNATE = 2;
                     PortRole_BACKUP = 3;
                     PortRole_ROOT = 4;
                     PortRole_DESIGNATED = 5;
                     PortRole_MASTER = 6;
                  };
                  PortRole port_role = 2 [json_name = "port-role"];
                  enum PortState {
                     INVALID_ENUM_VALUE_PortState = 0;
                     PortState_DOWN = 1;
                     PortState_DISABLED = 2;
                     PortState_FORWARDING = 3;
                     PortState_LEARNING = 4;
                     PortState_DISCARDING = 5;
                     PortState_INACTIVE = 6;
                  };
                  PortState port_state = 3 [json_name = "port-state"];
               }
               repeated CistPortInfo cist_port_info = 1 [json_name = "cist-port-info"];
            }
            CistPortInfos cist_port_infos = 16 [json_name = "cist-port-infos"];
         }
         CistInfo cist_info = 37 [json_name = "cist-info"];
         MstiInfos msti_infos = 38 [json_name = "msti-infos"];
         message InterfaceBpduStatistics {
            message InterfaceBpduStatistic {
               uint32 instance_id = 1 [json_name = "instance-id"];
               string port_name = 2 [json_name = "port-name"];
               uint32 tc_send = 3 [json_name = "tc-send"];
               uint32 tc_receive = 4 [json_name = "tc-receive"];
               uint32 tc_discard = 5 [json_name = "tc-discard"];
               uint32 tcn_send = 6 [json_name = "tcn-send"];
               uint32 tcn_receive = 7 [json_name = "tcn-receive"];
               uint32 tcn_discard = 8 [json_name = "tcn-discard"];
            }
            repeated InterfaceBpduStatistic interface_bpdu_statistic = 1 [json_name = "interface-bpdu-statistic"];
         }
         InterfaceBpduStatistics interface_bpdu_statistics = 39 [json_name = "interface-bpdu-statistics"];
         message PwBpduStatistics {
            message PwBpduStatistic {
               uint32 instance_id = 1 [json_name = "instance-id"];
               string pw_name = 2 [json_name = "pw-name"];
               string vsi_name = 3 [json_name = "vsi-name"];
               uint32 tc_send = 4 [json_name = "tc-send"];
               uint32 tc_receive = 5 [json_name = "tc-receive"];
               uint32 tc_discard = 6 [json_name = "tc-discard"];
               uint32 tcn_send = 7 [json_name = "tcn-send"];
               uint32 tcn_receive = 8 [json_name = "tcn-receive"];
               uint32 tcn_discard = 9 [json_name = "tcn-discard"];
            }
            repeated PwBpduStatistic pw_bpdu_statistic = 1 [json_name = "pw-bpdu-statistic"];
         }
         PwBpduStatistics pw_bpdu_statistics = 40 [json_name = "pw-bpdu-statistics"];
      }
      repeated Process process = 1 [json_name = "process"];
   }
   Processs processs = 4 [json_name = "processs"];
   message Pwports {
      message Pwport {
         enum Compliance {
            Compliance_AUTO = 0;
            Compliance_DOT1S = 1;
            Compliance_LEGACY = 2;
         };
         Compliance compliance = 1;
         bool configDigestSnoop = 2;
         bool enable = 3;
         enum Encapsulation {
            Encapsulation_STP = 0;
            Encapsulation_VBST = 1;
         };
         Encapsulation encapsulation = 4;
         bool loopProtection = 5;
         bool noAgreementCheck = 6;
         enum PointToPoint {
            PointToPoint_AUTO = 0;
            PointToPoint_FORCEFALSE = 1;
            PointToPoint_FORCETRUE = 2;
         };
         PointToPoint pointToPoint = 7;
         string pwName = 8;
         bool rootProtection = 9;
         uint32 transmitLimit = 10;
         string vsiName = 11;
      }
      repeated Pwport pwport = 1;
   }
   Pwports pwports = 5;
   message DefaultProcess {
      bool enable = 1 [json_name = "enable"];
      bool bpdu_protection = 2 [json_name = "bpdu-protection"];
      uint32 max_hops = 3 [json_name = "max-hops"];
      enum Mode {
         Mode_STP = 0;
         Mode_RSTP = 2;
         Mode_MSTP = 3;
         Mode_VBST = 4;
      };
      Mode mode = 4 [json_name = "mode"];
      enum PathCostStandard {
         INVALID_ENUM_VALUE_PathCostStandard = 0;
         PathCostStandard_DOT1DX_1998 = 1;
         PathCostStandard_DOT1T = 2;
         PathCostStandard_LEGACY = 3;
      };
      PathCostStandard path_cost_standard = 5 [json_name = "path-cost-standard"];
      bool tc_protection = 6 [json_name = "tc-protection"];
      uint32 tc_protection_threshold = 7 [json_name = "tc-protection-threshold"];
      uint32 tc_protection_interval = 8 [json_name = "tc-protection-interval"];
      uint32 timer_factor = 9 [json_name = "timer-factor"];
      string region_name = 10 [json_name = "region-name"];
      uint32 revision_level = 11 [json_name = "revision-level"];
      uint32 forward_delay = 12 [json_name = "forward-delay"];
      uint32 hello_time = 13 [json_name = "hello-time"];
      uint32 max_age = 14 [json_name = "max-age"];
      message Instances {
         message Instance {
            uint32 id = 1 [json_name = "id"];
            uint32 priority = 2 [json_name = "priority"];
            enum RootType {
               INVALID_ENUM_VALUE_RootType = 0;
               RootType_NORMAL = 1;
               RootType_PRIMARY = 2;
               RootType_SECONDARY = 3;
            };
            RootType root_type = 3 [json_name = "root-type"];
            string vlan_mapping = 4 [json_name = "vlan-mapping"];
         }
         repeated Instance instance = 1 [json_name = "instance"];
      }
      Instances instances = 15 [json_name = "instances"];
      bool flush_capability = 16 [json_name = "flush-capability"];
      enum ConvergeMode {
         INVALID_ENUM_VALUE_ConvergeMode = 0;
         ConvergeMode_FAST = 1;
         ConvergeMode_NORMAL = 2;
      };
      ConvergeMode converge_mode = 17 [json_name = "converge-mode"];
      message DefaultInstance3 {
         uint32 priority = 1 [json_name = "priority"];
         enum RootType {
            INVALID_ENUM_VALUE_RootType = 0;
            RootType_NORMAL = 1;
            RootType_PRIMARY = 2;
            RootType_SECONDARY = 3;
         };
         RootType root_type = 2 [json_name = "root-type"];
         string vlan_mapping = 3 [json_name = "vlan-mapping"];
      }
      DefaultInstance3 default_instance3 = 18 [json_name = "default-instance"];
      message Cist {
         uint32 bridge_priority = 1 [json_name = "bridge-priority"];
         string bridge_mac_address = 2 [json_name = "bridge-mac-address"];
         uint32 hello_time = 3 [json_name = "hello-time"];
         uint32 max_age = 4 [json_name = "max-age"];
         uint32 forward_delay = 5 [json_name = "forward-delay"];
         uint32 max_hops = 6 [json_name = "max-hops"];
         uint32 root_priority = 7 [json_name = "root-priority"];
         string root_mac_address = 8 [json_name = "root-mac-address"];
         uint32 erpc = 9 [json_name = "erpc"];
         uint32 regional_root_priority = 10 [json_name = "regional-root-priority"];
         string regional_root_mac_address = 11 [json_name = "regional-root-mac-address"];
         uint32 irpc = 12 [json_name = "irpc"];
         uint32 root_port_priority = 13 [json_name = "root-port-priority"];
         uint32 root_port_id = 14 [json_name = "root-port-id"];
         bool bpdu_protection = 15 [json_name = "bpdu-protection"];
         uint32 tc_receive = 16 [json_name = "tc-receive"];
         uint32 tc_count_per_hello = 17 [json_name = "tc-count-per-hello"];
         string time_past_last_tc = 18 [json_name = "time-past-last-tc"];
         int32 tc_flag = 19 [json_name = "tc-flag"];
         message Ports {
            message Port {
               string if_name = 1 [json_name = "if-name"];
               uint32 tc_tcn_send = 2 [json_name = "tc-tcn-send"];
               uint32 tc_tcn_receive = 3 [json_name = "tc-tcn-receive"];
               uint32 tx_tcn = 4 [json_name = "tx-tcn"];
               uint32 tx_configuration = 5 [json_name = "tx-configuration"];
               uint32 tx_rst = 6 [json_name = "tx-rst"];
               uint32 tx_mst = 7 [json_name = "tx-mst"];
               uint32 rx_tcn = 8 [json_name = "rx-tcn"];
               uint32 rx_configuration = 9 [json_name = "rx-configuration"];
               uint32 rx_rst = 10 [json_name = "rx-rst"];
               uint32 rx_mst = 11 [json_name = "rx-mst"];
               enum PortCostStandard {
                  INVALID_ENUM_VALUE_PortCostStandard = 0;
                  PortCostStandard_DOT1DX_1998 = 1;
                  PortCostStandard_DOT1T = 2;
                  PortCostStandard_LEGACY = 3;
               };
               PortCostStandard port_cost_standard = 12 [json_name = "port-cost-standard"];
               uint32 port_cost = 13 [json_name = "port-cost"];
               uint32 designate_bridge_priority = 14 [json_name = "designate-bridge-priority"];
               string designate_bridge_mac_address = 15 [json_name = "designate-bridge-mac-address"];
               uint32 designate_port_priority = 16 [json_name = "designate-port-priority"];
               uint32 designate_port_id = 17 [json_name = "designate-port-id"];
               bool port_edge = 18 [json_name = "port-edge"];
               uint32 port_priority = 19 [json_name = "port-priority"];
               bool point_to_point = 20 [json_name = "point-to-point"];
               uint32 transmit_limit = 21 [json_name = "transmit-limit"];
               enum ProtectionType {
                  INVALID_ENUM_VALUE_ProtectionType = 0;
                  ProtectionType_NONE = 1;
                  ProtectionType_LOOPBACK = 2;
                  ProtectionType_BPDUX_ROOT = 3;
                  ProtectionType_ROOT = 4;
                  ProtectionType_BPDU = 5;
                  ProtectionType_LOOP = 6;
               };
               ProtectionType protection_type = 22 [json_name = "protection-type"];
               enum StpMode {
                  StpMode_STP = 0;
                  StpMode_RSTP = 2;
                  StpMode_MSTP = 3;
                  StpMode_VBST = 4;
               };
               StpMode stp_mode = 23 [json_name = "stp-mode"];
               enum Compliance {
                  INVALID_ENUM_VALUE_Compliance = 0;
                  Compliance_AUTO = 1;
                  Compliance_DOT1S = 2;
                  Compliance_LEGACY = 3;
               };
               Compliance compliance = 24 [json_name = "compliance"];
               uint32 hello_time = 25 [json_name = "hello-time"];
               uint32 max_age = 26 [json_name = "max-age"];
               uint32 forward_delay = 27 [json_name = "forward-delay"];
               enum PortRole {
                  INVALID_ENUM_VALUE_PortRole = 0;
                  PortRole_DISABLED = 1;
                  PortRole_ALTERNATE = 2;
                  PortRole_BACKUP = 3;
                  PortRole_ROOT = 4;
                  PortRole_DESIGNATED = 5;
                  PortRole_MASTER = 6;
               };
               PortRole port_role = 28 [json_name = "port-role"];
               enum PortState {
                  INVALID_ENUM_VALUE_PortState = 0;
                  PortState_DOWN = 1;
                  PortState_DISABLED = 2;
                  PortState_FORWARDING = 3;
                  PortState_LEARNING = 4;
                  PortState_DISCARDING = 5;
                  PortState_INACTIVE = 6;
               };
               PortState port_state = 29 [json_name = "port-state"];
               uint32 remaining_hop = 30 [json_name = "remaining-hop"];
               uint32 message_age = 31 [json_name = "message-age"];
            }
            repeated Port port = 1 [json_name = "port"];
         }
         Ports ports = 20 [json_name = "ports"];
         message PwPorts {
            message PwPort {
               string vsi_name = 1 [json_name = "vsi-name"];
               string pw_name = 2 [json_name = "pw-name"];
               uint32 tc_tcn_send = 3 [json_name = "tc-tcn-send"];
               uint32 tc_tcn_receive = 4 [json_name = "tc-tcn-receive"];
               uint32 tx_tcn = 5 [json_name = "tx-tcn"];
               uint32 tx_configuration = 6 [json_name = "tx-configuration"];
               uint32 tx_rst = 7 [json_name = "tx-rst"];
               uint32 tx_mst = 8 [json_name = "tx-mst"];
               uint32 rx_tcn = 9 [json_name = "rx-tcn"];
               uint32 rx_configuration = 10 [json_name = "rx-configuration"];
               uint32 rx_rst = 11 [json_name = "rx-rst"];
               uint32 rx_mst = 12 [json_name = "rx-mst"];
               enum PortCostStandard {
                  INVALID_ENUM_VALUE_PortCostStandard = 0;
                  PortCostStandard_DOT1DX_1998 = 1;
                  PortCostStandard_DOT1T = 2;
                  PortCostStandard_LEGACY = 3;
               };
               PortCostStandard port_cost_standard = 13 [json_name = "port-cost-standard"];
               uint32 port_cost = 14 [json_name = "port-cost"];
               uint32 designate_bridge_priority = 15 [json_name = "designate-bridge-priority"];
               string designate_bridge_mac_address = 16 [json_name = "designate-bridge-mac-address"];
               uint32 designate_port_priority = 17 [json_name = "designate-port-priority"];
               uint32 designate_port_id = 18 [json_name = "designate-port-id"];
               bool port_edge = 19 [json_name = "port-edge"];
               uint32 port_priority = 20 [json_name = "port-priority"];
               bool point_to_point = 21 [json_name = "point-to-point"];
               uint32 transmit_limit = 22 [json_name = "transmit-limit"];
               enum ProtectionType {
                  INVALID_ENUM_VALUE_ProtectionType = 0;
                  ProtectionType_NONE = 1;
                  ProtectionType_LOOPBACK = 2;
                  ProtectionType_BPDUX_ROOT = 3;
                  ProtectionType_ROOT = 4;
                  ProtectionType_BPDU = 5;
                  ProtectionType_LOOP = 6;
               };
               ProtectionType protection_type = 23 [json_name = "protection-type"];
               enum StpMode {
                  StpMode_STP = 0;
                  StpMode_RSTP = 2;
                  StpMode_MSTP = 3;
                  StpMode_VBST = 4;
               };
               StpMode stp_mode = 24 [json_name = "stp-mode"];
               enum Compliance {
                  INVALID_ENUM_VALUE_Compliance = 0;
                  Compliance_AUTO = 1;
                  Compliance_DOT1S = 2;
                  Compliance_LEGACY = 3;
               };
               Compliance compliance = 25 [json_name = "compliance"];
               uint32 hello_time = 26 [json_name = "hello-time"];
               uint32 max_age = 27 [json_name = "max-age"];
               uint32 forward_delay = 28 [json_name = "forward-delay"];
               enum PortRole {
                  INVALID_ENUM_VALUE_PortRole = 0;
                  PortRole_DISABLED = 1;
                  PortRole_ALTERNATE = 2;
                  PortRole_BACKUP = 3;
                  PortRole_ROOT = 4;
                  PortRole_DESIGNATED = 5;
                  PortRole_MASTER = 6;
               };
               PortRole port_role = 29 [json_name = "port-role"];
               enum PortState {
                  INVALID_ENUM_VALUE_PortState = 0;
                  PortState_DOWN = 1;
                  PortState_DISABLED = 2;
                  PortState_FORWARDING = 3;
                  PortState_LEARNING = 4;
                  PortState_DISCARDING = 5;
                  PortState_INACTIVE = 6;
               };
               PortState port_state = 30 [json_name = "port-state"];
               uint32 remaining_hop = 31 [json_name = "remaining-hop"];
               uint32 message_age = 32 [json_name = "message-age"];
            }
            repeated PwPort pw_port = 1 [json_name = "pw-port"];
         }
         PwPorts pw_ports = 21 [json_name = "pw-ports"];
      }
      Cist cist = 19 [json_name = "cist"];
      message Mstis {
         message Msti {
            uint32 instance_id = 1 [json_name = "instance-id"];
            string master_bridge_mac = 2 [json_name = "master-bridge-mac"];
            uint32 cost_to_master = 3 [json_name = "cost-to-master"];
            uint32 region_root_priority = 4 [json_name = "region-root-priority"];
            string region_root_mac = 5 [json_name = "region-root-mac"];
            uint32 irpc = 6 [json_name = "irpc"];
            uint32 root_port_priority = 7 [json_name = "root-port-priority"];
            uint32 root_port_id = 8 [json_name = "root-port-id"];
            uint32 master_bridge_priority = 9 [json_name = "master-bridge-priority"];
            uint32 bridge_priority = 10 [json_name = "bridge-priority"];
            string bridge_mac_address = 11 [json_name = "bridge-mac-address"];
            uint32 tc_count_per_hello = 12 [json_name = "tc-count-per-hello"];
            uint32 tc_tcn_receive = 13 [json_name = "tc-tcn-receive"];
            int32 tc_flag = 14 [json_name = "tc-flag"];
            message Ports {
               message Port {
                  string if_name = 1 [json_name = "if-name"];
                  enum PortState {
                     INVALID_ENUM_VALUE_PortState = 0;
                     PortState_DOWN = 1;
                     PortState_DISABLED = 2;
                     PortState_FORWARDING = 3;
                     PortState_LEARNING = 4;
                     PortState_DISCARDING = 5;
                     PortState_INACTIVE = 6;
                  };
                  PortState port_state = 2 [json_name = "port-state"];
                  enum PortRole {
                     INVALID_ENUM_VALUE_PortRole = 0;
                     PortRole_DISABLED = 1;
                     PortRole_ALTERNATE = 2;
                     PortRole_BACKUP = 3;
                     PortRole_ROOT = 4;
                     PortRole_DESIGNATED = 5;
                     PortRole_MASTER = 6;
                  };
                  PortRole port_role = 3 [json_name = "port-role"];
                  uint32 port_priority = 4 [json_name = "port-priority"];
                  enum PortCostStandard {
                     INVALID_ENUM_VALUE_PortCostStandard = 0;
                     PortCostStandard_DOT1DX_1998 = 1;
                     PortCostStandard_DOT1T = 2;
                     PortCostStandard_LEGACY = 3;
                  };
                  PortCostStandard port_cost_standard = 5 [json_name = "port-cost-standard"];
                  uint32 port_cost = 6 [json_name = "port-cost"];
                  uint32 designate_bridge_priority = 7 [json_name = "designate-bridge-priority"];
                  string designate_bridge_mac_address = 8 [json_name = "designate-bridge-mac-address"];
                  uint32 designate_port_priority = 9 [json_name = "designate-port-priority"];
                  uint32 designate_port_id = 10 [json_name = "designate-port-id"];
                  uint32 remaining_hop = 11 [json_name = "remaining-hop"];
                  uint32 tc_tcn_send = 12 [json_name = "tc-tcn-send"];
                  uint32 tc_tcn_receive = 13 [json_name = "tc-tcn-receive"];
               }
               repeated Port port = 1 [json_name = "port"];
            }
            Ports ports = 15 [json_name = "ports"];
            message PwPorts {
               message PwPort {
                  string vsi_name = 1 [json_name = "vsi-name"];
                  string pw_name = 2 [json_name = "pw-name"];
                  enum PortState {
                     INVALID_ENUM_VALUE_PortState = 0;
                     PortState_DOWN = 1;
                     PortState_DISABLED = 2;
                     PortState_FORWARDING = 3;
                     PortState_LEARNING = 4;
                     PortState_DISCARDING = 5;
                     PortState_INACTIVE = 6;
                  };
                  PortState port_state = 3 [json_name = "port-state"];
                  enum PortRole {
                     INVALID_ENUM_VALUE_PortRole = 0;
                     PortRole_DISABLED = 1;
                     PortRole_ALTERNATE = 2;
                     PortRole_BACKUP = 3;
                     PortRole_ROOT = 4;
                     PortRole_DESIGNATED = 5;
                     PortRole_MASTER = 6;
                  };
                  PortRole port_role = 4 [json_name = "port-role"];
                  uint32 port_priority = 5 [json_name = "port-priority"];
                  enum PortCostStandard {
                     INVALID_ENUM_VALUE_PortCostStandard = 0;
                     PortCostStandard_DOT1DX_1998 = 1;
                     PortCostStandard_DOT1T = 2;
                     PortCostStandard_LEGACY = 3;
                  };
                  PortCostStandard port_cost_standard = 6 [json_name = "port-cost-standard"];
                  uint32 port_cost = 7 [json_name = "port-cost"];
                  uint32 designate_bridge_priority = 8 [json_name = "designate-bridge-priority"];
                  string designate_bridge_mac_address = 9 [json_name = "designate-bridge-mac-address"];
                  uint32 designate_port_priority = 10 [json_name = "designate-port-priority"];
                  uint32 designate_port_id = 11 [json_name = "designate-port-id"];
                  uint32 remaining_hop = 12 [json_name = "remaining-hop"];
                  uint32 tc_tcn_send = 13 [json_name = "tc-tcn-send"];
                  uint32 tc_tcn_receive = 14 [json_name = "tc-tcn-receive"];
               }
               repeated PwPort pw_port = 1 [json_name = "pw-port"];
            }
            PwPorts pw_ports = 16 [json_name = "pw-ports"];
         }
         repeated Msti msti = 1 [json_name = "msti"];
      }
      Mstis mstis = 20 [json_name = "mstis"];
      message VbstProcess {
         message VbstVlans {
            message VbstVlan {
               int32 vlan_id = 1 [json_name = "vlan-id"];
               bool enable = 2 [json_name = "enable"];
               uint32 priority = 3 [json_name = "priority"];
               enum RootType {
                  INVALID_ENUM_VALUE_RootType = 0;
                  RootType_NORMAL = 1;
                  RootType_PRIMARY = 2;
                  RootType_SECONDARY = 3;
               };
               RootType root_type = 4 [json_name = "root-type"];
               uint32 forward_delay = 5 [json_name = "forward-delay"];
               uint32 hello_time = 6 [json_name = "hello-time"];
               uint32 max_age = 7 [json_name = "max-age"];
            }
            repeated VbstVlan vbst_vlan = 1 [json_name = "vbst-vlan"];
         }
         VbstVlans vbst_vlans = 1 [json_name = "vbst-vlans"];
         message VbstInfos {
            message VbstInfo {
               uint32 vlan_id = 1 [json_name = "vlan-id"];
               uint32 instance_id = 2 [json_name = "instance-id"];
               string bridge_mac = 3 [json_name = "bridge-mac"];
               uint32 bridge_priority = 4 [json_name = "bridge-priority"];
               string root_mac = 5 [json_name = "root-mac"];
               uint32 root_priority = 6 [json_name = "root-priority"];
               uint32 cost_to_root = 7 [json_name = "cost-to-root"];
               uint32 root_port_id = 8 [json_name = "root-port-id"];
               enum RootType {
                  INVALID_ENUM_VALUE_RootType = 0;
                  RootType_NORMAL = 1;
                  RootType_PRIMARY = 2;
                  RootType_SECONDARY = 3;
               };
               RootType root_type = 9 [json_name = "root-type"];
               message Ports {
                  message Port {
                     string if_name = 1 [json_name = "if-name"];
                     enum PortState {
                        INVALID_ENUM_VALUE_PortState = 0;
                        PortState_DOWN = 1;
                        PortState_DISABLED = 2;
                        PortState_FORWARDING = 3;
                        PortState_LEARNING = 4;
                        PortState_DISCARDING = 5;
                        PortState_INACTIVE = 6;
                     };
                     PortState port_state = 2 [json_name = "port-state"];
                     enum PortRole {
                        INVALID_ENUM_VALUE_PortRole = 0;
                        PortRole_DISABLED = 1;
                        PortRole_ALTERNATE = 2;
                        PortRole_BACKUP = 3;
                        PortRole_ROOT = 4;
                        PortRole_DESIGNATED = 5;
                        PortRole_MASTER = 6;
                     };
                     PortRole port_role = 3 [json_name = "port-role"];
                     uint32 port_priority = 4 [json_name = "port-priority"];
                     enum PortCostStandard {
                        INVALID_ENUM_VALUE_PortCostStandard = 0;
                        PortCostStandard_DOT1DX_1998 = 1;
                        PortCostStandard_DOT1T = 2;
                        PortCostStandard_LEGACY = 3;
                     };
                     PortCostStandard port_cost_standard = 5 [json_name = "port-cost-standard"];
                     uint32 port_cost = 6 [json_name = "port-cost"];
                     uint32 desi_bridge_priority = 7 [json_name = "desi-bridge-priority"];
                     string desi_bridge_mac_address = 8 [json_name = "desi-bridge-mac-address"];
                     uint32 desi_port_priority = 9 [json_name = "desi-port-priority"];
                     uint32 desi_port_id = 10 [json_name = "desi-port-id"];
                     uint32 tc_send = 11 [json_name = "tc-send"];
                     uint32 tc_receive = 12 [json_name = "tc-receive"];
                     uint32 tcn_send = 13 [json_name = "tcn-send"];
                     uint32 tcn_receive = 14 [json_name = "tcn-receive"];
                     uint32 config_send = 15 [json_name = "config-send"];
                     uint32 config_receive = 16 [json_name = "config-receive"];
                     uint32 rst_send = 17 [json_name = "rst-send"];
                     uint32 rst_receive = 18 [json_name = "rst-receive"];
                     uint32 bpdu_send = 19 [json_name = "bpdu-send"];
                     uint32 bpdu_receive = 20 [json_name = "bpdu-receive"];
                  }
                  repeated Port port = 1 [json_name = "port"];
               }
               Ports ports = 10 [json_name = "ports"];
            }
            repeated VbstInfo vbst_info = 1 [json_name = "vbst-info"];
         }
         VbstInfos vbst_infos = 2 [json_name = "vbst-infos"];
      }
      VbstProcess vbst_process = 21 [json_name = "vbst-process"];
      message CistInfo {
         string bridge_id = 1 [json_name = "bridge-id"];
         string root_id = 2 [json_name = "root-id"];
         uint32 erpc_cost = 3 [json_name = "erpc-cost"];
         string regroot_id = 4 [json_name = "regroot-id"];
         uint32 irpc_cost = 5 [json_name = "irpc-cost"];
         uint32 active_hello_time = 6 [json_name = "active-hello-time"];
         uint32 active_max_age = 7 [json_name = "active-max-age"];
         uint32 active_forward_delay = 8 [json_name = "active-forward-delay"];
         uint32 active_max_hops = 9 [json_name = "active-max-hops"];
         string root_port_id = 10 [json_name = "root-port-id"];
         uint32 tc_tcn_receive_num = 11 [json_name = "tc-tcn-receive-num"];
         uint32 tc_count_pre_hello = 12 [json_name = "tc-count-pre-hello"];
         string last_change_interval = 13 [json_name = "last-change-interval"];
         uint32 tc_number = 14 [json_name = "tc-number"];
         bool is_topo_changed = 15 [json_name = "is-topo-changed"];
         message CistPortInfos {
            message CistPortInfo {
               string interface_name = 1 [json_name = "interface-name"];
               enum PortRole {
                  INVALID_ENUM_VALUE_PortRole = 0;
                  PortRole_DISABLED = 1;
                  PortRole_ALTERNATE = 2;
                  PortRole_BACKUP = 3;
                  PortRole_ROOT = 4;
                  PortRole_DESIGNATED = 5;
                  PortRole_MASTER = 6;
               };
               PortRole port_role = 2 [json_name = "port-role"];
               enum PortState {
                  INVALID_ENUM_VALUE_PortState = 0;
                  PortState_DOWN = 1;
                  PortState_DISABLED = 2;
                  PortState_FORWARDING = 3;
                  PortState_LEARNING = 4;
                  PortState_DISCARDING = 5;
                  PortState_INACTIVE = 6;
               };
               PortState port_state = 3 [json_name = "port-state"];
            }
            repeated CistPortInfo cist_port_info = 1 [json_name = "cist-port-info"];
         }
         CistPortInfos cist_port_infos = 16 [json_name = "cist-port-infos"];
      }
      CistInfo cist_info = 22 [json_name = "cist-info"];
      message MstiInfos {
         message MstiInfo {
            uint32 instance_id = 1 [json_name = "instance-id"];
            string bridge_id = 2 [json_name = "bridge-id"];
            string reg_root_id = 3 [json_name = "reg-root-id"];
            string root_port_id = 4 [json_name = "root-port-id"];
            string master_bridge = 5 [json_name = "master-bridge"];
            uint32 irpc_cost = 6 [json_name = "irpc-cost"];
            uint32 cost_to_master = 7 [json_name = "cost-to-master"];
            uint32 tc_receive_num = 8 [json_name = "tc-receive-num"];
            uint32 tc_count_pre_hello = 9 [json_name = "tc-count-pre-hello"];
            string last_change_interval = 10 [json_name = "last-change-interval"];
            string last_change_occurred = 11 [json_name = "last-change-occurred"];
            uint32 tc_number = 12 [json_name = "tc-number"];
            bool is_topo_changed = 13 [json_name = "is-topo-changed"];
            message MstiPortInfos {
               message MstiPortInfo {
                  string interface_name = 1 [json_name = "interface-name"];
                  enum PortRole {
                     INVALID_ENUM_VALUE_PortRole = 0;
                     PortRole_DISABLED = 1;
                     PortRole_ALTERNATE = 2;
                     PortRole_BACKUP = 3;
                     PortRole_ROOT = 4;
                     PortRole_DESIGNATED = 5;
                     PortRole_MASTER = 6;
                  };
                  PortRole port_role = 2 [json_name = "port-role"];
                  enum PortState {
                     INVALID_ENUM_VALUE_PortState = 0;
                     PortState_DOWN = 1;
                     PortState_DISABLED = 2;
                     PortState_FORWARDING = 3;
                     PortState_LEARNING = 4;
                     PortState_DISCARDING = 5;
                     PortState_INACTIVE = 6;
                  };
                  PortState port_state = 3 [json_name = "port-state"];
               }
               repeated MstiPortInfo msti_port_info = 1 [json_name = "msti-port-info"];
            }
            MstiPortInfos msti_port_infos = 14 [json_name = "msti-port-infos"];
         }
         repeated MstiInfo msti_info = 1 [json_name = "msti-info"];
      }
      MstiInfos msti_infos = 23 [json_name = "msti-infos"];
      message InterfaceBpduStatistics {
         message InterfaceBpduStatistic {
            uint32 instance_id = 1 [json_name = "instance-id"];
            string port_name = 2 [json_name = "port-name"];
            uint32 tc_send = 3 [json_name = "tc-send"];
            uint32 tc_receive = 4 [json_name = "tc-receive"];
            uint32 tc_discard = 5 [json_name = "tc-discard"];
            uint32 tcn_send = 6 [json_name = "tcn-send"];
            uint32 tcn_receive = 7 [json_name = "tcn-receive"];
            uint32 tcn_discard = 8 [json_name = "tcn-discard"];
         }
         repeated InterfaceBpduStatistic interface_bpdu_statistic = 1 [json_name = "interface-bpdu-statistic"];
      }
      InterfaceBpduStatistics interface_bpdu_statistics = 24 [json_name = "interface-bpdu-statistics"];
      message PwBpduStatistics {
         message PwBpduStatistic {
            uint32 instance_id = 1 [json_name = "instance-id"];
            string pw_name = 2 [json_name = "pw-name"];
            string vsi_name = 3 [json_name = "vsi-name"];
            uint32 tc_send = 4 [json_name = "tc-send"];
            uint32 tc_receive = 5 [json_name = "tc-receive"];
            uint32 tc_discard = 6 [json_name = "tc-discard"];
            uint32 tcn_send = 7 [json_name = "tcn-send"];
            uint32 tcn_receive = 8 [json_name = "tcn-receive"];
            uint32 tcn_discard = 9 [json_name = "tcn-discard"];
         }
         repeated PwBpduStatistic pw_bpdu_statistic = 1 [json_name = "pw-bpdu-statistic"];
      }
      PwBpduStatistics pw_bpdu_statistics = 25 [json_name = "pw-bpdu-statistics"];
   }
   DefaultProcess default_process = 6 [json_name = "default-process"];
   message ErrorPacketStatistic {
      string time = 1 [json_name = "time"];
      uint32 count = 2 [json_name = "count"];
      string content = 3 [json_name = "content"];
   }
   ErrorPacketStatistic error_packet_statistic = 7 [json_name = "error-packet-statistic"];
}
message HwMstpProLoopbackDetected {
   uint32 IfIndex = 1;
   uint32 InstanceID = 2;
   uint32 PortID1 = 3;
   uint32 PortID2 = 4;
   uint32 PortID3 = 5;
   uint32 PortID4 = 6;
   uint32 PortIDFlag = 7;
   string PortName = 8;
   uint32 PortState = 9;
   uint32 ProcessID = 10;
   string PwName = 11;
}
message HwMstpProNewBridgeLostRootPrimary {
   uint32 InstanceID = 1;
   uint32 ProcessID = 2;
   uint32 proInstRootType = 3;
}
message HwMstpProNewEdgePortChanged {
   uint32 IfIndex = 1;
   uint32 InstanceID = 2;
   uint32 PortID1 = 3;
   uint32 PortID2 = 4;
   uint32 PortID3 = 5;
   uint32 PortID4 = 6;
   uint32 PortIDFlag = 7;
   string PortName = 8;
   uint32 PortState = 9;
   uint32 ProcessID = 10;
   string PwName = 11;
}
message HwMstpProNewPortBpduGuarded {
   uint32 IfIndex = 1;
   uint32 InstanceID = 2;
   uint32 PortID1 = 3;
   uint32 PortID2 = 4;
   uint32 PortID3 = 5;
   uint32 PortID4 = 6;
   uint32 PortIDFlag = 7;
   string PortName = 8;
   uint32 PortState = 9;
   uint32 ProcessID = 10;
}
message HwMstpProNewPortLoopGuarded {
   uint32 IfIndex = 1;
   uint32 InstanceID = 2;
   uint32 PortID1 = 3;
   uint32 PortID2 = 4;
   uint32 PortID3 = 5;
   uint32 PortID4 = 6;
   uint32 PortIDFlag = 7;
   string PortName = 8;
   uint32 PortState = 9;
   uint32 ProcessID = 10;
   string PwName = 11;
}
message HwMstpProNewPortRootGuarded {
   uint32 IfIndex = 1;
   uint32 InstanceID = 2;
   uint32 PortID1 = 3;
   uint32 PortID2 = 4;
   uint32 PortID3 = 5;
   uint32 PortID4 = 6;
   uint32 PortIDFlag = 7;
   string PortName = 8;
   uint32 PortState = 9;
   uint32 ProcessID = 10;
   string PwName = 11;
}
message HwMstpProNewPortStateDiscarding {
   uint32 IfIndex = 1;
   uint32 InstanceID = 2;
   uint32 PortID1 = 3;
   uint32 PortID2 = 4;
   uint32 PortID3 = 5;
   uint32 PortID4 = 6;
   uint32 PortIDFlag = 7;
   string PortName = 8;
   uint32 PortState = 9;
   uint32 ProcessID = 10;
   string PwName = 11;
}
message HwMstpProNewPortStateForwarding {
   uint32 IfIndex = 1;
   uint32 InstanceID = 2;
   uint32 PortID1 = 3;
   uint32 PortID2 = 4;
   uint32 PortID3 = 5;
   uint32 PortID4 = 6;
   uint32 PortIDFlag = 7;
   string PortName = 8;
   uint32 PortState = 9;
   uint32 ProcessID = 10;
   string PwName = 11;
}
message HwMstpProRootChanged {
   uint32 InstanceID = 1;
   uint32 PortID = 2;
   uint32 ProcessID = 3;
}
message HwMstpProTcGuarded {
   uint32 InstanceID = 1;
   uint32 ProcessID = 2;
   uint32 proInstBridgePriority = 3;
   uint32 proTcGuard = 4;
}
message HwMstpiBridgeLostRootPrimary {
   uint32 InstanceID = 1;
}
message HwMstpiEdgePortChanged {
   uint32 EdgePortEnableState = 1;
   uint32 IfIndex = 2;
   uint32 InstanceID = 3;
   uint32 PortIndex = 4;
   string PortName = 5;
   string PwName = 6;
}
message HwMstpiPortBpduGuarded {
   uint32 IfIndex = 1;
   uint32 InstanceID = 2;
   uint32 PortIndex = 3;
   string PortName = 4;
}
message HwMstpiPortLoopGuarded {
   uint32 IfIndex = 1;
   uint32 InstanceID = 2;
   uint32 PortIndex = 3;
   string PortName = 4;
   string PwName = 5;
}
message HwMstpiPortRootGuarded {
   uint32 IfIndex = 1;
   uint32 InstanceID = 2;
   uint32 PortIndex = 3;
   string PortName = 4;
   string PwName = 5;
}
message HwMstpiPortStateDiscarding {
   uint32 IfIndex = 1;
   uint32 InstanceID = 2;
   uint32 PortIndex = 3;
   string PortName = 4;
   string PwName = 5;
}
message HwMstpiPortStateForwarding {
   uint32 IfIndex = 1;
   uint32 InstanceID = 2;
   uint32 PortIndex = 3;
   string PortName = 4;
   string PwName = 5;
}
message HwMstpiTcGuarded {
   uint32 InstanceID = 1;
   uint32 bridgePriority = 2;
}
message NewRoot {
}
message TopologyChange {
}
message hwMstpProRootLost {
   uint32 ProcessID = 1;
   uint32 InstanceID = 2;
   uint32 ProInstRootType = 3;
}
message hwMstpProRootResume {
   uint32 ProcessID = 1;
   uint32 InstanceID = 2;
   uint32 ProInstRootType = 3;
}
message hwMstpProRootShake {
   uint32 ProcessID = 1;
   uint32 InstanceID = 2;
}
message hwMstpProRootShakeResume {
   uint32 ProcessID = 1;
   uint32 InstanceID = 2;
}
message TcFlap {
   uint32 ProcessID = 1;
   uint32 InstanceID = 2;
}
message TcFlapResume {
   uint32 ProcessID = 1;
   uint32 InstanceID = 2;
}
message ReceiveTcFlap {
   uint32 ProcessID = 1;
   uint32 InstanceID = 2;
   string PortName = 3;
   string PwName = 4;
   string SrcMac = 5;
}

