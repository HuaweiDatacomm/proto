syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-09-15 19:29:44
// ProtoYang-version 1
// module huawei-mac-flapping
// revision 2020-04-24
// revision 2020-03-11
// revision 2020-03-09
// revision 2019-04-23
// namespace urn:huawei:yang:huawei-mac-flapping

package huawei_mac_flapping;

message MacFlapping {
   message GlobalAttribute {
      enum PreciseBlockPolicy {
         INVALID_ENUM_VALUE_PreciseBlockPolicy = 0;
         PreciseBlockPolicy_DISABLE = 1;
         PreciseBlockPolicy_ENABLE = 2;
      };
      PreciseBlockPolicy precise_block_policy = 1 [json_name = "precise-block-policy"];
      uint32 generate_time = 2 [json_name = "generate-time"];
      enum AssistStp {
         INVALID_ENUM_VALUE_AssistStp = 0;
         AssistStp_DISABLE = 1;
         AssistStp_ENABLE = 2;
      };
      AssistStp assist_stp = 3 [json_name = "assist-stp"];
      enum TrafficSuppression {
         INVALID_ENUM_VALUE_TrafficSuppression = 0;
         TrafficSuppression_DISABLE = 1;
         TrafficSuppression_ENABLE = 2;
      };
      TrafficSuppression traffic_suppression = 4 [json_name = "traffic-suppression"];
      uint32 traffic_suppression_threshold = 5 [json_name = "traffic-suppression-threshold"];
      message AlarmPara {
         uint32 loop_times = 1 [json_name = "loop-times"];
         uint32 detect_cycle = 2 [json_name = "detect-cycle"];
         uint32 cycles = 3 [json_name = "cycles"];
         enum AlarmState {
            AlarmState_DISABLE = 0;
            AlarmState_ENABLE = 1;
         };
         AlarmState alarm_state = 4 [json_name = "alarm-state"];
      }
      AlarmPara alarm_para = 6 [json_name = "alarm-para"];
   }
   GlobalAttribute global_attribute = 1 [json_name = "global-attribute"];
   message VsiBlocks {
      message VsiBlock {
         string vsi_name = 1 [json_name = "vsi-name"];
         string interface_name = 2 [json_name = "interface-name"];
         string peer_ip = 3 [json_name = "peer-ip"];
         uint32 pw_id = 4 [json_name = "pw-id"];
         uint32 mapping_vlan_id = 5 [json_name = "mapping-vlan-id"];
         string vlanif_name = 6 [json_name = "vlanif-name"];
         enum BlockState {
            INVALID_ENUM_VALUE_BlockState = 0;
            BlockState_TEMPORARY = 1;
            BlockState_TERMANENT = 2;
         };
         BlockState block_state = 7 [json_name = "block-state"];
         string linked_interface_name = 8 [json_name = "linked-interface-name"];
         string detect_mac = 9 [json_name = "detect-mac"];
         enum BlockType {
            INVALID_ENUM_VALUE_BlockType = 0;
            BlockType_TRUST = 1;
            BlockType_NOX_TRUST = 2;
         };
         BlockType block_type = 10 [json_name = "block-type"];
         enum State {
            INVALID_ENUM_VALUE_State = 0;
            State_TEMPORARY = 1;
            State_PERMANENT = 2;
         };
         State state = 11 [json_name = "state"];
         enum TrustType {
            INVALID_ENUM_VALUE_TrustType = 0;
            TrustType_PRECISE = 1;
            TrustType_IMPRECISE = 2;
         };
         TrustType trust_type = 12 [json_name = "trust-type"];
      }
      repeated VsiBlock vsi_block = 1 [json_name = "vsi-block"];
   }
   VsiBlocks vsi_blocks = 2 [json_name = "vsi-blocks"];
   message BdBlocks {
      message BdBlock {
         uint32 bd_id = 1 [json_name = "bd-id"];
         string interface_name = 2 [json_name = "interface-name"];
         string peer_ip = 3 [json_name = "peer-ip"];
         uint32 pw_id = 4 [json_name = "pw-id"];
         enum BlockState {
            INVALID_ENUM_VALUE_BlockState = 0;
            BlockState_TEMPORARY = 1;
            BlockState_TERMANENT = 2;
         };
         BlockState block_state = 5 [json_name = "block-state"];
         bool is_black_hole_block = 6 [json_name = "is-black-hole-block"];
         string linked_interface_name = 7 [json_name = "linked-interface-name"];
         string detect_mac = 8 [json_name = "detect-mac"];
         enum BlockType {
            INVALID_ENUM_VALUE_BlockType = 0;
            BlockType_TRUST = 1;
            BlockType_NOX_TRUST = 2;
         };
         BlockType block_type = 9 [json_name = "block-type"];
         enum State {
            INVALID_ENUM_VALUE_State = 0;
            State_TEMPORARY = 1;
            State_PERMANENT = 2;
         };
         State state = 10 [json_name = "state"];
         enum TrustType {
            INVALID_ENUM_VALUE_TrustType = 0;
            TrustType_PRECISE = 1;
            TrustType_IMPRECISE = 2;
         };
         TrustType trust_type = 11 [json_name = "trust-type"];
         bool is_blackhole = 12 [json_name = "is-blackhole"];
      }
      repeated BdBlock bd_block = 1 [json_name = "bd-block"];
   }
   BdBlocks bd_blocks = 3 [json_name = "bd-blocks"];
   message VlanBlocks {
      message VlanBlock {
         uint32 vlan_id = 1 [json_name = "vlan-id"];
         string interface_name = 2 [json_name = "interface-name"];
         enum BlockState {
            INVALID_ENUM_VALUE_BlockState = 0;
            BlockState_TEMPORARY = 1;
            BlockState_TERMANENT = 2;
         };
         BlockState block_state = 3 [json_name = "block-state"];
         string detect_mac = 4 [json_name = "detect-mac"];
         enum BlockType {
            INVALID_ENUM_VALUE_BlockType = 0;
            BlockType_TRUST = 1;
            BlockType_NOX_TRUST = 2;
         };
         BlockType block_type = 5 [json_name = "block-type"];
         enum State {
            INVALID_ENUM_VALUE_State = 0;
            State_TEMPORARY = 1;
            State_PERMANENT = 2;
         };
         State state = 6 [json_name = "state"];
         enum TrustType {
            INVALID_ENUM_VALUE_TrustType = 0;
            TrustType_PRECISE = 1;
            TrustType_IMPRECISE = 2;
         };
         TrustType trust_type = 7 [json_name = "trust-type"];
      }
      repeated VlanBlock vlan_block = 1 [json_name = "vlan-block"];
   }
   VlanBlocks vlan_blocks = 4 [json_name = "vlan-blocks"];
}

