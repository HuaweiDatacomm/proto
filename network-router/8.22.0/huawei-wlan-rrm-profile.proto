syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2022-09-26 17:42:32
// ProtoYang-version 1
// module huawei-wlan-rrm-profile
// revision 2022-09-23
// revision 2022-07-14
// namespace urn:huawei:yang:huawei-wlan-rrm-profile

package huawei_wlan_rrm_profile;

message WlanRrmProfile {
   message RrmProfiles {
      message RrmProfile {
         string profile_name = 1 [json_name = "profile-name"];
         enum HighDensityAmcOptimize {
            HighDensityAmcOptimize_DISABLE = 0;
            HighDensityAmcOptimize_ENABLE = 1;
         };
         HighDensityAmcOptimize high_density_amc_optimize = 2 [json_name = "high-density-amc-optimize"];
         message DynamicEdca {
            enum DynamicEdca5 {
               DynamicEdca5_DISABLE = 0;
               DynamicEdca5_ENABLE = 1;
            };
            DynamicEdca5 dynamic_edca = 1 [json_name = "dynamic-edca"];
            uint32 dynamic_edca_threshold = 2 [json_name = "dynamic-edca-threshold"];
         }
         DynamicEdca dynamic_edca = 3 [json_name = "dynamic-edca"];
         enum AntennaMode {
            AntennaMode_OMNIDIRECTION = 0;
            AntennaMode_DIRECTION = 1;
            AntennaMode_AUTO = 2;
         };
         AntennaMode antenna_mode = 4 [json_name = "antenna-mode"];
         enum MultimediaAirOptimize {
            MultimediaAirOptimize_DISABLE = 0;
            MultimediaAirOptimize_ENABLE = 1;
         };
         MultimediaAirOptimize multimedia_air_optimize = 5 [json_name = "multimedia-air-optimize"];
         enum MultimediaTcpWindowTuning {
            MultimediaTcpWindowTuning_DISABLE = 0;
            MultimediaTcpWindowTuning_ENABLE = 1;
         };
         MultimediaTcpWindowTuning multimedia_tcp_window_tuning = 6 [json_name = "multimedia-tcp-window-tuning"];
         message DownlinkDelayGuarantee {
            enum VoiceGuaranteeLevel {
               VoiceGuaranteeLevel_LOW = 0;
               VoiceGuaranteeLevel_MEDIUM = 1;
               VoiceGuaranteeLevel_HIGH = 2;
               VoiceGuaranteeLevel_OFF = 3;
            };
            VoiceGuaranteeLevel voice_guarantee_level = 1 [json_name = "voice-guarantee-level"];
            enum VideoGuaranteeLevel {
               VideoGuaranteeLevel_LOW = 0;
               VideoGuaranteeLevel_MEDIUM = 1;
               VideoGuaranteeLevel_HIGH = 2;
               VideoGuaranteeLevel_OFF = 3;
            };
            VideoGuaranteeLevel video_guarantee_level = 2 [json_name = "video-guarantee-level"];
         }
         DownlinkDelayGuarantee downlink_delay_guarantee = 7 [json_name = "downlink-delay-guarantee"];
         message DownlinkSliceRatio {
            enum VoiceSliceRatioLevel {
               VoiceSliceRatioLevel_LOW = 0;
               VoiceSliceRatioLevel_MEDIUM = 1;
               VoiceSliceRatioLevel_HIGH = 2;
               VoiceSliceRatioLevel_OFF = 3;
               VoiceSliceRatioLevel_USERX_DEFINED = 4;
            };
            VoiceSliceRatioLevel voice_slice_ratio_level = 1 [json_name = "voice-slice-ratio-level"];
            enum VideoSliceRatioLevel {
               VideoSliceRatioLevel_LOW = 0;
               VideoSliceRatioLevel_MEDIUM = 1;
               VideoSliceRatioLevel_HIGH = 2;
               VideoSliceRatioLevel_OFF = 3;
               VideoSliceRatioLevel_USERX_DEFINED = 4;
            };
            VideoSliceRatioLevel video_slice_ratio_level = 2 [json_name = "video-slice-ratio-level"];
            uint32 voice_slice_ratio_value = 3 [json_name = "voice-slice-ratio-value"];
            uint32 video_slice_ratio_value = 4 [json_name = "video-slice-ratio-value"];
         }
         DownlinkSliceRatio downlink_slice_ratio = 8 [json_name = "downlink-slice-ratio"];
         message MultimediaAirOptimizeThreshold {
            uint32 video_threshold = 1 [json_name = "video-threshold"];
            uint32 voice_threshold = 2 [json_name = "voice-threshold"];
         }
         MultimediaAirOptimizeThreshold multimedia_air_optimize_threshold = 9 [json_name = "multimedia-air-optimize-threshold"];
         message SmartRoam {
            enum SmartRoamSwitch {
               SmartRoamSwitch_DISABLE = 0;
               SmartRoamSwitch_ENABLE = 1;
            };
            SmartRoamSwitch smart_roam_switch = 1 [json_name = "smart-roam-switch"];
            uint32 snr_smart_roam_threshold = 2 [json_name = "snr-smart-roam-threshold"];
            enum QuickKickoffThreshold {
               QuickKickoffThreshold_DISABLE = 0;
               QuickKickoffThreshold_ENABLE = 1;
            };
            QuickKickoffThreshold quick_kickoff_threshold = 3 [json_name = "quick-kickoff-threshold"];
            uint32 snr_quick_kickoff_threshold = 4 [json_name = "snr-quick-kickoff-threshold"];
         }
         SmartRoam smart_roam = 10 [json_name = "smart-roam"];
         message CalibrateRetransmissionRateCheck {
            uint32 interval = 1 [json_name = "interval"];
            uint32 traffic_threshold = 2 [json_name = "traffic-threshold"];
         }
         CalibrateRetransmissionRateCheck calibrate_retransmission_rate_check = 11 [json_name = "calibrate-retransmission-rate-check"];
         uint32 dfs_recover_delay = 12 [json_name = "dfs-recover-delay"];
         message Uac {
            enum UacClientSnr {
               UacClientSnr_DISABLE = 0;
               UacClientSnr_ENABLE = 1;
            };
            UacClientSnr uac_client_snr = 1 [json_name = "uac-client-snr"];
            enum UacClientNumber {
               UacClientNumber_DISABLE = 0;
               UacClientNumber_ENABLE = 1;
            };
            UacClientNumber uac_client_number = 2 [json_name = "uac-client-number"];
            uint32 snr_threshold = 3 [json_name = "snr-threshold"];
            message NumberThreshold {
               uint32 access = 1 [json_name = "access"];
               uint32 roam = 2 [json_name = "roam"];
            }
            NumberThreshold number_threshold = 4 [json_name = "number-threshold"];
            enum ReachAccessThreshold {
               ReachAccessThreshold_HIDEX_SSID = 0;
               ReachAccessThreshold_PRIORITYX_REPLACE = 1;
            };
            ReachAccessThreshold reach_access_threshold = 5 [json_name = "reach-access-threshold"];
         }
         Uac uac = 13 [json_name = "uac"];
         message LoadBalance {
            enum LoadBalanceSwitch {
               LoadBalanceSwitch_DISABLE = 0;
               LoadBalanceSwitch_ENABLE = 1;
            };
            LoadBalanceSwitch load_balance_switch = 1 [json_name = "load-balance-switch"];
         }
         LoadBalance load_balance = 14 [json_name = "load-balance"];
         message TxPower2G {
            uint32 min_tx_power_2g = 1 [json_name = "min-tx-power-2g"];
            uint32 max_tx_power_2g = 2 [json_name = "max-tx-power-2g"];
         }
         TxPower2G tx_power_2g = 15 [json_name = "tx-power-2g"];
         message TxPower5G {
            uint32 min_tx_power_5g = 1 [json_name = "min-tx-power-5g"];
            uint32 max_tx_power_5g = 2 [json_name = "max-tx-power-5g"];
         }
         TxPower5G tx_power_5g = 16 [json_name = "tx-power-5g"];
         message TxPower6G {
            uint32 min_tx_power_6g = 1 [json_name = "min-tx-power-6g"];
            uint32 max_tx_power_6g = 2 [json_name = "max-tx-power-6g"];
         }
         TxPower6G tx_power_6g = 17 [json_name = "tx-power-6g"];
         int32 clb_grp_itf_thrld = 18 [json_name = "clb-grp-itf-thrld"];
      }
      repeated RrmProfile rrm_profile = 1 [json_name = "rrm-profile"];
   }
   RrmProfiles rrm_profiles = 1 [json_name = "rrm-profiles"];
}

