syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-08-03 16:01:26
// ProtoYang-version 1
// module huawei-anyflow
// revision 2020-03-27
// namespace urn:huawei:yang:huawei-anyflow

package huawei_anyflow;

message Anyflow {
   message Global {
      bool enable = 1 [json_name = "enable"];
      uint32 aging_time = 2 [json_name = "aging-time"];
      uint32 export_interval = 3 [json_name = "export-interval"];
      uint32 hardware_aging_time = 4 [json_name = "hardware-aging-time"];
      uint32 hardware_export_interval = 5 [json_name = "hardware-export-interval"];
      uint32 collect_id = 6 [json_name = "collect-id"];
      bool flow_aggregation = 7 [json_name = "flow-aggregation"];
      repeated string aggregation_service_port = 8 [json_name = "aggregation-service-port"];
      uint32 aggregation_aging_time = 9 [json_name = "aggregation-aging-time"];
      uint32 aggregation_export_interval = 10 [json_name = "aggregation-export-interval"];
   }
   Global global = 1 [json_name = "global"];
   message FlowCaches {
      message FlowCache {
         string slot = 1 [json_name = "slot"];
         message FlowCacheRecords {
            message FlowCacheRecord {
               string src_ip = 1 [json_name = "src-ip"];
               string dst_ip = 2 [json_name = "dst-ip"];
               uint32 protocol_id = 3 [json_name = "protocol-id"];
               uint32 src_port = 4 [json_name = "src-port"];
               uint32 dst_port = 5 [json_name = "dst-port"];
               uint32 vni_id = 6 [json_name = "vni-id"];
               uint32 vlan = 7 [json_name = "vlan"];
               string vpn_instance = 8 [json_name = "vpn-instance"];
               string start_timestamp = 9 [json_name = "start-timestamp"];
               string last_timestamp = 10 [json_name = "last-timestamp"];
               uint64 first_no_syn_timestamp = 11 [json_name = "first-no-syn-timestamp"];
               uint32 tunnel_flag = 12 [json_name = "tunnel-flag"];
               uint32 packet_size = 13 [json_name = "packet-size"];
               uint32 packet_counter = 14 [json_name = "packet-counter"];
               uint32 byte_counter = 15 [json_name = "byte-counter"];
               uint32 outer_ttl = 16 [json_name = "outer-ttl"];
               uint32 destination_qp = 17 [json_name = "destination-qp"];
               uint32 inner_ttl = 18 [json_name = "inner-ttl"];
               string in_interface_name = 19 [json_name = "in-interface-name"];
               uint32 in_interface_id = 20 [json_name = "in-interface-id"];
               string out_interface_name = 21 [json_name = "out-interface-name"];
               uint32 out_interface_id = 22 [json_name = "out-interface-id"];
               uint32 hardware_anomaly_flag = 23 [json_name = "hardware-anomaly-flag"];
               uint32 overflow_flag = 24 [json_name = "overflow-flag"];
               uint32 microcode_anomaly_flag = 25 [json_name = "microcode-anomaly-flag"];
            }
            repeated FlowCacheRecord flow_cache_record = 1 [json_name = "flow-cache-record"];
         }
         FlowCacheRecords flow_cache_records = 2 [json_name = "flow-cache-records"];
      }
      repeated FlowCache flow_cache = 1 [json_name = "flow-cache"];
   }
   FlowCaches flow_caches = 2 [json_name = "flow-caches"];
   message FlowCacheResources {
      message FlowCacheResource {
         string slot = 1 [json_name = "slot"];
         message FlowCaches {
            message FlowCache {
               string flow_type = 1 [json_name = "flow-type"];
               uint32 total_num = 2 [json_name = "total-num"];
               uint32 used_num = 3 [json_name = "used-num"];
               uint32 free_num = 4 [json_name = "free-num"];
            }
            repeated FlowCache flow_cache = 1 [json_name = "flow-cache"];
         }
         FlowCaches flow_caches = 2 [json_name = "flow-caches"];
      }
      repeated FlowCacheResource flow_cache_resource = 1 [json_name = "flow-cache-resource"];
   }
   FlowCacheResources flow_cache_resources = 3 [json_name = "flow-cache-resources"];
   message IpFlowCaches {
      message IpFlowCache {
         string slot = 1 [json_name = "slot"];
         enum IpType {
            INVALID_ENUM_VALUE_IpType = 0;
            IpType_IPV4 = 1;
            IpType_IPV6 = 2;
         };
         IpType ip_type = 2 [json_name = "ip-type"];
         message FlowCacheRecords {
            message FlowCacheRecord {
               string src_ip = 1 [json_name = "src-ip"];
               string dst_ip = 2 [json_name = "dst-ip"];
               uint32 vlan = 3 [json_name = "vlan"];
               uint32 vni = 4 [json_name = "vni"];
               uint32 src_port = 5 [json_name = "src-port"];
               uint32 dst_port = 6 [json_name = "dst-port"];
               uint32 protocol = 7 [json_name = "protocol"];
               uint32 vrf = 8 [json_name = "vrf"];
               uint32 destination_qp = 9 [json_name = "destination-qp"];
            }
            repeated FlowCacheRecord flow_cache_record = 1 [json_name = "flow-cache-record"];
         }
         FlowCacheRecords flow_cache_records = 3 [json_name = "flow-cache-records"];
      }
      repeated IpFlowCache ip_flow_cache = 1 [json_name = "ip-flow-cache"];
   }
   IpFlowCaches ip_flow_caches = 4 [json_name = "ip-flow-caches"];
}

