syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2021-09-08 10:30:16
// ProtoYang-version 1
// module huawei-sec-url-filter
// revision 2021-09-01
// namespace urn:huawei:yang:huawei-sec-url-filter

package huawei_sec_url_filter;

message SecUrlFilter {
   message Global {
      string country = 1 [json_name = "country"];
   }
   Global global = 1 [json_name = "global"];
   message Profiles {
      message Profile {
         string name = 1 [json_name = "name"];
         enum DefaultAction {
            DefaultAction_ALERT = 0;
            DefaultAction_ALLOW = 1;
            DefaultAction_BLOCK = 2;
         };
         DefaultAction default_action = 2 [json_name = "default-action"];
         bool https_url_filter_enable = 3 [json_name = "https-url-filter-enable"];
         message Blacklist {
            message MatchRules {
               message MatchRule {
                  enum Scope {
                     Scope_URL = 0;
                     Scope_HOST = 1;
                  };
                  Scope scope = 1 [json_name = "scope"];
                  enum Type {
                     Type_PREFIX = 0;
                     Type_SUFFIX = 1;
                     Type_FUZZY = 2;
                     Type_EXACT = 3;
                  };
                  Type type = 2 [json_name = "type"];
                  string value = 3 [json_name = "value"];
               }
               repeated MatchRule match_rule = 1 [json_name = "match-rule"];
            }
            MatchRules match_rules = 1 [json_name = "match-rules"];
         }
         Blacklist blacklist = 4 [json_name = "blacklist"];
         message Whitelist {
            message MatchRules {
               message MatchRule {
                  enum Scope {
                     Scope_URL = 0;
                     Scope_HOST = 1;
                  };
                  Scope scope = 1 [json_name = "scope"];
                  enum Type {
                     Type_PREFIX = 0;
                     Type_SUFFIX = 1;
                     Type_FUZZY = 2;
                     Type_EXACT = 3;
                  };
                  Type type = 2 [json_name = "type"];
                  string value = 3 [json_name = "value"];
               }
               repeated MatchRule match_rule = 1 [json_name = "match-rule"];
            }
            MatchRules match_rules = 1 [json_name = "match-rules"];
         }
         Whitelist whitelist = 5 [json_name = "whitelist"];
         message Category {
            message PreDefined {
               enum Level {
                  Level_LOW = 0;
                  Level_MEDIUM = 1;
                  Level_HIGH = 2;
               };
               Level level = 1 [json_name = "level"];
               message Actions {
                  enum AllCategory {
                     AllCategory_ALERT = 0;
                     AllCategory_ALLOW = 1;
                     AllCategory_BLOCK = 2;
                  };
                  AllCategory all_category = 1 [json_name = "all-category"];
                  message CategoryActions {
                     message CategoryAction {
                        uint32 id = 1 [json_name = "id"];
                        enum Action {
                           Action_ALERT = 0;
                           Action_ALLOW = 1;
                           Action_BLOCK = 2;
                        };
                        Action action = 2 [json_name = "action"];
                     }
                     repeated CategoryAction category_action = 1 [json_name = "category-action"];
                  }
                  CategoryActions category_actions = 2 [json_name = "category-actions"];
               }
               Actions actions = 2 [json_name = "actions"];
            }
            PreDefined pre_defined = 1 [json_name = "pre-defined"];
         }
         Category category = 6 [json_name = "category"];
      }
      repeated Profile profile = 1 [json_name = "profile"];
   }
   Profiles profiles = 2 [json_name = "profiles"];
   message UrlFilterState {
      message ControlLevels {
         message ControlLevel {
            enum Level {
               Level_LOW = 0;
               Level_MEDIUM = 1;
               Level_HIGH = 2;
            };
            Level level = 1 [json_name = "level"];
            message Subcategorys {
               message Subcategory {
                  string subcategory_id = 1 [json_name = "subcategory-id"];
                  string name = 2 [json_name = "name"];
                  enum Action {
                     Action_ALERT = 0;
                     Action_ALLOW = 1;
                     Action_BLOCK = 2;
                  };
                  Action action = 3 [json_name = "action"];
               }
               repeated Subcategory subcategory = 1 [json_name = "subcategory"];
            }
            Subcategorys subcategorys = 2 [json_name = "subcategorys"];
         }
         repeated ControlLevel control_level = 1 [json_name = "control-level"];
      }
      ControlLevels control_levels = 1 [json_name = "control-levels"];
      message PreDefinedCategorys {
         message PreDefinedCategory {
            string category_id = 1 [json_name = "category-id"];
            string name = 2 [json_name = "name"];
            string description = 3 [json_name = "description"];
            message Subcategorys {
               message Subcategory {
                  string subcategory_id = 1 [json_name = "subcategory-id"];
                  string name = 2 [json_name = "name"];
                  string description = 3 [json_name = "description"];
               }
               repeated Subcategory subcategory = 1 [json_name = "subcategory"];
            }
            Subcategorys subcategorys = 4 [json_name = "subcategorys"];
         }
         repeated PreDefinedCategory pre_defined_category = 1 [json_name = "pre-defined-category"];
      }
      PreDefinedCategorys pre_defined_categorys = 2 [json_name = "pre-defined-categorys"];
      message DefaultProfile {
         message Profiles {
            message Profile {
               string name = 1 [json_name = "name"];
               enum DefaultAction {
                  DefaultAction_ALERT = 0;
                  DefaultAction_ALLOW = 1;
                  DefaultAction_BLOCK = 2;
               };
               DefaultAction default_action = 2 [json_name = "default-action"];
               bool https_url_filter_enable = 3 [json_name = "https-url-filter-enable"];
               message Blacklist {
                  message MatchRules {
                     message MatchRule {
                        enum Scope {
                           Scope_URL = 0;
                           Scope_HOST = 1;
                        };
                        Scope scope = 1 [json_name = "scope"];
                        enum Type {
                           Type_PREFIX = 0;
                           Type_SUFFIX = 1;
                           Type_FUZZY = 2;
                           Type_EXACT = 3;
                        };
                        Type type = 2 [json_name = "type"];
                        string value = 3 [json_name = "value"];
                     }
                     repeated MatchRule match_rule = 1 [json_name = "match-rule"];
                  }
                  MatchRules match_rules = 1 [json_name = "match-rules"];
               }
               Blacklist blacklist = 4 [json_name = "blacklist"];
               message Whitelist {
                  message MatchRules {
                     message MatchRule {
                        enum Scope {
                           Scope_URL = 0;
                           Scope_HOST = 1;
                        };
                        Scope scope = 1 [json_name = "scope"];
                        enum Type {
                           Type_PREFIX = 0;
                           Type_SUFFIX = 1;
                           Type_FUZZY = 2;
                           Type_EXACT = 3;
                        };
                        Type type = 2 [json_name = "type"];
                        string value = 3 [json_name = "value"];
                     }
                     repeated MatchRule match_rule = 1 [json_name = "match-rule"];
                  }
                  MatchRules match_rules = 1 [json_name = "match-rules"];
               }
               Whitelist whitelist = 5 [json_name = "whitelist"];
               message Category {
                  message PreDefined {
                     enum Level {
                        Level_LOW = 0;
                        Level_MEDIUM = 1;
                        Level_HIGH = 2;
                     };
                     Level level = 1 [json_name = "level"];
                     message Actions {
                        enum AllCategory {
                           AllCategory_ALERT = 0;
                           AllCategory_ALLOW = 1;
                           AllCategory_BLOCK = 2;
                        };
                        AllCategory all_category = 1 [json_name = "all-category"];
                        message CategoryActions {
                           message CategoryAction {
                              uint32 id = 1 [json_name = "id"];
                              enum Action {
                                 Action_ALERT = 0;
                                 Action_ALLOW = 1;
                                 Action_BLOCK = 2;
                              };
                              Action action = 2 [json_name = "action"];
                           }
                           repeated CategoryAction category_action = 1 [json_name = "category-action"];
                        }
                        CategoryActions category_actions = 2 [json_name = "category-actions"];
                     }
                     Actions actions = 2 [json_name = "actions"];
                  }
                  PreDefined pre_defined = 1 [json_name = "pre-defined"];
               }
               Category category = 6 [json_name = "category"];
            }
            repeated Profile profile = 1 [json_name = "profile"];
         }
         Profiles profiles = 1 [json_name = "profiles"];
      }
      DefaultProfile default_profile = 3 [json_name = "default-profile"];
      message CountryRegions {
         message CountryRegion {
            string abbreviation_code = 1 [json_name = "abbreviation-code"];
            string integral_code = 2 [json_name = "integral-code"];
         }
         repeated CountryRegion country_region = 1 [json_name = "country-region"];
      }
      CountryRegions country_regions = 4 [json_name = "country-regions"];
   }
   UrlFilterState url_filter_state = 3 [json_name = "url-filter-state"];
}

