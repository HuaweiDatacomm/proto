syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2022-02-16 08:09:28
// ProtoYang-version 1
// module huawei-lmsp
// revision 2022-01-12
// namespace urn:huawei:yang:huawei-lmsp

package huawei_lmsp;

message Lmsp {
   message ApsGroups {
      message ApsGroup {
         uint32 group_id = 1 [json_name = "group-id"];
         message GroupMembers {
            message GroupMember {
               string interface_name = 1 [json_name = "interface-name"];
               message SingleChassis {
                  enum PortMode {
                     INVALID_ENUM_VALUE_PortMode = 0;
                     PortMode_WORKING = 1;
                     PortMode_PROTECTION = 2;
                  };
                  PortMode port_mode = 1 [json_name = "port-mode"];
                  message ProtectionAttributes {
                     enum ProtectionMode {
                        INVALID_ENUM_VALUE_ProtectionMode = 0;
                        ProtectionMode_ONEX_PLUSX_ONE = 1;
                        ProtectionMode_ONEX_TOX_ONE = 2;
                     };
                     ProtectionMode protection_mode = 1 [json_name = "protection-mode"];
                     enum SwitchMode {
                        INVALID_ENUM_VALUE_SwitchMode = 0;
                        SwitchMode_UNIDIRECTION = 1;
                        SwitchMode_BIDIRECTION = 2;
                     };
                     SwitchMode switch_mode = 2 [json_name = "switch-mode"];
                     uint32 revert_time = 3 [json_name = "revert-time"];
                     enum LockoutMode {
                        LockoutMode_UNLOCKED = 0;
                        LockoutMode_LOCKED = 1;
                     };
                     LockoutMode lockout_mode = 4 [json_name = "lockout-mode"];
                     enum FaultSignalRequestPriority {
                        FaultSignalRequestPriority_HIGH = 0;
                        FaultSignalRequestPriority_LOW = 1;
                     };
                     FaultSignalRequestPriority fault_signal_request_priority = 5 [json_name = "fault-signal-request-priority"];
                  }
                  ProtectionAttributes protection_attributes = 2 [json_name = "protection-attributes"];
               }
               SingleChassis single_chassis = 2 [json_name = "single-chassis"];
               message MultiChassis {
                  enum PortMode {
                     INVALID_ENUM_VALUE_PortMode = 0;
                     PortMode_WORKING = 1;
                     PortMode_PROTECTION = 2;
                  };
                  PortMode port_mode = 1 [json_name = "port-mode"];
                  string peer_ip = 2 [json_name = "peer-ip"];
                  string local_ip = 3 [json_name = "local-ip"];
                  uint32 keep_alive_time = 4 [json_name = "keep-alive-time"];
                  uint32 hold_time = 5 [json_name = "hold-time"];
                  string bfd_session_name = 6 [json_name = "bfd-session-name"];
                  enum AuthenticationMode {
                     AuthenticationMode_NONE = 0;
                     AuthenticationMode_SIMPLE = 1;
                     AuthenticationMode_CIPHER = 2;
                     AuthenticationMode_CIPHERX_SHA2 = 3;
                     AuthenticationMode_CIPHERX_HMAC = 4;
                  };
                  AuthenticationMode authentication_mode = 7 [json_name = "authentication-mode"];
                  string authentication_key = 8 [json_name = "authentication-key"];
                  enum AntiReplay {
                     AntiReplay_DISABLE = 0;
                     AntiReplay_ENABLE = 1;
                  };
                  AntiReplay anti_replay = 9 [json_name = "anti-replay"];
                  message ProtectionAttributes {
                     enum ProtectionMode {
                        INVALID_ENUM_VALUE_ProtectionMode = 0;
                        ProtectionMode_ONEX_PLUSX_ONE = 1;
                        ProtectionMode_ONEX_TOX_ONE = 2;
                     };
                     ProtectionMode protection_mode = 1 [json_name = "protection-mode"];
                     enum SwitchMode {
                        INVALID_ENUM_VALUE_SwitchMode = 0;
                        SwitchMode_UNIDIRECTION = 1;
                        SwitchMode_BIDIRECTION = 2;
                     };
                     SwitchMode switch_mode = 2 [json_name = "switch-mode"];
                     uint32 revert_time = 3 [json_name = "revert-time"];
                     enum LockoutMode {
                        LockoutMode_UNLOCKED = 0;
                        LockoutMode_LOCKED = 1;
                     };
                     LockoutMode lockout_mode = 4 [json_name = "lockout-mode"];
                     enum FaultSignalRequestPriority {
                        FaultSignalRequestPriority_HIGH = 0;
                        FaultSignalRequestPriority_LOW = 1;
                     };
                     FaultSignalRequestPriority fault_signal_request_priority = 5 [json_name = "fault-signal-request-priority"];
                  }
                  ProtectionAttributes protection_attributes = 10 [json_name = "protection-attributes"];
               }
               MultiChassis multi_chassis = 3 [json_name = "multi-chassis"];
            }
            repeated GroupMember group_member = 1 [json_name = "group-member"];
         }
         GroupMembers group_members = 2 [json_name = "group-members"];
         message GroupState {
            string working_interface = 1 [json_name = "working-interface"];
            string working_ip = 2 [json_name = "working-ip"];
            string protection_interface = 3 [json_name = "protection-interface"];
            string protection_ip = 4 [json_name = "protection-ip"];
            enum ProtectionMode {
               INVALID_ENUM_VALUE_ProtectionMode = 0;
               ProtectionMode_ONEX_PLUSX_ONE = 1;
               ProtectionMode_ONEX_TOX_ONE = 2;
            };
            ProtectionMode protection_mode = 5 [json_name = "protection-mode"];
            enum SwitchMode {
               INVALID_ENUM_VALUE_SwitchMode = 0;
               SwitchMode_UNIDIRECTION = 1;
               SwitchMode_BIDIRECTION = 2;
            };
            SwitchMode switch_mode = 6 [json_name = "switch-mode"];
            uint32 revert_time = 7 [json_name = "revert-time"];
            enum WorkingState {
               WorkingState_INACTIVE = 0;
               WorkingState_ACTIVE = 1;
            };
            WorkingState working_state = 8 [json_name = "working-state"];
            enum ProtectionState {
               ProtectionState_INACTIVE = 0;
               ProtectionState_ACTIVE = 1;
            };
            ProtectionState protection_state = 9 [json_name = "protection-state"];
            enum WorkingInterfaceSignalState {
               WorkingInterfaceSignalState_OK = 0;
               WorkingInterfaceSignalState_SIGNALX_FAILURE = 1;
               WorkingInterfaceSignalState_SIGNALX_DEGRADE = 2;
            };
            WorkingInterfaceSignalState working_interface_signal_state = 10 [json_name = "working-interface-signal-state"];
            enum ProtectionInterfaceSignalState {
               ProtectionInterfaceSignalState_OK = 0;
               ProtectionInterfaceSignalState_SIGNALX_FAILURE = 1;
               ProtectionInterfaceSignalState_SIGNALX_DEGRADE = 2;
            };
            ProtectionInterfaceSignalState protection_interface_signal_state = 11 [json_name = "protection-interface-signal-state"];
            string working_switch_time = 12 [json_name = "working-switch-time"];
            string protection_switch_time = 13 [json_name = "protection-switch-time"];
            enum SwitchAction {
               SwitchAction_LOCALX_PROTECTIONX_LOCKING = 0;
               SwitchAction_LOCALX_FORCEX_TOX_PROTECTIONX_LINK = 1;
               SwitchAction_LOCALX_FORCEX_TOX_WORKX_LINK = 2;
               SwitchAction_LOCALX_MANUALX_TOX_PROTECTIONX_LINK = 3;
               SwitchAction_LOCALX_MANUALX_TOX_WORKX_LINK = 4;
               SwitchAction_REMOTEX_PROTECTIONX_LOCKING = 5;
               SwitchAction_REMOTEX_FORCEX_TOX_PROTECTIONX_LINK = 6;
               SwitchAction_REMOTEX_FORCEX_TOX_WORKX_LINK = 7;
               SwitchAction_REMOTEX_MANUALX_TOX_PROTECTIONX_LINK = 8;
               SwitchAction_REMOTEX_MANUALX_TOX_WORKX_LINK = 9;
               SwitchAction_LOCKOUTX_TOX_WORKX_LINK = 10;
            };
            SwitchAction switch_action = 14 [json_name = "switch-action"];
            enum SwitchResult {
               SwitchResult_SWITCH = 0;
               SwitchResult_IDLE = 1;
            };
            SwitchResult switch_result = 15 [json_name = "switch-result"];
            enum SwitchStatus {
               SwitchStatus_SWITCHX_TOX_PROTECTIONX_LINK = 0;
            };
            SwitchStatus switch_status = 16 [json_name = "switch-status"];
            enum SwitchReason {
               SwitchReason_LOCALX_WORKX_NOX_REQUEST = 0;
               SwitchReason_LOCALX_WORKX_NOX_REVERT = 1;
               SwitchReason_LOCALX_WORKX_REVERSEX_REQUEST = 2;
               SwitchReason_LOCALX_WORKX_WAITX_TOX_RESTORE = 3;
               SwitchReason_LOCALX_WORKX_MANUALX_SWITCH = 4;
               SwitchReason_LOCALX_WORKX_DEGRADEX_LOWX_PRIORITY = 5;
               SwitchReason_LOCALX_WORKX_DEGRADEX_HIGHX_PRIORITY = 6;
               SwitchReason_LOCALX_WORKX_FAILX_LOWX_PRIORITY = 7;
               SwitchReason_LOCALX_WORKX_FAILX_HIGHX_PRIORITY = 8;
               SwitchReason_LOCALX_WORKX_FORCEX_SWITCH = 9;
               SwitchReason_LOCALX_WORKX_LOCKOUTX_OFX_PROTECTION = 10;
               SwitchReason_LOCALX_PROTECTIONX_NOX_REQUEST = 11;
               SwitchReason_LOCALX_PROTECTIONX_NOX_REVERT = 12;
               SwitchReason_LOCALX_PROTECTIONX_REVERSEX_REQUEST = 13;
               SwitchReason_LOCALX_PROTECTIONX_WAITX_TOX_RESTORE = 14;
               SwitchReason_LOCALX_PROTECTIONX_MANUALX_SWITCH = 15;
               SwitchReason_LOCALX_PROTECTIONX_DEGRADEX_LOWX_PRIORITY = 16;
               SwitchReason_LOCALX_PROTECTIONX_DEGRADEX_HIGHX_PRIORITY = 17;
               SwitchReason_LOCALX_PROTECTIONX_FAILX_LOWX_PRIORITY = 18;
               SwitchReason_LOCALX_PROTECTIONX_FAILX_HIGHX_PRIORITY = 19;
               SwitchReason_LOCALX_PROTECTIONX_FORCEX_SWITCH = 20;
               SwitchReason_LOCALX_PROTECTIONX_LOCKOUTX_OFX_PROTECTION = 21;
               SwitchReason_REMOTEX_WORKX_NOX_REQUEST = 22;
               SwitchReason_REMOTEX_WORKX_NOX_REVERT = 23;
               SwitchReason_REMOTEX_WORKX_REVERSEX_REQUEST = 24;
               SwitchReason_REMOTEX_WORKX_WAITX_TOX_RESTORE = 25;
               SwitchReason_REMOTEX_WORKX_MANUALX_SWITCH = 26;
               SwitchReason_REMOTEX_WORKX_DEGRADEX_LOWX_PRIORITY = 27;
               SwitchReason_REMOTEX_WORKX_DEGRADEX_HIGHX_PRIORITY = 28;
               SwitchReason_REMOTEX_WORKX_FAILX_LOWX_PRIORITY = 29;
               SwitchReason_REMOTEX_WORKX_FAILX_HIGHX_PRIORITY = 30;
               SwitchReason_REMOTEX_WORKX_FORCEX_SWITCH = 31;
               SwitchReason_REMOTEX_WORKX_LOCKOUTX_OFX_PROTECTION = 32;
               SwitchReason_REMOTEX_PROTECTIONX_NOX_REQUEST = 33;
               SwitchReason_REMOTEX_PROTECTIONX_NOX_REVERT = 34;
               SwitchReason_REMOTEX_PROTECTIONX_REVERSEX_REQUEST = 35;
               SwitchReason_REMOTEX_PROTECTIONX_WAITX_TOX_RESTORE = 36;
               SwitchReason_REMOTEX_PROTECTIONX_MANUALX_SWITCH = 37;
               SwitchReason_REMOTEX_PROTECTIONX_DEGRADEX_LOWX_PRIORITY = 38;
               SwitchReason_REMOTEX_PROTECTIONX_DEGRADEX_HIGHX_PRIORITY = 39;
               SwitchReason_REMOTEX_PROTECTIONX_FAILX_LOWX_PRIORITY = 40;
               SwitchReason_REMOTEX_PROTECTIONX_FAILX_HIGHX_PRIORITY = 41;
               SwitchReason_REMOTEX_PROTECTIONX_FORCEX_SWITCH = 42;
               SwitchReason_REMOTEX_PROTECTIONX_LOCKOUTX_OFX_PROTECTION = 43;
            };
            SwitchReason switch_reason = 17 [json_name = "switch-reason"];
            enum SwitchMessage {
               SwitchMessage_APSX_LOCKOUT = 0;
               SwitchMessage_NOX_REQUEST = 1;
               SwitchMessage_LOCALX_SENDX_NOX_REVERTX_PROTECTION = 2;
               SwitchMessage_LOCALX_SENDX_REVERSEX_PROTECTION = 3;
               SwitchMessage_LOCALX_SENDX_RESTOREX_PROTECTION = 4;
               SwitchMessage_LOCALX_SENDX_MANUALX_SWITCHX_PROTECTION = 5;
               SwitchMessage_LOCALX_SENDX_FORCEX_SWITCHX_PROTECTION = 6;
               SwitchMessage_LOCALX_SENDX_LOCKOUTX_PROTECTION = 7;
               SwitchMessage_REMOTEX_SENDX_NOX_REVERTX_PROTECTION = 8;
               SwitchMessage_REMOTEX_SENDX_REVERSEX_PROTECTION = 9;
               SwitchMessage_REMOTEX_SENDX_RESTOREX_PROTECTION = 10;
               SwitchMessage_REMOTEX_SENDX_MANUALX_SWITCHX_PROTECTION = 11;
               SwitchMessage_REMOTEX_SENDX_FORCEX_SWITCHX_PROTECTION = 12;
               SwitchMessage_REMOTEX_SENDX_LOCKOUTX_PROTECTION = 13;
               SwitchMessage_LOCALX_DEGRADEX_LOWX_PRIORITYX_WORK = 14;
               SwitchMessage_LOCALX_DEGRADEX_LOWX_PRIORITYX_PROTECTION = 15;
               SwitchMessage_REMOTEX_DEGRADEX_LOWX_PRIORITYX_WORK = 16;
               SwitchMessage_REMOTEX_DEGRADEX_LOWX_PRIORITYX_PROTECTION = 17;
               SwitchMessage_LOCALX_DEGRADEX_HIGHX_PRIORITYX_WORK = 18;
               SwitchMessage_LOCALX_DEGRADEX_HIGHX_PRIORITYX_PROTECTION = 19;
               SwitchMessage_REMOTEX_DEGRADEX_HIGHX_PRIORITYX_WORK = 20;
               SwitchMessage_REMOTEX_DEGRADEX_HIGHX_PRIORITYX_PROTECTION = 21;
               SwitchMessage_LOCALX_FAILX_LOWX_PRIORITYX_WORK = 22;
               SwitchMessage_LOCALX_FAILX_LOWX_PRIORITYX_PROTECTION = 23;
               SwitchMessage_REMOTEX_FAILX_LOWX_PRIORITYX_WORK = 24;
               SwitchMessage_REMOTEX_FAILX_LOWX_PRIORITYX_PROTECTION = 25;
               SwitchMessage_LOCALX_FAILX_HIGHX_PRIORITYX_WORK = 26;
               SwitchMessage_LOCALX_FAILX_HIGHX_PRIORITYX_PROTECTION = 27;
               SwitchMessage_REMOTEX_FAILX_HIGHX_PRIORITYX_WORK = 28;
               SwitchMessage_REMOTEX_FAILX_HIGHX_PRIORITYX_PROTECTION = 29;
            };
            SwitchMessage switch_message = 18 [json_name = "switch-message"];
         }
         GroupState group_state = 3 [json_name = "group-state"];
      }
      repeated ApsGroup aps_group = 1 [json_name = "aps-group"];
   }
   ApsGroups aps_groups = 1 [json_name = "aps-groups"];
}

