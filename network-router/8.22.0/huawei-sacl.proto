syntax = "proto3";
// Automatically generated by ProtoYang
// compiled 2022-03-28 14:20:38
// ProtoYang-version 1
// module huawei-sacl
// revision 2022-03-19
// namespace urn:huawei:yang:huawei-sacl

package huawei_sacl;

message Sacl {
   message TrafficFilterApplys {
      message TrafficFilterApply {
         enum Direction {
            INVALID_ENUM_VALUE_Direction = 0;
            Direction_INBOUND = 1;
            Direction_OUTBOUND = 2;
         };
         Direction direction = 1 [json_name = "direction"];
         message AclInstances {
            message AclInstance {
               string acl = 1 [json_name = "acl"];
               bool ipv6 = 2 [json_name = "ipv6"];
               bool enable_statistic = 3 [json_name = "enable-statistic"];
               message Statistics {
                  message Statistic {
                     string rule = 1 [json_name = "rule"];
                     string slot = 2 [json_name = "slot"];
                     enum ApplyStatus {
                        INVALID_ENUM_VALUE_ApplyStatus = 0;
                        ApplyStatus_SUCCESS = 1;
                        ApplyStatus_FAILURE = 2;
                     };
                     ApplyStatus apply_status = 3 [json_name = "apply-status"];
                     uint64 match_permit_packet = 4 [json_name = "match-permit-packet"];
                     uint64 match_permit_byte = 5 [json_name = "match-permit-byte"];
                     uint64 match_discarded_packet = 6 [json_name = "match-discarded-packet"];
                     uint64 match_discarded_byte = 7 [json_name = "match-discarded-byte"];
                  }
                  repeated Statistic statistic = 1 [json_name = "statistic"];
               }
               Statistics statistics = 4 [json_name = "statistics"];
            }
            repeated AclInstance acl_instance = 1 [json_name = "acl-instance"];
         }
         AclInstances acl_instances = 2 [json_name = "acl-instances"];
      }
      repeated TrafficFilterApply traffic_filter_apply = 1 [json_name = "traffic-filter-apply"];
   }
   TrafficFilterApplys traffic_filter_applys = 1 [json_name = "traffic-filter-applys"];
   message TrafficRemarkApplys {
      message TrafficRemarkApply {
         enum Direction {
            INVALID_ENUM_VALUE_Direction = 0;
            Direction_INBOUND = 1;
            Direction_OUTBOUND = 2;
         };
         Direction direction = 1 [json_name = "direction"];
         message AclInstances {
            message AclInstance {
               string acl = 1 [json_name = "acl"];
               bool ipv6 = 2 [json_name = "ipv6"];
               uint32 local_precedence = 3 [json_name = "local-precedence"];
               message Statuses {
                  message Status {
                     string rule = 1 [json_name = "rule"];
                     string slot = 2 [json_name = "slot"];
                     enum ApplyStatus {
                        INVALID_ENUM_VALUE_ApplyStatus = 0;
                        ApplyStatus_SUCCESS = 1;
                        ApplyStatus_FAILURE = 2;
                     };
                     ApplyStatus apply_status = 3 [json_name = "apply-status"];
                  }
                  repeated Status status = 1 [json_name = "status"];
               }
               Statuses statuses = 4 [json_name = "statuses"];
            }
            repeated AclInstance acl_instance = 1 [json_name = "acl-instance"];
         }
         AclInstances acl_instances = 2 [json_name = "acl-instances"];
      }
      repeated TrafficRemarkApply traffic_remark_apply = 1 [json_name = "traffic-remark-apply"];
   }
   TrafficRemarkApplys traffic_remark_applys = 2 [json_name = "traffic-remark-applys"];
   message TrafficRedirectApplys {
      message TrafficRedirectApply {
         enum Direction {
            INVALID_ENUM_VALUE_Direction = 0;
            Direction_INBOUND = 1;
            Direction_OUTBOUND = 2;
         };
         Direction direction = 1 [json_name = "direction"];
         message AclInstances {
            message AclInstance {
               string acl = 1 [json_name = "acl"];
               bool ipv6 = 2 [json_name = "ipv6"];
               message Direction_Cpu {
                  bool cpu7 = 1 [json_name = "cpu"];
               }
               message Direction_Interface {
                  string interface_name = 1 [json_name = "interface-name"];
               }
               message Direction_Nexthop {
                  string vpn_instance_name = 1 [json_name = "vpn-instance-name"];
                  string ip_nexthop = 2 [json_name = "ip-nexthop"];
               }
               message Direction_Ipv6LinkLocal {
                  string link_local_address = 1 [json_name = "link-local-address"];
               }
               oneof Direction {
                  Direction_Cpu direction_cpu = 3 [json_name = "cpu"];
                  Direction_Interface direction_interface = 4 [json_name = "interface"];
                  Direction_Nexthop direction_nexthop = 5 [json_name = "nexthop"];
                  Direction_Ipv6LinkLocal direction_ipv6_link_local = 6 [json_name = "ipv6-link-local"];
               }
               message Statuses {
                  message Status {
                     string rule = 1 [json_name = "rule"];
                     string slot = 2 [json_name = "slot"];
                     enum ApplyStatus {
                        INVALID_ENUM_VALUE_ApplyStatus = 0;
                        ApplyStatus_SUCCESS = 1;
                        ApplyStatus_FAILURE = 2;
                     };
                     ApplyStatus apply_status = 3 [json_name = "apply-status"];
                  }
                  repeated Status status = 1 [json_name = "status"];
               }
               Statuses statuses = 7 [json_name = "statuses"];
            }
            repeated AclInstance acl_instance = 1 [json_name = "acl-instance"];
         }
         AclInstances acl_instances = 2 [json_name = "acl-instances"];
      }
      repeated TrafficRedirectApply traffic_redirect_apply = 1 [json_name = "traffic-redirect-apply"];
   }
   TrafficRedirectApplys traffic_redirect_applys = 3 [json_name = "traffic-redirect-applys"];
}

